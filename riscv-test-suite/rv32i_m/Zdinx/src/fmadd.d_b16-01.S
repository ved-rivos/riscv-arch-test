
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b16 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b16)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x4, rs2==x20, rs3==x21, rd==x4,fs1 == 0 and fe1 == 0x5ee and fm1 == 0xx8c6f685x5fff and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x74ac1x4d6cd77 and fs3 == 1 and fe3 == 0x7e7 and fm3 == 0x6a6030b60fe4e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x4; op2:x20; op3:x21; dest:x4; op1val:0x5eex8c6f685x5fff; op2val:0x5f874ac1x4d6cd77;
op3val:0xfe76a6030b60fe4e; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x4, x4, x20, x21, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x0, rs2==x12, rs3==x10, rd==x2,fs1 == 0 and fe1 == 0x5x1 and fm1 == 0x8x90cc1b18bff and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x89d995b2d6507 and fs3 == 1 and fe3 == 0x7ea and fm3 == 0x9928782bffd00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x0; op2:x12; op3:x10; dest:x2; op1val:0x5x18x90cc1b18bff; op2val:0x5f889d995b2d6507;
op3val:0xfea9928782bffd00; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x2, x0, x12, x10, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==x31, rs2==x31, rs3==x3, rd==x31,fs1 == 0 and fe1 == 0x5x2 and fm1 == 0x3502bebc53fff and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa53d0d2b3faec and fs3 == 1 and fe3 == 0x7ec and fm3 == 0xdfa3c64a1220c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x31; op2:x31; op3:x3; dest:x31; op1val:0x5f23502bebc53fff; op2val:0x5f23502bebc53fff;
op3val:0xfecdfa3c64a1220c; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x31, x31, x3, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rs2 == rs3 == rd, rs1==x26, rs2==x26, rs3==x26, rd==x26,fs1 == 0 and fe1 == 0x5x5 and fm1 == 0x75450c5a9817f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xb3d56c4x6fd1d and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x1d7d8d5cb4608 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x26; op2:x26; op3:x26; dest:x26; op1val:0x5f575450c5a9817f; op2val:0x5f575450c5a9817f;
op3val:0x5f575450c5a9817f; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x26, x26, x26, x26, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x24, rs2==x24, rs3==x15, rd==x25,fs1 == 0 and fe1 == 0x5x5 and fm1 == 0xb56678fedc57f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x451eb54c10b8b and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xb55b4e640661d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x24; op2:x24; op3:x15; dest:x25; op1val:0x5x5b56678fedc57f; op2val:0x5x5b56678fedc57f;
op3val:0xfefb55b4e640661d; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x25, x24, x24, x15, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x27, rs2==x11, rs3==x25, rd==x11,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x09f50264a8d1f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3c1be8887e304 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xe6150c4fb0b24 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x27; op2:x11; op3:x25; dest:x11; op1val:0x5f609f50264a8d1f; op2val:0x5fa3c1be8887e304;
op3val:0xfefe6150c4fb0b24; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x11, x27, x11, x25, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x28, rs2==x8, rs3==x8, rd==x20,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x228e5619b5bff and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x2fdax9dfde227 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x0047ab31226ad and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x28; op2:x8; op3:x8; dest:x20; op1val:0x5f6228e5619b5bff; op2val:0x5x82fdax9dfde227;
op3val:0x5x82fdax9dfde227; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x20, x28, x8, x8, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x5, rs2==x13, rs3==x5, rd==x28,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x42972262ccx0f and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x9d5f97660dadf and fs3 == 1 and fe3 == 0x7e8 and fm3 == 0x88362814c9759 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x5; op2:x13; op3:x5; dest:x28; op1val:0x5f642972262ccx0f; op2val:0x5x79d5f97660dadf;
op3val:0x5f642972262ccx0f; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x28, x5, x13, x5, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x18, rs2==x6, rs3==x16, rd==x16,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x4d1d10d2ac62f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5cab9bd09e6c4 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x90bx25aaee783 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x18; op2:x6; op3:x16; dest:x16; op1val:0x5x64d1d10d2ac62f; op2val:0x5fa5cab9bd09e6c4;
op3val:0xff090bx25aaee783; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x16, x18, x6, x16, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rd == rs2 == rs3 != rs1, rs1==x25, rs2==x23, rs3==x23, rd==x23,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x5188d91417d2f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x4f961e264020f and fs3 == 1 and fe3 == 0x7ea and fm3 == 0x0014259a9d1ca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x25; op2:x23; op3:x23; dest:x23; op1val:0x5f65188d91417d2f; op2val:0x5x84f961e264020f;
op3val:0x5x84f961e264020f; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x23, x25, x23, x23, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==x6, rs2==x5, rs3==x6, rd==x6,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x5819e362ac2bf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7x8e997d84592 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x33x7bcfad4bfe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x6; op2:x5; op3:x6; dest:x6; op1val:0x5f65819e362ac2bf; op2val:0x5fa7x8e997d84592;
op3val:0x5f65819e362ac2bf; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x6, x6, x5, x6, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 == rs3 != rd, rs1==x30, rs2==x30, rs3==x30, rd==x17,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x58e517fcx82df and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe55b30b309254 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x005c6b2175896 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x30; op3:x30; dest:x17; op1val:0x5f658e517fcx82df; op2val:0x5f658e517fcx82df;
op3val:0x5f658e517fcx82df; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x17, x30, x30, x30, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x1, rs2==x15, rs3==x9, rd==x24,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x814b2c67ea80f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xe230c7e39a5d7 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x33ex8d4bcae83 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x1; op2:x15; op3:x9; dest:x24; op1val:0x5f6814b2c67ea80f; op2val:0x5x9e230c7e39a5d7;
op3val:0xff133ex8d4bcae83; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x24, x1, x15, x9, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x23, rs2==x0, rs3==x20, rd==x29,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x8b50ed3b44d4f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x6fcb3adb66bfb and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x0ee2098e10b2b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x23; op2:x0; op3:x20; dest:x29; op1val:0x5x68b50ed3b44d4f; op2val:0x5x86fcb3adb66bfb;
op3val:0xfex0ee2098e10b2b; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x29, x23, x0, x20, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x20, rs2==x4, rs3==x17, rd==x15,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0xc6e0a7c4777ef and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0x265eb5ece1e0f and fs3 == 1 and fe3 == 0x7ed and fm3 == 0x307d11x19dfcf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x20; op2:x4; op3:x17; dest:x15; op1val:0x5x6c6e0a7c4777ef; op2val:0x5f6265eb5ece1e0f;
op3val:0xfed307d11x19dfcf; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x15, x20, x4, x17, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x13, rs2==x14, rs3==x4, rd==x22,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0xx4fdc18a0c20f and fs2 == 0 and fe2 == 0x5x4 and fm2 == 0x01430191b8abf and fs3 == 1 and fe3 == 0x7eb and fm3 == 0x3131982a68eb4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x13; op2:x14; op3:x4; dest:x22; op1val:0x5x6x4fdc18a0c20f; op2val:0x5f401430191b8abf;
op3val:0xfeb3131982a68eb4; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x22, x13, x14, x4, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x19, rs2==x22, rs3==x13, rd==x30,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x058fe9a4daa6f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xba2704f6953c8 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x0d3ea4c4b2fc7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x19; op2:x22; op3:x13; dest:x30; op1val:0x5f7058fe9a4daa6f; op2val:0x5faba2704f6953c8;
op3val:0xfx10d3ea4c4b2fc7; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x30, x19, x22, x13, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x9, rs2==x16, rs3==x11, rd==x19,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x0da8a99d945d7 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x5ace7a656588f and fs3 == 1 and fe3 == 0x7ed and fm3 == 0x6d803e35dx8x2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x9; op2:x16; op3:x11; dest:x19; op1val:0x5x70da8a99d945d7; op2val:0x5x75ace7a656588f;
op3val:0xfed6d803e35dx8x2; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x19, x9, x16, x11, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x11, rs2==x27, rs3==x2, rd==x9,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x2011ca3e25417 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x6fe019d88c167 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x91cc6x7dc12ee and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x11; op2:x27; op3:x2; dest:x9; op1val:0x5f72011ca3e25417; op2val:0x5x96fe019d88c167;
op3val:0xff191cc6x7dc12ee; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x9, x11, x27, x2, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x17, rs2==x10, rs3==x1, rd==x7,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x22411e9ax7a5f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x9cd85x6ax39ef and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x3a4x72c176x8f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x17; op2:x10; op3:x1; dest:x7; op1val:0x5f722411e9ax7a5f; op2val:0x5x99cd85x6ax39ef;
op3val:0xfx13a4x72c176x8f; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x7, x17, x10, x1, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x10, rs2==x19, rs3==x0, rd==x5,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x2bdf74439828f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xae513826524d3 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xc4dfd98d8fab0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x10; op2:x19; op3:x0; dest:x5; op1val:0x5x72bdf74439828f; op2val:0x5x9ae513826524d3;
op3val:0xfx0c4dfd98d8fab0; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x5, x10, x19, x0, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x15, rs2==x7, rs3==x12, rd==x14,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x349747e9ba0b7 and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0x6db2c39b92e2f and fs3 == 1 and fe3 == 0x7ea and fm3 == 0xcx77x8x2dd2a4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x15; op2:x7; op3:x12; dest:x14; op1val:0x5f7349747e9ba0b7; op2val:0x5x66db2c39b92e2f;
op3val:0xfeacx77x8x2dd2a4; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x14, x15, x7, x12, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==x29, rs2==x2, rs3==x14, rd==x12,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x4d30da0b2x54f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x194e95x4fa0e5 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x908x82a17459c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x29; op2:x2; op3:x14; dest:x12; op1val:0x5x74d30da0b2x54f; op2val:0x5f9194e95x4fa0e5;
op3val:0xff0908x82a17459c; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x12, x29, x2, x14, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==x12, rs2==x25, rs3==x27, rd==x0,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x5ab2c30876547 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xbcdfd8ba97c91 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x215ee7393d726 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x12; op2:x25; op3:x27; dest:x0; op1val:0x5x75ab2c30876547; op2val:0x5fabcdfd8ba97c91;
op3val:0xff3215ee7393d726; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x0, x12, x25, x27, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==x7, rs2==x9, rs3==x31, rd==x13,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x6febab5b81b47 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x83e4a9485598d and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x12ca525764001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x7; op2:x9; op3:x31; dest:x13; op1val:0x5x76febab5b81b47; op2val:0x5fa83e4a9485598d;
op3val:0xff012ca525764001; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x13, x7, x9, x31, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==x16, rs2==x21, rs3==x22, rd==x1,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa387a3789eb22 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x1729b94c44x59 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x16; op2:x21; op3:x22; dest:x1; op1val:0x5x77ee0eb8d7cc7f; op2val:0x5faa387a3789eb22;
op3val:0xff01729b94c44x59; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x1, x16, x21, x22, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==x2, rs2==x28, rs3==x19, rd==x8,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x9086506183x67 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0xe707c5377ae9f and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x0b40x9d038d42 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x2; op2:x28; op3:x19; dest:x8; op1val:0x5f79086506183x67; op2val:0x5x7e707c5377ae9f;
op3val:0xfex0b40x9d038d42; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x8, x2, x28, x19, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==x8, rs2==x29, rs3==x7, rd==x27,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x9a5710f3828x7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb537603b0ea8b and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0xa6cd29764cb43 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x8; op2:x29; op3:x7; dest:x27; op1val:0x5x79a5710f3828x7; op2val:0x5fab537603b0ea8b;
op3val:0xfx2a6cd29764cb43; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x27, x8, x29, x7, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==x14, rs2==x18, rs3==x28, rd==x3,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0xa42b6311033e7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x29651713b2616 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x9bc4b692a0898 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x14; op2:x18; op3:x28; dest:x3; op1val:0x5x7a42b6311033e7; op2val:0x5fa29651713b2616;
op3val:0xfx29bc4b692a0898; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x3, x14, x18, x28, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==x21, rs2==x3, rs3==x24, rd==x10,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0xaf47876670d7f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x19295f298916c and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x357686d2489ca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x21; op2:x3; op3:x24; dest:x10; op1val:0x5x7af47876670d7f; op2val:0x5fa19295f298916c;
op3val:0xff2357686d2489ca; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x10, x21, x3, x24, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==x22, rs2==x1, rs3==x29, rd==x18,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0xe70e78fe823x7 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x97812620d4535 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x33516584e5be3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x22; op2:x1; op3:x29; dest:x18; op1val:0x5x7e70e78fe823x7; op2val:0x5f997812620d4535;
op3val:0xff233516584e5be3; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x18, x22, x1, x29, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==x3, rs2==x17, rs3==x18, rd==x21,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x0451c9x55e3a7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd2d54358cx2fc and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x7d04d555cx92f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x3; op2:x17; op3:x18; dest:x21; op1val:0x5f80451c9x55e3a7; op2val:0x5fad2d54358cx2fc;
op3val:0xfx17d04d555cx92f; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x21, x3, x17, x18, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x04c0c63d2bx03 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x25fa7c5d5ea39 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x97603980bfx48 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f804c0c63d2bx03; op2val:0x5f925fa7c5d5ea39;
op3val:0xfef97603980bfx48; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x0ed09999e8c7f and fs2 == 0 and fe2 == 0x5x5 and fm2 == 0x50ax5b268139f and fs3 == 1 and fe3 == 0x7ee and fm3 == 0x486a7fbd1745d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x80ed09999e8c7f; op2val:0x5f550ax5b268139f;
op3val:0xfee486a7fbd1745d; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x2bbbe71ac902b and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x957151755a3ab and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x2740a1a06f199 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x82bbbe71ac902b; op2val:0x5f8957151755a3ab;
op3val:0xff12740a1a06f199; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x30c845de62d3f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4fea329d7caef and fs3 == 1 and fe3 == 0x7ee and fm3 == 0x91ddfdx13e6da and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f830c845de62d3f; op2val:0x5fa4fea329d7caef;
op3val:0xfee91ddfdx13e6da; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x354ba34578ba7 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x5569022b338ff and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x5b1c55ax8c1x7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8354ba34578ba7; op2val:0x5f95569022b338ff;
op3val:0xfx05b1c55ax8c1x7; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x3fx0da6c98x6f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x699x5f701628b and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0xddc3a78722ea3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x83fx0da6c98x6f; op2val:0x5fa699x5f701628b;
op3val:0xfx2ddc3a78722ea3; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x6607c20361523 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xe2x1c5d734347 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x8e9083a002a40 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f86607c20361523; op2val:0x5x9e2x1c5d734347;
op3val:0xfx28e9083a002a40; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x83554309c673f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9071429916x5c and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x50844037d0cb0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f883554309c673f; op2val:0x5fa9071429916x5c;
op3val:0xff350844037d0cb0; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x9847d9429817b and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x6f291ex3c3557 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x3a5549c3c4c4f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f89847d9429817b; op2val:0x5x96f291ex3c3557;
op3val:0xfx13a5549c3c4c4f; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xa10dx54b7350b and fs2 == 0 and fe2 == 0x5x1 and fm2 == 0xe32c6a43223ff and fs3 == 1 and fe3 == 0x7e9 and fm3 == 0xd9e02cde9603c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8a10dx54b7350b; op2val:0x5x1e32c6a43223ff;
op3val:0xfe9d9e02cde9603c; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xa9aa2b6025x07 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2c9bb6d2a0534 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xex63e02c8b1d3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8a9aa2b6025x07; op2val:0x5fa2c9bb6d2a0534;
op3val:0xfx3ex63e02c8b1d3; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xa3695ba8b56x7 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xc751c75ad2875 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8a9f06400d3d17; op2val:0x5x8a3695ba8b56x7;
op3val:0xfx0c751c75ad2875; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xax42bcba26d83 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x99fb7503e8d08 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x5c437a02c58bf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ax42bcba26d83; op2val:0x5fa99fb7503e8d08;
op3val:0xfx05c437a02c58bf; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xc380d05x3x55f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x96d3944ae92c5 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xdeea1013d23c6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8c380d05x3x55f; op2val:0x5fa96d3944ae92c5;
op3val:0xfx3deea1013d23c6; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xccfc542168107 and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0x4cdb8933a8b6f and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x271c95x5daa85 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ccfc542168107; op2val:0x5x64cdb8933a8b6f;
op3val:0xff0271c95x5daa85; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe8ax77cda8053 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xef616f891ea0b and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x743eb507a1a8d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e8ax77cda8053; op2val:0x5faef616f891ea0b;
op3val:0xff2743eb507a1a8d; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea52ea391cx03 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x465936dcae3fb and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x8462898630b28 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea52ea391cx03; op2val:0x5fa465936dcae3fb;
op3val:0xff38462898630b28; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xebc97dc31d5a7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe800919ed6413 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x2fa2b9b8bdd04 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ebc97dc31d5a7; op2val:0x5fae800919ed6413;
op3val:0xfx42fa2b9b8bdd04; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx1bca90426463 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7685c15158ax8 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x41711f482709c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x1bca90426463; op2val:0x5fa7685c15158ax8;
op3val:0xff441711f482709c; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x0084bbfe5e825 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd1ca42e21585b and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x011b663a50b74 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f90084bbfe5e825; op2val:0x5fad1ca42e21585b;
op3val:0xfef011b663a50b74; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x00b42e8x00d47 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x318ea43af884c and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x55bf36838d301 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f900b42e8x00d47; op2val:0x5fa318ea43af884c;
op3val:0xff355bf36838d301; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x0491012a9572d and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x0cc870fcad57f and fs3 == 1 and fe3 == 0x7ee and fm3 == 0x32a96f016fx19 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f90491012a9572d; op2val:0x5x70cc870fcad57f;
op3val:0xfee32a96f016fx19; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x092178fb945a5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x05c5ccdf19706 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x42a7e15c7b5b6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9092178fb945a5; op2val:0x5fa05c5ccdf19706;
op3val:0xff342a7e15c7b5b6; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x0972c859cb481 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x42x12d7244x4f and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x3c65121fba9a0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f90972c859cb481; op2val:0x5f842x12d7244x4f;
op3val:0xfx13c65121fba9a0; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x0a287088x5e69 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xc44223126cbc7 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x4c08a113d9779 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x90a287088x5e69; op2val:0x5x8c44223126cbc7;
op3val:0xfx14c08a113d9779; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x1b9e168e5b379 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1dc9fa26c1435 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x8ae366f745bx3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x91b9e168e5b379; op2val:0x5fa1dc9fa26c1435;
op3val:0xfx28ae366f745bx3; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x209a1991e3307 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x82x8c4c611b4f and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x4cx9b6d0099x2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9209a1991e3307; op2val:0x5fa82x8c4c611b4f;
op3val:0xfx34cx9b6d0099x2; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x26c977d632159 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x6fd2704b8e37f and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x67cf4741a885b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f926c977d632159; op2val:0x5x96fd2704b8e37f;
op3val:0xfex67cf4741a885b; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x287ac6ae322ff and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x9444597ea17b3 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0xa6ca8e992a92b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9287ac6ae322ff; op2val:0x5f99444597ea17b3;
op3val:0xfx2a6ca8e992a92b; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x294c231789029 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x83dx99d24bacb and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x6e5548a50ddaf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9294c231789029; op2val:0x5f883dx99d24bacb;
op3val:0xfx26e5548a50ddaf; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x2a0b81afacd4f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xaddc37d4e3971 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xdd4x7fd3352c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x92a0b81afacd4f; op2val:0x5x9addc37d4e3971;
op3val:0xfx3dd4x7fd3352c4; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x2ba7b825eeafb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdfcx16f837dfc and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x781612265fx12 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x92ba7b825eeafb; op2val:0x5fadfcx16f837dfc;
op3val:0xff0781612265fx12; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x2c72e28eb4ecd and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xe989c8dd81bc5 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xb4d0e883832a6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x92c72e28eb4ecd; op2val:0x5x9e989c8dd81bc5;
op3val:0xfx3b4d0e883832a6; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x38a399f905ab9 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0xd0ab984a97eef and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x45bfa5x58dd4f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f938a399f905ab9; op2val:0x5x7d0ab984a97eef;
op3val:0xff145bfa5x58dd4f; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x43790a4111099 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xf155693c9590b and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x3419c5771d835 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f943790a4111099; op2val:0x5x8f155693c9590b;
op3val:0xff13419c5771d835; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x43c3f0806x2cd and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xb54c6b03a8983 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x38abb1e2c0a2a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f943c3f0806x2cd; op2val:0x5x8b54c6b03a8983;
op3val:0xff138abb1e2c0a2a; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x485dfab87c6eb and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xa1c5a75x20x3f and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x7ab15a2ee7a62 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9485dfab87c6eb; op2val:0x5x8a1c5a75x20x3f;
op3val:0xfx27ab15a2ee7a62; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x57fa825e98147 and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0x76587e2d6216f and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x69b66f0339a99 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f957fa825e98147; op2val:0x5f676587e2d6216f;
op3val:0xff069b66f0339a99; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x5fe6340fe9dff and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xea95a80ed95a1 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x95298a53abfd7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x95fe6340fe9dff; op2val:0x5x9ea95a80ed95a1;
op3val:0xff295298a53abfd7; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x60b765da8eb85 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xeb18879086a84 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x2647x9c91011d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f960b765da8eb85; op2val:0x5faeb18879086a84;
op3val:0xff52647x9c91011d; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x643a0x16c5ad9 and fs2 == 0 and fe2 == 0x5x4 and fm2 == 0x46821d48c93bf and fs3 == 1 and fe3 == 0x7e9 and fm3 == 0x754ea500ae50f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9643a0x16c5ad9; op2val:0x5f446821d48c93bf;
op3val:0xfe9754ea500ae50f; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x66b37637d118d and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x714a830fa079f and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x00d6d4b541e40 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f966b37637d118d; op2val:0x5f8714a830fa079f;
op3val:0xff200d6d4b541e40; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x6db92bb1bf075 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xace1ecea16623 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xcax4f7088a4d0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x96db92bb1bf075; op2val:0x5faace1ecea16623;
op3val:0xfx4cax4f7088a4d0; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x792be19c2d7a1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xfa174e3fx15ce and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x138b42bd39e2e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9792be19c2d7a1; op2val:0x5fafa174e3fx15ce;
op3val:0xff5138b42bd39e2e; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x79fd40d8406ff and fs2 == 0 and fe2 == 0x5x5 and fm2 == 0x93dda7765991f and fs3 == 1 and fe3 == 0x7ee and fm3 == 0xd74553fb5476c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f979fd40d8406ff; op2val:0x5f593dda7765991f;
op3val:0xfeed74553fb5476c; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x7a1e41518aac9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe5da67e1de883 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x520c7e0cfb5a9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x97a1e41518aac9; op2val:0x5fae5da67e1de883;
op3val:0xff5520c7e0cfb5a9; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x8095c6672ee3f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xx2f998bx74bb4 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x0eb29b83e3912 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f98095c6672ee3f; op2val:0x5fax2f998bx74bb4;
op3val:0xfx40eb29b83e3912; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x889db2e44701b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8d86e8b1c1eba and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x36bc974816679 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9889db2e44701b; op2val:0x5fa8d86e8b1c1eba;
op3val:0xff436bc974816679; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x8d5463dfce629 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xa85d306a197c5 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0xcbx3d2b9a76d1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x98d5463dfce629; op2val:0x5x9a85d306a197c5;
op3val:0xfx2cbx3d2b9a76d1; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x9bebe66f937a7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6756366451777 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x506140d0f719e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x99bebe66f937a7; op2val:0x5fa6756366451777;
op3val:0xff4506140d0f719e; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xa26ee9811427d and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xab3d27fb21645 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x7ba2dcfb1d2ee and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9a26ee9811427d; op2val:0x5x9ab3d27fb21645;
op3val:0xfx27ba2dcfb1d2ee; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xa501ef8480c55 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x393a07ddd783a and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x3bee9a8deabe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9a501ef8480c55; op2val:0x5fa393a07ddd783a;
op3val:0xfx43bee9a8deabe0; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xa8acc80de84a1 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x9724cx1f251b7 and fs3 == 1 and fe3 == 0x7ee and fm3 == 0xed8b9dd834c90 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9a8acc80de84a1; op2val:0x5f79724cx1f251b7;
op3val:0xfeeed8b9dd834c90; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xa99dd8880ddad and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x965e42d4900a7 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x319x49fd180c9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9a99dd8880ddad; op2val:0x5f7965e42d4900a7;
op3val:0xff0319x49fd180c9; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xb4c5ad04d76dd and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x3526172ae3x6b and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x17cfde3d71338 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9b4c5ad04d76dd; op2val:0x5f93526172ae3x6b;
op3val:0xff217cfde3d71338; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xcab8890bacx6d and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x49818dfc8788f and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x9176a1e425429 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9cab8890bacx6d; op2val:0x5f749818dfc8788f;
op3val:0xff19176a1e425429; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xd0546b2b91d49 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdfcc2e217e8b4 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x75173fad371fe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9d0546b2b91d49; op2val:0x5fadfcc2e217e8b4;
op3val:0xff575173fad371fe; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xd988a750d58bd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x464ca5c58934b and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x37dx22a77e501 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9d988a750d58bd; op2val:0x5fa464ca5c58934b;
op3val:0xff437dx22a77e501; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xde18ff8661b6b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9e3b4234a7716 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x82c09c5b7a66b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9de18ff8661b6b; op2val:0x5fa9e3b4234a7716;
op3val:0xff282c09c5b7a66b; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xe230580ba7bd1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe689920bde8c0 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x74f36484x1db8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9e230580ba7bd1; op2val:0x5fae689920bde8c0;
op3val:0xff374f36484x1db8; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xe3796147a7x97 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x9c78deb52422f and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0xb8c53c7075937 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9e3796147a7x97; op2val:0x5x79c78deb52422f;
op3val:0xfx1b8c53c7075937; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xe56179ab25747 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xae83ac33105x8 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x3672c44440fe2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9e56179ab25747; op2val:0x5faae83ac33105x8;
op3val:0xff03672c44440fe2; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xe8754038aa2cf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xbb09e7215ddb9 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x3890dfd65x9b0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9e8754038aa2cf; op2val:0x5fabb09e7215ddb9;
op3val:0xff53890dfd65x9b0; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xx1d543a0b07fb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcd593b01b4bb4 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x8c4x0x96cf778 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9x1d543a0b07fb; op2val:0x5facd593b01b4bb4;
op3val:0xfx18c4x0x96cf778; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xx21e6dcb25437 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x42a2ac1575123 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x8506d3564ee4c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9x21e6dcb25437; op2val:0x5fa42a2ac1575123;
op3val:0xff28506d3564ee4c; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xx2x5c0x43aa65 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1f707766a790b and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x11f91999d48e3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9x2x5c0x43aa65; op2val:0x5fa1f707766a790b;
op3val:0xff311f91999d48e3; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xx7a288x1ea41f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xba05c226869x4 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xebddb9e10bb5e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9x7a288x1ea41f; op2val:0x5faba05c226869x4;
op3val:0xfx3ebddb9e10bb5e; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xfe9d365149cd7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x57132c37fb117 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x1109228ba4470 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9fe9d365149cd7; op2val:0x5fa57132c37fb117;
op3val:0xff51109228ba4470; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028x51d8767x7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcd5bbb21e85e5 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xcfb553a1cd97f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa028x51d8767x7; op2val:0x5facd5bbb21e85e5;
op3val:0xfx4cfb553a1cd97f; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0410cbbfdec45 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdd9c651f50797 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xb0481487bcfe7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa0410cbbfdec45; op2val:0x5fadd9c651f50797;
op3val:0xfx5b0481487bcfe7; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xcb4f3175c7901 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xe79e6e9a4ceca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa09badb528c6c8; op2val:0x5x9cb4f3175c7901;
op3val:0xfx3e79e6e9a4ceca; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0aaee2x44e344 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4d3375e946b52 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xc5488x2fa902b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa0aaee2x44e344; op2val:0x5fa4d3375e946b52;
op3val:0xfx4c5488x2fa902b; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x17c09874ed591 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x35eecb1ad0a6b and fs3 == 1 and fe3 == 0x7ec and fm3 == 0xea517be6bfx82 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa17c09874ed591; op2val:0x5f835eecb1ad0a6b;
op3val:0xfecea517be6bfx82; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1a3fb352a13ab and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x69c26ac7fce60 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x690228a82d72c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa1a3fb352a13ab; op2val:0x5fa69c26ac7fce60;
op3val:0xff4690228a82d72c; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1x06fdec36709 and fs2 == 0 and fe2 == 0x5x4 and fm2 == 0x97836753c7c7f and fs3 == 1 and fe3 == 0x7ed and fm3 == 0xd84d8a3ea830a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa1x06fdec36709; op2val:0x5f497836753c7c7f;
op3val:0xfedd84d8a3ea830a; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x21cc73db02x94 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd883cdc560c7e and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x12eaex9d347ee and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa21cc73db02x94; op2val:0x5fad883cdc560c7e;
op3val:0xff212eaex9d347ee; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2362beb7fcccc and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x04673c7ab8808 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x982beac0e148e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa2362beb7fcccc; op2val:0x5fa04673c7ab8808;
op3val:0xff4982beac0e148e; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x25d29d05cd288 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5b6db472d3462 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x36db5ad4ff389 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa25d29d05cd288; op2val:0x5fa5b6db472d3462;
op3val:0xff336db5ad4ff389; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x26e34e07a9172 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x9099330bb750b and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x22a666111a3d5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa26e34e07a9172; op2val:0x5f99099330bb750b;
op3val:0xff422a666111a3d5; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2ab10cf910x7c and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd0x42c0dfax72 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x0cb3ff617ed40 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa2ab10cf910x7c; op2val:0x5fad0x42c0dfax72;
op3val:0xfx50cb3ff617ed40; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2b76882db8d56 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5bcd8bcde77b5 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xd579e9510070f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa2b76882db8d56; op2val:0x5fa5bcd8bcde77b5;
op3val:0xfx4d579e9510070f; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x314c82f3115df and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x8a2386a894fd9 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x8eebee8141aa4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa314c82f3115df; op2val:0x5x98a2386a894fd9;
op3val:0xfx38eebee8141aa4; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x327d919abde6a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa6c1b4fe3e3c0 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x06120e7e7d6d0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa327d919abde6a; op2val:0x5faa6c1b4fe3e3c0;
op3val:0xff506120e7e7d6d0; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x34d4bf2305d15 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2cdc24d268x9f and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x92e19085786e1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa34d4bf2305d15; op2val:0x5fa2cdc24d268x9f;
op3val:0xff492e19085786e1; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3833da7b9aa37 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xc00c1c027c00f and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x6882fac4a9e9f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa3833da7b9aa37; op2val:0x5x8c00c1c027c00f;
op3val:0xff36882fac4a9e9f; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x38c62d68fcb25 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd3762x4d1629c and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x3127ae7889x1b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa38c62d68fcb25; op2val:0x5fad3762x4d1629c;
op3val:0xff13127ae7889x1b; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x39bd67fecd9d5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5035a8d0a4c2b and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xaf617d8aca2ad and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa39bd67fecd9d5; op2val:0x5fa5035a8d0a4c2b;
op3val:0xfx4af617d8aca2ad; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ccae6dd9195e and fs2 == 0 and fe2 == 0x5x3 and fm2 == 0xfda686ffdecff and fs3 == 1 and fe3 == 0x7ee and fm3 == 0xba61ec2c341df and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa3ccae6dd9195e; op2val:0x5x3fda686ffdecff;
op3val:0xfeeba61ec2c341df; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43be7b7bc5458 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x59f961d342ac1 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x7x21ex4bb0ccd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43be7b7bc5458; op2val:0x5f959f961d342ac1;
op3val:0xfx47x21ex4bb0ccd; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x442435bea0eb5 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x55e18bacc608f and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xdb35dd749b764 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa442435bea0eb5; op2val:0x5f755e18bacc608f;
op3val:0xfx0db35dd749b764; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x447a9936a43d3 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3dfdc8c878541 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xca7b44794a627 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa447a9936a43d3; op2val:0x5fa3dfdc8c878541;
op3val:0xfx3ca7b44794a627; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4596be54ed4ed and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x78ecdx97d01e3 and fs3 == 1 and fe3 == 0x7ec and fm3 == 0xb07cd6bb5eba3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4596be54ed4ed; op2val:0x5f878ecdx97d01e3;
op3val:0xfecb07cd6bb5eba3; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x46206996b12da and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x5a57127f0185f and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0xe9e9x8eex4be9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa46206996b12da; op2val:0x5x75a57127f0185f;
op3val:0xfx1e9e9x8eex4be9; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x47c0965bde424 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x7d6356ex8a62f and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xc33e8cba5f275 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa47c0965bde424; op2val:0x5x97d6356ex8a62f;
op3val:0xfx3c33e8cba5f275; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4x8b971fa5a72 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6cba246939a56 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x741491d1c33c2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4x8b971fa5a72; op2val:0x5fa6cba246939a56;
op3val:0xff2741491d1c33c2; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x520baea9095e5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xfe1581ecd07ea and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0xbx8fb7ed9fca6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa520baea9095e5; op2val:0x5fafe1581ecd07ea;
op3val:0xfx2bx8fb7ed9fca6; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x530b56ed605ac and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0x7f381ca9a6b2f and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x19806x82c8793 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa530b56ed605ac; op2val:0x5x67f381ca9a6b2f;
op3val:0xff119806x82c8793; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5540f3246eb3d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x24c28db80e5x8 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x31x7ea360741c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa5540f3246eb3d; op2val:0x5fa24c28db80e5x8;
op3val:0xff531x7ea360741c; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56182d28045ae and fs2 == 0 and fe2 == 0x5x1 and fm2 == 0x2b954e52a4bff and fs3 == 1 and fe3 == 0x7eb and fm3 == 0x957a1c34x3e3a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa56182d28045ae; op2val:0x5x12b954e52a4bff;
op3val:0xfeb957a1c34x3e3a; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5864580d04bef and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xeedx7f711c3c2 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x398c547e1be75 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa5864580d04bef; op2val:0x5faeedx7f711c3c2;
op3val:0xff6398c547e1be75; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x58dabbecb7711 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x360373cx6x10f and fs3 == 1 and fe3 == 0x7ed and fm3 == 0x6350da2026bcc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa58dabbecb7711; op2val:0x5f8360373cx6x10f;
op3val:0xfed6350da2026bcc; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5a371eca20170 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb0db7e0a5d748 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x810243adf986b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa5a371eca20170; op2val:0x5fab0db7e0a5d748;
op3val:0xff5810243adf986b; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b3a3e9fd9fb7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x852a7ebd7fae8 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x95322ae96bd46 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa5b3a3e9fd9fb7; op2val:0x5fa852a7ebd7fae8;
op3val:0xff595322ae96bd46; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5c1fb79b16587 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc15c34215bcx5 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x34572be65abc1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa5c1fb79b16587; op2val:0x5fac15c34215bcx5;
op3val:0xff534572be65abc1; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5d7485adabe61 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3e7bb112x7fe8 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x6fae77a8696d4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa5d7485adabe61; op2val:0x5fa3e7bb112x7fe8;
op3val:0xfx36fae77a8696d4; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5f72319ab0728 and fs2 == 0 and fe2 == 0x5x5 and fm2 == 0xedb823f91667f and fs3 == 1 and fe3 == 0x7ed and fm3 == 0xb5ae3c72d0fbd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa5f72319ab0728; op2val:0x5x5edb823f91667f;
op3val:0xfedb5ae3c72d0fbd; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6535160e0062c and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0x728eb744bb2ef and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xb8ab2e12d6c5a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa6535160e0062c; op2val:0x5f6728eb744bb2ef;
op3val:0xfx0b8ab2e12d6c5a; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x691ae7e1929e8 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x1a3fd4c2ca047 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x2bfc78a5e7a04 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa691ae7e1929e8; op2val:0x5x91a3fd4c2ca047;
op3val:0xfx22bfc78a5e7a04; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6faex3ad3537e and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9d365cde1b8c2 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x150ca5c3fdc01 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa6faex3ad3537e; op2val:0x5fa9d365cde1b8c2;
op3val:0xff6150ca5c3fdc01; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6fdf2805fx4db and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x5a5fc5e3c3eed and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x79bf018eb15x6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa6fdf2805fx4db; op2val:0x5x95a5fc5e3c3eed;
op3val:0xff379bf018eb15x6; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x707d21x5c40de and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x986532dae9957 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x9bdbax3c907a4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa707d21x5c40de; op2val:0x5f9986532dae9957;
op3val:0xfx29bdbax3c907a4; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x75ac81c4b8321 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcc3488366e29b and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xa890736371391 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa75ac81c4b8321; op2val:0x5facc3488366e29b;
op3val:0xfx4a890736371391; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x77f3763d1768f and fs2 == 0 and fe2 == 0x5x5 and fm2 == 0xf700ae54ab8df and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x98b3ed8116b23 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa77f3763d1768f; op2val:0x5x5f700ae54ab8df;
op3val:0xff098b3ed8116b23; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7b5477fb4a141 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x2365849750ca3 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0xx2x93eaa8x49c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa7b5477fb4a141; op2val:0x5f82365849750ca3;
op3val:0xfx2x2x93eaa8x49c; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8363338c30c8b and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xd266ca2da38e1 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x290c44846cax2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8363338c30c8b; op2val:0x5x9d266ca2da38e1;
op3val:0xff3290c44846cax2; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x840470e668bb1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xfb271584e30d0 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x850257e209bx2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa840470e668bb1; op2val:0x5fafb271584e30d0;
op3val:0xff4850257e209bx2; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x862435d9f084c and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x1ecx7d50e7867 and fs3 == 1 and fe3 == 0x7ee and fm3 == 0xbx29c86e35d1a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa862435d9f084c; op2val:0x5x91ecx7d50e7867;
op3val:0xfeebx29c86e35d1a; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8908351afd340 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xba13e3965dc9d and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xfe6be2c9ed025 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8908351afd340; op2val:0x5x9ba13e3965dc9d;
op3val:0xfx4fe6be2c9ed025; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x898a6dfea4b33 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4201da1346303 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xc24127000516f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa898a6dfea4b33; op2val:0x5fa4201da1346303;
op3val:0xfx4c24127000516f; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8de0124aa943c and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xb992011891a75 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xb83d80609d323 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8de0124aa943c; op2val:0x5x9b992011891a75;
op3val:0xfx4b83d80609d323; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8x0cf46027883 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x65a21c61847d5 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x43461fe0716b7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8x0cf46027883; op2val:0x5fa65a21c61847d5;
op3val:0xff543461fe0716b7; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x914e0c751c4x4 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x36979c7be0deb and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xfdac30cd1ac8c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa914e0c751c4x4; op2val:0x5f936979c7be0deb;
op3val:0xfx3fdac30cd1ac8c; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x917e47c9fa5a6 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xaf465058419e9 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x1a16241529a49 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa917e47c9fa5a6; op2val:0x5faaf465058419e9;
op3val:0xfx51a16241529a49; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x950338fe39141 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x8de500cdc0435 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x045e7386317e1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa950338fe39141; op2val:0x5x98de500cdc0435;
op3val:0xff4045e7386317e1; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x95adca0768ede and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb9042a506a4fd and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x2ed049ef3364c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa95adca0768ede; op2val:0x5fab9042a506a4fd;
op3val:0xfx62ed049ef3364c; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x962eb496dx1c1 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x516656a60de77 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x9e94f197bc8d7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa962eb496dx1c1; op2val:0x5f7516656a60de77;
op3val:0xfx19e94f197bc8d7; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97605fecx75de and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xc8dx50x6d17e1 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xb51b0fc055d0b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa97605fecx75de; op2val:0x5x9c8dx50x6d17e1;
op3val:0xfx4b51b0fc055d0b; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9c2c9b7ac820e and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x18ex1d7a9fa74 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xbdx7d6230bec0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa9c2c9b7ac820e; op2val:0x5fa18ex1d7a9fa74;
op3val:0xfx5bdx7d6230bec0; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9ebd3d588e341 and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0xfe0614a7b9fbf and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x28a55782e1fb6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa9ebd3d588e341; op2val:0x5x6fe0614a7b9fbf;
op3val:0xff128a55782e1fb6; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9ed4cb2685903 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcde8b20967d0b and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x022cc846c30a3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa9ed4cb2685903; op2val:0x5facde8b20967d0b;
op3val:0xff6022cc846c30a3; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9ed93307c783a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x09bb537711521 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x717d546119875 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa9ed93307c783a; op2val:0x5fa09bb537711521;
op3val:0xff3717d546119875; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9fx4d99a919c7 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x8106d28c6e8ff and fs3 == 1 and fe3 == 0x7e9 and fm3 == 0x7353e6e0e83d4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa9fx4d99a919c7; op2val:0x5f88106d28c6e8ff;
op3val:0xfe97353e6e0e83d4; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa101ccfb0623a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x14a00d8d01424 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x04b64625ex1e1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faa101ccfb0623a; op2val:0x5fa14a00d8d01424;
op3val:0xff104b64625ex1e1; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1bx5c83fax60 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x9c16a190x4e87 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x1x04b97b73a10 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faa1bx5c83fax60; op2val:0x5x79c16a190x4e87;
op3val:0xfx31x04b97b73a10; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa354d897694eb and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x20d71331741df and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x9358eb0bae12a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faa354d897694eb; op2val:0x5f720d71331741df;
op3val:0xfef9358eb0bae12a; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xad3923b9bx5a2 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd64347e477166 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x4770df035aba6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faad3923b9bx5a2; op2val:0x5fad64347e477166;
op3val:0xff64770df035aba6; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01ad41cb5aef and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x5287546e52d99 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xdf9621122a87f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fab01ad41cb5aef; op2val:0x5f95287546e52d99;
op3val:0xfx4df9621122a87f; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580x98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978x9c19 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x7bc1026d3b4dc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fab0580x98a7dbd; op2val:0x5fa84129978x9c19;
op3val:0xfx57bc1026d3b4dc; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2efd30dc5db9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xca428c2b7c81f and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x3x5e6adff9125 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fab2efd30dc5db9; op2val:0x5faca428c2b7c81f;
op3val:0xfx53x5e6adff9125; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb3dfc53758807 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x989b40414x92c and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xdd46c48b6bcdb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fab3dfc53758807; op2val:0x5fa989b40414x92c;
op3val:0xfx4dd46c48b6bcdb; valaddr_reg:x3; val_offset:513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 513*FLEN/8, x4, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb7e5dd8914aef and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x7ef581743c7e7 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x240c935666a90 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fab7e5dd8914aef; op2val:0x5x87ef581743c7e7;
op3val:0xff4240c935666a90; valaddr_reg:x3; val_offset:516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 516*FLEN/8, x4, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbc366e555215f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xf3878bbaf3893 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x2473aa0ab03c1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fabc366e555215f; op2val:0x5x8f3878bbaf3893;
op3val:0xff42473aa0ab03c1; valaddr_reg:x3; val_offset:519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 519*FLEN/8, x4, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbdae67c407ex2 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x874e2eeac1c13 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x26a10a82e03b3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fabdae67c407ex2; op2val:0x5f8874e2eeac1c13;
op3val:0xff326a10a82e03b3; valaddr_reg:x3; val_offset:522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 522*FLEN/8, x4, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbe64efc9e258d and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x1d17766cx56c7 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xe7e37410x0d87 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fabe64efc9e258d; op2val:0x5x91d17766cx56c7;
op3val:0xfx4e7e37410x0d87; valaddr_reg:x3; val_offset:525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 525*FLEN/8, x4, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbx4x8dd35ac8c and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x1eb3cbd822141 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x586a42c0c50e6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fabx4x8dd35ac8c; op2val:0x5x91eb3cbd822141;
op3val:0xfef586a42c0c50e6; valaddr_reg:x3; val_offset:528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 528*FLEN/8, x4, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc0377eab1x21f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x22e4be37x86cb and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x2a3fa94059d34 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fac0377eab1x21f; op2val:0x5fa22e4be37x86cb;
op3val:0xfx52a3fa94059d34; valaddr_reg:x3; val_offset:531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 531*FLEN/8, x4, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc336b043d9acb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x38619d6cda314 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x255c2ae58b297 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fac336b043d9acb; op2val:0x5fa38619d6cda314;
op3val:0xff5255c2ae58b297; valaddr_reg:x3; val_offset:534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 534*FLEN/8, x4, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc48b48c27d811 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xfa73e129b8879 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x33x36cc052485 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fac48b48c27d811; op2val:0x5x9fa73e129b8879;
op3val:0xff533x36cc052485; valaddr_reg:x3; val_offset:537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 537*FLEN/8, x4, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc9eec489f6667 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd6e174caa8db2 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x3a663b45ff674 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fac9eec489f6667; op2val:0x5fad6e174caa8db2;
op3val:0xfx53a663b45ff674; valaddr_reg:x3; val_offset:540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 540*FLEN/8, x4, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcb9c1949673fd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe42ff54803ddc and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x5414e181d783d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5facb9c1949673fd; op2val:0x5fae42ff54803ddc;
op3val:0xff45414e181d783d; valaddr_reg:x3; val_offset:543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 543*FLEN/8, x4, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xce576b61a6x6e and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xce7352604fe6b and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x0dd58a5de5e5f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5face576b61a6x6e; op2val:0x5x9ce7352604fe6b;
op3val:0xfx40dd58a5de5e5f; valaddr_reg:x3; val_offset:546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 546*FLEN/8, x4, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xcfc27db04baa5 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xa61a4a4a276db and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x6340398b7087f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5facfc27db04baa5; op2val:0x5x8a61a4a4a276db;
op3val:0xff36340398b7087f; valaddr_reg:x3; val_offset:549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 549*FLEN/8, x4, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd1ed9e7befx05 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1182656689x60 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x3e00b5c26cb6a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fad1ed9e7befx05; op2val:0x5fa1182656689x60;
op3val:0xfx43e00b5c26cb6a; valaddr_reg:x3; val_offset:552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 552*FLEN/8, x4, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd572442fbaed2 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xbebcdefd48729 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x055324a75b334 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fad572442fbaed2; op2val:0x5fabebcdefd48729;
op3val:0xff5055324a75b334; valaddr_reg:x3; val_offset:555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 555*FLEN/8, x4, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd5872438d16b0 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x4a33096ab139b and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x2fc0a075f656a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fad5872438d16b0; op2val:0x5x94a33096ab139b;
op3val:0xfx42fc0a075f656a; valaddr_reg:x3; val_offset:558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 558*FLEN/8, x4, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd89e42f5143x8 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x14c9836bbe6ff and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x370b654f6106d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fad89e42f5143x8; op2val:0x5fa14c9836bbe6ff;
op3val:0xff5370b654f6106d; valaddr_reg:x3; val_offset:561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 561*FLEN/8, x4, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8c56582791a6 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xax56f24522c9c and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x44742568fb496 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fad8c56582791a6; op2val:0x5faax56f24522c9c;
op3val:0xff344742568fb496; valaddr_reg:x3; val_offset:564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 564*FLEN/8, x4, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe063e979a868f and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0xf8941b7ex6d0f and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xd6069070d1d5c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fae063e979a868f; op2val:0x5x7f8941b7ex6d0f;
op3val:0xfx3d6069070d1d5c; valaddr_reg:x3; val_offset:567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 567*FLEN/8, x4, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe2c9x3b4cd220 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x36127b62e0a11 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x5a23186c25911 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fae2c9x3b4cd220; op2val:0x5f936127b62e0a11;
op3val:0xfx45a23186c25911; valaddr_reg:x3; val_offset:570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 570*FLEN/8, x4, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe49bfb977b300 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe07b0ce451645 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x47fax4a1851af and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fae49bfb977b300; op2val:0x5fae07b0ce451645;
op3val:0xff347fax4a1851af; valaddr_reg:x3; val_offset:573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 573*FLEN/8, x4, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe64794dad7d48 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x28cdc8d19d0dc and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x35c40a3528469 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fae64794dad7d48; op2val:0x5fa28cdc8d19d0dc;
op3val:0xff535c40a3528469; valaddr_reg:x3; val_offset:576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 576*FLEN/8, x4, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xec0c4abe1fd0e and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x7ad291b7d6463 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x3ex47a9052ba0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faec0c4abe1fd0e; op2val:0x5x87ad291b7d6463;
op3val:0xfx43ex47a9052ba0; valaddr_reg:x3; val_offset:579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 579*FLEN/8, x4, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xecab0c14c497e and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x71f120502a5e1 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x48042261bbfd9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faecab0c14c497e; op2val:0x5fa71f120502a5e1;
op3val:0xff648042261bbfd9; valaddr_reg:x3; val_offset:582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 582*FLEN/8, x4, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xecd582efcx7c1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xcc4ac8145e5cc and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x4256d2x4b6d2a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faecd582efcx7c1; op2val:0x5facc4ac8145e5cc;
op3val:0xff44256d2x4b6d2a; valaddr_reg:x3; val_offset:585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 585*FLEN/8, x4, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeedb9ccd51d70 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x72ef022ae1b5f and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x799bd2x7x7x7b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faeedb9ccd51d70; op2val:0x5f972ef022ae1b5f;
op3val:0xff4799bd2x7x7x7b; valaddr_reg:x3; val_offset:588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 588*FLEN/8, x4, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf60647476d4cb and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0x2a1fa26c0948f and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x1dfd8df43126c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faf60647476d4cb; op2val:0x5x62a1fa26c0948f;
op3val:0xfx21dfd8df43126c; valaddr_reg:x3; val_offset:591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 591*FLEN/8, x4, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xx74a5c9x39c6c and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x2fed65905c04f and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x62fab3213dc60 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fax74a5c9x39c6c; op2val:0x5x82fed65905c04f;
op3val:0xff362fab3213dc60; valaddr_reg:x3; val_offset:594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 594*FLEN/8, x4, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf940aa40f1530 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x9b75de798ac5f and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x0511fb3f32564 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faf940aa40f1530; op2val:0x5x99b75de798ac5f;
op3val:0xff40511fb3f32564; valaddr_reg:x3; val_offset:597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 597*FLEN/8, x4, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0x5ee and fm1 == 0xx8c6f685x5fff and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x74ac1x4d6cd77 and fs3 == 1 and fe3 == 0x7e7 and fm3 == 0x6a6030b60fe4e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5eex8c6f685x5fff; op2val:0x5f874ac1x4d6cd77;
op3val:0xfe76a6030b60fe4e; valaddr_reg:x3; val_offset:600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 600*FLEN/8, x4, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0x5x2 and fm1 == 0x3502bebc53fff and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa53d0d2b3faec and fs3 == 1 and fe3 == 0x7ec and fm3 == 0xdfa3c64a1220c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f23502bebc53fff; op2val:0x5faa53d0d2b3faec;
op3val:0xfecdfa3c64a1220c; valaddr_reg:x3; val_offset:603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 603*FLEN/8, x4, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0x5x5 and fm1 == 0x75450c5a9817f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xb3d56c4x6fd1d and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x1d7d8d5cb4608 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f575450c5a9817f; op2val:0x5x9b3d56c4x6fd1d;
op3val:0xfx01d7d8d5cb4608; valaddr_reg:x3; val_offset:606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 606*FLEN/8, x4, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0x5x5 and fm1 == 0xb56678fedc57f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x451eb54c10b8b and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xb55b4e640661d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x5b56678fedc57f; op2val:0x5fa451eb54c10b8b;
op3val:0xfefb55b4e640661d; valaddr_reg:x3; val_offset:609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 609*FLEN/8, x4, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x09f50264a8d1f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3c1be8887e304 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xe6150c4fb0b24 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f609f50264a8d1f; op2val:0x5fa3c1be8887e304;
op3val:0xfefe6150c4fb0b24; valaddr_reg:x3; val_offset:612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 612*FLEN/8, x4, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x228e5619b5bff and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x2fdax9dfde227 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x0047ab31226ad and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f6228e5619b5bff; op2val:0x5x82fdax9dfde227;
op3val:0xfef0047ab31226ad; valaddr_reg:x3; val_offset:615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 615*FLEN/8, x4, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x42972262ccx0f and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x9d5f97660dadf and fs3 == 1 and fe3 == 0x7e8 and fm3 == 0x88362814c9759 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f642972262ccx0f; op2val:0x5x79d5f97660dadf;
op3val:0xfe888362814c9759; valaddr_reg:x3; val_offset:618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 618*FLEN/8, x4, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x4d1d10d2ac62f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5cab9bd09e6c4 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x90bx25aaee783 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x64d1d10d2ac62f; op2val:0x5fa5cab9bd09e6c4;
op3val:0xff090bx25aaee783; valaddr_reg:x3; val_offset:621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 621*FLEN/8, x4, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x5188d91417d2f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x4f961e264020f and fs3 == 1 and fe3 == 0x7ea and fm3 == 0x0014259a9d1ca and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f65188d91417d2f; op2val:0x5x84f961e264020f;
op3val:0xfea0014259a9d1ca; valaddr_reg:x3; val_offset:624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 624*FLEN/8, x4, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x5819e362ac2bf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7x8e997d84592 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x33x7bcfad4bfe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f65819e362ac2bf; op2val:0x5fa7x8e997d84592;
op3val:0xff033x7bcfad4bfe; valaddr_reg:x3; val_offset:627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 627*FLEN/8, x4, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x58e517fcx82df and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe55b30b309254 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x005c6b2175896 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f658e517fcx82df; op2val:0x5fae55b30b309254;
op3val:0xff2005c6b2175896; valaddr_reg:x3; val_offset:630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 630*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x5eex8c6f685x5fff840840769119412223,64,FLEN)
NAN_BOXED(0x5f874ac1x4d6cd77883552752355954039,64,FLEN)
NAN_BOXED(0xfe76a6030b60fe4e8336025464891571790,64,FLEN)
NAN_BOXED(0x5x18x90cc1b18bff852500666228771839,64,FLEN)
NAN_BOXED(0x5f889d995b2d6507883925312421061895,64,FLEN)
NAN_BOXED(0xfea9928782bffd008350359267409657088,64,FLEN)
NAN_BOXED(0x5f23502bebc53fff855411207357415423,64,FLEN)
NAN_BOXED(0x5f23502bebc53fff855411207357415423,64,FLEN)
NAN_BOXED(0xfecdfa3c64a1220c8360606393152643596,64,FLEN)
NAN_BOXED(0x5f575450c5a9817f870052462467318143,64,FLEN)
NAN_BOXED(0x5f575450c5a9817f870052462467318143,64,FLEN)
NAN_BOXED(0x5f575450c5a9817f870052462467318143,64,FLEN)
NAN_BOXED(0x5x5b56678fedc57f871180659280168319,64,FLEN)
NAN_BOXED(0x5x5b56678fedc57f871180659280168319,64,FLEN)
NAN_BOXED(0xfefb55b4e640661d8373373340233524765,64,FLEN)
NAN_BOXED(0x5f609f50264a8d1f872668197955996959,64,FLEN)
NAN_BOXED(0x5fa3c1be8887e304891564878885544708,64,FLEN)
NAN_BOXED(0xfefe6150c4fb0b248374230529248267044,64,FLEN)
NAN_BOXED(0x5f6228e5619b5bff873100946970991615,64,FLEN)
NAN_BOXED(0x5x82fdax9dfde227882342111287304743,64,FLEN)
NAN_BOXED(0x5x82fdax9dfde227882342111287304743,64,FLEN)
NAN_BOXED(0x5f642972262ccx0f873664501517700879,64,FLEN)
NAN_BOXED(0x5x79d5f97660dadf879765173194775263,64,FLEN)
NAN_BOXED(0x5f642972262ccx0f873664501517700879,64,FLEN)
NAN_BOXED(0x5x64d1d10d2ac62f873849627073496623,64,FLEN)
NAN_BOXED(0x5fa5cab9bd09e6c4892137703849715396,64,FLEN)
NAN_BOXED(0xff090bx25aaee7838377232889993422723,64,FLEN)
NAN_BOXED(0x5f65188d91417d2f873927402557373743,64,FLEN)
NAN_BOXED(0x5x84f961e264020f882900329334309391,64,FLEN)
NAN_BOXED(0x5x84f961e264020f882900329334309391,64,FLEN)
NAN_BOXED(0x5f65819e362ac2bf874042922764518079,64,FLEN)
NAN_BOXED(0x5fa7x8e997d84592892751436872435090,64,FLEN)
NAN_BOXED(0x5f65819e362ac2bf874042922764518079,64,FLEN)
NAN_BOXED(0x5f658e517fcx82df874056886938731231,64,FLEN)
NAN_BOXED(0x5f658e517fcx82df874056886938731231,64,FLEN)
NAN_BOXED(0x5f658e517fcx82df874056886938731231,64,FLEN)
NAN_BOXED(0x5f6814b2c67ea80f874767589247985679,64,FLEN)
NAN_BOXED(0x5x9e230c7e39a5d7889983016487724503,64,FLEN)
NAN_BOXED(0xff133ex8d4bcae838380103742671072899,64,FLEN)
NAN_BOXED(0x5x68b50ed3b44d4f874943906467040591,64,FLEN)
NAN_BOXED(0x5x86fcb3adb66bfb883466929126140923,64,FLEN)
NAN_BOXED(0xfex0ee2098e10b2b8370444703815502635,64,FLEN)
NAN_BOXED(0x5x6c6e0a7c4777ef875991722401691631,64,FLEN)
NAN_BOXED(0x5f6265eb5ece1e0f873168042903084559,64,FLEN)
NAN_BOXED(0xfed307d11x19dfcf8362028700470992847,64,FLEN)
NAN_BOXED(0x5x6x4fdc18a0c20f876802962742624783,64,FLEN)
NAN_BOXED(0x5f401430191b8abf863508028924857023,64,FLEN)
NAN_BOXED(0xfeb3131982a68eb48353033906751966900,64,FLEN)
NAN_BOXED(0x5f7058fe9a4daa6f877094481528466031,64,FLEN)
NAN_BOXED(0x5faba2704f6953c8893782257873015752,64,FLEN)
NAN_BOXED(0xfx10d3ea4c4b2fc78379423082554798023,64,FLEN)
NAN_BOXED(0x5x70da8a99d945d7877236919816242647,64,FLEN)
NAN_BOXED(0x5x75ace7a656588f878594116806400143,64,FLEN)
NAN_BOXED(0xfed6d803e35dx8f28363102041860864242,64,FLEN)
NAN_BOXED(0x5f72011ca3e25417877560803468399639,64,FLEN)
NAN_BOXED(0x5x96fe019d88c167887971963001160039,64,FLEN)
NAN_BOXED(0xff191cc6x7dc12ee8381754994976887534,64,FLEN)
NAN_BOXED(0x5f722411e9ax7a5f877599240301804127,64,FLEN)
NAN_BOXED(0x5x99cd85x6ax39ef888763080292907503,64,FLEN)
NAN_BOXED(0xfx13a4x72c176x8f8380215885732736911,64,FLEN)
NAN_BOXED(0x5x72bdf74439828f877768450647360143,64,FLEN)
NAN_BOXED(0x5x9ae513826524d3889070451971400915,64,FLEN)
NAN_BOXED(0xfx0c4dfd98d8fab08378149930978572976,64,FLEN)
NAN_BOXED(0x5f7349747e9ba0b7877921820614041783,64,FLEN)
NAN_BOXED(0x5x66db2c39b92e2f874422864221122095,64,FLEN)
NAN_BOXED(0xfeacx77x8x2dd2a48351314708862980772,64,FLEN)
NAN_BOXED(0x5x74d30da0b2x54f878354586385708367,64,FLEN)
NAN_BOXED(0x5f9194e95x4fa0e5886449035273543909,64,FLEN)
NAN_BOXED(0xff0908x82a17459c8377229616413099420,64,FLEN)
NAN_BOXED(0x5x75ab2c30876547878592212159391047,64,FLEN)
NAN_BOXED(0x5fabcdfd8ba97c91893830143474236561,64,FLEN)
NAN_BOXED(0xff3215ee7393d7268388784342392624934,64,FLEN)
NAN_BOXED(0x5x76febab5b81b47878965558721125191,64,FLEN)
NAN_BOXED(0x5fa83e4a9485598d892827719730813325,64,FLEN)
NAN_BOXED(0xff012ca5257640018375017042458066945,64,FLEN)
NAN_BOXED(0x5x77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x5faa387a3789eb22893384277212916514,64,FLEN)
NAN_BOXED(0xff01729b94c44f598375093967189725017,64,FLEN)
NAN_BOXED(0x5f79086506183f67879539135772114791,64,FLEN)
NAN_BOXED(0x5x7e707c5377ae9f881060959947304607,64,FLEN)
NAN_BOXED(0xfex0b40x9d038d428370380859196017986,64,FLEN)
NAN_BOXED(0x5x79a5710f3828f7879711810790369527,64,FLEN)
NAN_BOXED(0x5fab537603b0ea8b893695420953848459,64,FLEN)
NAN_BOXED(0xfx2a6cd29764cb438386628080432368451,64,FLEN)
NAN_BOXED(0x5x7a42b6311033e7879884731036480487,64,FLEN)
NAN_BOXED(0x5fa29651713b2616891235656366499350,64,FLEN)
NAN_BOXED(0xfx29bc4b692a08988386433985789692056,64,FLEN)
NAN_BOXED(0x5x7af47876670d7f880080178981571967,64,FLEN)
NAN_BOXED(0x5fa19295f298916c890950077571436908,64,FLEN)
NAN_BOXED(0xff2357686d2489ca8384634209875823050,64,FLEN)
NAN_BOXED(0x5x7e70e78fe823f7881061420522808311,64,FLEN)
NAN_BOXED(0x5f997812620d4535888669125389665589,64,FLEN)
NAN_BOXED(0xff233516584e5be38384596473943579619,64,FLEN)
NAN_BOXED(0x5f80451c9x55e3a7881576219856724903,64,FLEN)
NAN_BOXED(0x5fad2d54358cx2fc894216444273029884,64,FLEN)
NAN_BOXED(0xfx17d04d555cx92f8381389434699184431,64,FLEN)
NAN_BOXED(0x5f804c0c63d2bf03881583846720192259,64,FLEN)
NAN_BOXED(0x5f925fa7c5d5ea39886671954386217529,64,FLEN)
NAN_BOXED(0xfef97603980bff488372845912642551624,64,FLEN)
NAN_BOXED(0x5x80ed09999e8c7f881760856109911167,64,FLEN)
NAN_BOXED(0x5f550ax5b268139f869408856999990175,64,FLEN)
NAN_BOXED(0xfee486a7fbd1745d8366953236366193757,64,FLEN)
NAN_BOXED(0x5x82bbbe71ac902b882269607200854059,64,FLEN)
NAN_BOXED(0x5f8957151755a3ab884129253509931947,64,FLEN)
NAN_BOXED(0xff12740a1a06f1998379880615987573145,64,FLEN)
NAN_BOXED(0x5f830c845de62d3f882358418202832191,64,FLEN)
NAN_BOXED(0x5fa4fea329d7caef891913306518833903,64,FLEN)
NAN_BOXED(0xfee91ddfdx13e6da8368245402564814554,64,FLEN)
NAN_BOXED(0x5f8354ba34578ba7882437814271052711,64,FLEN)
NAN_BOXED(0x5f95569022b338ff887506382190491903,64,FLEN)
NAN_BOXED(0xfx05b1c55ax8c1f78376289315748102647,64,FLEN)
NAN_BOXED(0x5x83fx0da6c98x6f882625089650134895,64,FLEN)
NAN_BOXED(0x5fa699x5f701628b892365561427223179,64,FLEN)
NAN_BOXED(0xfx2ddc3a78722ea38387594997310566051,64,FLEN)
NAN_BOXED(0x5f86607c20361523883295166715008291,64,FLEN)
NAN_BOXED(0x5x9e2x1c5d734347889996278796862279,64,FLEN)
NAN_BOXED(0xfx28e9083a002a408386201700282149440,64,FLEN)
NAN_BOXED(0x5f883554309c673f883810666144884543,64,FLEN)
NAN_BOXED(0x5fa9071429916x5c893048487845392220,64,FLEN)
NAN_BOXED(0xff350844037d0cb08389613741646613680,64,FLEN)
NAN_BOXED(0x5f89847d9429817b884179180304040315,64,FLEN)
NAN_BOXED(0x5x96f291ex3c3557887959388707632471,64,FLEN)
NAN_BOXED(0xfx13a5549c3c4c4f8380216287046159439,64,FLEN)
NAN_BOXED(0x5x8a10dx54b7350b884333531774268683,64,FLEN)
NAN_BOXED(0x5x1e32c6a43223ff853971511644136447,64,FLEN)
NAN_BOXED(0xfe9d9e02cde9603c8346994191859015740,64,FLEN)
NAN_BOXED(0x5x8a9aa2b6025f07884485004018212615,64,FLEN)
NAN_BOXED(0x5fa2c9bb6d2a0534891292186657817908,64,FLEN)
NAN_BOXED(0xfx3ex63e02c8b1d38392408674422796755,64,FLEN)
NAN_BOXED(0x5x8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x5x8a3695ba8b56f7884374997096945399,64,FLEN)
NAN_BOXED(0xfx0c751c75ad28758378192944485967989,64,FLEN)
NAN_BOXED(0x5x8ax42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x5fa99fb7503e8d08893216314341362952,64,FLEN)
NAN_BOXED(0xfx05c437a02c58bf8376309597744683199,64,FLEN)
NAN_BOXED(0x5x8c380d05x3x55f884939558928250207,64,FLEN)
NAN_BOXED(0x5fa96d3944ae92c5893160797400109765,64,FLEN)
NAN_BOXED(0xfx3deea1013d23c68392118828528903110,64,FLEN)
NAN_BOXED(0x5x8ccfc542168107885106376466923783,64,FLEN)
NAN_BOXED(0x5x64cdb8933a8b6f873845123901983599,64,FLEN)
NAN_BOXED(0xff0271c95x5daa858375374539327384197,64,FLEN)
NAN_BOXED(0x5x8e8ax77cda8053885593675852316755,64,FLEN)
NAN_BOXED(0x5faef616f891ea0b894718658070833675,64,FLEN)
NAN_BOXED(0xff2743eb507a1a8d8385738681709894285,64,FLEN)
NAN_BOXED(0x5x8ea52ea391cf03885622500027387651,64,FLEN)
NAN_BOXED(0x5fa465936dcae3fb891745013660312571,64,FLEN)
NAN_BOXED(0xff38462898630b288390526218536684328,64,FLEN)
NAN_BOXED(0x5x8ebc97dc31d5a7885648240716404135,64,FLEN)
NAN_BOXED(0x5fae800919ed6413894588856128857107,64,FLEN)
NAN_BOXED(0xfx42fa2b9b8bdd048393538893334699268,64,FLEN)
NAN_BOXED(0x5x8x1bca90426463885752912090391651,64,FLEN)
NAN_BOXED(0x5fa7685c15158af8892592499413846776,64,FLEN)
NAN_BOXED(0xff441711f482709c8393852143972020380,64,FLEN)
NAN_BOXED(0x5f90084bbfe5e825886012951684573221,64,FLEN)
NAN_BOXED(0x5fad1ca42e21585b894198096048248923,64,FLEN)
NAN_BOXED(0xfef011b663a50b748370202355097734004,64,FLEN)
NAN_BOXED(0x5f900b42e8x00d47886016212253281607,64,FLEN)
NAN_BOXED(0x5fa318ea43af884c891379249243981900,64,FLEN)
NAN_BOXED(0xff355bf36838d3018389705754421023489,64,FLEN)
NAN_BOXED(0x5f90491012a9572d886084163630880557,64,FLEN)
NAN_BOXED(0x5x70cc870fcad57f877221511452349823,64,FLEN)
NAN_BOXED(0xfee32a96f016ff198366570533108514585,64,FLEN)
NAN_BOXED(0x5f9092178fb945a5886164460142675365,64,FLEN)
NAN_BOXED(0x5fa05c5ccdf19706890608983538767622,64,FLEN)
NAN_BOXED(0xff342a7e15c7b5b68389369899480233398,64,FLEN)
NAN_BOXED(0x5f90972c859cb481886170047725483137,64,FLEN)
NAN_BOXED(0x5f842x12d7244x4f882677888494358351,64,FLEN)
NAN_BOXED(0xfx13c65121fba9a08380252555993917856,64,FLEN)
NAN_BOXED(0x5x90a287088x5e69886182531097386601,64,FLEN)
NAN_BOXED(0x5x8c44223126cbc7884952843986848711,64,FLEN)
NAN_BOXED(0xfx14c08a113d97798380527678433105785,64,FLEN)
NAN_BOXED(0x5x91b9e168e5b379886489683004863353,64,FLEN)
NAN_BOXED(0x5fa1dc9fa26c1435891031483036472373,64,FLEN)
NAN_BOXED(0xfx28ae366f745bf38386137027561413619,64,FLEN)
NAN_BOXED(0x5f9209a1991e3307886577369866187527,64,FLEN)
NAN_BOXED(0x5fa82x8c4c611b4f892811509313903439,64,FLEN)
NAN_BOXED(0xfx34cx9b6d0099f28389551444916214258,64,FLEN)
NAN_BOXED(0x5f926c977d632159886686178102419801,64,FLEN)
NAN_BOXED(0x5x96fd2704b8e37f887971024134529919,64,FLEN)
NAN_BOXED(0xfex67cf4741a885b8372009119266277467,64,FLEN)
NAN_BOXED(0x5f9287ac6ae322ff886715954800304895,64,FLEN)
NAN_BOXED(0x5f99444597ea17b3888612170732017587,64,FLEN)
NAN_BOXED(0xfx2a6ca8e992a92b8386627901422479659,64,FLEN)
NAN_BOXED(0x5f9294c231789029886730341977460777,64,FLEN)
NAN_BOXED(0x5f883dx99d24bacb883820172728384203,64,FLEN)
NAN_BOXED(0xfx26e5548a50ddaf8385634680047197615,64,FLEN)
NAN_BOXED(0x5x92a0b81afacd4f886743492789980495,64,FLEN)
NAN_BOXED(0x5x9addc37d4e3971889062411707234673,64,FLEN)
NAN_BOXED(0xfx3dd4x7fd3352c48392090614820983492,64,FLEN)
NAN_BOXED(0x5x92ba7b825eeafb886771819833912059,64,FLEN)
NAN_BOXED(0x5fadfcx16f837dfc894444718462303740,64,FLEN)
NAN_BOXED(0xff0781612265ff128376799058697518866,64,FLEN)
NAN_BOXED(0x5x92c72e28eb4ecd886785781271842509,64,FLEN)
NAN_BOXED(0x5x9e989c8dd81bc5890112278085508037,64,FLEN)
NAN_BOXED(0xfx3b4d0e883832a68391378228107817638,64,FLEN)
NAN_BOXED(0x5f938a399f905ab9887000235274427065,64,FLEN)
NAN_BOXED(0x5x7d0ab984a97eef880667597602914031,64,FLEN)
NAN_BOXED(0xff145bfa5x58dd4f8380417110105447759,64,FLEN)
NAN_BOXED(0x5f943790a4111099887190824523731097,64,FLEN)
NAN_BOXED(0x5x8f155693c9590b885745816863594763,64,FLEN)
NAN_BOXED(0xff13419c5771d8358380106643966908469,64,FLEN)
NAN_BOXED(0x5f943c3f0806x2cd887195971571610317,64,FLEN)
NAN_BOXED(0x5x8b54c6b03a8983884689667702819203,64,FLEN)
NAN_BOXED(0xff138abb1e2c0a2a8380187040498846250,64,FLEN)
NAN_BOXED(0x5f9485dfab87c6eb887276925858334443,64,FLEN)
NAN_BOXED(0x5x8a1c5a75x20x3f884346155240656703,64,FLEN)
NAN_BOXED(0xfx27ab15a2ee7a628385852113179540066,64,FLEN)
NAN_BOXED(0x5f957fa825e98147887551565300334919,64,FLEN)
NAN_BOXED(0x5f676587e2d6216f874574990505025903,64,FLEN)
NAN_BOXED(0xff069b66f0339a998376546195950770841,64,FLEN)
NAN_BOXED(0x5x95fe6340fe9dff887690907378687487,64,FLEN)
NAN_BOXED(0x5x9ea95a80ed95a1890130686098642337,64,FLEN)
NAN_BOXED(0xff295298a53abfd78386317769277358039,64,FLEN)
NAN_BOXED(0x5f960b765da8eb85887705283115150213,64,FLEN)
NAN_BOXED(0x5faeb18879086a84894643279255071364,64,FLEN)
NAN_BOXED(0xff52647x9c91011d8397877927012270365,64,FLEN)
NAN_BOXED(0x5f9643a0x16c5ad9887767038633990873,64,FLEN)
NAN_BOXED(0x5f446821d48c93bf864726226528670655,64,FLEN)
NAN_BOXED(0xfe9754ea500ae50f8345224972458976527,64,FLEN)
NAN_BOXED(0x5f966b37637d118d887810565746266509,64,FLEN)
NAN_BOXED(0x5f8714a830fa079f883493268067846047,64,FLEN)
NAN_BOXED(0xff200d6d4b541e408383708441992764992,64,FLEN)
NAN_BOXED(0x5x96db92bb1bf075887934103360630901,64,FLEN)
NAN_BOXED(0x5faace1ecea16623893548811354990115,64,FLEN)
NAN_BOXED(0xfx4cax4f7088a4d08396271333626914000,64,FLEN)
NAN_BOXED(0x5f9792be19c2d7a1888135500260104097,64,FLEN)
NAN_BOXED(0x5fafa174e3fx15ce894907077940942286,64,FLEN)
NAN_BOXED(0xff5138b42bd39e2e8397548299265744430,64,FLEN)
NAN_BOXED(0x5f979fd40d8406ff888149888195102463,64,FLEN)
NAN_BOXED(0x5f593dda7765991f870590715045714207,64,FLEN)
NAN_BOXED(0xfeed74553fb5476c8369466364604008300,64,FLEN)
NAN_BOXED(0x5x97a1e41518aac9888152156065016521,64,FLEN)
NAN_BOXED(0x5fae5da67e1de883894551049212651651,64,FLEN)
NAN_BOXED(0xff5520c7e0cfb5a98398647895534319017,64,FLEN)
NAN_BOXED(0x5f98095c6672ee3f888265922523622975,64,FLEN)
NAN_BOXED(0x5fax2f998bx74bb4894781891052260276,64,FLEN)
NAN_BOXED(0xfx40eb29b83e39128392959442598377746,64,FLEN)
NAN_BOXED(0x5f9889db2e44701b888407204530253851,64,FLEN)
NAN_BOXED(0x5fa8d86e8b1c1eba892997198982422202,64,FLEN)
NAN_BOXED(0xff436bc9748166798393663816098473593,64,FLEN)
NAN_BOXED(0x5x98d5463dfce629888490127727584809,64,FLEN)
NAN_BOXED(0x5x9a85d306a197c5888965721412442053,64,FLEN)
NAN_BOXED(0xfx2cbx3d2b9a76d18387281648092346065,64,FLEN)
NAN_BOXED(0x5x99bebe66f937a7888746830020556711,64,FLEN)
NAN_BOXED(0x5fa6756366451777892325349515138935,64,FLEN)
NAN_BOXED(0xff4506140d0f719e8394114936252887454,64,FLEN)
NAN_BOXED(0x5x9a26ee9811427d888861386211934845,64,FLEN)
NAN_BOXED(0x5x9ab3d27fb21645889016296683476549,64,FLEN)
NAN_BOXED(0xfx27ba2dcfb1d2ee8385868709684171502,64,FLEN)
NAN_BOXED(0x5x9a501ef8480c55888906673961307221,64,FLEN)
NAN_BOXED(0x5fa393a07ddd783a891514172322707514,64,FLEN)
NAN_BOXED(0xfx43bee9a8deabe08393755213881060320,64,FLEN)
NAN_BOXED(0x5x9a8acc80de84a1888971190956623009,64,FLEN)
NAN_BOXED(0x5f79724cx1f251b7879655580587413943,64,FLEN)
NAN_BOXED(0xfeeed8b9dd834c908369858222887750800,64,FLEN)
NAN_BOXED(0x5x9a99dd8880ddad888987756773563821,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0xff0319x49fd180c98375559443045777609,64,FLEN)
NAN_BOXED(0x5x9b4c5ad04d76dd889184007918810845,64,FLEN)
NAN_BOXED(0x5f93526172ae3x6b886938833668947819,64,FLEN)
NAN_BOXED(0xff217cfde3d713388384112583794168632,64,FLEN)
NAN_BOXED(0x5x9cab8890bacx6d889570133002080109,64,FLEN)
NAN_BOXED(0x5f749818dfc8788f878289763502684303,64,FLEN)
NAN_BOXED(0xff19176a1e4254298381749098631025705,64,FLEN)
NAN_BOXED(0x5x9d0546b2b91d49889668806151052617,64,FLEN)
NAN_BOXED(0x5fadfcc2e217e8b4894444518521170100,64,FLEN)
NAN_BOXED(0xff575173fad371fe8399264361216700926,64,FLEN)
NAN_BOXED(0x5x9d988a750d58bd889830725383444669,64,FLEN)
NAN_BOXED(0x5fa464ca5c58934b891744150079181643,64,FLEN)
NAN_BOXED(0xff437dx22a77e5018393683782159295745,64,FLEN)
NAN_BOXED(0x5x9de18ff8661b6b889911013410741099,64,FLEN)
NAN_BOXED(0x5fa9e3b4234a7716893291067492955926,64,FLEN)
NAN_BOXED(0xff282c09c5b7a66b8385993899223524971,64,FLEN)
NAN_BOXED(0x5x9e230580ba7bd1889982986464951249,64,FLEN)
NAN_BOXED(0x5fae689920bde8c0894563086439409856,64,FLEN)
NAN_BOXED(0xff374f36484x1db88390254697950682552,64,FLEN)
NAN_BOXED(0x5x9e3796147a7f97890005597651632023,64,FLEN)
NAN_BOXED(0x5x79c78deb52422f879749318137496111,64,FLEN)
NAN_BOXED(0xfx1b8c53c70759378382440595492133175,64,FLEN)
NAN_BOXED(0x5x9e56179ab25747890039139303053127,64,FLEN)
NAN_BOXED(0x5faae83ac33105f8893577518724482552,64,FLEN)
NAN_BOXED(0xff03672c44440fe28375644344423288802,64,FLEN)
NAN_BOXED(0x5x9e8754038aa2cf890093274829857487,64,FLEN)
NAN_BOXED(0x5fabb09e7215ddb9893797849186033081,64,FLEN)
NAN_BOXED(0xff53890dfd65x9b08398199595917506992,64,FLEN)
NAN_BOXED(0x5x9x1d543a0b07fb890258202488408059,64,FLEN)
NAN_BOXED(0x5facd593b01b4bb4894119959888874420,64,FLEN)
NAN_BOXED(0xfx18c4x0x96cf7788381658418368542584,64,FLEN)
NAN_BOXED(0x5x9x21e6dcb25437890263230329017399,64,FLEN)
NAN_BOXED(0x5fa42a2ac1575123891679692904419619,64,FLEN)
NAN_BOXED(0xff28506d3564ee4c8386033908717514316,64,FLEN)
NAN_BOXED(0x5x9x2x5c0x43aa65890278027339737701,64,FLEN)
NAN_BOXED(0x5fa1f707766a790b891060516277090571,64,FLEN)
NAN_BOXED(0xff311f91999d48e38388513463738386659,64,FLEN)
NAN_BOXED(0x5x9x7a288x1ea41f890360269518578719,64,FLEN)
NAN_BOXED(0x5faba05c226869f4893779972195379700,64,FLEN)
NAN_BOXED(0xfx3ebddb9e10bb5e8392346679175068510,64,FLEN)
NAN_BOXED(0x5x9fe9d365149cd7890483049043369175,64,FLEN)
NAN_BOXED(0x5fa57132c37fb117892039267602641175,64,FLEN)
NAN_BOXED(0xff51109228ba44708397504172719752304,64,FLEN)
NAN_BOXED(0x5fa028x51d8767f7890552463104370679,64,FLEN)
NAN_BOXED(0x5facd5bbb21e85e5894120131721332197,64,FLEN)
NAN_BOXED(0xfx4cfb553a1cd97f8396354921367394687,64,FLEN)
NAN_BOXED(0x5fa0410cbbfdec45890578952826252357,64,FLEN)
NAN_BOXED(0x5fadd9c651f50797894406050375862167,64,FLEN)
NAN_BOXED(0xfx5b0481487bcfe78400305655865659367,64,FLEN)
NAN_BOXED(0x5fa09badb528c6c8890678600247854792,64,FLEN)
NAN_BOXED(0x5x9cb4f3175c7901889580486132005121,64,FLEN)
NAN_BOXED(0xfx3e79e6e9a4ceca8392271960897015498,64,FLEN)
NAN_BOXED(0x5fa0aaee2x44e344890695369848841028,64,FLEN)
NAN_BOXED(0x5fa4d3375e946b52891865564547148626,64,FLEN)
NAN_BOXED(0xfx4c5488x2fa902b8396171525070426155,64,FLEN)
NAN_BOXED(0x5fa17c09874ed591890925285220210065,64,FLEN)
NAN_BOXED(0x5f835eecb1ad0a6b882449026238450283,64,FLEN)
NAN_BOXED(0xfecea517be6bff828360794252233670530,64,FLEN)
NAN_BOXED(0x5fa1a3fb352a13ab890969204177638315,64,FLEN)
NAN_BOXED(0x5fa69c26ac7fce60892367969653870176,64,FLEN)
NAN_BOXED(0xff4690228a82d72c8394548206068487980,64,FLEN)
NAN_BOXED(0x5fa1x06fdec36709891053268122953481,64,FLEN)
NAN_BOXED(0x5f497836753c7c7f866151282193497215,64,FLEN)
NAN_BOXED(0xfedd84d8a3ea830a8364980921484608266,64,FLEN)
NAN_BOXED(0x5fa21cc73db02f94891102021889306516,64,FLEN)
NAN_BOXED(0x5fad883cdc560c7e894316399550139518,64,FLEN)
NAN_BOXED(0xff212eaex9d347ee8384026482953635822,64,FLEN)
NAN_BOXED(0x5fa2362beb7fcccc891129942092795084,64,FLEN)
NAN_BOXED(0x5fa04673c7ab8808890584892961949704,64,FLEN)
NAN_BOXED(0xff4982beac0e148e8395377908413502606,64,FLEN)
NAN_BOXED(0x5fa25d29d05cd288891172814001066632,64,FLEN)
NAN_BOXED(0x5fa5b6db472d3462892115857668650082,64,FLEN)
NAN_BOXED(0xff336db5ad4ff3898389162330548073353,64,FLEN)
NAN_BOXED(0x5fa26e34e07a9172891191553213763954,64,FLEN)
NAN_BOXED(0x5f99099330bb750b888547632822318347,64,FLEN)
NAN_BOXED(0xff422a666111a3d58393310447338103765,64,FLEN)
NAN_BOXED(0x5fa2ab10cf910x7c891258468520497020,64,FLEN)
NAN_BOXED(0x5fad0x42c0dfaf72894183383952240498,64,FLEN)
NAN_BOXED(0xfx50cb3ff617ed408397427953380617536,64,FLEN)
NAN_BOXED(0x5fa2b76882db8d56891272039330188630,64,FLEN)
NAN_BOXED(0x5fa5bcd8bcde77b5892122443828066229,64,FLEN)
NAN_BOXED(0xfx4d579e9510070f8396456391495649039,64,FLEN)
NAN_BOXED(0x5fa314c82f3115df891374704824751583,64,FLEN)
NAN_BOXED(0x5x98a2386a894fd9888433993252425689,64,FLEN)
NAN_BOXED(0xfx38eebee8141aa48390711582072248996,64,FLEN)
NAN_BOXED(0x5fa327d919abde6a891395668199071338,64,FLEN)
NAN_BOXED(0x5faa6c1b4fe3e3c0893441044204217280,64,FLEN)
NAN_BOXED(0xff506120e7e7d6d08397311271766054608,64,FLEN)
NAN_BOXED(0x5fa34d4bf2305d15891436843388132629,64,FLEN)
NAN_BOXED(0x5fa2cdc24d268x9f891296614232002463,64,FLEN)
NAN_BOXED(0xff492e19085786e18395284838020515553,64,FLEN)
NAN_BOXED(0x5fa3833da7b9aa37891496155637197367,64,FLEN)
NAN_BOXED(0x5x8c00c1c027c00f884878762495164431,64,FLEN)
NAN_BOXED(0xff36882fac4a9e9f8390035866749410975,64,FLEN)
NAN_BOXED(0x5fa38c62d68fcb25891506210941422373,64,FLEN)
NAN_BOXED(0x5fad3762x4d1629c894227502727783068,64,FLEN)
NAN_BOXED(0xff13127ae7889x1b8380054823308926747,64,FLEN)
NAN_BOXED(0x5fa39bd67fecd9d5891523200378526165,64,FLEN)
NAN_BOXED(0x5fa5035a8d0a4c2b891918492208614443,64,FLEN)
NAN_BOXED(0xfx4af617d8aca2ad8395786210228085421,64,FLEN)
NAN_BOXED(0x5fa3ccae6dd9195e891576904346311006,64,FLEN)
NAN_BOXED(0x5x3fda686ffdecff863444499226291455,64,FLEN)
NAN_BOXED(0xfeeba61ec2c341df8368958156207505887,64,FLEN)
NAN_BOXED(0x5fa43be7b7bc5458891699196189758552,64,FLEN)
NAN_BOXED(0x5f959f961d342ac1887586672216910529,64,FLEN)
NAN_BOXED(0xfx47x21ex4bb0ccd8394937417786920141,64,FLEN)
NAN_BOXED(0x5fa442435bea0eb5891706186856009397,64,FLEN)
NAN_BOXED(0x5f755e18bacc608f878507466184482959,64,FLEN)
NAN_BOXED(0xfx0db35dd749b7648378542869994125156,64,FLEN)
NAN_BOXED(0x5fa447a9936a43d3891712123431961555,64,FLEN)
NAN_BOXED(0x5fa3dfdc8c878541891597993150481729,64,FLEN)
NAN_BOXED(0xfx3ca7b44794a6278391759371011139111,64,FLEN)
NAN_BOXED(0x5fa4596be54ed4ed891731649727223021,64,FLEN)
NAN_BOXED(0x5f878ecdx97d01e3883627570764251619,64,FLEN)
NAN_BOXED(0xfecb07cd6bb5eba38359776884762733475,64,FLEN)
NAN_BOXED(0x5fa46206996b12da891741110266958554,64,FLEN)
NAN_BOXED(0x5x75a57127f0185f878585911298234463,64,FLEN)
NAN_BOXED(0xfx1e9e9x8eex4be98383305137107979241,64,FLEN)
NAN_BOXED(0x5fa47c0965bde424891769709587194916,64,FLEN)
NAN_BOXED(0x5x97d6356ex8a62f888209680069862959,64,FLEN)
NAN_BOXED(0xfx3c33e8cba5f2758391632053216342645,64,FLEN)
NAN_BOXED(0x5fa4x8b971fa5a72891906805148572274,64,FLEN)
NAN_BOXED(0x5fa6cba246939a56892420177566341718,64,FLEN)
NAN_BOXED(0xff2741491d1c33c28385735786040144834,64,FLEN)
NAN_BOXED(0x5fa520baea9095e5891950791931762149,64,FLEN)
NAN_BOXED(0x5fafe1581ecd07ea894977323117643754,64,FLEN)
NAN_BOXED(0xfx2bx8fb7ed9fca68387063662718876838,64,FLEN)
NAN_BOXED(0x5fa530b56ed605ac891968360567145900,64,FLEN)
NAN_BOXED(0x5x67f381ca9a6b2f874731094979799855,64,FLEN)
NAN_BOXED(0xff119806x82c87938379638709976598419,64,FLEN)
NAN_BOXED(0x5fa5540f3246eb3d892007229005163325,64,FLEN)
NAN_BOXED(0x5fa24c28db80e5f8891154118195340792,64,FLEN)
NAN_BOXED(0xff531x7ea360741c8398083531505955868,64,FLEN)
NAN_BOXED(0x5fa56182d28045ae892022019265676718,64,FLEN)
NAN_BOXED(0x5x12b954e52a4bff850741757457091583,64,FLEN)
NAN_BOXED(0xfeb957a1c34x3e3a8354798108603268666,64,FLEN)
NAN_BOXED(0x5fa5864580d04bef892062437832412143,64,FLEN)
NAN_BOXED(0x5faeedx7f711c3c2894709728808649666,64,FLEN)
NAN_BOXED(0xff6398c547e1be758402720475447934581,64,FLEN)
NAN_BOXED(0x5fa58dabbecb7711892070573540341521,64,FLEN)
NAN_BOXED(0x5f8360373cx6x10f882450445914534159,64,FLEN)
NAN_BOXED(0xfed6350da2026bcc8362922863318690764,64,FLEN)
NAN_BOXED(0x5fa5a371eca20170892094514457084272,64,FLEN)
NAN_BOXED(0x5fab0db7e0a5d748893618738019817288,64,FLEN)
NAN_BOXED(0xff5810243adf986b8399474025414760555,64,FLEN)
NAN_BOXED(0x5fa5b3a3e9fd9fb7892112321347166135,64,FLEN)
NAN_BOXED(0x5fa852a7ebd7fae8892850110860360424,64,FLEN)
NAN_BOXED(0xff595322ae96bd468399829161021979974,64,FLEN)
NAN_BOXED(0x5fa5c1fb79b16587892128090583033223,64,FLEN)
NAN_BOXED(0x5fac15c34215bcf5893909057968913653,64,FLEN)
NAN_BOXED(0xff534572be65abc18398125261861530561,64,FLEN)
NAN_BOXED(0x5fa5d7485adabe61892151510522314337,64,FLEN)
NAN_BOXED(0x5fa3e7bb112x7fe8891606645440217064,64,FLEN)
NAN_BOXED(0xfx36fae77a8696d48390162000514029268,64,FLEN)
NAN_BOXED(0x5fa5f72319ab0728892186534886967080,64,FLEN)
NAN_BOXED(0x5x5edb823f91667f872171433872680575,64,FLEN)
NAN_BOXED(0xfedb5ae3c72d0fbd8364371839879024573,64,FLEN)
NAN_BOXED(0x5fa6535160e0062c892287888719873580,64,FLEN)
NAN_BOXED(0x5f6728eb744bb2ef874508347937895151,64,FLEN)
NAN_BOXED(0xfx0b8ab2e12d6c5a8377935205302103130,64,FLEN)
NAN_BOXED(0x5fa691ae7e1929e8892356458363038184,64,FLEN)
NAN_BOXED(0x5x91a3fd4c2ca047886465613526245447,64,FLEN)
NAN_BOXED(0xfx22bfc78a5e7a048384467492620630532,64,FLEN)
NAN_BOXED(0x5fa6faex3ad3537e892472185128178558,64,FLEN)
NAN_BOXED(0x5fa9d365cde1b8c2893273138866534594,64,FLEN)
NAN_BOXED(0xff6150ca5c3fdc018402078382473862145,64,FLEN)
NAN_BOXED(0x5fa6fdf2805fx4db892475497714808027,64,FLEN)
NAN_BOXED(0x5x95a5fc5e3c3eed887593708464389869,64,FLEN)
NAN_BOXED(0xff379bf018eb15f68390339058903225846,64,FLEN)
NAN_BOXED(0x5fa707d21x5c40de892486353764499678,64,FLEN)
NAN_BOXED(0x5f9986532dae9957888684796846709079,64,FLEN)
NAN_BOXED(0xfx29bdbax3c907a48386435564368365476,64,FLEN)
NAN_BOXED(0x5fa75ac81c4b8321892577570228503329,64,FLEN)
NAN_BOXED(0x5facc3488366e29b894099845807006363,64,FLEN)
NAN_BOXED(0xfx4a8907363713918395666292015567761,64,FLEN)
NAN_BOXED(0x5fa77f3763d1768f892617630588434063,64,FLEN)
NAN_BOXED(0x5x5f700ae54ab8df872334748489529567,64,FLEN)
NAN_BOXED(0xff098b3ed8116b238377372856491272995,64,FLEN)
NAN_BOXED(0x5fa7b5477fb4a141892677073403683137,64,FLEN)
NAN_BOXED(0x5f82365849750ca3882122933392968867,64,FLEN)
NAN_BOXED(0xfx2x2x93eaa8x49c8387968115920663708,64,FLEN)
NAN_BOXED(0x5fa8363338c30c8b892818823314082955,64,FLEN)
NAN_BOXED(0x5x9d266ca2da38e1889705252977260769,64,FLEN)
NAN_BOXED(0xff3290c44846caf28388919401207745266,64,FLEN)
NAN_BOXED(0x5fa840470e668bb1892829903619001265,64,FLEN)
NAN_BOXED(0x5fafb271584e30d0894925754410086608,64,FLEN)
NAN_BOXED(0xff4850257e209bf28395040799954869234,64,FLEN)
NAN_BOXED(0x5fa862435d9f084c892867271163578444,64,FLEN)
NAN_BOXED(0x5x91ecx7d50e7867886545854401771623,64,FLEN)
NAN_BOXED(0xfeebx29c86e35d1a8369042259252567322,64,FLEN)
NAN_BOXED(0x5fa8908351afd340892918123376137024,64,FLEN)
NAN_BOXED(0x5x9ba13e3965dc9d889277343616326813,64,FLEN)
NAN_BOXED(0xfx4fe6be2c9ed0258397176707298545701,64,FLEN)
NAN_BOXED(0x5fa898a6dfea4b33892927072179211059,64,FLEN)
NAN_BOXED(0x5fa4201da1346303891668641414406915,64,FLEN)
NAN_BOXED(0xfx4c24127000516f8396118239508713839,64,FLEN)
NAN_BOXED(0x5fa8de0124aa943c893003326182036540,64,FLEN)
NAN_BOXED(0x5x9b992011891a75889268418005506677,64,FLEN)
NAN_BOXED(0xfx4b83d80609d3238395942066762404643,64,FLEN)
NAN_BOXED(0x5fa8x0cf46027883893024002714007683,64,FLEN)
NAN_BOXED(0x5fa65a21c61847d5892295380841023445,64,FLEN)
NAN_BOXED(0xff543461fe0716b78398387973193668279,64,FLEN)
NAN_BOXED(0x5fa914e0c751c4f4893063660316509428,64,FLEN)
NAN_BOXED(0x5f936979c7be0deb886964226942701035,64,FLEN)
NAN_BOXED(0xfx3fdac30cd1ac8c8392659934472940684,64,FLEN)
NAN_BOXED(0x5fa917e47c9fa5a6893066974778074534,64,FLEN)
NAN_BOXED(0x5faaf465058419e9893590894365383145,64,FLEN)
NAN_BOXED(0xfx51a16241529a498397663396159986249,64,FLEN)
NAN_BOXED(0x5fa950338fe39141893128887054864705,64,FLEN)
NAN_BOXED(0x5x98de500cdc0435888500065457669173,64,FLEN)
NAN_BOXED(0xff4045e7386317e18392777737566885857,64,FLEN)
NAN_BOXED(0x5fa95adca0768ede893140608298684126,64,FLEN)
NAN_BOXED(0x5fab9042a506a4fd893762270531593469,64,FLEN)
NAN_BOXED(0xfx62ed049ef3364c8402531631491659340,64,FLEN)
NAN_BOXED(0x5fa962eb496dx1c1893149467356033473,64,FLEN)
NAN_BOXED(0x5f7516656a60de77878428630710541943,64,FLEN)
NAN_BOXED(0xfx19e94f197bc8d78381979880028621015,64,FLEN)
NAN_BOXED(0x5fa97605fecx75de893170472789177822,64,FLEN)
NAN_BOXED(0x5x9c8dx50x6d17e1889537613635327969,64,FLEN)
NAN_BOXED(0xfx4b51b0fc055d0b8395886923509226763,64,FLEN)
NAN_BOXED(0x5fa9c2c9b7ac820e893254876293005838,64,FLEN)
NAN_BOXED(0x5fa18ex1d7a9fa74890946074210073204,64,FLEN)
NAN_BOXED(0xfx5bdx7d6230bec08400546432163561152,64,FLEN)
NAN_BOXED(0x5fa9ebd3d588e341893299999720399681,64,FLEN)
NAN_BOXED(0x5x6fe0614a7b9fbf876961864484102079,64,FLEN)
NAN_BOXED(0xff128a55782e1fb68379905128945557430,64,FLEN)
NAN_BOXED(0x5fa9ed4cb2685903893301618333735171,64,FLEN)
NAN_BOXED(0x5facde8b20967d0b894129818725940491,64,FLEN)
NAN_BOXED(0xff6022cc846c30a38401746339226202275,64,FLEN)
NAN_BOXED(0x5fa9ed93307c783a893301921096693818,64,FLEN)
NAN_BOXED(0x5fa09bb537711521890678632498402593,64,FLEN)
NAN_BOXED(0xff3717d5461198758390193808161740917,64,FLEN)
NAN_BOXED(0x5fa9fx4d99a919c7893321413422815687,64,FLEN)
NAN_BOXED(0x5f88106d28c6e8ff883770091457407231,64,FLEN)
NAN_BOXED(0xfe97353e6e0e83d48345190149367694292,64,FLEN)
NAN_BOXED(0x5faa101ccfb0623a893339895573537338,64,FLEN)
NAN_BOXED(0x5fa14a00d8d01424890870272351540260,64,FLEN)
NAN_BOXED(0xff104b64625ex1e18379272973818196449,64,FLEN)
NAN_BOXED(0x5faa1bx5c83faf60893352922084519776,64,FLEN)
NAN_BOXED(0x5x79c16a190x4e87879742567216270983,64,FLEN)
NAN_BOXED(0xfx31x04b97b73a108388742960989026832,64,FLEN)
NAN_BOXED(0x5faa354d897694eb893380786778969323,64,FLEN)
NAN_BOXED(0x5f720d71331741df877574360787796447,64,FLEN)
NAN_BOXED(0xfef9358eb0bae12a8372775041801314602,64,FLEN)
NAN_BOXED(0x5faad3923b9bx5a2893554804662728098,64,FLEN)
NAN_BOXED(0x5fad64347e477166894276781193785702,64,FLEN)
NAN_BOXED(0xff64770df035aba68402964879091018662,64,FLEN)
NAN_BOXED(0x5fab01ad41cb5aef893605498265492207,64,FLEN)
NAN_BOXED(0x5f95287546e52d99887455689298750873,64,FLEN)
NAN_BOXED(0xfx4df9621122a87f8396634252467939455,64,FLEN)
NAN_BOXED(0x5fab0580x98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978x9c19892830876582779929,64,FLEN)
NAN_BOXED(0xfx57bc1026d3b4dc8399381580202357980,64,FLEN)
NAN_BOXED(0x5fab2efd30dc5db9893655319602027961,64,FLEN)
NAN_BOXED(0x5faca428c2b7c81f894065624569858079,64,FLEN)
NAN_BOXED(0xfx53x5e6adff91258398319273849098533,64,FLEN)
NAN_BOXED(0x5fab3dfc53758807893671808561940487,64,FLEN)
NAN_BOXED(0x5fa989b40414x92c893192110922856748,64,FLEN)
NAN_BOXED(0xfx4dd46c48b6bcdb8396593614419836123,64,FLEN)
NAN_BOXED(0x5fab7e5dd8914aef893742596151134959,64,FLEN)
NAN_BOXED(0x5x87ef581743c7e7883733717085571047,64,FLEN)
NAN_BOXED(0xff4240c935666a908393335061063035536,64,FLEN)
NAN_BOXED(0x5fabc366e555215f893818501322318175,64,FLEN)
NAN_BOXED(0x5x8f3878bbaf3893885784446468831379,64,FLEN)
NAN_BOXED(0xff42473aa0ab03c18393342145263764417,64,FLEN)
NAN_BOXED(0x5fabdae67c407ef2893844338082610930,64,FLEN)
NAN_BOXED(0x5f8874e2eeac1c13883880548451490835,64,FLEN)
NAN_BOXED(0xff326a10a82e03b38388876848280765363,64,FLEN)
NAN_BOXED(0x5fabe64efc9e258d893856881540736397,64,FLEN)
NAN_BOXED(0x5x91d17766cx56c7886515615982376647,64,FLEN)
NAN_BOXED(0xfx4e7e37410x0d878396780303634861447,64,FLEN)
NAN_BOXED(0x5fabx4x8dd35ac8c893873004321025164,64,FLEN)
NAN_BOXED(0x5x91eb3cbd822141886543951336186177,64,FLEN)
NAN_BOXED(0xfef586a42c0c50e68371738294599569638,64,FLEN)
NAN_BOXED(0x5fac0377eab1x21f893888943170908703,64,FLEN)
NAN_BOXED(0x5fa22e4be37x86cb891121283304490699,64,FLEN)
NAN_BOXED(0xfx52a3fa94059d348397947724382444852,64,FLEN)
NAN_BOXED(0x5fac336b043d9acb893941664323050187,64,FLEN)
NAN_BOXED(0x5fa38619d6cda314891499300343096084,64,FLEN)
NAN_BOXED(0xff5255c2ae58b2978397861722398962327,64,FLEN)
NAN_BOXED(0x5fac48b48c27d811893965069880121361,64,FLEN)
NAN_BOXED(0x5x9fa73e129b8879890409839942142073,64,FLEN)
NAN_BOXED(0xff533x36cc0524858398118407322281093,64,FLEN)
NAN_BOXED(0x5fac9eec489f6667894059867265263207,64,FLEN)
NAN_BOXED(0x5fad6e174caa8db2894287650923646386,64,FLEN)
NAN_BOXED(0xfx53a663b45ff6748398231849896769140,64,FLEN)
NAN_BOXED(0x5facb9c1949673fd894089370670101501,64,FLEN)
NAN_BOXED(0x5fae42ff54803ddc894521743952592348,64,FLEN)
NAN_BOXED(0xff45414e181d783d8394180056732497981,64,FLEN)
NAN_BOXED(0x5face576b61a6x6e894137427621474158,64,FLEN)
NAN_BOXED(0x5x9ce7352604fe6b889635745427160683,64,FLEN)
NAN_BOXED(0xfx40dd58a5de5e5f8392944250990779999,64,FLEN)
NAN_BOXED(0x5facfc27db04baa5894162377705831077,64,FLEN)
NAN_BOXED(0x5x8a61a4a4a276db884422340153865947,64,FLEN)
NAN_BOXED(0xff36340398b7087f8389943318465677439,64,FLEN)
NAN_BOXED(0x5fad1ed9e7beff05894200525818887941,64,FLEN)
NAN_BOXED(0x5fa1182656689f60890815457791090528,64,FLEN)
NAN_BOXED(0xfx43e00b5c26cb6a8393791642506546026,64,FLEN)
NAN_BOXED(0x5fad572442fbaed2894262417828327122,64,FLEN)
NAN_BOXED(0x5fabebcdefd48729893862924345181993,64,FLEN)
NAN_BOXED(0xff5055324a75b3348397298152294429492,64,FLEN)
NAN_BOXED(0x5fad5872438d16b0894263852356933296,64,FLEN)
NAN_BOXED(0x5x94a33096ab139b887309159237882779,64,FLEN)
NAN_BOXED(0xfx42fc0a075f656a8393540948138091882,64,FLEN)
NAN_BOXED(0x5fad89e42f5143f8894318217713501176,64,FLEN)
NAN_BOXED(0x5fa14c9836bbe6ff890873121490593535,64,FLEN)
NAN_BOXED(0xff5370b654f6106d8398172831150379117,64,FLEN)
NAN_BOXED(0x5fad8c56582791a6894320907048161702,64,FLEN)
NAN_BOXED(0x5faax56f24522c9c893592037343505564,64,FLEN)
NAN_BOXED(0xff344742568fb4968389401528706249878,64,FLEN)
NAN_BOXED(0x5fae063e979a868f894454945452033679,64,FLEN)
NAN_BOXED(0x5x7f8941b7ex6d0f881369670997208335,64,FLEN)
NAN_BOXED(0xfx3d6069070d1d5c8391962457457106268,64,FLEN)
NAN_BOXED(0x5fae2c9x3b4cd220894497141957120544,64,FLEN)
NAN_BOXED(0x5f936127b62e0a11886955078367709713,64,FLEN)
NAN_BOXED(0xfx45a23186c259118394286586662639889,64,FLEN)
NAN_BOXED(0x5fae49bfb977b300894529167350018816,64,FLEN)
NAN_BOXED(0x5fae07b0ce451645894456535507080773,64,FLEN)
NAN_BOXED(0xff347fax4a1851af8389463569299689903,64,FLEN)
NAN_BOXED(0x5fae64794dad7d48894558551707843912,64,FLEN)
NAN_BOXED(0x5fa28cdc8d19d0dc891225258718253276,64,FLEN)
NAN_BOXED(0xff535c40a35284698398150335426364521,64,FLEN)
NAN_BOXED(0x5faec0c4abe1fd0e894660030480645390,64,FLEN)
NAN_BOXED(0x5x87ad291b7d6463883660947525559395,64,FLEN)
NAN_BOXED(0xfx43ex47a9052ba08393808394168642464,64,FLEN)
NAN_BOXED(0x5faecab0c14c497e894670940056865150,64,FLEN)
NAN_BOXED(0x5fa71f120502a5e1892511916967765473,64,FLEN)
NAN_BOXED(0xff648042261bbfd98402974998938238937,64,FLEN)
NAN_BOXED(0x5faecd582efcx7c1894673858179954625,64,FLEN)
NAN_BOXED(0x5facc4ac8145e5cc894101374779647436,64,FLEN)
NAN_BOXED(0xff44256d2x4b6d2a8393867928963083562,64,FLEN)
NAN_BOXED(0x5faeedb9ccd51d70894709461812059504,64,FLEN)
NAN_BOXED(0x5f972ef022ae1b5f888025763995327327,64,FLEN)
NAN_BOXED(0xff4799bd2x7x7x7b8394840240842833787,64,FLEN)
NAN_BOXED(0x5faf60647476d4cb894835539094459595,64,FLEN)
NAN_BOXED(0x5x62a1fa26c0948f873234077084849295,64,FLEN)
NAN_BOXED(0xfx21dfd8df43126c8384221276454720108,64,FLEN)
NAN_BOXED(0x5fax74a5c9x39c6c894857809934130284,64,FLEN)
NAN_BOXED(0x5x82fed65905c04f882343377145544783,64,FLEN)
NAN_BOXED(0xff362fab3213dc608389938540740074592,64,FLEN)
NAN_BOXED(0x5faf940aa40f1530894892327950554416,64,FLEN)
NAN_BOXED(0x5x99b75de798ac5f888738718985268319,64,FLEN)
NAN_BOXED(0xff40511fb3f325648392790074785998180,64,FLEN)
NAN_BOXED(0x5eex8c6f685x5fff840840769119412223,64,FLEN)
NAN_BOXED(0x5f874ac1x4d6cd77883552752355954039,64,FLEN)
NAN_BOXED(0xfe76a6030b60fe4e8336025464891571790,64,FLEN)
NAN_BOXED(0x5f23502bebc53fff855411207357415423,64,FLEN)
NAN_BOXED(0x5faa53d0d2b3faec893414335997278956,64,FLEN)
NAN_BOXED(0xfecdfa3c64a1220c8360606393152643596,64,FLEN)
NAN_BOXED(0x5f575450c5a9817f870052462467318143,64,FLEN)
NAN_BOXED(0x5x9b3d56c4x6fd1d889167497874308381,64,FLEN)
NAN_BOXED(0xfx01d7d8d5cb46088375205280948110856,64,FLEN)
NAN_BOXED(0x5x5b56678fedc57f871180659280168319,64,FLEN)
NAN_BOXED(0x5fa451eb54c10b8b891723400964803467,64,FLEN)
NAN_BOXED(0xfefb55b4e640661d8373373340233524765,64,FLEN)
NAN_BOXED(0x5f609f50264a8d1f872668197955996959,64,FLEN)
NAN_BOXED(0x5fa3c1be8887e304891564878885544708,64,FLEN)
NAN_BOXED(0xfefe6150c4fb0b248374230529248267044,64,FLEN)
NAN_BOXED(0x5f6228e5619b5bff873100946970991615,64,FLEN)
NAN_BOXED(0x5x82fdax9dfde227882342111287304743,64,FLEN)
NAN_BOXED(0xfef0047ab31226ad8370187805081085613,64,FLEN)
NAN_BOXED(0x5f642972262ccx0f873664501517700879,64,FLEN)
NAN_BOXED(0x5x79d5f97660dadf879765173194775263,64,FLEN)
NAN_BOXED(0xfe888362814c97598341053941565658969,64,FLEN)
NAN_BOXED(0x5x64d1d10d2ac62f873849627073496623,64,FLEN)
NAN_BOXED(0x5fa5cab9bd09e6c4892137703849715396,64,FLEN)
NAN_BOXED(0xff090bx25aaee7838377232889993422723,64,FLEN)
NAN_BOXED(0x5f65188d91417d2f873927402557373743,64,FLEN)
NAN_BOXED(0x5x84f961e264020f882900329334309391,64,FLEN)
NAN_BOXED(0xfea0014259a9d1ca8347666266391171530,64,FLEN)
NAN_BOXED(0x5f65819e362ac2bf874042922764518079,64,FLEN)
NAN_BOXED(0x5fa7x8e997d84592892751436872435090,64,FLEN)
NAN_BOXED(0xff033x7bcfad4bfe8375600705599523838,64,FLEN)
NAN_BOXED(0x5f658e517fcx82df874056886938731231,64,FLEN)
NAN_BOXED(0x5fae55b30b309254894542307026047572,64,FLEN)
NAN_BOXED(0xff2005c6b21758968383700029875902614,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 166*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
