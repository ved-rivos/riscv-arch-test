
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 == rs3 == rd, rs1==x10, rs2==x10, rs3==x10, rd==x10,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412x93d91b86f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x067317415fx93 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384x7bbd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x10; op2:x10; op3:x10; dest:x10; op1val:0x7fa412x93d91b86f; op2val:0x7fa412x93d91b86f;
op3val:0x7fa412x93d91b86f; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x10, x10, x10, x10, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rd == rs2 == rs3 != rs1, rs1==x14, rs2==x11, rs3==x11, rd==x11,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412x93d91b86f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x067317415fx93 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384x7bbd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x14; op2:x11; op3:x11; dest:x11; op1val:0x7fa412x93d91b86f; op2val:0x401067317415fx93;
op3val:0x401067317415fx93; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x11, x14, x11, x11, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd == rs3 != rs2, rs1==x31, rs2==x14, rs3==x31, rd==x31,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412x93d91b86f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x067317415fx93 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384x7bbd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x31; op2:x14; op3:x31; dest:x31; op1val:0x7fa412x93d91b86f; op2val:0x401067317415fx93;
op3val:0x7fa412x93d91b86f; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x31, x14, x31, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x22, rs2==x23, rs3==x1, rd==x29,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412x93d91b86f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x067317415fx93 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384x7bbd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x22; op2:x23; op3:x1; dest:x29; op1val:0x7fa412x93d91b86f; op2val:0x401067317415fx93;
op3val:0x7fe56206384x7bbd; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x29, x22, x23, x1, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x6, rs2==x7, rs3==x6, rd==x21,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412x93d91b86f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x067317415fx93 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384x7bbd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x6; op2:x7; op3:x6; dest:x21; op1val:0x7fa412x93d91b86f; op2val:0x401067317415fx93;
op3val:0x7fa412x93d91b86f; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x21, x6, x7, x6, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==x21, rs2==x21, rs3==x21, rd==x4,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x43bdaeeb947bf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x21; op2:x21; op3:x21; dest:x4; op1val:0x7fae840b679dda5f; op2val:0x7fae840b679dda5f;
op3val:0x7fae840b679dda5f; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x4, x21, x21, x21, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x24, rs2==x9, rs3==x9, rd==x3,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x43bdaeeb947bf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x24; op2:x9; op3:x9; dest:x3; op1val:0x7fae840b679dda5f; op2val:0x40343bdaeeb947bf;
op3val:0x40343bdaeeb947bf; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x3, x24, x9, x9, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x7, rs2==x18, rs3==x14, rd==x18,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x43bdaeeb947bf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x7; op2:x18; op3:x14; dest:x18; op1val:0x7fae840b679dda5f; op2val:0x40343bdaeeb947bf;
op3val:0x7fca5cdae7f1504f; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x18, x7, x18, x14, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rd != rs3, rs1==x16, rs2==x16, rs3==x8, rd==x16,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x43bdaeeb947bf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x16; op2:x16; op3:x8; dest:x16; op1val:0x7fae840b679dda5f; op2val:0x7fae840b679dda5f;
op3val:0x7fca5cdae7f1504f; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x16, x16, x16, x8, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x8, rs2==x8, rs3==x22, rd==x5,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x43bdaeeb947bf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x8; op2:x8; op3:x22; dest:x5; op1val:0x7fae840b679dda5f; op2val:0x7fae840b679dda5f;
op3val:0x7fca5cdae7f1504f; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x5, x8, x8, x22, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x25, rs2==x15, rs3==x24, rd==x25,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3c2df63221709 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x25; op2:x15; op3:x24; dest:x25; op1val:0x7fbfb17c3e518207; op2val:0x4023c2df63221709;
op3val:0x7fcc93182a170b2f; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x25, x25, x15, x24, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x23, rs2==x17, rs3==x0, rd==x0,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3c2df63221709 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x23; op2:x17; op3:x0; dest:x0; op1val:0x7fbfb17c3e518207; op2val:0x4023c2df63221709;
op3val:0x7fcc93182a170b2f; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x0, x23, x17, x0, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x11, rs2==x6, rs3==x13, rd==x14,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3c2df63221709 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x11; op2:x6; op3:x13; dest:x14; op1val:0x7fbfb17c3e518207; op2val:0x4023c2df63221709;
op3val:0x7fcc93182a170b2f; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x14, x11, x6, x13, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x20, rs2==x5, rs3==x12, rd==x19,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3c2df63221709 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x20; op2:x5; op3:x12; dest:x19; op1val:0x7fbfb17c3e518207; op2val:0x4023c2df63221709;
op3val:0x7fcc93182a170b2f; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x19, x20, x5, x12, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x29, rs2==x25, rs3==x5, rd==x1,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3c2df63221709 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x29; op2:x25; op3:x5; dest:x1; op1val:0x7fbfb17c3e518207; op2val:0x4023c2df63221709;
op3val:0x7fcc93182a170b2f; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x1, x29, x25, x5, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x0, rs2==x31, rs3==x27, rd==x12,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x276f358a6a63b and fs2 == 0 and fe2 == 0x401 and fm2 == 0xefeb06f55996a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe27a1d244ecc7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x0; op2:x31; op3:x27; dest:x12; op1val:0x7fc276f358a6a63b; op2val:0x401efeb06f55996a;
op3val:0x7fbe27a1d244ecc7; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x12, x0, x31, x27, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x28, rs2==x19, rs3==x15, rd==x22,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x276f358a6a63b and fs2 == 0 and fe2 == 0x401 and fm2 == 0xefeb06f55996a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe27a1d244ecc7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x28; op2:x19; op3:x15; dest:x22; op1val:0x7fc276f358a6a63b; op2val:0x401efeb06f55996a;
op3val:0x7fbe27a1d244ecc7; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x22, x28, x19, x15, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x26, rs2==x30, rs3==x19, rd==x8,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x276f358a6a63b and fs2 == 0 and fe2 == 0x401 and fm2 == 0xefeb06f55996a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe27a1d244ecc7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x26; op2:x30; op3:x19; dest:x8; op1val:0x7fc276f358a6a63b; op2val:0x401efeb06f55996a;
op3val:0x7fbe27a1d244ecc7; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x8, x26, x30, x19, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x13, rs2==x4, rs3==x7, rd==x20,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x276f358a6a63b and fs2 == 0 and fe2 == 0x401 and fm2 == 0xefeb06f55996a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe27a1d244ecc7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x13; op2:x4; op3:x7; dest:x20; op1val:0x7fc276f358a6a63b; op2val:0x401efeb06f55996a;
op3val:0x7fbe27a1d244ecc7; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x20, x13, x4, x7, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x12, rs2==x26, rs3==x20, rd==x24,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x276f358a6a63b and fs2 == 0 and fe2 == 0x401 and fm2 == 0xefeb06f55996a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe27a1d244ecc7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x12; op2:x26; op3:x20; dest:x24; op1val:0x7fc276f358a6a63b; op2val:0x401efeb06f55996a;
op3val:0x7fbe27a1d244ecc7; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x24, x12, x26, x20, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x18, rs2==x24, rs3==x2, rd==x28,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3743aaeeeacbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0xcca57efdd7123 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xx4b2be35fa361 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x18; op2:x24; op3:x2; dest:x28; op1val:0x7fc3743aaeeeacbb; op2val:0x400cca57efdd7123;
op3val:0x7fdx4b2be35fa361; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x28, x18, x24, x2, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x30, rs2==x2, rs3==x16, rd==x26,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3743aaeeeacbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0xcca57efdd7123 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xx4b2be35fa361 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x2; op3:x16; dest:x26; op1val:0x7fc3743aaeeeacbb; op2val:0x400cca57efdd7123;
op3val:0x7fdx4b2be35fa361; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x26, x30, x2, x16, dyn, 32, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==x5, rs2==x3, rs3==x17, rd==x2,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3743aaeeeacbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0xcca57efdd7123 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xx4b2be35fa361 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x5; op2:x3; op3:x17; dest:x2; op1val:0x7fc3743aaeeeacbb; op2val:0x400cca57efdd7123;
op3val:0x7fdx4b2be35fa361; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x2, x5, x3, x17, dyn, 64, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==x9, rs2==x29, rs3==x28, rd==x6,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3743aaeeeacbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0xcca57efdd7123 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xx4b2be35fa361 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x9; op2:x29; op3:x28; dest:x6; op1val:0x7fc3743aaeeeacbb; op2val:0x400cca57efdd7123;
op3val:0x7fdx4b2be35fa361; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x6, x9, x29, x28, dyn, 96, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==x15, rs2==x20, rs3==x23, rd==x13,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3743aaeeeacbb and fs2 == 0 and fe2 == 0x400 and fm2 == 0xcca57efdd7123 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xx4b2be35fa361 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x15; op2:x20; op3:x23; dest:x13; op1val:0x7fc3743aaeeeacbb; op2val:0x400cca57efdd7123;
op3val:0x7fdx4b2be35fa361; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x13, x15, x20, x23, dyn, 128, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==x1, rs2==x12, rs3==x3, rd==x23,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7220ac1a61dbb and fs2 == 0 and fe2 == 0x402 and fm2 == 0x180b1351572b2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29c77f248e9cc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x1; op2:x12; op3:x3; dest:x23; op1val:0x7fc7220ac1a61dbb; op2val:0x402180b1351572b2;
op3val:0x7fe29c77f248e9cc; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x23, x1, x12, x3, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==x19, rs2==x22, rs3==x29, rd==x27,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7220ac1a61dbb and fs2 == 0 and fe2 == 0x402 and fm2 == 0x180b1351572b2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29c77f248e9cc and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x19; op2:x22; op3:x29; dest:x27; op1val:0x7fc7220ac1a61dbb; op2val:0x402180b1351572b2;
op3val:0x7fe29c77f248e9cc; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x27, x19, x22, x29, dyn, 32, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==x4, rs2==x0, rs3==x18, rd==x7,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7220ac1a61dbb and fs2 == 0 and fe2 == 0x402 and fm2 == 0x180b1351572b2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29c77f248e9cc and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x4; op2:x0; op3:x18; dest:x7; op1val:0x7fc7220ac1a61dbb; op2val:0x402180b1351572b2;
op3val:0x7fe29c77f248e9cc; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x7, x4, x0, x18, dyn, 64, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==x27, rs2==x13, rs3==x25, rd==x30,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7220ac1a61dbb and fs2 == 0 and fe2 == 0x402 and fm2 == 0x180b1351572b2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29c77f248e9cc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x27; op2:x13; op3:x25; dest:x30; op1val:0x7fc7220ac1a61dbb; op2val:0x402180b1351572b2;
op3val:0x7fe29c77f248e9cc; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x30, x27, x13, x25, dyn, 96, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==x17, rs2==x27, rs3==x26, rd==x15,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7220ac1a61dbb and fs2 == 0 and fe2 == 0x402 and fm2 == 0x180b1351572b2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29c77f248e9cc and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x17; op2:x27; op3:x26; dest:x15; op1val:0x7fc7220ac1a61dbb; op2val:0x402180b1351572b2;
op3val:0x7fe29c77f248e9cc; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x15, x17, x27, x26, dyn, 128, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==x2, rs2==x28, rs3==x30, rd==x9,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xx3e8dx14f472f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbc3ax8ffb147a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x261add5337480 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x2; op2:x28; op3:x30; dest:x9; op1val:0x7fcx3e8dx14f472f; op2val:0x3ffbc3ax8ffb147a;
op3val:0x7fe261add5337480; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x9, x2, x28, x30, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==x3, rs2==x1, rs3==x4, rd==x17,fs1 == 0 and fe1 == 0x7fc and fm1 == 0xx3e8dx14f472f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbc3ax8ffb147a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x261add5337480 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x3; op2:x1; op3:x4; dest:x17; op1val:0x7fcx3e8dx14f472f; op2val:0x3ffbc3ax8ffb147a;
op3val:0x7fe261add5337480; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x17, x3, x1, x4, dyn, 32, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xx3e8dx14f472f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbc3ax8ffb147a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x261add5337480 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcx3e8dx14f472f; op2val:0x3ffbc3ax8ffb147a;
op3val:0x7fe261add5337480; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xx3e8dx14f472f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbc3ax8ffb147a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x261add5337480 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcx3e8dx14f472f; op2val:0x3ffbc3ax8ffb147a;
op3val:0x7fe261add5337480; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xx3e8dx14f472f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xbc3ax8ffb147a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x261add5337480 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcx3e8dx14f472f; op2val:0x3ffbc3ax8ffb147a;
op3val:0x7fe261add5337480; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3be2a8c7b6829 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x78c997d55ec8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1db506ba5ee9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd3be2a8c7b6829; op2val:0x40178c997d55ec8c;
op3val:0x7fea1db506ba5ee9; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3be2a8c7b6829 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x78c997d55ec8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1db506ba5ee9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd3be2a8c7b6829; op2val:0x40178c997d55ec8c;
op3val:0x7fea1db506ba5ee9; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3be2a8c7b6829 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x78c997d55ec8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1db506ba5ee9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd3be2a8c7b6829; op2val:0x40178c997d55ec8c;
op3val:0x7fea1db506ba5ee9; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3be2a8c7b6829 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x78c997d55ec8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1db506ba5ee9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd3be2a8c7b6829; op2val:0x40178c997d55ec8c;
op3val:0x7fea1db506ba5ee9; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3be2a8c7b6829 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x78c997d55ec8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa1db506ba5ee9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd3be2a8c7b6829; op2val:0x40178c997d55ec8c;
op3val:0x7fea1db506ba5ee9; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x41afcbbb98d77 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x43053bfc8eb47 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bcec3bb19a9d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd41afcbbb98d77; op2val:0x40143053bfc8eb47;
op3val:0x7fe2bcec3bb19a9d; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x41afcbbb98d77 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x43053bfc8eb47 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bcec3bb19a9d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd41afcbbb98d77; op2val:0x40143053bfc8eb47;
op3val:0x7fe2bcec3bb19a9d; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x41afcbbb98d77 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x43053bfc8eb47 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bcec3bb19a9d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd41afcbbb98d77; op2val:0x40143053bfc8eb47;
op3val:0x7fe2bcec3bb19a9d; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x41afcbbb98d77 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x43053bfc8eb47 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bcec3bb19a9d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd41afcbbb98d77; op2val:0x40143053bfc8eb47;
op3val:0x7fe2bcec3bb19a9d; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x41afcbbb98d77 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x43053bfc8eb47 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bcec3bb19a9d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd41afcbbb98d77; op2val:0x40143053bfc8eb47;
op3val:0x7fe2bcec3bb19a9d; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac2863951d7a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdf574ebx75d40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x83a7x9d5e43df and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdac2863951d7a5; op2val:0x3fedf574ebx75d40;
op3val:0x7fe83a7x9d5e43df; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac2863951d7a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdf574ebx75d40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x83a7x9d5e43df and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdac2863951d7a5; op2val:0x3fedf574ebx75d40;
op3val:0x7fe83a7x9d5e43df; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac2863951d7a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdf574ebx75d40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x83a7x9d5e43df and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdac2863951d7a5; op2val:0x3fedf574ebx75d40;
op3val:0x7fe83a7x9d5e43df; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac2863951d7a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdf574ebx75d40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x83a7x9d5e43df and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdac2863951d7a5; op2val:0x3fedf574ebx75d40;
op3val:0x7fe83a7x9d5e43df; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xac2863951d7a5 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xdf574ebx75d40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x83a7x9d5e43df and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdac2863951d7a5; op2val:0x3fedf574ebx75d40;
op3val:0x7fe83a7x9d5e43df; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd00x90ae48549 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6x1d18e62631d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x32x61e9fcc711 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdd00x90ae48549; op2val:0x4006x1d18e62631d;
op3val:0x7fd32x61e9fcc711; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd00x90ae48549 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6x1d18e62631d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x32x61e9fcc711 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdd00x90ae48549; op2val:0x4006x1d18e62631d;
op3val:0x7fd32x61e9fcc711; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd00x90ae48549 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6x1d18e62631d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x32x61e9fcc711 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdd00x90ae48549; op2val:0x4006x1d18e62631d;
op3val:0x7fd32x61e9fcc711; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd00x90ae48549 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6x1d18e62631d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x32x61e9fcc711 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdd00x90ae48549; op2val:0x4006x1d18e62631d;
op3val:0x7fd32x61e9fcc711; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd00x90ae48549 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6x1d18e62631d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x32x61e9fcc711 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdd00x90ae48549; op2val:0x4006x1d18e62631d;
op3val:0x7fd32x61e9fcc711; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe57a08d938ac9 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5x69f169ee7fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x540bc20428x59 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde57a08d938ac9; op2val:0xbfd5x69f169ee7fb;
op3val:0x7fe540bc20428x59; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe57a08d938ac9 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5x69f169ee7fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x540bc20428x59 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde57a08d938ac9; op2val:0xbfd5x69f169ee7fb;
op3val:0x7fe540bc20428x59; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe57a08d938ac9 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5x69f169ee7fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x540bc20428x59 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde57a08d938ac9; op2val:0xbfd5x69f169ee7fb;
op3val:0x7fe540bc20428x59; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe57a08d938ac9 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5x69f169ee7fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x540bc20428x59 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde57a08d938ac9; op2val:0xbfd5x69f169ee7fb;
op3val:0x7fe540bc20428x59; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe57a08d938ac9 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5x69f169ee7fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x540bc20428x59 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde57a08d938ac9; op2val:0xbfd5x69f169ee7fb;
op3val:0x7fe540bc20428x59; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ce68e5faffc7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca4d8febfx58c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc0120595fb816 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0ce68e5faffc7; op2val:0x3ffca4d8febfx58c;
op3val:0x7fec0120595fb816; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ce68e5faffc7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca4d8febfx58c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc0120595fb816 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0ce68e5faffc7; op2val:0x3ffca4d8febfx58c;
op3val:0x7fec0120595fb816; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ce68e5faffc7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca4d8febfx58c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc0120595fb816 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0ce68e5faffc7; op2val:0x3ffca4d8febfx58c;
op3val:0x7fec0120595fb816; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ce68e5faffc7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca4d8febfx58c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc0120595fb816 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0ce68e5faffc7; op2val:0x3ffca4d8febfx58c;
op3val:0x7fec0120595fb816; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ce68e5faffc7 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xca4d8febfx58c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc0120595fb816 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0ce68e5faffc7; op2val:0x3ffca4d8febfx58c;
op3val:0x7fec0120595fb816; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1871x66d9338f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xx0b78c180a93e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x012f0320x4e17 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1871x66d9338f; op2val:0x3ffx0b78c180a93e;
op3val:0x7fb012f0320x4e17; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1871x66d9338f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xx0b78c180a93e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x012f0320x4e17 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1871x66d9338f; op2val:0x3ffx0b78c180a93e;
op3val:0x7fb012f0320x4e17; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1871x66d9338f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xx0b78c180a93e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x012f0320x4e17 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1871x66d9338f; op2val:0x3ffx0b78c180a93e;
op3val:0x7fb012f0320x4e17; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1871x66d9338f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xx0b78c180a93e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x012f0320x4e17 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1871x66d9338f; op2val:0x3ffx0b78c180a93e;
op3val:0x7fb012f0320x4e17; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1871x66d9338f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xx0b78c180a93e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x012f0320x4e17 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1871x66d9338f; op2val:0x3ffx0b78c180a93e;
op3val:0x7fb012f0320x4e17; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x277a09a57982a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x35c7bx09cb209 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9633680658x13 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe277a09a57982a; op2val:0x40035c7bx09cb209;
op3val:0x7fd9633680658x13; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x277a09a57982a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x35c7bx09cb209 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9633680658x13 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe277a09a57982a; op2val:0x40035c7bx09cb209;
op3val:0x7fd9633680658x13; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x277a09a57982a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x35c7bx09cb209 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9633680658x13 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe277a09a57982a; op2val:0x40035c7bx09cb209;
op3val:0x7fd9633680658x13; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x277a09a57982a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x35c7bx09cb209 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9633680658x13 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe277a09a57982a; op2val:0x40035c7bx09cb209;
op3val:0x7fd9633680658x13; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x277a09a57982a and fs2 == 0 and fe2 == 0x400 and fm2 == 0x35c7bx09cb209 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9633680658x13 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe277a09a57982a; op2val:0x40035c7bx09cb209;
op3val:0x7fd9633680658x13; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28e8063300472 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e213373bb818 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd3277d88cd395 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe28e8063300472; op2val:0xbfe8e213373bb818;
op3val:0x7fdd3277d88cd395; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28e8063300472 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e213373bb818 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd3277d88cd395 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe28e8063300472; op2val:0xbfe8e213373bb818;
op3val:0x7fdd3277d88cd395; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28e8063300472 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e213373bb818 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd3277d88cd395 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe28e8063300472; op2val:0xbfe8e213373bb818;
op3val:0x7fdd3277d88cd395; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28e8063300472 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e213373bb818 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd3277d88cd395 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe28e8063300472; op2val:0xbfe8e213373bb818;
op3val:0x7fdd3277d88cd395; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x28e8063300472 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e213373bb818 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd3277d88cd395 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe28e8063300472; op2val:0xbfe8e213373bb818;
op3val:0x7fdd3277d88cd395; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x413eed654fd22 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x8d5807d9fc155 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe53a1b43x58c2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe413eed654fd22; op2val:0x4008d5807d9fc155;
op3val:0x7fee53a1b43x58c2; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x413eed654fd22 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x8d5807d9fc155 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe53a1b43x58c2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe413eed654fd22; op2val:0x4008d5807d9fc155;
op3val:0x7fee53a1b43x58c2; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x413eed654fd22 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x8d5807d9fc155 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe53a1b43x58c2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe413eed654fd22; op2val:0x4008d5807d9fc155;
op3val:0x7fee53a1b43x58c2; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x413eed654fd22 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x8d5807d9fc155 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe53a1b43x58c2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe413eed654fd22; op2val:0x4008d5807d9fc155;
op3val:0x7fee53a1b43x58c2; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x413eed654fd22 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x8d5807d9fc155 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe53a1b43x58c2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe413eed654fd22; op2val:0x4008d5807d9fc155;
op3val:0x7fee53a1b43x58c2; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x471faa8c06142 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x12x23fcf9153d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d55c80c789ad and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe471faa8c06142; op2val:0x40012x23fcf9153d;
op3val:0x7fd7d55c80c789ad; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x471faa8c06142 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x12x23fcf9153d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d55c80c789ad and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe471faa8c06142; op2val:0x40012x23fcf9153d;
op3val:0x7fd7d55c80c789ad; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x471faa8c06142 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x12x23fcf9153d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d55c80c789ad and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe471faa8c06142; op2val:0x40012x23fcf9153d;
op3val:0x7fd7d55c80c789ad; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x471faa8c06142 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x12x23fcf9153d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d55c80c789ad and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe471faa8c06142; op2val:0x40012x23fcf9153d;
op3val:0x7fd7d55c80c789ad; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x471faa8c06142 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x12x23fcf9153d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7d55c80c789ad and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe471faa8c06142; op2val:0x40012x23fcf9153d;
op3val:0x7fd7d55c80c789ad; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c5d62a207b44 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0c90b6c012e0e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb5dac1e37c3b7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe5c5d62a207b44; op2val:0x4000c90b6c012e0e;
op3val:0x7fdb5dac1e37c3b7; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c5d62a207b44 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0c90b6c012e0e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb5dac1e37c3b7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe5c5d62a207b44; op2val:0x4000c90b6c012e0e;
op3val:0x7fdb5dac1e37c3b7; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c5d62a207b44 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0c90b6c012e0e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb5dac1e37c3b7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe5c5d62a207b44; op2val:0x4000c90b6c012e0e;
op3val:0x7fdb5dac1e37c3b7; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c5d62a207b44 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0c90b6c012e0e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb5dac1e37c3b7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe5c5d62a207b44; op2val:0x4000c90b6c012e0e;
op3val:0x7fdb5dac1e37c3b7; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5c5d62a207b44 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0c90b6c012e0e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb5dac1e37c3b7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe5c5d62a207b44; op2val:0x4000c90b6c012e0e;
op3val:0x7fdb5dac1e37c3b7; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63fdc11669528 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdc0a4d27bf805 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30513x9fc9850 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe63fdc11669528; op2val:0x3ffdc0a4d27bf805;
op3val:0x7fe30513x9fc9850; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63fdc11669528 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdc0a4d27bf805 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30513x9fc9850 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe63fdc11669528; op2val:0x3ffdc0a4d27bf805;
op3val:0x7fe30513x9fc9850; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63fdc11669528 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdc0a4d27bf805 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30513x9fc9850 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe63fdc11669528; op2val:0x3ffdc0a4d27bf805;
op3val:0x7fe30513x9fc9850; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63fdc11669528 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdc0a4d27bf805 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30513x9fc9850 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe63fdc11669528; op2val:0x3ffdc0a4d27bf805;
op3val:0x7fe30513x9fc9850; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63fdc11669528 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdc0a4d27bf805 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x30513x9fc9850 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe63fdc11669528; op2val:0x3ffdc0a4d27bf805;
op3val:0x7fe30513x9fc9850; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7579da5cb9b2f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x2e85b9ad40a6a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x26d9284dx25e5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7579da5cb9b2f; op2val:0x3fd2e85b9ad40a6a;
op3val:0x7fd26d9284dx25e5; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7579da5cb9b2f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x2e85b9ad40a6a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x26d9284dx25e5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7579da5cb9b2f; op2val:0x3fd2e85b9ad40a6a;
op3val:0x7fd26d9284dx25e5; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7579da5cb9b2f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x2e85b9ad40a6a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x26d9284dx25e5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7579da5cb9b2f; op2val:0x3fd2e85b9ad40a6a;
op3val:0x7fd26d9284dx25e5; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7579da5cb9b2f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x2e85b9ad40a6a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x26d9284dx25e5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7579da5cb9b2f; op2val:0x3fd2e85b9ad40a6a;
op3val:0x7fd26d9284dx25e5; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7579da5cb9b2f and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x2e85b9ad40a6a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x26d9284dx25e5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7579da5cb9b2f; op2val:0x3fd2e85b9ad40a6a;
op3val:0x7fd26d9284dx25e5; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8775d523b7834 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x69d4e18a7261d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2563a7f28084c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8775d523b7834; op2val:0x40169d4e18a7261d;
op3val:0x7fe2563a7f28084c; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8775d523b7834 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x69d4e18a7261d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2563a7f28084c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8775d523b7834; op2val:0x40169d4e18a7261d;
op3val:0x7fe2563a7f28084c; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8775d523b7834 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x69d4e18a7261d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2563a7f28084c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8775d523b7834; op2val:0x40169d4e18a7261d;
op3val:0x7fe2563a7f28084c; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8775d523b7834 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x69d4e18a7261d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2563a7f28084c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8775d523b7834; op2val:0x40169d4e18a7261d;
op3val:0x7fe2563a7f28084c; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8775d523b7834 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x69d4e18a7261d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2563a7f28084c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8775d523b7834; op2val:0x40169d4e18a7261d;
op3val:0x7fe2563a7f28084c; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96b8e84b814c5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x499ed92a71021 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65e29931e8ba7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe96b8e84b814c5; op2val:0x3ff499ed92a71021;
op3val:0x7fe65e29931e8ba7; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96b8e84b814c5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x499ed92a71021 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65e29931e8ba7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe96b8e84b814c5; op2val:0x3ff499ed92a71021;
op3val:0x7fe65e29931e8ba7; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96b8e84b814c5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x499ed92a71021 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65e29931e8ba7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe96b8e84b814c5; op2val:0x3ff499ed92a71021;
op3val:0x7fe65e29931e8ba7; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96b8e84b814c5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x499ed92a71021 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65e29931e8ba7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe96b8e84b814c5; op2val:0x3ff499ed92a71021;
op3val:0x7fe65e29931e8ba7; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x96b8e84b814c5 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x499ed92a71021 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65e29931e8ba7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe96b8e84b814c5; op2val:0x3ff499ed92a71021;
op3val:0x7fe65e29931e8ba7; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae1041c5fd79f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8b6x1eaac1afa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe3ad3d9146ax5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feae1041c5fd79f; op2val:0x4018b6x1eaac1afa;
op3val:0x7fee3ad3d9146ax5; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae1041c5fd79f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8b6x1eaac1afa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe3ad3d9146ax5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feae1041c5fd79f; op2val:0x4018b6x1eaac1afa;
op3val:0x7fee3ad3d9146ax5; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae1041c5fd79f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8b6x1eaac1afa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe3ad3d9146ax5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feae1041c5fd79f; op2val:0x4018b6x1eaac1afa;
op3val:0x7fee3ad3d9146ax5; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae1041c5fd79f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8b6x1eaac1afa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe3ad3d9146ax5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feae1041c5fd79f; op2val:0x4018b6x1eaac1afa;
op3val:0x7fee3ad3d9146ax5; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xae1041c5fd79f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x8b6x1eaac1afa and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe3ad3d9146ax5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feae1041c5fd79f; op2val:0x4018b6x1eaac1afa;
op3val:0x7fee3ad3d9146ax5; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7892d8885ex9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80918d02bc012 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x288f5635a6591 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb7892d8885ex9; op2val:0x3ff80918d02bc012;
op3val:0x7fd288f5635a6591; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7892d8885ex9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80918d02bc012 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x288f5635a6591 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb7892d8885ex9; op2val:0x3ff80918d02bc012;
op3val:0x7fd288f5635a6591; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7892d8885ex9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80918d02bc012 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x288f5635a6591 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb7892d8885ex9; op2val:0x3ff80918d02bc012;
op3val:0x7fd288f5635a6591; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7892d8885ex9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80918d02bc012 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x288f5635a6591 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb7892d8885ex9; op2val:0x3ff80918d02bc012;
op3val:0x7fd288f5635a6591; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb7892d8885ex9 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x80918d02bc012 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x288f5635a6591 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb7892d8885ex9; op2val:0x3ff80918d02bc012;
op3val:0x7fd288f5635a6591; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc03ea0b45fe6a and fs2 == 1 and fe2 == 0x401 and fm2 == 0x261266080836e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4147072b89211 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec03ea0b45fe6a; op2val:0xc01261266080836e;
op3val:0x7fd4147072b89211; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc03ea0b45fe6a and fs2 == 1 and fe2 == 0x401 and fm2 == 0x261266080836e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4147072b89211 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec03ea0b45fe6a; op2val:0xc01261266080836e;
op3val:0x7fd4147072b89211; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc03ea0b45fe6a and fs2 == 1 and fe2 == 0x401 and fm2 == 0x261266080836e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4147072b89211 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec03ea0b45fe6a; op2val:0xc01261266080836e;
op3val:0x7fd4147072b89211; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc03ea0b45fe6a and fs2 == 1 and fe2 == 0x401 and fm2 == 0x261266080836e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4147072b89211 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec03ea0b45fe6a; op2val:0xc01261266080836e;
op3val:0x7fd4147072b89211; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc03ea0b45fe6a and fs2 == 1 and fe2 == 0x401 and fm2 == 0x261266080836e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4147072b89211 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec03ea0b45fe6a; op2val:0xc01261266080836e;
op3val:0x7fd4147072b89211; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx3d7b58e26345 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x127116x8cx85d and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7d9ax63a065bf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex3d7b58e26345; op2val:0x3ff127116x8cx85d;
op3val:0x7fa7d9ax63a065bf; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx3d7b58e26345 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x127116x8cx85d and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7d9ax63a065bf and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex3d7b58e26345; op2val:0x3ff127116x8cx85d;
op3val:0x7fa7d9ax63a065bf; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx3d7b58e26345 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x127116x8cx85d and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7d9ax63a065bf and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex3d7b58e26345; op2val:0x3ff127116x8cx85d;
op3val:0x7fa7d9ax63a065bf; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx3d7b58e26345 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x127116x8cx85d and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7d9ax63a065bf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex3d7b58e26345; op2val:0x3ff127116x8cx85d;
op3val:0x7fa7d9ax63a065bf; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx3d7b58e26345 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x127116x8cx85d and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7d9ax63a065bf and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex3d7b58e26345; op2val:0x3ff127116x8cx85d;
op3val:0x7fa7d9ax63a065bf; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx5d97a44ax52a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5597e9755718f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe398f1061c0ef and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex5d97a44ax52a; op2val:0x3fe5597e9755718f;
op3val:0x7fbe398f1061c0ef; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx5d97a44ax52a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5597e9755718f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe398f1061c0ef and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex5d97a44ax52a; op2val:0x3fe5597e9755718f;
op3val:0x7fbe398f1061c0ef; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx5d97a44ax52a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5597e9755718f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe398f1061c0ef and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex5d97a44ax52a; op2val:0x3fe5597e9755718f;
op3val:0x7fbe398f1061c0ef; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx5d97a44ax52a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5597e9755718f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe398f1061c0ef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex5d97a44ax52a; op2val:0x3fe5597e9755718f;
op3val:0x7fbe398f1061c0ef; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx5d97a44ax52a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x5597e9755718f and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe398f1061c0ef and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex5d97a44ax52a; op2val:0x3fe5597e9755718f;
op3val:0x7fbe398f1061c0ef; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412x93d91b86f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x067317415fx93 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384x7bbd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fa412x93d91b86f; op2val:0x401067317415fx93;
op3val:0x7fe56206384x7bbd; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412x93d91b86f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x067317415fx93 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384x7bbd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fa412x93d91b86f; op2val:0x401067317415fx93;
op3val:0x7fe56206384x7bbd; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412x93d91b86f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x067317415fx93 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384x7bbd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fa412x93d91b86f; op2val:0x401067317415fx93;
op3val:0x7fe56206384x7bbd; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0x412x93d91b86f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x067317415fx93 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x56206384x7bbd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fa412x93d91b86f; op2val:0x401067317415fx93;
op3val:0x7fe56206384x7bbd; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x43bdaeeb947bf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fae840b679dda5f; op2val:0x40343bdaeeb947bf;
op3val:0x7fca5cdae7f1504f; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x43bdaeeb947bf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fae840b679dda5f; op2val:0x40343bdaeeb947bf;
op3val:0x7fca5cdae7f1504f; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x43bdaeeb947bf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fae840b679dda5f; op2val:0x40343bdaeeb947bf;
op3val:0x7fca5cdae7f1504f; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x43bdaeeb947bf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fae840b679dda5f; op2val:0x40343bdaeeb947bf;
op3val:0x7fca5cdae7f1504f; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xe840b679dda5f and fs2 == 0 and fe2 == 0x403 and fm2 == 0x43bdaeeb947bf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xa5cdae7f1504f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fae840b679dda5f; op2val:0x40343bdaeeb947bf;
op3val:0x7fca5cdae7f1504f; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3c2df63221709 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fbfb17c3e518207; op2val:0x4023c2df63221709;
op3val:0x7fcc93182a170b2f; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xfb17c3e518207 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x3c2df63221709 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc93182a170b2f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fbfb17c3e518207; op2val:0x4023c2df63221709;
op3val:0x7fcc93182a170b2f; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 450*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x401067317415ff93616303080153415571,64,FLEN)
NAN_BOXED(0x401067317415ff93616303080153415571,64,FLEN)
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x401067317415ff93616303080153415571,64,FLEN)
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x401067317415ff93616303080153415571,64,FLEN)
NAN_BOXED(0x7fe56206384x7bbd215879991337647037,64,FLEN)
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x401067317415ff93616303080153415571,64,FLEN)
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x40343bdaeeb947bf626388528710371263,64,FLEN)
NAN_BOXED(0x40343bdaeeb947bf626388528710371263,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x40343bdaeeb947bf626388528710371263,64,FLEN)
NAN_BOXED(0x7fca5cdae7f1504f208274483376377935,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x7fca5cdae7f1504f208274483376377935,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x7fca5cdae7f1504f208274483376377935,64,FLEN)
NAN_BOXED(0x7fbfb17c3e518207205271310548173319,64,FLEN)
NAN_BOXED(0x4023c2df63221709621751907308934921,64,FLEN)
NAN_BOXED(0x7fcc93182a170b2f208897070060473135,64,FLEN)
NAN_BOXED(0x7fbfb17c3e518207205271310548173319,64,FLEN)
NAN_BOXED(0x4023c2df63221709621751907308934921,64,FLEN)
NAN_BOXED(0x7fcc93182a170b2f208897070060473135,64,FLEN)
NAN_BOXED(0x7fbfb17c3e518207205271310548173319,64,FLEN)
NAN_BOXED(0x4023c2df63221709621751907308934921,64,FLEN)
NAN_BOXED(0x7fcc93182a170b2f208897070060473135,64,FLEN)
NAN_BOXED(0x7fbfb17c3e518207205271310548173319,64,FLEN)
NAN_BOXED(0x4023c2df63221709621751907308934921,64,FLEN)
NAN_BOXED(0x7fcc93182a170b2f208897070060473135,64,FLEN)
NAN_BOXED(0x7fbfb17c3e518207205271310548173319,64,FLEN)
NAN_BOXED(0x4023c2df63221709621751907308934921,64,FLEN)
NAN_BOXED(0x7fcc93182a170b2f208897070060473135,64,FLEN)
NAN_BOXED(0x7fc276f358a6a63b206051375835162171,64,FLEN)
NAN_BOXED(0x401efeb06f55996a620410301464287594,64,FLEN)
NAN_BOXED(0x7fbe27a1d244ecc7204838264362822855,64,FLEN)
NAN_BOXED(0x7fc276f358a6a63b206051375835162171,64,FLEN)
NAN_BOXED(0x401efeb06f55996a620410301464287594,64,FLEN)
NAN_BOXED(0x7fbe27a1d244ecc7204838264362822855,64,FLEN)
NAN_BOXED(0x7fc276f358a6a63b206051375835162171,64,FLEN)
NAN_BOXED(0x401efeb06f55996a620410301464287594,64,FLEN)
NAN_BOXED(0x7fbe27a1d244ecc7204838264362822855,64,FLEN)
NAN_BOXED(0x7fc276f358a6a63b206051375835162171,64,FLEN)
NAN_BOXED(0x401efeb06f55996a620410301464287594,64,FLEN)
NAN_BOXED(0x7fbe27a1d244ecc7204838264362822855,64,FLEN)
NAN_BOXED(0x7fc276f358a6a63b206051375835162171,64,FLEN)
NAN_BOXED(0x401efeb06f55996a620410301464287594,64,FLEN)
NAN_BOXED(0x7fbe27a1d244ecc7204838264362822855,64,FLEN)
NAN_BOXED(0x7fc3743aaeeeacbb206329858667228347,64,FLEN)
NAN_BOXED(0x400cca57efdd7123615286197183148323,64,FLEN)
NAN_BOXED(0x7fdx4b2be35fa361214166014493696865,64,FLEN)
NAN_BOXED(0x7fc3743aaeeeacbb206329858667228347,64,FLEN)
NAN_BOXED(0x400cca57efdd7123615286197183148323,64,FLEN)
NAN_BOXED(0x7fdx4b2be35fa361214166014493696865,64,FLEN)
NAN_BOXED(0x7fc3743aaeeeacbb206329858667228347,64,FLEN)
NAN_BOXED(0x400cca57efdd7123615286197183148323,64,FLEN)
NAN_BOXED(0x7fdx4b2be35fa361214166014493696865,64,FLEN)
NAN_BOXED(0x7fc3743aaeeeacbb206329858667228347,64,FLEN)
NAN_BOXED(0x400cca57efdd7123615286197183148323,64,FLEN)
NAN_BOXED(0x7fdx4b2be35fa361214166014493696865,64,FLEN)
NAN_BOXED(0x7fc3743aaeeeacbb206329858667228347,64,FLEN)
NAN_BOXED(0x400cca57efdd7123615286197183148323,64,FLEN)
NAN_BOXED(0x7fdx4b2be35fa361214166014493696865,64,FLEN)
NAN_BOXED(0x7fc7220ac1a61dbb207365392776175035,64,FLEN)
NAN_BOXED(0x402180b1351572b2621116191247004338,64,FLEN)
NAN_BOXED(0x7fe29c77f248e9cc215099826533362124,64,FLEN)
NAN_BOXED(0x7fc7220ac1a61dbb207365392776175035,64,FLEN)
NAN_BOXED(0x402180b1351572b2621116191247004338,64,FLEN)
NAN_BOXED(0x7fe29c77f248e9cc215099826533362124,64,FLEN)
NAN_BOXED(0x7fc7220ac1a61dbb207365392776175035,64,FLEN)
NAN_BOXED(0x402180b1351572b2621116191247004338,64,FLEN)
NAN_BOXED(0x7fe29c77f248e9cc215099826533362124,64,FLEN)
NAN_BOXED(0x7fc7220ac1a61dbb207365392776175035,64,FLEN)
NAN_BOXED(0x402180b1351572b2621116191247004338,64,FLEN)
NAN_BOXED(0x7fe29c77f248e9cc215099826533362124,64,FLEN)
NAN_BOXED(0x7fc7220ac1a61dbb207365392776175035,64,FLEN)
NAN_BOXED(0x402180b1351572b2621116191247004338,64,FLEN)
NAN_BOXED(0x7fe29c77f248e9cc215099826533362124,64,FLEN)
NAN_BOXED(0x7fcx3e8dx14f472f209648542355769135,64,FLEN)
NAN_BOXED(0x3ffbc3ax8ffb147a610493802346124410,64,FLEN)
NAN_BOXED(0x7fe261add5337480215035186787611776,64,FLEN)
NAN_BOXED(0x7fcx3e8dx14f472f209648542355769135,64,FLEN)
NAN_BOXED(0x3ffbc3ax8ffb147a610493802346124410,64,FLEN)
NAN_BOXED(0x7fe261add5337480215035186787611776,64,FLEN)
NAN_BOXED(0x7fcx3e8dx14f472f209648542355769135,64,FLEN)
NAN_BOXED(0x3ffbc3ax8ffb147a610493802346124410,64,FLEN)
NAN_BOXED(0x7fe261add5337480215035186787611776,64,FLEN)
NAN_BOXED(0x7fcx3e8dx14f472f209648542355769135,64,FLEN)
NAN_BOXED(0x3ffbc3ax8ffb147a610493802346124410,64,FLEN)
NAN_BOXED(0x7fe261add5337480215035186787611776,64,FLEN)
NAN_BOXED(0x7fcx3e8dx14f472f209648542355769135,64,FLEN)
NAN_BOXED(0x3ffbc3ax8ffb147a610493802346124410,64,FLEN)
NAN_BOXED(0x7fe261add5337480215035186787611776,64,FLEN)
NAN_BOXED(0x7fd3be2a8c7b6829210914752857597993,64,FLEN)
NAN_BOXED(0x40178c997d55ec8c618314533752401036,64,FLEN)
NAN_BOXED(0x7fea1db506ba5ee9217212250706304745,64,FLEN)
NAN_BOXED(0x7fd3be2a8c7b6829210914752857597993,64,FLEN)
NAN_BOXED(0x40178c997d55ec8c618314533752401036,64,FLEN)
NAN_BOXED(0x7fea1db506ba5ee9217212250706304745,64,FLEN)
NAN_BOXED(0x7fd3be2a8c7b6829210914752857597993,64,FLEN)
NAN_BOXED(0x40178c997d55ec8c618314533752401036,64,FLEN)
NAN_BOXED(0x7fea1db506ba5ee9217212250706304745,64,FLEN)
NAN_BOXED(0x7fd3be2a8c7b6829210914752857597993,64,FLEN)
NAN_BOXED(0x40178c997d55ec8c618314533752401036,64,FLEN)
NAN_BOXED(0x7fea1db506ba5ee9217212250706304745,64,FLEN)
NAN_BOXED(0x7fd3be2a8c7b6829210914752857597993,64,FLEN)
NAN_BOXED(0x40178c997d55ec8c618314533752401036,64,FLEN)
NAN_BOXED(0x7fea1db506ba5ee9217212250706304745,64,FLEN)
NAN_BOXED(0x7fd41afcbbb98d77211016810663087479,64,FLEN)
NAN_BOXED(0x40143053bfc8eb47617368654219635527,64,FLEN)
NAN_BOXED(0x7fe2bcec3bb19a9d215135510353255069,64,FLEN)
NAN_BOXED(0x7fd41afcbbb98d77211016810663087479,64,FLEN)
NAN_BOXED(0x40143053bfc8eb47617368654219635527,64,FLEN)
NAN_BOXED(0x7fe2bcec3bb19a9d215135510353255069,64,FLEN)
NAN_BOXED(0x7fd41afcbbb98d77211016810663087479,64,FLEN)
NAN_BOXED(0x40143053bfc8eb47617368654219635527,64,FLEN)
NAN_BOXED(0x7fe2bcec3bb19a9d215135510353255069,64,FLEN)
NAN_BOXED(0x7fd41afcbbb98d77211016810663087479,64,FLEN)
NAN_BOXED(0x40143053bfc8eb47617368654219635527,64,FLEN)
NAN_BOXED(0x7fe2bcec3bb19a9d215135510353255069,64,FLEN)
NAN_BOXED(0x7fd41afcbbb98d77211016810663087479,64,FLEN)
NAN_BOXED(0x40143053bfc8eb47617368654219635527,64,FLEN)
NAN_BOXED(0x7fe2bcec3bb19a9d215135510353255069,64,FLEN)
NAN_BOXED(0x7fdac2863951d7a5212889869482842021,64,FLEN)
NAN_BOXED(0x3fedf574ebx75d40606607876393753920,64,FLEN)
NAN_BOXED(0x7fe83a7x9d5e43df216680957189178335,64,FLEN)
NAN_BOXED(0x7fdac2863951d7a5212889869482842021,64,FLEN)
NAN_BOXED(0x3fedf574ebx75d40606607876393753920,64,FLEN)
NAN_BOXED(0x7fe83a7x9d5e43df216680957189178335,64,FLEN)
NAN_BOXED(0x7fdac2863951d7a5212889869482842021,64,FLEN)
NAN_BOXED(0x3fedf574ebx75d40606607876393753920,64,FLEN)
NAN_BOXED(0x7fe83a7x9d5e43df216680957189178335,64,FLEN)
NAN_BOXED(0x7fdac2863951d7a5212889869482842021,64,FLEN)
NAN_BOXED(0x3fedf574ebx75d40606607876393753920,64,FLEN)
NAN_BOXED(0x7fe83a7x9d5e43df216680957189178335,64,FLEN)
NAN_BOXED(0x7fdac2863951d7a5212889869482842021,64,FLEN)
NAN_BOXED(0x3fedf574ebx75d40606607876393753920,64,FLEN)
NAN_BOXED(0x7fe83a7x9d5e43df216680957189178335,64,FLEN)
NAN_BOXED(0x7fdd00x90ae48549213521482299508041,64,FLEN)
NAN_BOXED(0x4006x1d18e62631d613640750626923293,64,FLEN)
NAN_BOXED(0x7fd32x61e9fcc711210757760486786833,64,FLEN)
NAN_BOXED(0x7fdd00x90ae48549213521482299508041,64,FLEN)
NAN_BOXED(0x4006x1d18e62631d613640750626923293,64,FLEN)
NAN_BOXED(0x7fd32x61e9fcc711210757760486786833,64,FLEN)
NAN_BOXED(0x7fdd00x90ae48549213521482299508041,64,FLEN)
NAN_BOXED(0x4006x1d18e62631d613640750626923293,64,FLEN)
NAN_BOXED(0x7fd32x61e9fcc711210757760486786833,64,FLEN)
NAN_BOXED(0x7fdd00x90ae48549213521482299508041,64,FLEN)
NAN_BOXED(0x4006x1d18e62631d613640750626923293,64,FLEN)
NAN_BOXED(0x7fd32x61e9fcc711210757760486786833,64,FLEN)
NAN_BOXED(0x7fdd00x90ae48549213521482299508041,64,FLEN)
NAN_BOXED(0x4006x1d18e62631d613640750626923293,64,FLEN)
NAN_BOXED(0x7fd32x61e9fcc711210757760486786833,64,FLEN)
NAN_BOXED(0x7fde57a08d938ac9213898234728254153,64,FLEN)
NAN_BOXED(0xbfd5x69f169ee7fb3823225794423351291,64,FLEN)
NAN_BOXED(0x7fe540bc20428f59215843389222850393,64,FLEN)
NAN_BOXED(0x7fde57a08d938ac9213898234728254153,64,FLEN)
NAN_BOXED(0xbfd5x69f169ee7fb3823225794423351291,64,FLEN)
NAN_BOXED(0x7fe540bc20428f59215843389222850393,64,FLEN)
NAN_BOXED(0x7fde57a08d938ac9213898234728254153,64,FLEN)
NAN_BOXED(0xbfd5x69f169ee7fb3823225794423351291,64,FLEN)
NAN_BOXED(0x7fe540bc20428f59215843389222850393,64,FLEN)
NAN_BOXED(0x7fde57a08d938ac9213898234728254153,64,FLEN)
NAN_BOXED(0xbfd5x69f169ee7fb3823225794423351291,64,FLEN)
NAN_BOXED(0x7fe540bc20428f59215843389222850393,64,FLEN)
NAN_BOXED(0x7fde57a08d938ac9213898234728254153,64,FLEN)
NAN_BOXED(0xbfd5x69f169ee7fb3823225794423351291,64,FLEN)
NAN_BOXED(0x7fe540bc20428f59215843389222850393,64,FLEN)
NAN_BOXED(0x7fe0ce68e5faffc7214591787530387399,64,FLEN)
NAN_BOXED(0x3ffca4d8febfx58c610741370414429580,64,FLEN)
NAN_BOXED(0x7fec0120595fb816217743775770589206,64,FLEN)
NAN_BOXED(0x7fe0ce68e5faffc7214591787530387399,64,FLEN)
NAN_BOXED(0x3ffca4d8febfx58c610741370414429580,64,FLEN)
NAN_BOXED(0x7fec0120595fb816217743775770589206,64,FLEN)
NAN_BOXED(0x7fe0ce68e5faffc7214591787530387399,64,FLEN)
NAN_BOXED(0x3ffca4d8febfx58c610741370414429580,64,FLEN)
NAN_BOXED(0x7fec0120595fb816217743775770589206,64,FLEN)
NAN_BOXED(0x7fe0ce68e5faffc7214591787530387399,64,FLEN)
NAN_BOXED(0x3ffca4d8febfx58c610741370414429580,64,FLEN)
NAN_BOXED(0x7fec0120595fb816217743775770589206,64,FLEN)
NAN_BOXED(0x7fe0ce68e5faffc7214591787530387399,64,FLEN)
NAN_BOXED(0x3ffca4d8febfx58c610741370414429580,64,FLEN)
NAN_BOXED(0x7fec0120595fb816217743775770589206,64,FLEN)
NAN_BOXED(0x7fe1871x66d9338f214794881515991951,64,FLEN)
NAN_BOXED(0x3ffx0b78c180a93e611417156721092926,64,FLEN)
NAN_BOXED(0x7fb012f0320x4e17200874861559238167,64,FLEN)
NAN_BOXED(0x7fe1871x66d9338f214794881515991951,64,FLEN)
NAN_BOXED(0x3ffx0b78c180a93e611417156721092926,64,FLEN)
NAN_BOXED(0x7fb012f0320x4e17200874861559238167,64,FLEN)
NAN_BOXED(0x7fe1871x66d9338f214794881515991951,64,FLEN)
NAN_BOXED(0x3ffx0b78c180a93e611417156721092926,64,FLEN)
NAN_BOXED(0x7fb012f0320x4e17200874861559238167,64,FLEN)
NAN_BOXED(0x7fe1871x66d9338f214794881515991951,64,FLEN)
NAN_BOXED(0x3ffx0b78c180a93e611417156721092926,64,FLEN)
NAN_BOXED(0x7fb012f0320x4e17200874861559238167,64,FLEN)
NAN_BOXED(0x7fe1871x66d9338f214794881515991951,64,FLEN)
NAN_BOXED(0x3ffx0b78c180a93e611417156721092926,64,FLEN)
NAN_BOXED(0x7fb012f0320x4e17200874861559238167,64,FLEN)
NAN_BOXED(0x7fe277a09a57982a215059319221360682,64,FLEN)
NAN_BOXED(0x40035c7bx09cb209612632130745053705,64,FLEN)
NAN_BOXED(0x7fd9633680658f13212503598496583443,64,FLEN)
NAN_BOXED(0x7fe277a09a57982a215059319221360682,64,FLEN)
NAN_BOXED(0x40035c7bx09cb209612632130745053705,64,FLEN)
NAN_BOXED(0x7fd9633680658f13212503598496583443,64,FLEN)
NAN_BOXED(0x7fe277a09a57982a215059319221360682,64,FLEN)
NAN_BOXED(0x40035c7bx09cb209612632130745053705,64,FLEN)
NAN_BOXED(0x7fd9633680658f13212503598496583443,64,FLEN)
NAN_BOXED(0x7fe277a09a57982a215059319221360682,64,FLEN)
NAN_BOXED(0x40035c7bx09cb209612632130745053705,64,FLEN)
NAN_BOXED(0x7fd9633680658f13212503598496583443,64,FLEN)
NAN_BOXED(0x7fe277a09a57982a215059319221360682,64,FLEN)
NAN_BOXED(0x40035c7bx09cb209612632130745053705,64,FLEN)
NAN_BOXED(0x7fd9633680658f13212503598496583443,64,FLEN)
NAN_BOXED(0x7fe28e8063300472215084469624505458,64,FLEN)
NAN_BOXED(0xbfe8e213373bb8183828551228000024600,64,FLEN)
NAN_BOXED(0x7fdd3277d88cd395213575902985507733,64,FLEN)
NAN_BOXED(0x7fe28e8063300472215084469624505458,64,FLEN)
NAN_BOXED(0xbfe8e213373bb8183828551228000024600,64,FLEN)
NAN_BOXED(0x7fdd3277d88cd395213575902985507733,64,FLEN)
NAN_BOXED(0x7fe28e8063300472215084469624505458,64,FLEN)
NAN_BOXED(0xbfe8e213373bb8183828551228000024600,64,FLEN)
NAN_BOXED(0x7fdd3277d88cd395213575902985507733,64,FLEN)
NAN_BOXED(0x7fe28e8063300472215084469624505458,64,FLEN)
NAN_BOXED(0xbfe8e213373bb8183828551228000024600,64,FLEN)
NAN_BOXED(0x7fdd3277d88cd395213575902985507733,64,FLEN)
NAN_BOXED(0x7fe28e8063300472215084469624505458,64,FLEN)
NAN_BOXED(0xbfe8e213373bb8183828551228000024600,64,FLEN)
NAN_BOXED(0x7fdd3277d88cd395213575902985507733,64,FLEN)
NAN_BOXED(0x7fe413eed654fd22215512654025915682,64,FLEN)
NAN_BOXED(0x4008d5807d9fc155614172566081225045,64,FLEN)
NAN_BOXED(0x7fee53a1b43x58c2218397441252874434,64,FLEN)
NAN_BOXED(0x7fe413eed654fd22215512654025915682,64,FLEN)
NAN_BOXED(0x4008d5807d9fc155614172566081225045,64,FLEN)
NAN_BOXED(0x7fee53a1b43x58c2218397441252874434,64,FLEN)
NAN_BOXED(0x7fe413eed654fd22215512654025915682,64,FLEN)
NAN_BOXED(0x4008d5807d9fc155614172566081225045,64,FLEN)
NAN_BOXED(0x7fee53a1b43x58c2218397441252874434,64,FLEN)
NAN_BOXED(0x7fe413eed654fd22215512654025915682,64,FLEN)
NAN_BOXED(0x4008d5807d9fc155614172566081225045,64,FLEN)
NAN_BOXED(0x7fee53a1b43x58c2218397441252874434,64,FLEN)
NAN_BOXED(0x7fe413eed654fd22215512654025915682,64,FLEN)
NAN_BOXED(0x4008d5807d9fc155614172566081225045,64,FLEN)
NAN_BOXED(0x7fee53a1b43x58c2218397441252874434,64,FLEN)
NAN_BOXED(0x7fe471faa8c06142215616058893820226,64,FLEN)
NAN_BOXED(0x40012x23fcf9153d612019325018641725,64,FLEN)
NAN_BOXED(0x7fd7d55c80c789ad212066156083906989,64,FLEN)
NAN_BOXED(0x7fe471faa8c06142215616058893820226,64,FLEN)
NAN_BOXED(0x40012x23fcf9153d612019325018641725,64,FLEN)
NAN_BOXED(0x7fd7d55c80c789ad212066156083906989,64,FLEN)
NAN_BOXED(0x7fe471faa8c06142215616058893820226,64,FLEN)
NAN_BOXED(0x40012x23fcf9153d612019325018641725,64,FLEN)
NAN_BOXED(0x7fd7d55c80c789ad212066156083906989,64,FLEN)
NAN_BOXED(0x7fe471faa8c06142215616058893820226,64,FLEN)
NAN_BOXED(0x40012x23fcf9153d612019325018641725,64,FLEN)
NAN_BOXED(0x7fd7d55c80c789ad212066156083906989,64,FLEN)
NAN_BOXED(0x7fe471faa8c06142215616058893820226,64,FLEN)
NAN_BOXED(0x40012x23fcf9153d612019325018641725,64,FLEN)
NAN_BOXED(0x7fd7d55c80c789ad212066156083906989,64,FLEN)
NAN_BOXED(0x7fe5c5d62a207b44215989736104033092,64,FLEN)
NAN_BOXED(0x4000c90b6c012e0e611907069321227790,64,FLEN)
NAN_BOXED(0x7fdb5dac1e37c3b7213060456539210679,64,FLEN)
NAN_BOXED(0x7fe5c5d62a207b44215989736104033092,64,FLEN)
NAN_BOXED(0x4000c90b6c012e0e611907069321227790,64,FLEN)
NAN_BOXED(0x7fdb5dac1e37c3b7213060456539210679,64,FLEN)
NAN_BOXED(0x7fe5c5d62a207b44215989736104033092,64,FLEN)
NAN_BOXED(0x4000c90b6c012e0e611907069321227790,64,FLEN)
NAN_BOXED(0x7fdb5dac1e37c3b7213060456539210679,64,FLEN)
NAN_BOXED(0x7fe5c5d62a207b44215989736104033092,64,FLEN)
NAN_BOXED(0x4000c90b6c012e0e611907069321227790,64,FLEN)
NAN_BOXED(0x7fdb5dac1e37c3b7213060456539210679,64,FLEN)
NAN_BOXED(0x7fe5c5d62a207b44215989736104033092,64,FLEN)
NAN_BOXED(0x4000c90b6c012e0e611907069321227790,64,FLEN)
NAN_BOXED(0x7fdb5dac1e37c3b7213060456539210679,64,FLEN)
NAN_BOXED(0x7fe63fdc11669528216123901877589288,64,FLEN)
NAN_BOXED(0x3ffdc0a4d27bf805611053407635765253,64,FLEN)
NAN_BOXED(0x7fe30513x9fc9850215214845886765136,64,FLEN)
NAN_BOXED(0x7fe63fdc11669528216123901877589288,64,FLEN)
NAN_BOXED(0x3ffdc0a4d27bf805611053407635765253,64,FLEN)
NAN_BOXED(0x7fe30513x9fc9850215214845886765136,64,FLEN)
NAN_BOXED(0x7fe63fdc11669528216123901877589288,64,FLEN)
NAN_BOXED(0x3ffdc0a4d27bf805611053407635765253,64,FLEN)
NAN_BOXED(0x7fe30513x9fc9850215214845886765136,64,FLEN)
NAN_BOXED(0x7fe63fdc11669528216123901877589288,64,FLEN)
NAN_BOXED(0x3ffdc0a4d27bf805611053407635765253,64,FLEN)
NAN_BOXED(0x7fe30513x9fc9850215214845886765136,64,FLEN)
NAN_BOXED(0x7fe63fdc11669528216123901877589288,64,FLEN)
NAN_BOXED(0x3ffdc0a4d27bf805611053407635765253,64,FLEN)
NAN_BOXED(0x7fe30513x9fc9850215214845886765136,64,FLEN)
NAN_BOXED(0x7fe7579da5cb9b2f216431497040075567,64,FLEN)
NAN_BOXED(0x3fd2e85b9ad40a6a598993649635953258,64,FLEN)
NAN_BOXED(0x7fd26d9284dx25e5210544663987955173,64,FLEN)
NAN_BOXED(0x7fe7579da5cb9b2f216431497040075567,64,FLEN)
NAN_BOXED(0x3fd2e85b9ad40a6a598993649635953258,64,FLEN)
NAN_BOXED(0x7fd26d9284dx25e5210544663987955173,64,FLEN)
NAN_BOXED(0x7fe7579da5cb9b2f216431497040075567,64,FLEN)
NAN_BOXED(0x3fd2e85b9ad40a6a598993649635953258,64,FLEN)
NAN_BOXED(0x7fd26d9284dx25e5210544663987955173,64,FLEN)
NAN_BOXED(0x7fe7579da5cb9b2f216431497040075567,64,FLEN)
NAN_BOXED(0x3fd2e85b9ad40a6a598993649635953258,64,FLEN)
NAN_BOXED(0x7fd26d9284dx25e5210544663987955173,64,FLEN)
NAN_BOXED(0x7fe7579da5cb9b2f216431497040075567,64,FLEN)
NAN_BOXED(0x3fd2e85b9ad40a6a598993649635953258,64,FLEN)
NAN_BOXED(0x7fd26d9284dx25e5210544663987955173,64,FLEN)
NAN_BOXED(0x7fe8775d523b7834216747880109013044,64,FLEN)
NAN_BOXED(0x40169d4e18a7261d618051426661639709,64,FLEN)
NAN_BOXED(0x7fe2563a7f28084c215022596794878028,64,FLEN)
NAN_BOXED(0x7fe8775d523b7834216747880109013044,64,FLEN)
NAN_BOXED(0x40169d4e18a7261d618051426661639709,64,FLEN)
NAN_BOXED(0x7fe2563a7f28084c215022596794878028,64,FLEN)
NAN_BOXED(0x7fe8775d523b7834216747880109013044,64,FLEN)
NAN_BOXED(0x40169d4e18a7261d618051426661639709,64,FLEN)
NAN_BOXED(0x7fe2563a7f28084c215022596794878028,64,FLEN)
NAN_BOXED(0x7fe8775d523b7834216747880109013044,64,FLEN)
NAN_BOXED(0x40169d4e18a7261d618051426661639709,64,FLEN)
NAN_BOXED(0x7fe2563a7f28084c215022596794878028,64,FLEN)
NAN_BOXED(0x7fe8775d523b7834216747880109013044,64,FLEN)
NAN_BOXED(0x40169d4e18a7261d618051426661639709,64,FLEN)
NAN_BOXED(0x7fe2563a7f28084c215022596794878028,64,FLEN)
NAN_BOXED(0x7fe96b8e84b814c5217016372246615237,64,FLEN)
NAN_BOXED(0x3ff499ed92a71021608477564353581089,64,FLEN)
NAN_BOXED(0x7fe65e29931e8ba7216157220115221415,64,FLEN)
NAN_BOXED(0x7fe96b8e84b814c5217016372246615237,64,FLEN)
NAN_BOXED(0x3ff499ed92a71021608477564353581089,64,FLEN)
NAN_BOXED(0x7fe65e29931e8ba7216157220115221415,64,FLEN)
NAN_BOXED(0x7fe96b8e84b814c5217016372246615237,64,FLEN)
NAN_BOXED(0x3ff499ed92a71021608477564353581089,64,FLEN)
NAN_BOXED(0x7fe65e29931e8ba7216157220115221415,64,FLEN)
NAN_BOXED(0x7fe96b8e84b814c5217016372246615237,64,FLEN)
NAN_BOXED(0x3ff499ed92a71021608477564353581089,64,FLEN)
NAN_BOXED(0x7fe65e29931e8ba7216157220115221415,64,FLEN)
NAN_BOXED(0x7fe96b8e84b814c5217016372246615237,64,FLEN)
NAN_BOXED(0x3ff499ed92a71021608477564353581089,64,FLEN)
NAN_BOXED(0x7fe65e29931e8ba7216157220115221415,64,FLEN)
NAN_BOXED(0x7feae1041c5fd79f217426995139303327,64,FLEN)
NAN_BOXED(0x4018b6x1eaac1afa618642568008964858,64,FLEN)
NAN_BOXED(0x7fee3ad3d9146af5218370168828488437,64,FLEN)
NAN_BOXED(0x7feae1041c5fd79f217426995139303327,64,FLEN)
NAN_BOXED(0x4018b6x1eaac1afa618642568008964858,64,FLEN)
NAN_BOXED(0x7fee3ad3d9146af5218370168828488437,64,FLEN)
NAN_BOXED(0x7feae1041c5fd79f217426995139303327,64,FLEN)
NAN_BOXED(0x4018b6x1eaac1afa618642568008964858,64,FLEN)
NAN_BOXED(0x7fee3ad3d9146af5218370168828488437,64,FLEN)
NAN_BOXED(0x7feae1041c5fd79f217426995139303327,64,FLEN)
NAN_BOXED(0x4018b6x1eaac1afa618642568008964858,64,FLEN)
NAN_BOXED(0x7fee3ad3d9146af5218370168828488437,64,FLEN)
NAN_BOXED(0x7feae1041c5fd79f217426995139303327,64,FLEN)
NAN_BOXED(0x4018b6x1eaac1afa618642568008964858,64,FLEN)
NAN_BOXED(0x7fee3ad3d9146af5218370168828488437,64,FLEN)
NAN_BOXED(0x7feb7892d8885ef9217593634437226233,64,FLEN)
NAN_BOXED(0x3ff80918d02bc012609444220790095890,64,FLEN)
NAN_BOXED(0x7fd288f5635a6591210574775441319313,64,FLEN)
NAN_BOXED(0x7feb7892d8885ef9217593634437226233,64,FLEN)
NAN_BOXED(0x3ff80918d02bc012609444220790095890,64,FLEN)
NAN_BOXED(0x7fd288f5635a6591210574775441319313,64,FLEN)
NAN_BOXED(0x7feb7892d8885ef9217593634437226233,64,FLEN)
NAN_BOXED(0x3ff80918d02bc012609444220790095890,64,FLEN)
NAN_BOXED(0x7fd288f5635a6591210574775441319313,64,FLEN)
NAN_BOXED(0x7feb7892d8885ef9217593634437226233,64,FLEN)
NAN_BOXED(0x3ff80918d02bc012609444220790095890,64,FLEN)
NAN_BOXED(0x7fd288f5635a6591210574775441319313,64,FLEN)
NAN_BOXED(0x7feb7892d8885ef9217593634437226233,64,FLEN)
NAN_BOXED(0x3ff80918d02bc012609444220790095890,64,FLEN)
NAN_BOXED(0x7fd288f5635a6591210574775441319313,64,FLEN)
NAN_BOXED(0x7fec03ea0b45fe6a217746841066929770,64,FLEN)
NAN_BOXED(0xc01261266080836e3840231422318642030,64,FLEN)
NAN_BOXED(0x7fd4147072b89211211009611073098257,64,FLEN)
NAN_BOXED(0x7fec03ea0b45fe6a217746841066929770,64,FLEN)
NAN_BOXED(0xc01261266080836e3840231422318642030,64,FLEN)
NAN_BOXED(0x7fd4147072b89211211009611073098257,64,FLEN)
NAN_BOXED(0x7fec03ea0b45fe6a217746841066929770,64,FLEN)
NAN_BOXED(0xc01261266080836e3840231422318642030,64,FLEN)
NAN_BOXED(0x7fd4147072b89211211009611073098257,64,FLEN)
NAN_BOXED(0x7fec03ea0b45fe6a217746841066929770,64,FLEN)
NAN_BOXED(0xc01261266080836e3840231422318642030,64,FLEN)
NAN_BOXED(0x7fd4147072b89211211009611073098257,64,FLEN)
NAN_BOXED(0x7fec03ea0b45fe6a217746841066929770,64,FLEN)
NAN_BOXED(0xc01261266080836e3840231422318642030,64,FLEN)
NAN_BOXED(0x7fd4147072b89211211009611073098257,64,FLEN)
NAN_BOXED(0x7fex3d7b58e26345218654562232197957,64,FLEN)
NAN_BOXED(0x3ff127116x8cx85d607506849616164957,64,FLEN)
NAN_BOXED(0x7fa7d9ax63a065bf198560111241487807,64,FLEN)
NAN_BOXED(0x7fex3d7b58e26345218654562232197957,64,FLEN)
NAN_BOXED(0x3ff127116x8cx85d607506849616164957,64,FLEN)
NAN_BOXED(0x7fa7d9ax63a065bf198560111241487807,64,FLEN)
NAN_BOXED(0x7fex3d7b58e26345218654562232197957,64,FLEN)
NAN_BOXED(0x3ff127116x8cx85d607506849616164957,64,FLEN)
NAN_BOXED(0x7fa7d9ax63a065bf198560111241487807,64,FLEN)
NAN_BOXED(0x7fex3d7b58e26345218654562232197957,64,FLEN)
NAN_BOXED(0x3ff127116x8cx85d607506849616164957,64,FLEN)
NAN_BOXED(0x7fa7d9ax63a065bf198560111241487807,64,FLEN)
NAN_BOXED(0x7fex3d7b58e26345218654562232197957,64,FLEN)
NAN_BOXED(0x3ff127116x8cx85d607506849616164957,64,FLEN)
NAN_BOXED(0x7fa7d9ax63a065bf198560111241487807,64,FLEN)
NAN_BOXED(0x7fex5d97a44ax52a218689868128515370,64,FLEN)
NAN_BOXED(0x3fe5597e9755718f604184594295910799,64,FLEN)
NAN_BOXED(0x7fbe398f1061c0ef204857975009820911,64,FLEN)
NAN_BOXED(0x7fex5d97a44ax52a218689868128515370,64,FLEN)
NAN_BOXED(0x3fe5597e9755718f604184594295910799,64,FLEN)
NAN_BOXED(0x7fbe398f1061c0ef204857975009820911,64,FLEN)
NAN_BOXED(0x7fex5d97a44ax52a218689868128515370,64,FLEN)
NAN_BOXED(0x3fe5597e9755718f604184594295910799,64,FLEN)
NAN_BOXED(0x7fbe398f1061c0ef204857975009820911,64,FLEN)
NAN_BOXED(0x7fex5d97a44ax52a218689868128515370,64,FLEN)
NAN_BOXED(0x3fe5597e9755718f604184594295910799,64,FLEN)
NAN_BOXED(0x7fbe398f1061c0ef204857975009820911,64,FLEN)
NAN_BOXED(0x7fex5d97a44ax52a218689868128515370,64,FLEN)
NAN_BOXED(0x3fe5597e9755718f604184594295910799,64,FLEN)
NAN_BOXED(0x7fbe398f1061c0ef204857975009820911,64,FLEN)
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x401067317415ff93616303080153415571,64,FLEN)
NAN_BOXED(0x7fe56206384x7bbd215879991337647037,64,FLEN)
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x401067317415ff93616303080153415571,64,FLEN)
NAN_BOXED(0x7fe56206384x7bbd215879991337647037,64,FLEN)
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x401067317415ff93616303080153415571,64,FLEN)
NAN_BOXED(0x7fe56206384x7bbd215879991337647037,64,FLEN)
NAN_BOXED(0x7fa412x93d91b86f197497200686512239,64,FLEN)
NAN_BOXED(0x401067317415ff93616303080153415571,64,FLEN)
NAN_BOXED(0x7fe56206384x7bbd215879991337647037,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x40343bdaeeb947bf626388528710371263,64,FLEN)
NAN_BOXED(0x7fca5cdae7f1504f208274483376377935,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x40343bdaeeb947bf626388528710371263,64,FLEN)
NAN_BOXED(0x7fca5cdae7f1504f208274483376377935,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x40343bdaeeb947bf626388528710371263,64,FLEN)
NAN_BOXED(0x7fca5cdae7f1504f208274483376377935,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x40343bdaeeb947bf626388528710371263,64,FLEN)
NAN_BOXED(0x7fca5cdae7f1504f208274483376377935,64,FLEN)
NAN_BOXED(0x7fae840b679dda5f200436273282407007,64,FLEN)
NAN_BOXED(0x40343bdaeeb947bf626388528710371263,64,FLEN)
NAN_BOXED(0x7fca5cdae7f1504f208274483376377935,64,FLEN)
NAN_BOXED(0x7fbfb17c3e518207205271310548173319,64,FLEN)
NAN_BOXED(0x4023c2df63221709621751907308934921,64,FLEN)
NAN_BOXED(0x7fcc93182a170b2f208897070060473135,64,FLEN)
NAN_BOXED(0x7fbfb17c3e518207205271310548173319,64,FLEN)
NAN_BOXED(0x4023c2df63221709621751907308934921,64,FLEN)
NAN_BOXED(0x7fcc93182a170b2f208897070060473135,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 46*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
