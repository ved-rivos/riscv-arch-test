
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b5 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b5)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x24, rs2==x24, rs3==x7, rd==x15,fs1 == 0 and fe1 == 0x7x3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588x5e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x24; op2:x24; op3:x7; dest:x15; op1val:0x7x3d9a84a89337ff; op2val:0x7x3d9a84a89337ff;
op3val:0x7fe535cf46588x5e; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x15, x24, x24, x7, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x6, rs2==x22, rs3==x6, rd==x14,fs1 == 0 and fe1 == 0x7x3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588x5e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x6; op2:x22; op3:x6; dest:x14; op1val:0x7x3d9a84a89337ff; op2val:0x4096ed5a71e5433a;
op3val:0x7x3d9a84a89337ff; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x14, x6, x22, x6, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rs3 == rd, rs1==x29, rs2==x29, rs3==x29, rd==x29,fs1 == 0 and fe1 == 0x7x3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588x5e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x29; op2:x29; op3:x29; dest:x29; op1val:0x7x3d9a84a89337ff; op2val:0x7x3d9a84a89337ff;
op3val:0x7x3d9a84a89337ff; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x29, x29, x29, x29, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==x4, rs2==x13, rs3==x4, rd==x4,fs1 == 0 and fe1 == 0x7x3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588x5e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x4; op2:x13; op3:x4; dest:x4; op1val:0x7x3d9a84a89337ff; op2val:0x4096ed5a71e5433a;
op3val:0x7x3d9a84a89337ff; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x4, x4, x13, x4, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 == rs3 != rd, rs1==x9, rs2==x9, rs3==x9, rd==x12,fs1 == 0 and fe1 == 0x7x3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588x5e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x9; op2:x9; op3:x9; dest:x12; op1val:0x7x3d9a84a89337ff; op2val:0x7x3d9a84a89337ff;
op3val:0x7x3d9a84a89337ff; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x12, x9, x9, x9, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x7, rs2==x26, rs3==x18, rd==x26,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91x58bdf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x7; op2:x26; op3:x18; dest:x26; op1val:0x7x9d1aa6d115d25f; op2val:0x40296deab3c53820;
op3val:0x7fd720ca91x58bdf; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x26, x7, x26, x18, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs1 == rs2 == rd != rs3, rs1==x19, rs2==x19, rs3==x14, rd==x19,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91x58bdf and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x19; op2:x19; op3:x14; dest:x19; op1val:0x7x9d1aa6d115d25f; op2val:0x7x9d1aa6d115d25f;
op3val:0x7fd720ca91x58bdf; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x19, x19, x19, x14, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x14, rs2==x23, rs3==x23, rd==x22,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91x58bdf and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x14; op2:x23; op3:x23; dest:x22; op1val:0x7x9d1aa6d115d25f; op2val:0x40296deab3c53820;
op3val:0x40296deab3c53820; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x22, x14, x23, x23, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x8, rs2==x7, rs3==x13, rd==x13,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91x58bdf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x8; op2:x7; op3:x13; dest:x13; op1val:0x7x9d1aa6d115d25f; op2val:0x40296deab3c53820;
op3val:0x7fd720ca91x58bdf; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x13, x8, x7, x13, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x10, rs2==x5, rs3==x8, rd==x10,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91x58bdf and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x10; op2:x5; op3:x8; dest:x10; op1val:0x7x9d1aa6d115d25f; op2val:0x40296deab3c53820;
op3val:0x7fd720ca91x58bdf; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x10, x10, x5, x8, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x16, rs2==x14, rs3==x0, rd==x1,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xx6db8ea3x5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x16; op2:x14; op3:x0; dest:x1; op1val:0x7fab8e934bdcc1bf; op2val:0x401x6db8ea3x5db5;
op3val:0x7fdb109b94c05e59; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x1, x16, x14, x0, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rd == rs2 == rs3 != rs1, rs1==x20, rs2==x28, rs3==x28, rd==x28,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xx6db8ea3x5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x20; op2:x28; op3:x28; dest:x28; op1val:0x7fab8e934bdcc1bf; op2val:0x401x6db8ea3x5db5;
op3val:0x401x6db8ea3x5db5; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x28, x20, x28, x28, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x17, rs2==x16, rs3==x19, rd==x3,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xx6db8ea3x5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x17; op2:x16; op3:x19; dest:x3; op1val:0x7fab8e934bdcc1bf; op2val:0x401x6db8ea3x5db5;
op3val:0x7fdb109b94c05e59; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x3, x17, x16, x19, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x25, rs2==x21, rs3==x5, rd==x7,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xx6db8ea3x5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x25; op2:x21; op3:x5; dest:x7; op1val:0x7fab8e934bdcc1bf; op2val:0x401x6db8ea3x5db5;
op3val:0x7fdb109b94c05e59; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x7, x25, x21, x5, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x28, rs2==x30, rs3==x16, rd==x8,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xx6db8ea3x5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x28; op2:x30; op3:x16; dest:x8; op1val:0x7fab8e934bdcc1bf; op2val:0x401x6db8ea3x5db5;
op3val:0x7fdb109b94c05e59; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x8, x28, x30, x16, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x13, rs2==x18, rs3==x1, rd==x17,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12x7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x13; op2:x18; op3:x1; dest:x17; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212x7d90af6886;
op3val:0x7fe99bea81a3c895; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x17, x13, x18, x1, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x31, rs2==x27, rs3==x24, rd==x23,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12x7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x31; op2:x27; op3:x24; dest:x23; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212x7d90af6886;
op3val:0x7fe99bea81a3c895; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x23, x31, x27, x24, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x22, rs2==x12, rs3==x11, rd==x9,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12x7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x22; op2:x12; op3:x11; dest:x9; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212x7d90af6886;
op3val:0x7fe99bea81a3c895; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x9, x22, x12, x11, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x18, rs2==x2, rs3==x10, rd==x11,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12x7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x18; op2:x2; op3:x10; dest:x11; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212x7d90af6886;
op3val:0x7fe99bea81a3c895; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x11, x18, x2, x10, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x11, rs2==x17, rs3==x22, rd==x18,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7d7ab2b96a7d7 and fs2 == 0 and fe2 == 0x402 and fm2 == 0x12x7d90af6886 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99bea81a3c895 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x11; op2:x17; op3:x22; dest:x18; op1val:0x7fb7d7ab2b96a7d7; op2val:0x40212x7d90af6886;
op3val:0x7fe99bea81a3c895; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x18, x11, x17, x22, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x3, rs2==x6, rs3==x31, rd==x20,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acx34aex92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x3; op2:x6; op3:x31; dest:x20; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acx34aex92;
op3val:0x7fc93c9b1b3642af; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x20, x3, x6, x31, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x1, rs2==x4, rs3==x27, rd==x16,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acx34aex92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x1; op2:x4; op3:x27; dest:x16; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acx34aex92;
op3val:0x7fc93c9b1b3642af; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x16, x1, x4, x27, dyn, 32, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==x15, rs2==x0, rs3==x2, rd==x5,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acx34aex92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x15; op2:x0; op3:x2; dest:x5; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acx34aex92;
op3val:0x7fc93c9b1b3642af; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x5, x15, x0, x2, dyn, 64, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==x26, rs2==x31, rs3==x3, rd==x30,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acx34aex92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x26; op2:x31; op3:x3; dest:x30; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acx34aex92;
op3val:0x7fc93c9b1b3642af; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x30, x26, x31, x3, dyn, 96, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==x30, rs2==x8, rs3==x25, rd==x21,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x801fd982d9eb7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x0d1acx34aex92 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x93c9b1b3642af and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x8; op3:x25; dest:x21; op1val:0x7fb801fd982d9eb7; op2val:0x4000d1acx34aex92;
op3val:0x7fc93c9b1b3642af; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x21, x30, x8, x25, dyn, 128, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==x2, rs2==x25, rs3==x26, rd==x6,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872x9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x2; op2:x25; op3:x26; dest:x6; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872x9d;
op3val:0x7fe5352cf9125058; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x6, x2, x25, x26, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==x27, rs2==x10, rs3==x21, rd==x24,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872x9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x27; op2:x10; op3:x21; dest:x24; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872x9d;
op3val:0x7fe5352cf9125058; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x24, x27, x10, x21, dyn, 32, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==x21, rs2==x1, rs3==x17, rd==x25,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872x9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x21; op2:x1; op3:x17; dest:x25; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872x9d;
op3val:0x7fe5352cf9125058; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x25, x21, x1, x17, dyn, 64, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==x5, rs2==x20, rs3==x15, rd==x31,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872x9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x5; op2:x20; op3:x15; dest:x31; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872x9d;
op3val:0x7fe5352cf9125058; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x5, x20, x15, dyn, 96, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==x23, rs2==x11, rs3==x20, rd==x27,fs1 == 0 and fe1 == 0x7fb and fm1 == 0xde8341376716f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x6b11ecf872x9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5352cf9125058 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x23; op2:x11; op3:x20; dest:x27; op1val:0x7fbde8341376716f; op2val:0x4016b11ecf872x9d;
op3val:0x7fe5352cf9125058; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x27, x23, x11, x20, dyn, 128, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==x0, rs2==x15, rs3==x12, rd==x2,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165x47cec and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x0; op2:x15; op3:x12; dest:x2; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025;
op3val:0x7fefff0165x47cec; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x2, x0, x15, x12, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==x12, rs2==x3, rs3==x30, rd==x0,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165x47cec and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x12; op2:x3; op3:x30; dest:x0; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025;
op3val:0x7fefff0165x47cec; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x0, x12, x3, x30, dyn, 32, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165x47cec and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025;
op3val:0x7fefff0165x47cec; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165x47cec and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025;
op3val:0x7fefff0165x47cec; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x03c1ecadc137f and fs2 == 0 and fe2 == 0x401 and fm2 == 0xf8884c44e2025 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfff0165x47cec and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc03c1ecadc137f; op2val:0x401f8884c44e2025;
op3val:0x7fefff0165x47cec; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4fx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd;
op3val:0x7fe1b73726cc4fx0; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4fx0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd;
op3val:0x7fe1b73726cc4fx0; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4fx0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd;
op3val:0x7fe1b73726cc4fx0; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4fx0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd;
op3val:0x7fe1b73726cc4fx0; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8b3ba7903c2ab and fs2 == 0 and fe2 == 0x400 and fm2 == 0x6f3177f7676dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1b73726cc4fx0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc8b3ba7903c2ab; op2val:0x4006f3177f7676dd;
op3val:0x7fe1b73726cc4fx0; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658;
op3val:0x7fe4f911cba6947d; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658;
op3val:0x7fe4f911cba6947d; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658;
op3val:0x7fe4f911cba6947d; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658;
op3val:0x7fe4f911cba6947d; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9b63fed3f1873 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xa1a2014c80658 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4f911cba6947d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc9b63fed3f1873; op2val:0x400a1a2014c80658;
op3val:0x7fe4f911cba6947d; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749ax0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcadd854d58145f; op2val:0x40107ed749ax0a91;
op3val:0x7febb27f4381021f; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749ax0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcadd854d58145f; op2val:0x40107ed749ax0a91;
op3val:0x7febb27f4381021f; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749ax0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcadd854d58145f; op2val:0x40107ed749ax0a91;
op3val:0x7febb27f4381021f; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749ax0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcadd854d58145f; op2val:0x40107ed749ax0a91;
op3val:0x7febb27f4381021f; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xadd854d58145f and fs2 == 0 and fe2 == 0x401 and fm2 == 0x07ed749ax0a91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbb27f4381021f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcadd854d58145f; op2val:0x40107ed749ax0a91;
op3val:0x7febb27f4381021f; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237;
op3val:0x7fe9a94aa8cadc89; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237;
op3val:0x7fe9a94aa8cadc89; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237;
op3val:0x7fe9a94aa8cadc89; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237;
op3val:0x7fe9a94aa8cadc89; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x173e2abe9259b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x7867ec4d41237 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9a94aa8cadc89 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd173e2abe9259b; op2val:0x4007867ec4d41237;
op3val:0x7fe9a94aa8cadc89; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d;
op3val:0x7fc91ddf5613b02f; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d;
op3val:0x7fc91ddf5613b02f; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d;
op3val:0x7fc91ddf5613b02f; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d;
op3val:0x7fc91ddf5613b02f; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3fc6805c084d1 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x41b82ca2e0c7d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x91ddf5613b02f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd3fc6805c084d1; op2val:0x3fe41b82ca2e0c7d;
op3val:0x7fc91ddf5613b02f; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6ax77x2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e;
op3val:0x7fecf127a6ax77x2; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6ax77x2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e;
op3val:0x7fecf127a6ax77x2; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6ax77x2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e;
op3val:0x7fecf127a6ax77x2; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6ax77x2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e;
op3val:0x7fecf127a6ax77x2; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x54e6e64764369 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x5bbe5dcd5070e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcf127a6ax77x2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd54e6e64764369; op2val:0x4005bbe5dcd5070e;
op3val:0x7fecf127a6ax77x2; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751;
op3val:0x7fedd8fbb754b55c; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751;
op3val:0x7fedd8fbb754b55c; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751;
op3val:0x7fedd8fbb754b55c; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751;
op3val:0x7fedd8fbb754b55c; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7107573e4c40b and fs2 == 0 and fe2 == 0x400 and fm2 == 0x4b4a64f556751 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdd8fbb754b55c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7107573e4c40b; op2val:0x4004b4a64f556751;
op3val:0x7fedd8fbb754b55c; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7;
op3val:0x7fe8a4fc4c166a46; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7;
op3val:0x7fe8a4fc4c166a46; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7;
op3val:0x7fe8a4fc4c166a46; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7;
op3val:0x7fe8a4fc4c166a46; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7e1dc0a8e1a11 and fs2 == 0 and fe2 == 0x400 and fm2 == 0x082b9acfac9b7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8a4fc4c166a46 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7e1dc0a8e1a11; op2val:0x400082b9acfac9b7;
op3val:0x7fe8a4fc4c166a46; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8276674380fc3; op2val:0x3fx07fa3fe059060;
op3val:0x7fd8e816c2502d73; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8276674380fc3; op2val:0x3fx07fa3fe059060;
op3val:0x7fd8e816c2502d73; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8276674380fc3; op2val:0x3fx07fa3fe059060;
op3val:0x7fd8e816c2502d73; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8276674380fc3; op2val:0x3fx07fa3fe059060;
op3val:0x7fd8e816c2502d73; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8276674380fc3 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x07fa3fe059060 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e816c2502d73 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8276674380fc3; op2val:0x3fx07fa3fe059060;
op3val:0x7fd8e816c2502d73; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4;
op3val:0x7fea99ad8d852394; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4;
op3val:0x7fea99ad8d852394; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4;
op3val:0x7fea99ad8d852394; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4;
op3val:0x7fea99ad8d852394; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc9ed4464571af and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xdbdc83df362e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa99ad8d852394 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdc9ed4464571af; op2val:0x3ffdbdc83df362e4;
op3val:0x7fea99ad8d852394; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644x56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde18a54fb9615f; op2val:0x3fx9d9644x56bb65;
op3val:0x7fe84fb69ef078ea; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644x56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde18a54fb9615f; op2val:0x3fx9d9644x56bb65;
op3val:0x7fe84fb69ef078ea; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644x56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde18a54fb9615f; op2val:0x3fx9d9644x56bb65;
op3val:0x7fe84fb69ef078ea; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644x56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde18a54fb9615f; op2val:0x3fx9d9644x56bb65;
op3val:0x7fe84fb69ef078ea; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe18a54fb9615f and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x9d9644x56bb65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84fb69ef078ea and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde18a54fb9615f; op2val:0x3fx9d9644x56bb65;
op3val:0x7fe84fb69ef078ea; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xex5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdex5aa91c82b3d; op2val:0x3fd24583e9aa4a5b;
op3val:0x7fc1ad71498eb7bb; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xex5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdex5aa91c82b3d; op2val:0x3fd24583e9aa4a5b;
op3val:0x7fc1ad71498eb7bb; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xex5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdex5aa91c82b3d; op2val:0x3fd24583e9aa4a5b;
op3val:0x7fc1ad71498eb7bb; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xex5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdex5aa91c82b3d; op2val:0x3fd24583e9aa4a5b;
op3val:0x7fc1ad71498eb7bb; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xex5aa91c82b3d and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x24583e9aa4a5b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1ad71498eb7bb and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdex5aa91c82b3d; op2val:0x3fd24583e9aa4a5b;
op3val:0x7fc1ad71498eb7bb; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xx0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdx0aceae190521; op2val:0x3fe142a90077145a;
op3val:0x7fd0be68084b69b7; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xx0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdx0aceae190521; op2val:0x3fe142a90077145a;
op3val:0x7fd0be68084b69b7; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xx0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdx0aceae190521; op2val:0x3fe142a90077145a;
op3val:0x7fd0be68084b69b7; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xx0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdx0aceae190521; op2val:0x3fe142a90077145a;
op3val:0x7fd0be68084b69b7; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xx0aceae190521 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x142a90077145a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0be68084b69b7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdx0aceae190521; op2val:0x3fe142a90077145a;
op3val:0x7fd0be68084b69b7; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9;
op3val:0x7fe5d35e2c6078a3; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9;
op3val:0x7fe5d35e2c6078a3; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9;
op3val:0x7fe5d35e2c6078a3; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9;
op3val:0x7fe5d35e2c6078a3; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x139cbde283143 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x445c6db753ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5d35e2c6078a3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe139cbde283143; op2val:0x3ff445c6db753ea9;
op3val:0x7fe5d35e2c6078a3; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5x3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6x5c1f001498f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe2da5x3c7a7466; op2val:0x3fc37c47ae0bad3a;
op3val:0x7fb6x5c1f001498f; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5x3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6x5c1f001498f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe2da5x3c7a7466; op2val:0x3fc37c47ae0bad3a;
op3val:0x7fb6x5c1f001498f; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5x3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6x5c1f001498f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe2da5x3c7a7466; op2val:0x3fc37c47ae0bad3a;
op3val:0x7fb6x5c1f001498f; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5x3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6x5c1f001498f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe2da5x3c7a7466; op2val:0x3fc37c47ae0bad3a;
op3val:0x7fb6x5c1f001498f; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2da5x3c7a7466 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x37c47ae0bad3a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x6x5c1f001498f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe2da5x3c7a7466; op2val:0x3fc37c47ae0bad3a;
op3val:0x7fb6x5c1f001498f; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdx8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdx8;
op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdx8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdx8;
op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdx8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdx8;
op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdx8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdx8;
op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x341836db80049 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x02efa596fbdx8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x37a0d12dbe9d7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe341836db80049; op2val:0x3fe02efa596fbdx8;
op3val:0x7fd37a0d12dbe9d7; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52fx3x23 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628;
op3val:0x7fd3978b52fx3x23; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52fx3x23 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628;
op3val:0x7fd3978b52fx3x23; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52fx3x23 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628;
op3val:0x7fd3978b52fx3x23; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52fx3x23 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628;
op3val:0x7fd3978b52fx3x23; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d93686797715 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xf9620c1581628 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3978b52fx3x23 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3d93686797715; op2val:0x3fdf9620c1581628;
op3val:0x7fd3978b52fx3x23; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf;
op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf;
op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf;
op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf;
op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x45141572f8653 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xd59f46589e2bf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a2c060c7c8c5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe45141572f8653; op2val:0x3fdd59f46589e2bf;
op3val:0x7fd2a2c060c7c8c5; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b;
op3val:0x7fe655481791d37f; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b;
op3val:0x7fe655481791d37f; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b;
op3val:0x7fe655481791d37f; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b;
op3val:0x7fe655481791d37f; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a0550fe15035 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x152f2078be37b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x655481791d37f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4a0550fe15035; op2val:0x3ff152f2078be37b;
op3val:0x7fe655481791d37f; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe5726b277b5dce; op2val:0x3fx53c36b188da64;
op3val:0x7fec76e305c8d1af; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe5726b277b5dce; op2val:0x3fx53c36b188da64;
op3val:0x7fec76e305c8d1af; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe5726b277b5dce; op2val:0x3fx53c36b188da64;
op3val:0x7fec76e305c8d1af; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe5726b277b5dce; op2val:0x3fx53c36b188da64;
op3val:0x7fec76e305c8d1af; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5726b277b5dce and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x53c36b188da64 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc76e305c8d1af and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe5726b277b5dce; op2val:0x3fx53c36b188da64;
op3val:0x7fec76e305c8d1af; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3x9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7x8 and fm3 == 0x9a5803051b37f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b;
op3val:0x7x89a5803051b37f; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3x9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7x8 and fm3 == 0x9a5803051b37f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b;
op3val:0x7x89a5803051b37f; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3x9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7x8 and fm3 == 0x9a5803051b37f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b;
op3val:0x7x89a5803051b37f; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3x9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7x8 and fm3 == 0x9a5803051b37f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b;
op3val:0x7x89a5803051b37f; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x657d95216ac01 and fs2 == 0 and fe2 == 0x3x9 and fm2 == 0x25d92dbf7772b and fs3 == 0 and fe3 == 0x7x8 and fm3 == 0x9a5803051b37f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe657d95216ac01; op2val:0x3f925d92dbf7772b;
op3val:0x7x89a5803051b37f; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7x14dx48da55 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218;
op3val:0x7fda7x14dx48da55; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7x14dx48da55 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218;
op3val:0x7fda7x14dx48da55; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7x14dx48da55 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218;
op3val:0x7fda7x14dx48da55; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7x14dx48da55 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218;
op3val:0x7fda7x14dx48da55; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75ab99b7d728b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x2270fb41a1218 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa7x14dx48da55 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe75ab99b7d728b; op2val:0x3fe2270fb41a1218;
op3val:0x7fda7x14dx48da55; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491x9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6;
op3val:0x7fd974f860c491x9; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491x9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6;
op3val:0x7fd974f860c491x9; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491x9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6;
op3val:0x7fd974f860c491x9; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491x9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6;
op3val:0x7fd974f860c491x9; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7e1cbdffe4992 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x10e1c43d3c4e6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x974f860c491x9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7e1cbdffe4992; op2val:0x3fe10e1c43d3c4e6;
op3val:0x7fd974f860c491x9; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3x9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0x177d952x13e9f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831;
op3val:0x7f9177d952x13e9f; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3x9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0x177d952x13e9f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831;
op3val:0x7f9177d952x13e9f; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3x9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0x177d952x13e9f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831;
op3val:0x7f9177d952x13e9f; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3x9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0x177d952x13e9f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831;
op3val:0x7f9177d952x13e9f; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8e5d8dcad33c4 and fs2 == 0 and fe2 == 0x3x9 and fm2 == 0x67373f406a831 and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0x177d952x13e9f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8e5d8dcad33c4; op2val:0x3f967373f406a831;
op3val:0x7f9177d952x13e9f; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc;
op3val:0x7fea4d72905280d4; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc;
op3val:0x7fea4d72905280d4; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc;
op3val:0x7fea4d72905280d4; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc;
op3val:0x7fea4d72905280d4; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9630abe4b977e and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x093bbbbab15dc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa4d72905280d4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9630abe4b977e; op2val:0x3ff093bbbbab15dc;
op3val:0x7fea4d72905280d4; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5x12be85a3941 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb;
op3val:0x7fe5x12be85a3941; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5x12be85a3941 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb;
op3val:0x7fe5x12be85a3941; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5x12be85a3941 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb;
op3val:0x7fe5x12be85a3941; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5x12be85a3941 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb;
op3val:0x7fe5x12be85a3941; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9b52b2a70b02a and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xb500d269fc9eb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5x12be85a3941 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9b52b2a70b02a; op2val:0x3feb500d269fc9eb;
op3val:0x7fe5x12be85a3941; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007x92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c0c529007x92; op2val:0x3fe1b3e375a83590;
op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007x92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c0c529007x92; op2val:0x3fe1b3e375a83590;
op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007x92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c0c529007x92; op2val:0x3fe1b3e375a83590;
op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007x92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c0c529007x92; op2val:0x3fe1b3e375a83590;
op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c0c529007x92 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x1b3e375a83590 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc7e5c3598d2dd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c0c529007x92; op2val:0x3fe1b3e375a83590;
op3val:0x7fdc7e5c3598d2dd; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892;
op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892;
op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x3; val_offset:513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 513*FLEN/8, x4, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892;
op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x3; val_offset:516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 516*FLEN/8, x4, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892;
op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x3; val_offset:519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 519*FLEN/8, x4, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c39382ea6198 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x51b4351475892 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0fe4c054d9e8b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c39382ea6198; op2val:0x3fd51b4351475892;
op3val:0x7fd0fe4c054d9e8b; valaddr_reg:x3; val_offset:522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 522*FLEN/8, x4, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ex31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xx3e76cbaa48e2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ex31b27;
op3val:0x7fex3e76cbaa48e2; valaddr_reg:x3; val_offset:525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 525*FLEN/8, x4, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ex31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xx3e76cbaa48e2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ex31b27;
op3val:0x7fex3e76cbaa48e2; valaddr_reg:x3; val_offset:528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 528*FLEN/8, x4, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ex31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xx3e76cbaa48e2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ex31b27;
op3val:0x7fex3e76cbaa48e2; valaddr_reg:x3; val_offset:531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 531*FLEN/8, x4, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ex31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xx3e76cbaa48e2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ex31b27;
op3val:0x7fex3e76cbaa48e2; valaddr_reg:x3; val_offset:534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 534*FLEN/8, x4, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9c6b24203c777 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x364e03ex31b27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xx3e76cbaa48e2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9c6b24203c777; op2val:0x3ff364e03ex31b27;
op3val:0x7fex3e76cbaa48e2; valaddr_reg:x3; val_offset:537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 537*FLEN/8, x4, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33;
op3val:0x7fd57a2cffec0101; valaddr_reg:x3; val_offset:540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 540*FLEN/8, x4, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33;
op3val:0x7fd57a2cffec0101; valaddr_reg:x3; val_offset:543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 543*FLEN/8, x4, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33;
op3val:0x7fd57a2cffec0101; valaddr_reg:x3; val_offset:546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 546*FLEN/8, x4, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33;
op3val:0x7fd57a2cffec0101; valaddr_reg:x3; val_offset:549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 549*FLEN/8, x4, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb045c5db2e460 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x9703f7515ec33 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x57a2cffec0101 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb045c5db2e460; op2val:0x3fd9703f7515ec33;
op3val:0x7fd57a2cffec0101; valaddr_reg:x3; val_offset:552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 552*FLEN/8, x4, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cex4bccbe789 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2;
op3val:0x7fe0cex4bccbe789; valaddr_reg:x3; val_offset:555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 555*FLEN/8, x4, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cex4bccbe789 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2;
op3val:0x7fe0cex4bccbe789; valaddr_reg:x3; val_offset:558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 558*FLEN/8, x4, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cex4bccbe789 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2;
op3val:0x7fe0cex4bccbe789; valaddr_reg:x3; val_offset:561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 561*FLEN/8, x4, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cex4bccbe789 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2;
op3val:0x7fe0cex4bccbe789; valaddr_reg:x3; val_offset:564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 564*FLEN/8, x4, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc299b1ab6e737 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31948e12564a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0cex4bccbe789 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec299b1ab6e737; op2val:0x3fe31948e12564a2;
op3val:0x7fe0cex4bccbe789; valaddr_reg:x3; val_offset:567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 567*FLEN/8, x4, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65x52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fed1ab73cc65x52; op2val:0x3fe21b7b40acb837;
op3val:0x7fe07805b64db437; valaddr_reg:x3; val_offset:570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 570*FLEN/8, x4, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65x52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fed1ab73cc65x52; op2val:0x3fe21b7b40acb837;
op3val:0x7fe07805b64db437; valaddr_reg:x3; val_offset:573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 573*FLEN/8, x4, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65x52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fed1ab73cc65x52; op2val:0x3fe21b7b40acb837;
op3val:0x7fe07805b64db437; valaddr_reg:x3; val_offset:576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 576*FLEN/8, x4, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65x52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fed1ab73cc65x52; op2val:0x3fe21b7b40acb837;
op3val:0x7fe07805b64db437; valaddr_reg:x3; val_offset:579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 579*FLEN/8, x4, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd1ab73cc65x52 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x21b7b40acb837 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x07805b64db437 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fed1ab73cc65x52; op2val:0x3fe21b7b40acb837;
op3val:0x7fe07805b64db437; valaddr_reg:x3; val_offset:582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 582*FLEN/8, x4, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f;
op3val:0x7fe2d590539c6e1b; valaddr_reg:x3; val_offset:585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 585*FLEN/8, x4, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f;
op3val:0x7fe2d590539c6e1b; valaddr_reg:x3; val_offset:588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 588*FLEN/8, x4, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f;
op3val:0x7fe2d590539c6e1b; valaddr_reg:x3; val_offset:591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 591*FLEN/8, x4, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f;
op3val:0x7fe2d590539c6e1b; valaddr_reg:x3; val_offset:594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 594*FLEN/8, x4, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe71a5cc2ec78b and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x3cc01737b632f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2d590539c6e1b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee71a5cc2ec78b; op2val:0x3fe3cc01737b632f;
op3val:0x7fe2d590539c6e1b; valaddr_reg:x3; val_offset:597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 597*FLEN/8, x4, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f;
op3val:0x7fec8d5e8a69a864; valaddr_reg:x3; val_offset:600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 600*FLEN/8, x4, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f;
op3val:0x7fec8d5e8a69a864; valaddr_reg:x3; val_offset:603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 603*FLEN/8, x4, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f;
op3val:0x7fec8d5e8a69a864; valaddr_reg:x3; val_offset:606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 606*FLEN/8, x4, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f;
op3val:0x7fec8d5e8a69a864; valaddr_reg:x3; val_offset:609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 609*FLEN/8, x4, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf5610c05b31c8 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xd2834dff0917f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc8d5e8a69a864 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef5610c05b31c8; op2val:0x3fed2834dff0917f;
op3val:0x7fec8d5e8a69a864; valaddr_reg:x3; val_offset:612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 612*FLEN/8, x4, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f;
op3val:0x7fcf665a2ce400e3; valaddr_reg:x3; val_offset:615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 615*FLEN/8, x4, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f;
op3val:0x7fcf665a2ce400e3; valaddr_reg:x3; val_offset:618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 618*FLEN/8, x4, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f;
op3val:0x7fcf665a2ce400e3; valaddr_reg:x3; val_offset:621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 621*FLEN/8, x4, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f;
op3val:0x7fcf665a2ce400e3; valaddr_reg:x3; val_offset:624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 624*FLEN/8, x4, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf642299c3d7ea and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x001214aa3225f and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xf665a2ce400e3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef642299c3d7ea; op2val:0x3fd001214aa3225f;
op3val:0x7fcf665a2ce400e3; valaddr_reg:x3; val_offset:627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 627*FLEN/8, x4, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0x7x3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588x5e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x3d9a84a89337ff; op2val:0x4096ed5a71e5433a;
op3val:0x7fe535cf46588x5e; valaddr_reg:x3; val_offset:630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 630*FLEN/8, x4, x1, x2)

inst_211:
// fs1 == 0 and fe1 == 0x7x3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588x5e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x3d9a84a89337ff; op2val:0x4096ed5a71e5433a;
op3val:0x7fe535cf46588x5e; valaddr_reg:x3; val_offset:633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 633*FLEN/8, x4, x1, x2)

inst_212:
// fs1 == 0 and fe1 == 0x7x3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588x5e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x3d9a84a89337ff; op2val:0x4096ed5a71e5433a;
op3val:0x7fe535cf46588x5e; valaddr_reg:x3; val_offset:636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 636*FLEN/8, x4, x1, x2)

inst_213:
// fs1 == 0 and fe1 == 0x7x3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588x5e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x3d9a84a89337ff; op2val:0x4096ed5a71e5433a;
op3val:0x7fe535cf46588x5e; valaddr_reg:x3; val_offset:639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 639*FLEN/8, x4, x1, x2)

inst_214:
// fs1 == 0 and fe1 == 0x7x3 and fm1 == 0xd9a84a89337ff and fs2 == 0 and fe2 == 0x409 and fm2 == 0x6ed5a71e5433a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x535cf46588x5e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x3d9a84a89337ff; op2val:0x4096ed5a71e5433a;
op3val:0x7fe535cf46588x5e; valaddr_reg:x3; val_offset:642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 642*FLEN/8, x4, x1, x2)

inst_215:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91x58bdf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x9d1aa6d115d25f; op2val:0x40296deab3c53820;
op3val:0x7fd720ca91x58bdf; valaddr_reg:x3; val_offset:645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 645*FLEN/8, x4, x1, x2)

inst_216:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91x58bdf and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x9d1aa6d115d25f; op2val:0x40296deab3c53820;
op3val:0x7fd720ca91x58bdf; valaddr_reg:x3; val_offset:648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 648*FLEN/8, x4, x1, x2)

inst_217:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91x58bdf and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x9d1aa6d115d25f; op2val:0x40296deab3c53820;
op3val:0x7fd720ca91x58bdf; valaddr_reg:x3; val_offset:651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 651*FLEN/8, x4, x1, x2)

inst_218:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91x58bdf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x9d1aa6d115d25f; op2val:0x40296deab3c53820;
op3val:0x7fd720ca91x58bdf; valaddr_reg:x3; val_offset:654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 654*FLEN/8, x4, x1, x2)

inst_219:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xd1aa6d115d25f and fs2 == 0 and fe2 == 0x402 and fm2 == 0x96deab3c53820 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x720ca91x58bdf and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x9d1aa6d115d25f; op2val:0x40296deab3c53820;
op3val:0x7fd720ca91x58bdf; valaddr_reg:x3; val_offset:657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 657*FLEN/8, x4, x1, x2)

inst_220:
// fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb8e934bdcc1bf and fs2 == 0 and fe2 == 0x401 and fm2 == 0xx6db8ea3x5db5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb109b94c05e59 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fab8e934bdcc1bf; op2val:0x401x6db8ea3x5db5;
op3val:0x7fdb109b94c05e59; valaddr_reg:x3; val_offset:660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 660*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x7fe535cf46588x5e215831376838299486,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x4096ed5a71e5433a654168237647676218,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x4096ed5a71e5433a654168237647676218,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x7x9d1aa6d115d25f195535317935182431,64,FLEN)
NAN_BOXED(0x40296deab3c53820623347347278346272,64,FLEN)
NAN_BOXED(0x7fd720ca91x58bdf211867617213909983,64,FLEN)
NAN_BOXED(0x7x9d1aa6d115d25f195535317935182431,64,FLEN)
NAN_BOXED(0x7x9d1aa6d115d25f195535317935182431,64,FLEN)
NAN_BOXED(0x7fd720ca91x58bdf211867617213909983,64,FLEN)
NAN_BOXED(0x7x9d1aa6d115d25f195535317935182431,64,FLEN)
NAN_BOXED(0x40296deab3c53820623347347278346272,64,FLEN)
NAN_BOXED(0x40296deab3c53820623347347278346272,64,FLEN)
NAN_BOXED(0x7x9d1aa6d115d25f195535317935182431,64,FLEN)
NAN_BOXED(0x40296deab3c53820623347347278346272,64,FLEN)
NAN_BOXED(0x7fd720ca91x58bdf211867617213909983,64,FLEN)
NAN_BOXED(0x7x9d1aa6d115d25f195535317935182431,64,FLEN)
NAN_BOXED(0x40296deab3c53820623347347278346272,64,FLEN)
NAN_BOXED(0x7fd720ca91x58bdf211867617213909983,64,FLEN)
NAN_BOXED(0x7fab8e934bdcc1bf199603427118465471,64,FLEN)
NAN_BOXED(0x401x6db8ea3x5db5620532383676849589,64,FLEN)
NAN_BOXED(0x7fdb109b94c05e59212975723118091865,64,FLEN)
NAN_BOXED(0x7fab8e934bdcc1bf199603427118465471,64,FLEN)
NAN_BOXED(0x401x6db8ea3x5db5620532383676849589,64,FLEN)
NAN_BOXED(0x401x6db8ea3x5db5620532383676849589,64,FLEN)
NAN_BOXED(0x7fab8e934bdcc1bf199603427118465471,64,FLEN)
NAN_BOXED(0x401x6db8ea3x5db5620532383676849589,64,FLEN)
NAN_BOXED(0x7fdb109b94c05e59212975723118091865,64,FLEN)
NAN_BOXED(0x7fab8e934bdcc1bf199603427118465471,64,FLEN)
NAN_BOXED(0x401x6db8ea3x5db5620532383676849589,64,FLEN)
NAN_BOXED(0x7fdb109b94c05e59212975723118091865,64,FLEN)
NAN_BOXED(0x7fab8e934bdcc1bf199603427118465471,64,FLEN)
NAN_BOXED(0x401x6db8ea3x5db5620532383676849589,64,FLEN)
NAN_BOXED(0x7fdb109b94c05e59212975723118091865,64,FLEN)
NAN_BOXED(0x7fb7d7ab2b96a7d7203061493725571031,64,FLEN)
NAN_BOXED(0x40212x7d90af6886621026909003671686,64,FLEN)
NAN_BOXED(0x7fe99bea81a3c895217069543890077845,64,FLEN)
NAN_BOXED(0x7fb7d7ab2b96a7d7203061493725571031,64,FLEN)
NAN_BOXED(0x40212x7d90af6886621026909003671686,64,FLEN)
NAN_BOXED(0x7fe99bea81a3c895217069543890077845,64,FLEN)
NAN_BOXED(0x7fb7d7ab2b96a7d7203061493725571031,64,FLEN)
NAN_BOXED(0x40212x7d90af6886621026909003671686,64,FLEN)
NAN_BOXED(0x7fe99bea81a3c895217069543890077845,64,FLEN)
NAN_BOXED(0x7fb7d7ab2b96a7d7203061493725571031,64,FLEN)
NAN_BOXED(0x40212x7d90af6886621026909003671686,64,FLEN)
NAN_BOXED(0x7fe99bea81a3c895217069543890077845,64,FLEN)
NAN_BOXED(0x7fb7d7ab2b96a7d7203061493725571031,64,FLEN)
NAN_BOXED(0x40212x7d90af6886621026909003671686,64,FLEN)
NAN_BOXED(0x7fe99bea81a3c895217069543890077845,64,FLEN)
NAN_BOXED(0x7fb801fd982d9eb7203108027223088823,64,FLEN)
NAN_BOXED(0x4000d1acx34aef92611916559173742482,64,FLEN)
NAN_BOXED(0x7fc93c9b1b3642af207957550009828015,64,FLEN)
NAN_BOXED(0x7fb801fd982d9eb7203108027223088823,64,FLEN)
NAN_BOXED(0x4000d1acx34aef92611916559173742482,64,FLEN)
NAN_BOXED(0x7fc93c9b1b3642af207957550009828015,64,FLEN)
NAN_BOXED(0x7fb801fd982d9eb7203108027223088823,64,FLEN)
NAN_BOXED(0x4000d1acx34aef92611916559173742482,64,FLEN)
NAN_BOXED(0x7fc93c9b1b3642af207957550009828015,64,FLEN)
NAN_BOXED(0x7fb801fd982d9eb7203108027223088823,64,FLEN)
NAN_BOXED(0x4000d1acx34aef92611916559173742482,64,FLEN)
NAN_BOXED(0x7fc93c9b1b3642af207957550009828015,64,FLEN)
NAN_BOXED(0x7fb801fd982d9eb7203108027223088823,64,FLEN)
NAN_BOXED(0x4000d1acx34aef92611916559173742482,64,FLEN)
NAN_BOXED(0x7fc93c9b1b3642af207957550009828015,64,FLEN)
NAN_BOXED(0x7fbde8341376716f204768523777634671,64,FLEN)
NAN_BOXED(0x4016b11ecf872x9d618073213803900829,64,FLEN)
NAN_BOXED(0x7fe5352cf9125058215830679757148248,64,FLEN)
NAN_BOXED(0x7fbde8341376716f204768523777634671,64,FLEN)
NAN_BOXED(0x4016b11ecf872x9d618073213803900829,64,FLEN)
NAN_BOXED(0x7fe5352cf9125058215830679757148248,64,FLEN)
NAN_BOXED(0x7fbde8341376716f204768523777634671,64,FLEN)
NAN_BOXED(0x4016b11ecf872x9d618073213803900829,64,FLEN)
NAN_BOXED(0x7fe5352cf9125058215830679757148248,64,FLEN)
NAN_BOXED(0x7fbde8341376716f204768523777634671,64,FLEN)
NAN_BOXED(0x4016b11ecf872x9d618073213803900829,64,FLEN)
NAN_BOXED(0x7fe5352cf9125058215830679757148248,64,FLEN)
NAN_BOXED(0x7fbde8341376716f204768523777634671,64,FLEN)
NAN_BOXED(0x4016b11ecf872x9d618073213803900829,64,FLEN)
NAN_BOXED(0x7fe5352cf9125058215830679757148248,64,FLEN)
NAN_BOXED(0x7fc03c1ecadc137f205423741295399807,64,FLEN)
NAN_BOXED(0x401f8884c44e2025620561846515933221,64,FLEN)
NAN_BOXED(0x7fefff0165x47cec218867343721266412,64,FLEN)
NAN_BOXED(0x7fc03c1ecadc137f205423741295399807,64,FLEN)
NAN_BOXED(0x401f8884c44e2025620561846515933221,64,FLEN)
NAN_BOXED(0x7fefff0165x47cec218867343721266412,64,FLEN)
NAN_BOXED(0x7fc03c1ecadc137f205423741295399807,64,FLEN)
NAN_BOXED(0x401f8884c44e2025620561846515933221,64,FLEN)
NAN_BOXED(0x7fefff0165x47cec218867343721266412,64,FLEN)
NAN_BOXED(0x7fc03c1ecadc137f205423741295399807,64,FLEN)
NAN_BOXED(0x401f8884c44e2025620561846515933221,64,FLEN)
NAN_BOXED(0x7fefff0165x47cec218867343721266412,64,FLEN)
NAN_BOXED(0x7fc03c1ecadc137f205423741295399807,64,FLEN)
NAN_BOXED(0x401f8884c44e2025620561846515933221,64,FLEN)
NAN_BOXED(0x7fefff0165x47cec218867343721266412,64,FLEN)
NAN_BOXED(0x7fc8b3ba7903c2ab207807051634557611,64,FLEN)
NAN_BOXED(0x4006f3177f7676dd613642150535919325,64,FLEN)
NAN_BOXED(0x7fe1b73726cc4ff0214847760078753776,64,FLEN)
NAN_BOXED(0x7fc8b3ba7903c2ab207807051634557611,64,FLEN)
NAN_BOXED(0x4006f3177f7676dd613642150535919325,64,FLEN)
NAN_BOXED(0x7fe1b73726cc4ff0214847760078753776,64,FLEN)
NAN_BOXED(0x7fc8b3ba7903c2ab207807051634557611,64,FLEN)
NAN_BOXED(0x4006f3177f7676dd613642150535919325,64,FLEN)
NAN_BOXED(0x7fe1b73726cc4ff0214847760078753776,64,FLEN)
NAN_BOXED(0x7fc8b3ba7903c2ab207807051634557611,64,FLEN)
NAN_BOXED(0x4006f3177f7676dd613642150535919325,64,FLEN)
NAN_BOXED(0x7fe1b73726cc4ff0214847760078753776,64,FLEN)
NAN_BOXED(0x7fc8b3ba7903c2ab207807051634557611,64,FLEN)
NAN_BOXED(0x4006f3177f7676dd613642150535919325,64,FLEN)
NAN_BOXED(0x7fe1b73726cc4ff0214847760078753776,64,FLEN)
NAN_BOXED(0x7fc9b63fed3f1873208091298815219827,64,FLEN)
NAN_BOXED(0x400a1a2014c80658614529493284423256,64,FLEN)
NAN_BOXED(0x7fe4f911cba6947d215764592333329533,64,FLEN)
NAN_BOXED(0x7fc9b63fed3f1873208091298815219827,64,FLEN)
NAN_BOXED(0x400a1a2014c80658614529493284423256,64,FLEN)
NAN_BOXED(0x7fe4f911cba6947d215764592333329533,64,FLEN)
NAN_BOXED(0x7fc9b63fed3f1873208091298815219827,64,FLEN)
NAN_BOXED(0x400a1a2014c80658614529493284423256,64,FLEN)
NAN_BOXED(0x7fe4f911cba6947d215764592333329533,64,FLEN)
NAN_BOXED(0x7fc9b63fed3f1873208091298815219827,64,FLEN)
NAN_BOXED(0x400a1a2014c80658614529493284423256,64,FLEN)
NAN_BOXED(0x7fe4f911cba6947d215764592333329533,64,FLEN)
NAN_BOXED(0x7fc9b63fed3f1873208091298815219827,64,FLEN)
NAN_BOXED(0x400a1a2014c80658614529493284423256,64,FLEN)
NAN_BOXED(0x7fe4f911cba6947d215764592333329533,64,FLEN)
NAN_BOXED(0x7fcadd854d58145f208415952710407263,64,FLEN)
NAN_BOXED(0x40107ed749ax0a91616329081174035089,64,FLEN)
NAN_BOXED(0x7febb27f4381021f217657322006970911,64,FLEN)
NAN_BOXED(0x7fcadd854d58145f208415952710407263,64,FLEN)
NAN_BOXED(0x40107ed749ax0a91616329081174035089,64,FLEN)
NAN_BOXED(0x7febb27f4381021f217657322006970911,64,FLEN)
NAN_BOXED(0x7fcadd854d58145f208415952710407263,64,FLEN)
NAN_BOXED(0x40107ed749ax0a91616329081174035089,64,FLEN)
NAN_BOXED(0x7febb27f4381021f217657322006970911,64,FLEN)
NAN_BOXED(0x7fcadd854d58145f208415952710407263,64,FLEN)
NAN_BOXED(0x40107ed749ax0a91616329081174035089,64,FLEN)
NAN_BOXED(0x7febb27f4381021f217657322006970911,64,FLEN)
NAN_BOXED(0x7fcadd854d58145f208415952710407263,64,FLEN)
NAN_BOXED(0x40107ed749ax0a91616329081174035089,64,FLEN)
NAN_BOXED(0x7febb27f4381021f217657322006970911,64,FLEN)
NAN_BOXED(0x7fd173e2abe9259b210270130333361563,64,FLEN)
NAN_BOXED(0x4007867ec4d41237613804222290596407,64,FLEN)
NAN_BOXED(0x7fe9a94aa8cadc89217084250514971785,64,FLEN)
NAN_BOXED(0x7fd173e2abe9259b210270130333361563,64,FLEN)
NAN_BOXED(0x4007867ec4d41237613804222290596407,64,FLEN)
NAN_BOXED(0x7fe9a94aa8cadc89217084250514971785,64,FLEN)
NAN_BOXED(0x7fd173e2abe9259b210270130333361563,64,FLEN)
NAN_BOXED(0x4007867ec4d41237613804222290596407,64,FLEN)
NAN_BOXED(0x7fe9a94aa8cadc89217084250514971785,64,FLEN)
NAN_BOXED(0x7fd173e2abe9259b210270130333361563,64,FLEN)
NAN_BOXED(0x4007867ec4d41237613804222290596407,64,FLEN)
NAN_BOXED(0x7fe9a94aa8cadc89217084250514971785,64,FLEN)
NAN_BOXED(0x7fd173e2abe9259b210270130333361563,64,FLEN)
NAN_BOXED(0x4007867ec4d41237613804222290596407,64,FLEN)
NAN_BOXED(0x7fe9a94aa8cadc89217084250514971785,64,FLEN)
NAN_BOXED(0x7fd3fc6805c084d1210983186606097617,64,FLEN)
NAN_BOXED(0x3fe41b82ca2e0c7d603834967631203453,64,FLEN)
NAN_BOXED(0x7fc91ddf5613b02f207923758194733103,64,FLEN)
NAN_BOXED(0x7fd3fc6805c084d1210983186606097617,64,FLEN)
NAN_BOXED(0x3fe41b82ca2e0c7d603834967631203453,64,FLEN)
NAN_BOXED(0x7fc91ddf5613b02f207923758194733103,64,FLEN)
NAN_BOXED(0x7fd3fc6805c084d1210983186606097617,64,FLEN)
NAN_BOXED(0x3fe41b82ca2e0c7d603834967631203453,64,FLEN)
NAN_BOXED(0x7fc91ddf5613b02f207923758194733103,64,FLEN)
NAN_BOXED(0x7fd3fc6805c084d1210983186606097617,64,FLEN)
NAN_BOXED(0x3fe41b82ca2e0c7d603834967631203453,64,FLEN)
NAN_BOXED(0x7fc91ddf5613b02f207923758194733103,64,FLEN)
NAN_BOXED(0x7fd3fc6805c084d1210983186606097617,64,FLEN)
NAN_BOXED(0x3fe41b82ca2e0c7d603834967631203453,64,FLEN)
NAN_BOXED(0x7fc91ddf5613b02f207923758194733103,64,FLEN)
NAN_BOXED(0x7fd54e6e64764369211354848895058793,64,FLEN)
NAN_BOXED(0x4005bbe5dcd5070e613299989237794574,64,FLEN)
NAN_BOXED(0x7fecf127a6ax77f2218007689923098610,64,FLEN)
NAN_BOXED(0x7fd54e6e64764369211354848895058793,64,FLEN)
NAN_BOXED(0x4005bbe5dcd5070e613299989237794574,64,FLEN)
NAN_BOXED(0x7fecf127a6ax77f2218007689923098610,64,FLEN)
NAN_BOXED(0x7fd54e6e64764369211354848895058793,64,FLEN)
NAN_BOXED(0x4005bbe5dcd5070e613299989237794574,64,FLEN)
NAN_BOXED(0x7fecf127a6ax77f2218007689923098610,64,FLEN)
NAN_BOXED(0x7fd54e6e64764369211354848895058793,64,FLEN)
NAN_BOXED(0x4005bbe5dcd5070e613299989237794574,64,FLEN)
NAN_BOXED(0x7fecf127a6ax77f2218007689923098610,64,FLEN)
NAN_BOXED(0x7fd54e6e64764369211354848895058793,64,FLEN)
NAN_BOXED(0x4005bbe5dcd5070e613299989237794574,64,FLEN)
NAN_BOXED(0x7fecf127a6ax77f2218007689923098610,64,FLEN)
NAN_BOXED(0x7fd7107573e4c40b211849659451229195,64,FLEN)
NAN_BOXED(0x4004b4a64f556751613010544722798417,64,FLEN)
NAN_BOXED(0x7fedd8fbb754b55c218262587921446236,64,FLEN)
NAN_BOXED(0x7fd7107573e4c40b211849659451229195,64,FLEN)
NAN_BOXED(0x4004b4a64f556751613010544722798417,64,FLEN)
NAN_BOXED(0x7fedd8fbb754b55c218262587921446236,64,FLEN)
NAN_BOXED(0x7fd7107573e4c40b211849659451229195,64,FLEN)
NAN_BOXED(0x4004b4a64f556751613010544722798417,64,FLEN)
NAN_BOXED(0x7fedd8fbb754b55c218262587921446236,64,FLEN)
NAN_BOXED(0x7fd7107573e4c40b211849659451229195,64,FLEN)
NAN_BOXED(0x4004b4a64f556751613010544722798417,64,FLEN)
NAN_BOXED(0x7fedd8fbb754b55c218262587921446236,64,FLEN)
NAN_BOXED(0x7fd7107573e4c40b211849659451229195,64,FLEN)
NAN_BOXED(0x4004b4a64f556751613010544722798417,64,FLEN)
NAN_BOXED(0x7fedd8fbb754b55c218262587921446236,64,FLEN)
NAN_BOXED(0x7fd7e1dc0a8e1a11212079897995778577,64,FLEN)
NAN_BOXED(0x400082b9acfac9b7611829752410065335,64,FLEN)
NAN_BOXED(0x7fe8a4fc4c166a46216798040928971334,64,FLEN)
NAN_BOXED(0x7fd7e1dc0a8e1a11212079897995778577,64,FLEN)
NAN_BOXED(0x400082b9acfac9b7611829752410065335,64,FLEN)
NAN_BOXED(0x7fe8a4fc4c166a46216798040928971334,64,FLEN)
NAN_BOXED(0x7fd7e1dc0a8e1a11212079897995778577,64,FLEN)
NAN_BOXED(0x400082b9acfac9b7611829752410065335,64,FLEN)
NAN_BOXED(0x7fe8a4fc4c166a46216798040928971334,64,FLEN)
NAN_BOXED(0x7fd7e1dc0a8e1a11212079897995778577,64,FLEN)
NAN_BOXED(0x400082b9acfac9b7611829752410065335,64,FLEN)
NAN_BOXED(0x7fe8a4fc4c166a46216798040928971334,64,FLEN)
NAN_BOXED(0x7fd7e1dc0a8e1a11212079897995778577,64,FLEN)
NAN_BOXED(0x400082b9acfac9b7611829752410065335,64,FLEN)
NAN_BOXED(0x7fe8a4fc4c166a46216798040928971334,64,FLEN)
NAN_BOXED(0x7fd8276674380fc3212156358776328131,64,FLEN)
NAN_BOXED(0x3fx07fa3fe059060607322761118191712,64,FLEN)
NAN_BOXED(0x7fd8e816c2502d73212368222233308531,64,FLEN)
NAN_BOXED(0x7fd8276674380fc3212156358776328131,64,FLEN)
NAN_BOXED(0x3fx07fa3fe059060607322761118191712,64,FLEN)
NAN_BOXED(0x7fd8e816c2502d73212368222233308531,64,FLEN)
NAN_BOXED(0x7fd8276674380fc3212156358776328131,64,FLEN)
NAN_BOXED(0x3fx07fa3fe059060607322761118191712,64,FLEN)
NAN_BOXED(0x7fd8e816c2502d73212368222233308531,64,FLEN)
NAN_BOXED(0x7fd8276674380fc3212156358776328131,64,FLEN)
NAN_BOXED(0x3fx07fa3fe059060607322761118191712,64,FLEN)
NAN_BOXED(0x7fd8e816c2502d73212368222233308531,64,FLEN)
NAN_BOXED(0x7fd8276674380fc3212156358776328131,64,FLEN)
NAN_BOXED(0x3fx07fa3fe059060607322761118191712,64,FLEN)
NAN_BOXED(0x7fd8e816c2502d73212368222233308531,64,FLEN)
NAN_BOXED(0x7fdc9ed4464571af213413572242403759,64,FLEN)
NAN_BOXED(0x3ffdbdc83df362e4611050261227725540,64,FLEN)
NAN_BOXED(0x7fea99ad8d852394217348558049846164,64,FLEN)
NAN_BOXED(0x7fdc9ed4464571af213413572242403759,64,FLEN)
NAN_BOXED(0x3ffdbdc83df362e4611050261227725540,64,FLEN)
NAN_BOXED(0x7fea99ad8d852394217348558049846164,64,FLEN)
NAN_BOXED(0x7fdc9ed4464571af213413572242403759,64,FLEN)
NAN_BOXED(0x3ffdbdc83df362e4611050261227725540,64,FLEN)
NAN_BOXED(0x7fea99ad8d852394217348558049846164,64,FLEN)
NAN_BOXED(0x7fdc9ed4464571af213413572242403759,64,FLEN)
NAN_BOXED(0x3ffdbdc83df362e4611050261227725540,64,FLEN)
NAN_BOXED(0x7fea99ad8d852394217348558049846164,64,FLEN)
NAN_BOXED(0x7fdc9ed4464571af213413572242403759,64,FLEN)
NAN_BOXED(0x3ffdbdc83df362e4611050261227725540,64,FLEN)
NAN_BOXED(0x7fea99ad8d852394217348558049846164,64,FLEN)
NAN_BOXED(0x7fde18a54fb9615f213828985932833119,64,FLEN)
NAN_BOXED(0x3fx9d9644x56bb65609954718441454437,64,FLEN)
NAN_BOXED(0x7fe84fb69ef078ea216704283182921962,64,FLEN)
NAN_BOXED(0x7fde18a54fb9615f213828985932833119,64,FLEN)
NAN_BOXED(0x3fx9d9644x56bb65609954718441454437,64,FLEN)
NAN_BOXED(0x7fe84fb69ef078ea216704283182921962,64,FLEN)
NAN_BOXED(0x7fde18a54fb9615f213828985932833119,64,FLEN)
NAN_BOXED(0x3fx9d9644x56bb65609954718441454437,64,FLEN)
NAN_BOXED(0x7fe84fb69ef078ea216704283182921962,64,FLEN)
NAN_BOXED(0x7fde18a54fb9615f213828985932833119,64,FLEN)
NAN_BOXED(0x3fx9d9644x56bb65609954718441454437,64,FLEN)
NAN_BOXED(0x7fe84fb69ef078ea216704283182921962,64,FLEN)
NAN_BOXED(0x7fde18a54fb9615f213828985932833119,64,FLEN)
NAN_BOXED(0x3fx9d9644x56bb65609954718441454437,64,FLEN)
NAN_BOXED(0x7fe84fb69ef078ea216704283182921962,64,FLEN)
NAN_BOXED(0x7fdex5aa91c82b3d214072000585673533,64,FLEN)
NAN_BOXED(0x3fd24583e9aa4a5b598814602361981531,64,FLEN)
NAN_BOXED(0x7fc1ad71498eb7bb205829815399004091,64,FLEN)
NAN_BOXED(0x7fdex5aa91c82b3d214072000585673533,64,FLEN)
NAN_BOXED(0x3fd24583e9aa4a5b598814602361981531,64,FLEN)
NAN_BOXED(0x7fc1ad71498eb7bb205829815399004091,64,FLEN)
NAN_BOXED(0x7fdex5aa91c82b3d214072000585673533,64,FLEN)
NAN_BOXED(0x3fd24583e9aa4a5b598814602361981531,64,FLEN)
NAN_BOXED(0x7fc1ad71498eb7bb205829815399004091,64,FLEN)
NAN_BOXED(0x7fdex5aa91c82b3d214072000585673533,64,FLEN)
NAN_BOXED(0x3fd24583e9aa4a5b598814602361981531,64,FLEN)
NAN_BOXED(0x7fc1ad71498eb7bb205829815399004091,64,FLEN)
NAN_BOXED(0x7fdex5aa91c82b3d214072000585673533,64,FLEN)
NAN_BOXED(0x3fd24583e9aa4a5b598814602361981531,64,FLEN)
NAN_BOXED(0x7fc1ad71498eb7bb205829815399004091,64,FLEN)
NAN_BOXED(0x7fdx0aceae190521214095245423740193,64,FLEN)
NAN_BOXED(0x3fe142a90077145a603033587774067802,64,FLEN)
NAN_BOXED(0x7fd0be68084b69b7210070591997700535,64,FLEN)
NAN_BOXED(0x7fdx0aceae190521214095245423740193,64,FLEN)
NAN_BOXED(0x3fe142a90077145a603033587774067802,64,FLEN)
NAN_BOXED(0x7fd0be68084b69b7210070591997700535,64,FLEN)
NAN_BOXED(0x7fdx0aceae190521214095245423740193,64,FLEN)
NAN_BOXED(0x3fe142a90077145a603033587774067802,64,FLEN)
NAN_BOXED(0x7fd0be68084b69b7210070591997700535,64,FLEN)
NAN_BOXED(0x7fdx0aceae190521214095245423740193,64,FLEN)
NAN_BOXED(0x3fe142a90077145a603033587774067802,64,FLEN)
NAN_BOXED(0x7fd0be68084b69b7210070591997700535,64,FLEN)
NAN_BOXED(0x7fdx0aceae190521214095245423740193,64,FLEN)
NAN_BOXED(0x3fe142a90077145a603033587774067802,64,FLEN)
NAN_BOXED(0x7fd0be68084b69b7210070591997700535,64,FLEN)
NAN_BOXED(0x7fe139cbde283143214709860345065795,64,FLEN)
NAN_BOXED(0x3ff445c6db753ea9608385039094595241,64,FLEN)
NAN_BOXED(0x7fe5d35e2c6078a3216004613908494499,64,FLEN)
NAN_BOXED(0x7fe139cbde283143214709860345065795,64,FLEN)
NAN_BOXED(0x3ff445c6db753ea9608385039094595241,64,FLEN)
NAN_BOXED(0x7fe5d35e2c6078a3216004613908494499,64,FLEN)
NAN_BOXED(0x7fe139cbde283143214709860345065795,64,FLEN)
NAN_BOXED(0x3ff445c6db753ea9608385039094595241,64,FLEN)
NAN_BOXED(0x7fe5d35e2c6078a3216004613908494499,64,FLEN)
NAN_BOXED(0x7fe139cbde283143214709860345065795,64,FLEN)
NAN_BOXED(0x3ff445c6db753ea9608385039094595241,64,FLEN)
NAN_BOXED(0x7fe5d35e2c6078a3216004613908494499,64,FLEN)
NAN_BOXED(0x7fe139cbde283143214709860345065795,64,FLEN)
NAN_BOXED(0x3ff445c6db753ea9608385039094595241,64,FLEN)
NAN_BOXED(0x7fe5d35e2c6078a3216004613908494499,64,FLEN)
NAN_BOXED(0x7fe2da5x3c7a7466215167890124862566,64,FLEN)
NAN_BOXED(0x3fc37c47ae0bad3a594652692152560954,64,FLEN)
NAN_BOXED(0x7fb6x5c1f001498f202813101882296719,64,FLEN)
NAN_BOXED(0x7fe2da5x3c7a7466215167890124862566,64,FLEN)
NAN_BOXED(0x3fc37c47ae0bad3a594652692152560954,64,FLEN)
NAN_BOXED(0x7fb6x5c1f001498f202813101882296719,64,FLEN)
NAN_BOXED(0x7fe2da5x3c7a7466215167890124862566,64,FLEN)
NAN_BOXED(0x3fc37c47ae0bad3a594652692152560954,64,FLEN)
NAN_BOXED(0x7fb6x5c1f001498f202813101882296719,64,FLEN)
NAN_BOXED(0x7fe2da5x3c7a7466215167890124862566,64,FLEN)
NAN_BOXED(0x3fc37c47ae0bad3a594652692152560954,64,FLEN)
NAN_BOXED(0x7fb6x5c1f001498f202813101882296719,64,FLEN)
NAN_BOXED(0x7fe2da5x3c7a7466215167890124862566,64,FLEN)
NAN_BOXED(0x3fc37c47ae0bad3a594652692152560954,64,FLEN)
NAN_BOXED(0x7fb6x5c1f001498f202813101882296719,64,FLEN)
NAN_BOXED(0x7fe341836db80049215281295267463241,64,FLEN)
NAN_BOXED(0x3fe02efa596fbdf8602730471949843960,64,FLEN)
NAN_BOXED(0x7fd37a0d12dbe9d7210839859472361943,64,FLEN)
NAN_BOXED(0x7fe341836db80049215281295267463241,64,FLEN)
NAN_BOXED(0x3fe02efa596fbdf8602730471949843960,64,FLEN)
NAN_BOXED(0x7fd37a0d12dbe9d7210839859472361943,64,FLEN)
NAN_BOXED(0x7fe341836db80049215281295267463241,64,FLEN)
NAN_BOXED(0x3fe02efa596fbdf8602730471949843960,64,FLEN)
NAN_BOXED(0x7fd37a0d12dbe9d7210839859472361943,64,FLEN)
NAN_BOXED(0x7fe341836db80049215281295267463241,64,FLEN)
NAN_BOXED(0x3fe02efa596fbdf8602730471949843960,64,FLEN)
NAN_BOXED(0x7fd37a0d12dbe9d7210839859472361943,64,FLEN)
NAN_BOXED(0x7fe341836db80049215281295267463241,64,FLEN)
NAN_BOXED(0x3fe02efa596fbdf8602730471949843960,64,FLEN)
NAN_BOXED(0x7fd37a0d12dbe9d7210839859472361943,64,FLEN)
NAN_BOXED(0x7fe3d93686797715215448090737735445,64,FLEN)
NAN_BOXED(0x3fdf9620c1581628602562411622831656,64,FLEN)
NAN_BOXED(0x7fd3978b52fx3f23210872287551504163,64,FLEN)
NAN_BOXED(0x7fe3d93686797715215448090737735445,64,FLEN)
NAN_BOXED(0x3fdf9620c1581628602562411622831656,64,FLEN)
NAN_BOXED(0x7fd3978b52fx3f23210872287551504163,64,FLEN)
NAN_BOXED(0x7fe3d93686797715215448090737735445,64,FLEN)
NAN_BOXED(0x3fdf9620c1581628602562411622831656,64,FLEN)
NAN_BOXED(0x7fd3978b52fx3f23210872287551504163,64,FLEN)
NAN_BOXED(0x7fe3d93686797715215448090737735445,64,FLEN)
NAN_BOXED(0x3fdf9620c1581628602562411622831656,64,FLEN)
NAN_BOXED(0x7fd3978b52fx3f23210872287551504163,64,FLEN)
NAN_BOXED(0x7fe3d93686797715215448090737735445,64,FLEN)
NAN_BOXED(0x3fdf9620c1581628602562411622831656,64,FLEN)
NAN_BOXED(0x7fd3978b52fx3f23210872287551504163,64,FLEN)
NAN_BOXED(0x7fe45141572f8653215580078584333907,64,FLEN)
NAN_BOXED(0x3fdd59f46589e2bf601933300452942527,64,FLEN)
NAN_BOXED(0x7fd2a2c060c7c8c5210603135067211973,64,FLEN)
NAN_BOXED(0x7fe45141572f8653215580078584333907,64,FLEN)
NAN_BOXED(0x3fdd59f46589e2bf601933300452942527,64,FLEN)
NAN_BOXED(0x7fd2a2c060c7c8c5210603135067211973,64,FLEN)
NAN_BOXED(0x7fe45141572f8653215580078584333907,64,FLEN)
NAN_BOXED(0x3fdd59f46589e2bf601933300452942527,64,FLEN)
NAN_BOXED(0x7fd2a2c060c7c8c5210603135067211973,64,FLEN)
NAN_BOXED(0x7fe45141572f8653215580078584333907,64,FLEN)
NAN_BOXED(0x3fdd59f46589e2bf601933300452942527,64,FLEN)
NAN_BOXED(0x7fd2a2c060c7c8c5210603135067211973,64,FLEN)
NAN_BOXED(0x7fe45141572f8653215580078584333907,64,FLEN)
NAN_BOXED(0x3fdd59f46589e2bf601933300452942527,64,FLEN)
NAN_BOXED(0x7fd2a2c060c7c8c5210603135067211973,64,FLEN)
NAN_BOXED(0x7fe4a0550fe15035215667024705966133,64,FLEN)
NAN_BOXED(0x3ff152f2078be37b607555093238899579,64,FLEN)
NAN_BOXED(0x7fe655481791d37f216147455581737855,64,FLEN)
NAN_BOXED(0x7fe4a0550fe15035215667024705966133,64,FLEN)
NAN_BOXED(0x3ff152f2078be37b607555093238899579,64,FLEN)
NAN_BOXED(0x7fe655481791d37f216147455581737855,64,FLEN)
NAN_BOXED(0x7fe4a0550fe15035215667024705966133,64,FLEN)
NAN_BOXED(0x3ff152f2078be37b607555093238899579,64,FLEN)
NAN_BOXED(0x7fe655481791d37f216147455581737855,64,FLEN)
NAN_BOXED(0x7fe4a0550fe15035215667024705966133,64,FLEN)
NAN_BOXED(0x3ff152f2078be37b607555093238899579,64,FLEN)
NAN_BOXED(0x7fe655481791d37f216147455581737855,64,FLEN)
NAN_BOXED(0x7fe4a0550fe15035215667024705966133,64,FLEN)
NAN_BOXED(0x3ff152f2078be37b607555093238899579,64,FLEN)
NAN_BOXED(0x7fe655481791d37f216147455581737855,64,FLEN)
NAN_BOXED(0x7fe5726b277b5dce215898017033051598,64,FLEN)
NAN_BOXED(0x3fx53c36b188da64608655999288007268,64,FLEN)
NAN_BOXED(0x7fec76e305c8d1af217873254747263407,64,FLEN)
NAN_BOXED(0x7fe5726b277b5dce215898017033051598,64,FLEN)
NAN_BOXED(0x3fx53c36b188da64608655999288007268,64,FLEN)
NAN_BOXED(0x7fec76e305c8d1af217873254747263407,64,FLEN)
NAN_BOXED(0x7fe5726b277b5dce215898017033051598,64,FLEN)
NAN_BOXED(0x3fx53c36b188da64608655999288007268,64,FLEN)
NAN_BOXED(0x7fec76e305c8d1af217873254747263407,64,FLEN)
NAN_BOXED(0x7fe5726b277b5dce215898017033051598,64,FLEN)
NAN_BOXED(0x3fx53c36b188da64608655999288007268,64,FLEN)
NAN_BOXED(0x7fec76e305c8d1af217873254747263407,64,FLEN)
NAN_BOXED(0x7fe5726b277b5dce215898017033051598,64,FLEN)
NAN_BOXED(0x3fx53c36b188da64608655999288007268,64,FLEN)
NAN_BOXED(0x7fec76e305c8d1af217873254747263407,64,FLEN)
NAN_BOXED(0x7fe657d95216ac01216150278357036033,64,FLEN)
NAN_BOXED(0x3f925d92dbf7772b580826656326252331,64,FLEN)
NAN_BOXED(0x7x89a5803051b37f190058484611265407,64,FLEN)
NAN_BOXED(0x7fe657d95216ac01216150278357036033,64,FLEN)
NAN_BOXED(0x3f925d92dbf7772b580826656326252331,64,FLEN)
NAN_BOXED(0x7x89a5803051b37f190058484611265407,64,FLEN)
NAN_BOXED(0x7fe657d95216ac01216150278357036033,64,FLEN)
NAN_BOXED(0x3f925d92dbf7772b580826656326252331,64,FLEN)
NAN_BOXED(0x7x89a5803051b37f190058484611265407,64,FLEN)
NAN_BOXED(0x7fe657d95216ac01216150278357036033,64,FLEN)
NAN_BOXED(0x3f925d92dbf7772b580826656326252331,64,FLEN)
NAN_BOXED(0x7x89a5803051b37f190058484611265407,64,FLEN)
NAN_BOXED(0x7fe657d95216ac01216150278357036033,64,FLEN)
NAN_BOXED(0x3f925d92dbf7772b580826656326252331,64,FLEN)
NAN_BOXED(0x7x89a5803051b37f190058484611265407,64,FLEN)
NAN_BOXED(0x7fe75ab99b7d728b216434915661148811,64,FLEN)
NAN_BOXED(0x3fe2270fb41a1218603284717525668376,64,FLEN)
NAN_BOXED(0x7fda7x14dx48da55212815715361938005,64,FLEN)
NAN_BOXED(0x7fe75ab99b7d728b216434915661148811,64,FLEN)
NAN_BOXED(0x3fe2270fb41a1218603284717525668376,64,FLEN)
NAN_BOXED(0x7fda7x14dx48da55212815715361938005,64,FLEN)
NAN_BOXED(0x7fe75ab99b7d728b216434915661148811,64,FLEN)
NAN_BOXED(0x3fe2270fb41a1218603284717525668376,64,FLEN)
NAN_BOXED(0x7fda7x14dx48da55212815715361938005,64,FLEN)
NAN_BOXED(0x7fe75ab99b7d728b216434915661148811,64,FLEN)
NAN_BOXED(0x3fe2270fb41a1218603284717525668376,64,FLEN)
NAN_BOXED(0x7fda7x14dx48da55212815715361938005,64,FLEN)
NAN_BOXED(0x7fe75ab99b7d728b216434915661148811,64,FLEN)
NAN_BOXED(0x3fe2270fb41a1218603284717525668376,64,FLEN)
NAN_BOXED(0x7fda7x14dx48da55212815715361938005,64,FLEN)
NAN_BOXED(0x7fe7e1cbdffe4992216583428189604242,64,FLEN)
NAN_BOXED(0x3fe10e1c43d3c4e6602975808709182694,64,FLEN)
NAN_BOXED(0x7fd974f860c491f9212523122887266809,64,FLEN)
NAN_BOXED(0x7fe7e1cbdffe4992216583428189604242,64,FLEN)
NAN_BOXED(0x3fe10e1c43d3c4e6602975808709182694,64,FLEN)
NAN_BOXED(0x7fd974f860c491f9212523122887266809,64,FLEN)
NAN_BOXED(0x7fe7e1cbdffe4992216583428189604242,64,FLEN)
NAN_BOXED(0x3fe10e1c43d3c4e6602975808709182694,64,FLEN)
NAN_BOXED(0x7fd974f860c491f9212523122887266809,64,FLEN)
NAN_BOXED(0x7fe7e1cbdffe4992216583428189604242,64,FLEN)
NAN_BOXED(0x3fe10e1c43d3c4e6602975808709182694,64,FLEN)
NAN_BOXED(0x7fd974f860c491f9212523122887266809,64,FLEN)
NAN_BOXED(0x7fe7e1cbdffe4992216583428189604242,64,FLEN)
NAN_BOXED(0x3fe10e1c43d3c4e6602975808709182694,64,FLEN)
NAN_BOXED(0x7fd974f860c491f9212523122887266809,64,FLEN)
NAN_BOXED(0x7fe8e5d8dcad33c4216869356991755204,64,FLEN)
NAN_BOXED(0x3f967373f406a831581976612748568625,64,FLEN)
NAN_BOXED(0x7f9177d952x13e9f192260089723043487,64,FLEN)
NAN_BOXED(0x7fe8e5d8dcad33c4216869356991755204,64,FLEN)
NAN_BOXED(0x3f967373f406a831581976612748568625,64,FLEN)
NAN_BOXED(0x7f9177d952x13e9f192260089723043487,64,FLEN)
NAN_BOXED(0x7fe8e5d8dcad33c4216869356991755204,64,FLEN)
NAN_BOXED(0x3f967373f406a831581976612748568625,64,FLEN)
NAN_BOXED(0x7f9177d952x13e9f192260089723043487,64,FLEN)
NAN_BOXED(0x7fe8e5d8dcad33c4216869356991755204,64,FLEN)
NAN_BOXED(0x3f967373f406a831581976612748568625,64,FLEN)
NAN_BOXED(0x7f9177d952x13e9f192260089723043487,64,FLEN)
NAN_BOXED(0x7fe8e5d8dcad33c4216869356991755204,64,FLEN)
NAN_BOXED(0x3f967373f406a831581976612748568625,64,FLEN)
NAN_BOXED(0x7f9177d952x13e9f192260089723043487,64,FLEN)
NAN_BOXED(0x7fe9630abe4b977e217007010183878526,64,FLEN)
NAN_BOXED(0x3ff093bbbbab15dc607344853316736476,64,FLEN)
NAN_BOXED(0x7fea4d72905280d4217264741810077908,64,FLEN)
NAN_BOXED(0x7fe9630abe4b977e217007010183878526,64,FLEN)
NAN_BOXED(0x3ff093bbbbab15dc607344853316736476,64,FLEN)
NAN_BOXED(0x7fea4d72905280d4217264741810077908,64,FLEN)
NAN_BOXED(0x7fe9630abe4b977e217007010183878526,64,FLEN)
NAN_BOXED(0x3ff093bbbbab15dc607344853316736476,64,FLEN)
NAN_BOXED(0x7fea4d72905280d4217264741810077908,64,FLEN)
NAN_BOXED(0x7fe9630abe4b977e217007010183878526,64,FLEN)
NAN_BOXED(0x3ff093bbbbab15dc607344853316736476,64,FLEN)
NAN_BOXED(0x7fea4d72905280d4217264741810077908,64,FLEN)
NAN_BOXED(0x7fe9630abe4b977e217007010183878526,64,FLEN)
NAN_BOXED(0x3ff093bbbbab15dc607344853316736476,64,FLEN)
NAN_BOXED(0x7fea4d72905280d4217264741810077908,64,FLEN)
NAN_BOXED(0x7fe9b52b2a70b02a217097309390680106,64,FLEN)
NAN_BOXED(0x3feb500d269fc9eb605863061329267179,64,FLEN)
NAN_BOXED(0x7fe5x12be85a3941216037383367702849,64,FLEN)
NAN_BOXED(0x7fe9b52b2a70b02a217097309390680106,64,FLEN)
NAN_BOXED(0x3feb500d269fc9eb605863061329267179,64,FLEN)
NAN_BOXED(0x7fe5x12be85a3941216037383367702849,64,FLEN)
NAN_BOXED(0x7fe9b52b2a70b02a217097309390680106,64,FLEN)
NAN_BOXED(0x3feb500d269fc9eb605863061329267179,64,FLEN)
NAN_BOXED(0x7fe5x12be85a3941216037383367702849,64,FLEN)
NAN_BOXED(0x7fe9b52b2a70b02a217097309390680106,64,FLEN)
NAN_BOXED(0x3feb500d269fc9eb605863061329267179,64,FLEN)
NAN_BOXED(0x7fe5x12be85a3941216037383367702849,64,FLEN)
NAN_BOXED(0x7fe9b52b2a70b02a217097309390680106,64,FLEN)
NAN_BOXED(0x3feb500d269fc9eb605863061329267179,64,FLEN)
NAN_BOXED(0x7fe5x12be85a3941216037383367702849,64,FLEN)
NAN_BOXED(0x7fe9c0c529007f92217110065419419538,64,FLEN)
NAN_BOXED(0x3fe1b3e375a83590603158083662263696,64,FLEN)
NAN_BOXED(0x7fdc7e5c3598d2dd213377872194491101,64,FLEN)
NAN_BOXED(0x7fe9c0c529007f92217110065419419538,64,FLEN)
NAN_BOXED(0x3fe1b3e375a83590603158083662263696,64,FLEN)
NAN_BOXED(0x7fdc7e5c3598d2dd213377872194491101,64,FLEN)
NAN_BOXED(0x7fe9c0c529007f92217110065419419538,64,FLEN)
NAN_BOXED(0x3fe1b3e375a83590603158083662263696,64,FLEN)
NAN_BOXED(0x7fdc7e5c3598d2dd213377872194491101,64,FLEN)
NAN_BOXED(0x7fe9c0c529007f92217110065419419538,64,FLEN)
NAN_BOXED(0x3fe1b3e375a83590603158083662263696,64,FLEN)
NAN_BOXED(0x7fdc7e5c3598d2dd213377872194491101,64,FLEN)
NAN_BOXED(0x7fe9c0c529007f92217110065419419538,64,FLEN)
NAN_BOXED(0x3fe1b3e375a83590603158083662263696,64,FLEN)
NAN_BOXED(0x7fdc7e5c3598d2dd213377872194491101,64,FLEN)
NAN_BOXED(0x7fe9c39382ea6198217113150714438040,64,FLEN)
NAN_BOXED(0x3fd51b4351475892599612570369218706,64,FLEN)
NAN_BOXED(0x7fd0fe4c054d9e8b210140840432606859,64,FLEN)
NAN_BOXED(0x7fe9c39382ea6198217113150714438040,64,FLEN)
NAN_BOXED(0x3fd51b4351475892599612570369218706,64,FLEN)
NAN_BOXED(0x7fd0fe4c054d9e8b210140840432606859,64,FLEN)
NAN_BOXED(0x7fe9c39382ea6198217113150714438040,64,FLEN)
NAN_BOXED(0x3fd51b4351475892599612570369218706,64,FLEN)
NAN_BOXED(0x7fd0fe4c054d9e8b210140840432606859,64,FLEN)
NAN_BOXED(0x7fe9c39382ea6198217113150714438040,64,FLEN)
NAN_BOXED(0x3fd51b4351475892599612570369218706,64,FLEN)
NAN_BOXED(0x7fd0fe4c054d9e8b210140840432606859,64,FLEN)
NAN_BOXED(0x7fe9c39382ea6198217113150714438040,64,FLEN)
NAN_BOXED(0x3fd51b4351475892599612570369218706,64,FLEN)
NAN_BOXED(0x7fd0fe4c054d9e8b210140840432606859,64,FLEN)
NAN_BOXED(0x7fe9c6b24203c777217116581304452983,64,FLEN)
NAN_BOXED(0x3ff364e03ex31b27608137758021720871,64,FLEN)
NAN_BOXED(0x7fex3e76cbaa48e2218655642194692322,64,FLEN)
NAN_BOXED(0x7fe9c6b24203c777217116581304452983,64,FLEN)
NAN_BOXED(0x3ff364e03ex31b27608137758021720871,64,FLEN)
NAN_BOXED(0x7fex3e76cbaa48e2218655642194692322,64,FLEN)
NAN_BOXED(0x7fe9c6b24203c777217116581304452983,64,FLEN)
NAN_BOXED(0x3ff364e03ex31b27608137758021720871,64,FLEN)
NAN_BOXED(0x7fex3e76cbaa48e2218655642194692322,64,FLEN)
NAN_BOXED(0x7fe9c6b24203c777217116581304452983,64,FLEN)
NAN_BOXED(0x3ff364e03ex31b27608137758021720871,64,FLEN)
NAN_BOXED(0x7fex3e76cbaa48e2218655642194692322,64,FLEN)
NAN_BOXED(0x7fe9c6b24203c777217116581304452983,64,FLEN)
NAN_BOXED(0x3ff364e03ex31b27608137758021720871,64,FLEN)
NAN_BOXED(0x7fex3e76cbaa48e2218655642194692322,64,FLEN)
NAN_BOXED(0x7feb045c5db2e460217465857099359328,64,FLEN)
NAN_BOXED(0x3fd9703f7515ec33600831912185293875,64,FLEN)
NAN_BOXED(0x7fd57a2cffec0101211402946547024129,64,FLEN)
NAN_BOXED(0x7feb045c5db2e460217465857099359328,64,FLEN)
NAN_BOXED(0x3fd9703f7515ec33600831912185293875,64,FLEN)
NAN_BOXED(0x7fd57a2cffec0101211402946547024129,64,FLEN)
NAN_BOXED(0x7feb045c5db2e460217465857099359328,64,FLEN)
NAN_BOXED(0x3fd9703f7515ec33600831912185293875,64,FLEN)
NAN_BOXED(0x7fd57a2cffec0101211402946547024129,64,FLEN)
NAN_BOXED(0x7feb045c5db2e460217465857099359328,64,FLEN)
NAN_BOXED(0x3fd9703f7515ec33600831912185293875,64,FLEN)
NAN_BOXED(0x7fd57a2cffec0101211402946547024129,64,FLEN)
NAN_BOXED(0x7feb045c5db2e460217465857099359328,64,FLEN)
NAN_BOXED(0x3fd9703f7515ec33600831912185293875,64,FLEN)
NAN_BOXED(0x7fd57a2cffec0101211402946547024129,64,FLEN)
NAN_BOXED(0x7fec299b1ab6e737217788283465426743,64,FLEN)
NAN_BOXED(0x3fe31948e12564a2603551044908442786,64,FLEN)
NAN_BOXED(0x7fe0cex4bccbe789214592388134856585,64,FLEN)
NAN_BOXED(0x7fec299b1ab6e737217788283465426743,64,FLEN)
NAN_BOXED(0x3fe31948e12564a2603551044908442786,64,FLEN)
NAN_BOXED(0x7fe0cex4bccbe789214592388134856585,64,FLEN)
NAN_BOXED(0x7fec299b1ab6e737217788283465426743,64,FLEN)
NAN_BOXED(0x3fe31948e12564a2603551044908442786,64,FLEN)
NAN_BOXED(0x7fe0cex4bccbe789214592388134856585,64,FLEN)
NAN_BOXED(0x7fec299b1ab6e737217788283465426743,64,FLEN)
NAN_BOXED(0x3fe31948e12564a2603551044908442786,64,FLEN)
NAN_BOXED(0x7fe0cex4bccbe789214592388134856585,64,FLEN)
NAN_BOXED(0x7fec299b1ab6e737217788283465426743,64,FLEN)
NAN_BOXED(0x3fe31948e12564a2603551044908442786,64,FLEN)
NAN_BOXED(0x7fe0cex4bccbe789214592388134856585,64,FLEN)
NAN_BOXED(0x7fed1ab73cc65f52218053386598244178,64,FLEN)
NAN_BOXED(0x3fe21b7b40acb837603271985306056759,64,FLEN)
NAN_BOXED(0x7fe07805b64db437214496803528750135,64,FLEN)
NAN_BOXED(0x7fed1ab73cc65f52218053386598244178,64,FLEN)
NAN_BOXED(0x3fe21b7b40acb837603271985306056759,64,FLEN)
NAN_BOXED(0x7fe07805b64db437214496803528750135,64,FLEN)
NAN_BOXED(0x7fed1ab73cc65f52218053386598244178,64,FLEN)
NAN_BOXED(0x3fe21b7b40acb837603271985306056759,64,FLEN)
NAN_BOXED(0x7fe07805b64db437214496803528750135,64,FLEN)
NAN_BOXED(0x7fed1ab73cc65f52218053386598244178,64,FLEN)
NAN_BOXED(0x3fe21b7b40acb837603271985306056759,64,FLEN)
NAN_BOXED(0x7fe07805b64db437214496803528750135,64,FLEN)
NAN_BOXED(0x7fed1ab73cc65f52218053386598244178,64,FLEN)
NAN_BOXED(0x3fe21b7b40acb837603271985306056759,64,FLEN)
NAN_BOXED(0x7fe07805b64db437214496803528750135,64,FLEN)
NAN_BOXED(0x7fee71a5cc2ec78b218430444183144331,64,FLEN)
NAN_BOXED(0x3fe3cc01737b632f603747550707278639,64,FLEN)
NAN_BOXED(0x7fe2d590539c6e1b215162603408223771,64,FLEN)
NAN_BOXED(0x7fee71a5cc2ec78b218430444183144331,64,FLEN)
NAN_BOXED(0x3fe3cc01737b632f603747550707278639,64,FLEN)
NAN_BOXED(0x7fe2d590539c6e1b215162603408223771,64,FLEN)
NAN_BOXED(0x7fee71a5cc2ec78b218430444183144331,64,FLEN)
NAN_BOXED(0x3fe3cc01737b632f603747550707278639,64,FLEN)
NAN_BOXED(0x7fe2d590539c6e1b215162603408223771,64,FLEN)
NAN_BOXED(0x7fee71a5cc2ec78b218430444183144331,64,FLEN)
NAN_BOXED(0x3fe3cc01737b632f603747550707278639,64,FLEN)
NAN_BOXED(0x7fe2d590539c6e1b215162603408223771,64,FLEN)
NAN_BOXED(0x7fee71a5cc2ec78b218430444183144331,64,FLEN)
NAN_BOXED(0x3fe3cc01737b632f603747550707278639,64,FLEN)
NAN_BOXED(0x7fe2d590539c6e1b215162603408223771,64,FLEN)
NAN_BOXED(0x7fef5610c05b31c8218681592197362120,64,FLEN)
NAN_BOXED(0x3fed2834dff0917f606382201430380927,64,FLEN)
NAN_BOXED(0x7fec8d5e8a69a864217897974509185124,64,FLEN)
NAN_BOXED(0x7fef5610c05b31c8218681592197362120,64,FLEN)
NAN_BOXED(0x3fed2834dff0917f606382201430380927,64,FLEN)
NAN_BOXED(0x7fec8d5e8a69a864217897974509185124,64,FLEN)
NAN_BOXED(0x7fef5610c05b31c8218681592197362120,64,FLEN)
NAN_BOXED(0x3fed2834dff0917f606382201430380927,64,FLEN)
NAN_BOXED(0x7fec8d5e8a69a864217897974509185124,64,FLEN)
NAN_BOXED(0x7fef5610c05b31c8218681592197362120,64,FLEN)
NAN_BOXED(0x3fed2834dff0917f606382201430380927,64,FLEN)
NAN_BOXED(0x7fec8d5e8a69a864217897974509185124,64,FLEN)
NAN_BOXED(0x7fef5610c05b31c8218681592197362120,64,FLEN)
NAN_BOXED(0x3fed2834dff0917f606382201430380927,64,FLEN)
NAN_BOXED(0x7fec8d5e8a69a864217897974509185124,64,FLEN)
NAN_BOXED(0x7fef642299c3d7ea218697062022109162,64,FLEN)
NAN_BOXED(0x3fd001214aa3225f598176462043030111,64,FLEN)
NAN_BOXED(0x7fcf665a2ce400e3209692300482183395,64,FLEN)
NAN_BOXED(0x7fef642299c3d7ea218697062022109162,64,FLEN)
NAN_BOXED(0x3fd001214aa3225f598176462043030111,64,FLEN)
NAN_BOXED(0x7fcf665a2ce400e3209692300482183395,64,FLEN)
NAN_BOXED(0x7fef642299c3d7ea218697062022109162,64,FLEN)
NAN_BOXED(0x3fd001214aa3225f598176462043030111,64,FLEN)
NAN_BOXED(0x7fcf665a2ce400e3209692300482183395,64,FLEN)
NAN_BOXED(0x7fef642299c3d7ea218697062022109162,64,FLEN)
NAN_BOXED(0x3fd001214aa3225f598176462043030111,64,FLEN)
NAN_BOXED(0x7fcf665a2ce400e3209692300482183395,64,FLEN)
NAN_BOXED(0x7fef642299c3d7ea218697062022109162,64,FLEN)
NAN_BOXED(0x3fd001214aa3225f598176462043030111,64,FLEN)
NAN_BOXED(0x7fcf665a2ce400e3209692300482183395,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x4096ed5a71e5433a654168237647676218,64,FLEN)
NAN_BOXED(0x7fe535cf46588x5e215831376838299486,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x4096ed5a71e5433a654168237647676218,64,FLEN)
NAN_BOXED(0x7fe535cf46588x5e215831376838299486,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x4096ed5a71e5433a654168237647676218,64,FLEN)
NAN_BOXED(0x7fe535cf46588x5e215831376838299486,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x4096ed5a71e5433a654168237647676218,64,FLEN)
NAN_BOXED(0x7fe535cf46588x5e215831376838299486,64,FLEN)
NAN_BOXED(0x7x3d9a84a89337ff168654310950778879,64,FLEN)
NAN_BOXED(0x4096ed5a71e5433a654168237647676218,64,FLEN)
NAN_BOXED(0x7fe535cf46588x5e215831376838299486,64,FLEN)
NAN_BOXED(0x7x9d1aa6d115d25f195535317935182431,64,FLEN)
NAN_BOXED(0x40296deab3c53820623347347278346272,64,FLEN)
NAN_BOXED(0x7fd720ca91x58bdf211867617213909983,64,FLEN)
NAN_BOXED(0x7x9d1aa6d115d25f195535317935182431,64,FLEN)
NAN_BOXED(0x40296deab3c53820623347347278346272,64,FLEN)
NAN_BOXED(0x7fd720ca91x58bdf211867617213909983,64,FLEN)
NAN_BOXED(0x7x9d1aa6d115d25f195535317935182431,64,FLEN)
NAN_BOXED(0x40296deab3c53820623347347278346272,64,FLEN)
NAN_BOXED(0x7fd720ca91x58bdf211867617213909983,64,FLEN)
NAN_BOXED(0x7x9d1aa6d115d25f195535317935182431,64,FLEN)
NAN_BOXED(0x40296deab3c53820623347347278346272,64,FLEN)
NAN_BOXED(0x7fd720ca91x58bdf211867617213909983,64,FLEN)
NAN_BOXED(0x7x9d1aa6d115d25f195535317935182431,64,FLEN)
NAN_BOXED(0x40296deab3c53820623347347278346272,64,FLEN)
NAN_BOXED(0x7fd720ca91x58bdf211867617213909983,64,FLEN)
NAN_BOXED(0x7fab8e934bdcc1bf199603427118465471,64,FLEN)
NAN_BOXED(0x401x6db8ea3x5db5620532383676849589,64,FLEN)
NAN_BOXED(0x7fdb109b94c05e59212975723118091865,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 186*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
