
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b14 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b14)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 == rs3 == rd, rs1==x28, rs2==x28, rs3==x28, rd==x28,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x108 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x28; op2:x28; op3:x28; dest:x28; op1val:0x5f8132d8x91b7583; op2val:0x5f8132d8x91b7583;
op3val:0x5f8132d8x91b7583; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x28, x28, x28, x28, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rd == rs2 == rs3 != rs1, rs1==x10, rs2==x22, rs3==x22, rd==x22,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x3 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x10; op2:x22; op3:x22; dest:x22; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x5fab1e2d5b3584x7; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x22, x10, x22, x22, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd == rs3 != rs2, rs1==x25, rs2==x26, rs3==x25, rd==x25,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x4 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x25; op2:x26; op3:x25; dest:x25; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x5f8132d8x91b7583; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x25, x25, x26, x25, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x16, rs2==x14, rs3==x15, rd==x4,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x5 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x16; op2:x14; op3:x15; dest:x4; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3f5999x2a1278c2f; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x4, x16, x14, x15, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x29, rs2==x2, rs3==x29, rd==x3,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x6 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x29; op2:x2; op3:x29; dest:x3; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x5f8132d8x91b7583; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x3, x29, x2, x29, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==x8, rs2==x8, rs3==x8, rd==x30,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x7 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x8; op2:x8; op3:x8; dest:x30; op1val:0x5f8132d8x91b7583; op2val:0x5f8132d8x91b7583;
op3val:0x5f8132d8x91b7583; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x30, x8, x8, x8, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x7, rs2==x30, rs3==x30, rd==x6,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x8 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x7; op2:x30; op3:x30; dest:x6; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x5fab1e2d5b3584x7; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x6, x7, x30, x30, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x19, rs2==x9, rs3==x17, rd==x9,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x9 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x19; op2:x9; op3:x17; dest:x9; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3f9999x2a1278c2f; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x9, x19, x9, x17, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rd != rs3, rs1==x5, rs2==x5, rs3==x3, rd==x5,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x5; op2:x5; op3:x3; dest:x5; op1val:0x5f8132d8x91b7583; op2val:0x5f8132d8x91b7583;
op3val:0x3fa999x2a1278c2f; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x5, x5, x5, x3, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x4, rs2==x4, rs3==x26, rd==x19,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x4; op2:x4; op3:x26; dest:x19; op1val:0x5f8132d8x91b7583; op2val:0x5f8132d8x91b7583;
op3val:0x3fb999x2a1278c2f; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x19, x4, x4, x26, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x27, rs2==x16, rs3==x5, rd==x27,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x27; op2:x16; op3:x5; dest:x27; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3fc999x2a1278c2f; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x27, x27, x16, x5, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x20, rs2==x18, rs3==x24, rd==x24,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x20; op2:x18; op3:x24; dest:x24; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3fd999x2a1278c2f; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x24, x20, x18, x24, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x1, rs2==x20, rs3==x16, rd==x12,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x1; op2:x20; op3:x16; dest:x12; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3fe999x2a1278c2f; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x12, x1, x20, x16, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x22, rs2==x6, rs3==x27, rd==x18,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x22; op2:x6; op3:x27; dest:x18; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3ff999x2a1278c2f; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x18, x22, x6, x27, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x18, rs2==x24, rs3==x12, rd==x0,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x400 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x18; op2:x24; op3:x12; dest:x0; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x400999x2a1278c2f; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x0, x18, x24, x12, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x6, rs2==x13, rs3==x10, rd==x2,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x401 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x6; op2:x13; op3:x10; dest:x2; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x401999x2a1278c2f; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x2, x6, x13, x10, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x9, rs2==x10, rs3==x0, rd==x15,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x402 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x9; op2:x10; op3:x0; dest:x15; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x402999x2a1278c2f; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x15, x9, x10, x0, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x12, rs2==x15, rs3==x11, rd==x20,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x403 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x12; op2:x15; op3:x11; dest:x20; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x403999x2a1278c2f; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x20, x12, x15, x11, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x31, rs2==x12, rs3==x4, rd==x21,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x404 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x31; op2:x12; op3:x4; dest:x21; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x404999x2a1278c2f; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x21, x31, x12, x4, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x11, rs2==x29, rs3==x31, rd==x13,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x405 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x11; op2:x29; op3:x31; dest:x13; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x405999x2a1278c2f; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x13, x11, x29, x31, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x24, rs2==x17, rs3==x23, rd==x14,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x406 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x24; op2:x17; op3:x23; dest:x14; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x406999x2a1278c2f; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x14, x24, x17, x23, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x21, rs2==x27, rs3==x19, rd==x1,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x407 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x21; op2:x27; op3:x19; dest:x1; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x407999x2a1278c2f; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x1, x21, x27, x19, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==x23, rs2==x11, rs3==x1, rd==x7,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x408 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x23; op2:x11; op3:x1; dest:x7; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x408999x2a1278c2f; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x7, x23, x11, x1, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==x3, rs2==x23, rs3==x6, rd==x10,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x409 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x3; op2:x23; op3:x6; dest:x10; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x409999x2a1278c2f; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x10, x3, x23, x6, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==x17, rs2==x21, rs3==x7, rd==x8,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x40a and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x17; op2:x21; op3:x7; dest:x8; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x40a999x2a1278c2f; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x8, x17, x21, x7, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==x26, rs2==x19, rs3==x18, rd==x23,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x40b and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x26; op2:x19; op3:x18; dest:x23; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x40b999x2a1278c2f; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x23, x26, x19, x18, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==x30, rs2==x31, rs3==x2, rd==x29,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x40c and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x31; op3:x2; dest:x29; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x40c999x2a1278c2f; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x29, x30, x31, x2, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==x14, rs2==x0, rs3==x13, rd==x31,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x40d and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x14; op2:x0; op3:x13; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x40d999x2a1278c2f; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x14, x0, x13, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==x0, rs2==x25, rs3==x14, rd==x17,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x40e and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x0; op2:x25; op3:x14; dest:x17; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x40e999x2a1278c2f; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x17, x0, x25, x14, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==x13, rs2==x3, rs3==x21, rd==x11,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x40f and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x13; op2:x3; op3:x21; dest:x11; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x40f999x2a1278c2f; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x11, x13, x3, x21, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==x2, rs2==x7, rs3==x9, rd==x16,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x410 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x2; op2:x7; op3:x9; dest:x16; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x410999x2a1278c2f; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x16, x2, x7, x9, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==x15, rs2==x1, rs3==x20, rd==x26,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x411 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x15; op2:x1; op3:x20; dest:x26; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x411999x2a1278c2f; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x26, x15, x1, x20, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x412 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x412999x2a1278c2f; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x413 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x413999x2a1278c2f; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x414 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x414999x2a1278c2f; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x415 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x415999x2a1278c2f; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x416 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x416999x2a1278c2f; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x417 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x417999x2a1278c2f; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x418 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x418999x2a1278c2f; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x419 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x419999x2a1278c2f; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x41a and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x41a999x2a1278c2f; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x41b and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x41b999x2a1278c2f; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x41c and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x41c999x2a1278c2f; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x41d and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x41d999x2a1278c2f; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x41e and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x41e999x2a1278c2f; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x41f and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x41f999x2a1278c2f; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x420 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x420999x2a1278c2f; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x421 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x421999x2a1278c2f; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x422 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x422999x2a1278c2f; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x423 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x423999x2a1278c2f; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x424 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x424999x2a1278c2f; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x425 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x425999x2a1278c2f; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x426 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x426999x2a1278c2f; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x427 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x427999x2a1278c2f; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x428 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x428999x2a1278c2f; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x429 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x429999x2a1278c2f; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x42a and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x42a999x2a1278c2f; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x42b and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x42b999x2a1278c2f; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x42c and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x42c999x2a1278c2f; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x42d and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x42d999x2a1278c2f; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x42e and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x42e999x2a1278c2f; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x42f and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x42f999x2a1278c2f; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x430 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x430999x2a1278c2f; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x431 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x431999x2a1278c2f; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x432 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x432999x2a1278c2f; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x433 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x433999x2a1278c2f; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x434 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x434999x2a1278c2f; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x435 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x435999x2a1278c2f; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x436 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x436999x2a1278c2f; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x437 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x437999x2a1278c2f; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x438 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x438999x2a1278c2f; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x439 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x439999x2a1278c2f; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x43a and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x43a999x2a1278c2f; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x43b and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x43b999x2a1278c2f; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x43c and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x43c999x2a1278c2f; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x43d and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x43d999x2a1278c2f; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x43e and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x43e999x2a1278c2f; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x43f and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x43f999x2a1278c2f; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x440 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x440999x2a1278c2f; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x441 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x441999x2a1278c2f; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x442 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x442999x2a1278c2f; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x443 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x443999x2a1278c2f; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x444 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x444999x2a1278c2f; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x445 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x445999x2a1278c2f; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x446 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x446999x2a1278c2f; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x447 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x447999x2a1278c2f; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x448 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x448999x2a1278c2f; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x449 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x449999x2a1278c2f; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x44a and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x44a999x2a1278c2f; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x44b and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x44b999x2a1278c2f; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x44c and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x44c999x2a1278c2f; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x44d and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x44d999x2a1278c2f; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x44e and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x44e999x2a1278c2f; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x44f and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x44f999x2a1278c2f; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x450 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x450999x2a1278c2f; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x451 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x451999x2a1278c2f; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x452 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x452999x2a1278c2f; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x453 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x453999x2a1278c2f; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x454 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x454999x2a1278c2f; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x455 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x455999x2a1278c2f; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x456 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x456999x2a1278c2f; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x457 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x457999x2a1278c2f; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x458 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x458999x2a1278c2f; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x459 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x459999x2a1278c2f; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x45a and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x45a999x2a1278c2f; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x45b and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x45b999x2a1278c2f; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x45c and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x45c999x2a1278c2f; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x45d and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x45d999x2a1278c2f; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x45e and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x45e999x2a1278c2f; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x45f and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x45f999x2a1278c2f; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x460 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x460999x2a1278c2f; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x461 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x461999x2a1278c2f; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x462 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x462999x2a1278c2f; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x463 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x463999x2a1278c2f; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x464 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x464999x2a1278c2f; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x465 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x465999x2a1278c2f; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x466 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x466999x2a1278c2f; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x467 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x467999x2a1278c2f; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x468 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x468999x2a1278c2f; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x469 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x469999x2a1278c2f; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x46a and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x46a999x2a1278c2f; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x46b and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x46b999x2a1278c2f; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x46c and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x46c999x2a1278c2f; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x46d and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x46d999x2a1278c2f; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x46e and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x46e999x2a1278c2f; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x46f and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x46f999x2a1278c2f; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x470 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x470999x2a1278c2f; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x471 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x471999x2a1278c2f; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x472 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x472999x2a1278c2f; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x473 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x473999x2a1278c2f; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x474 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x474999x2a1278c2f; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x475 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x475999x2a1278c2f; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x476 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x476999x2a1278c2f; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x477 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x477999x2a1278c2f; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x478 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x478999x2a1278c2f; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x479 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x479999x2a1278c2f; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x47a and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x47a999x2a1278c2f; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x47b and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x47b999x2a1278c2f; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x47c and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x47c999x2a1278c2f; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x47d and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x47d999x2a1278c2f; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x47e and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x47e999x2a1278c2f; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x47f and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x47f999x2a1278c2f; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x480 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x480999x2a1278c2f; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x481 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x481999x2a1278c2f; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x482 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x482999x2a1278c2f; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x483 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x483999x2a1278c2f; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x484 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x484999x2a1278c2f; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x485 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x485999x2a1278c2f; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x486 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x486999x2a1278c2f; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x487 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x487999x2a1278c2f; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x488 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x488999x2a1278c2f; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x489 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x489999x2a1278c2f; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x48a and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x48a999x2a1278c2f; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x48b and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x48b999x2a1278c2f; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x48c and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x48c999x2a1278c2f; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x48d and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x48d999x2a1278c2f; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x48e and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x48e999x2a1278c2f; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x48f and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x48f999x2a1278c2f; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x490 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x490999x2a1278c2f; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x509 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x509999x2a1278c2f; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x108 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x108999x2a1278c2f; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x3 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3f3999x2a1278c2f; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x4 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3f4999x2a1278c2f; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x6 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3f6999x2a1278c2f; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x7 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3f7999x2a1278c2f; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x8 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3f8999x2a1278c2f; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3x9 and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3f9999x2a1278c2f; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3fa999x2a1278c2f; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3fb999x2a1278c2f; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3fc999x2a1278c2f; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x132d8x91b7583 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb1e2d5b3584x7 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x999x2a1278c2f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8132d8x91b7583; op2val:0x5fab1e2d5b3584x7;
op3val:0x3fd999x2a1278c2f; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3f5999x2a1278c2f564848964681567279,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3f9999x2a1278c2f582863363191049263,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x3fa999x2a1278c2f587366962818419759,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x3fb999x2a1278c2f591870562445790255,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3fc999x2a1278c2f596374162073160751,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3fd999x2a1278c2f600877761700531247,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3fe999x2a1278c2f605381361327901743,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3ff999x2a1278c2f609884960955272239,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x400999x2a1278c2f614388560582642735,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x401999x2a1278c2f618892160210013231,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x402999x2a1278c2f623395759837383727,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x403999x2a1278c2f627899359464754223,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x404999x2a1278c2f632402959092124719,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x405999x2a1278c2f636906558719495215,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x406999x2a1278c2f641410158346865711,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x407999x2a1278c2f645913757974236207,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x408999x2a1278c2f650417357601606703,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x409999x2a1278c2f654920957228977199,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x40a999x2a1278c2f659424556856347695,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x40b999x2a1278c2f663928156483718191,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x40c999x2a1278c2f668431756111088687,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x40d999x2a1278c2f672935355738459183,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x40e999x2a1278c2f677438955365829679,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x40f999x2a1278c2f681942554993200175,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x410999x2a1278c2f686446154620570671,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x411999x2a1278c2f690949754247941167,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x412999x2a1278c2f695453353875311663,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x413999x2a1278c2f699956953502682159,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x414999x2a1278c2f704460553130052655,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x415999x2a1278c2f708964152757423151,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x416999x2a1278c2f713467752384793647,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x417999x2a1278c2f717971352012164143,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x418999x2a1278c2f722474951639534639,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x419999x2a1278c2f726978551266905135,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x41a999x2a1278c2f731482150894275631,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x41b999x2a1278c2f735985750521646127,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x41c999x2a1278c2f740489350149016623,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x41d999x2a1278c2f744992949776387119,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x41e999x2a1278c2f749496549403757615,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x41f999x2a1278c2f754000149031128111,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x420999x2a1278c2f758503748658498607,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x421999x2a1278c2f763007348285869103,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x422999x2a1278c2f767510947913239599,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x423999x2a1278c2f772014547540610095,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x424999x2a1278c2f776518147167980591,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x425999x2a1278c2f781021746795351087,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x426999x2a1278c2f785525346422721583,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x427999x2a1278c2f790028946050092079,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x428999x2a1278c2f794532545677462575,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x429999x2a1278c2f799036145304833071,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x42a999x2a1278c2f803539744932203567,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x42b999x2a1278c2f808043344559574063,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x42c999x2a1278c2f812546944186944559,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x42d999x2a1278c2f817050543814315055,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x42e999x2a1278c2f821554143441685551,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x42f999x2a1278c2f826057743069056047,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x430999x2a1278c2f830561342696426543,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x431999x2a1278c2f835064942323797039,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x432999x2a1278c2f839568541951167535,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x433999x2a1278c2f844072141578538031,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x434999x2a1278c2f848575741205908527,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x435999x2a1278c2f853079340833279023,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x436999x2a1278c2f857582940460649519,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x437999x2a1278c2f862086540088020015,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x438999x2a1278c2f866590139715390511,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x439999x2a1278c2f871093739342761007,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x43a999x2a1278c2f875597338970131503,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x43b999x2a1278c2f880100938597501999,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x43c999x2a1278c2f884604538224872495,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x43d999x2a1278c2f889108137852242991,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x43e999x2a1278c2f893611737479613487,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x43f999x2a1278c2f898115337106983983,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x440999x2a1278c2f902618936734354479,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x441999x2a1278c2f907122536361724975,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x442999x2a1278c2f911626135989095471,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x443999x2a1278c2f916129735616465967,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x444999x2a1278c2f920633335243836463,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x445999x2a1278c2f925136934871206959,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x446999x2a1278c2f929640534498577455,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x447999x2a1278c2f934144134125947951,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x448999x2a1278c2f938647733753318447,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x449999x2a1278c2f943151333380688943,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x44a999x2a1278c2f947654933008059439,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x44b999x2a1278c2f952158532635429935,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x44c999x2a1278c2f956662132262800431,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x44d999x2a1278c2f961165731890170927,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x44e999x2a1278c2f965669331517541423,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x44f999x2a1278c2f970172931144911919,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x450999x2a1278c2f974676530772282415,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x451999x2a1278c2f979180130399652911,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x452999x2a1278c2f983683730027023407,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x453999x2a1278c2f988187329654393903,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x454999x2a1278c2f992690929281764399,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x455999x2a1278c2f997194528909134895,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x456999x2a1278c2f001698128536505391,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x457999x2a1278c2f006201728163875887,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x458999x2a1278c2f010705327791246383,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x459999x2a1278c2f015208927418616879,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x45a999x2a1278c2f019712527045987375,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x45b999x2a1278c2f024216126673357871,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x45c999x2a1278c2f028719726300728367,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x45d999x2a1278c2f033223325928098863,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x45e999x2a1278c2f037726925555469359,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x45f999x2a1278c2f042230525182839855,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x460999x2a1278c2f046734124810210351,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x461999x2a1278c2f051237724437580847,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x462999x2a1278c2f055741324064951343,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x463999x2a1278c2f060244923692321839,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x464999x2a1278c2f064748523319692335,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x465999x2a1278c2f069252122947062831,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x466999x2a1278c2f073755722574433327,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x467999x2a1278c2f078259322201803823,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x468999x2a1278c2f082762921829174319,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x469999x2a1278c2f087266521456544815,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x46a999x2a1278c2f091770121083915311,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x46b999x2a1278c2f096273720711285807,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x46c999x2a1278c2f100777320338656303,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x46d999x2a1278c2f105280919966026799,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x46e999x2a1278c2f109784519593397295,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x46f999x2a1278c2f114288119220767791,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x470999x2a1278c2f118791718848138287,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x471999x2a1278c2f123295318475508783,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x472999x2a1278c2f127798918102879279,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x473999x2a1278c2f132302517730249775,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x474999x2a1278c2f136806117357620271,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x475999x2a1278c2f141309716984990767,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x476999x2a1278c2f145813316612361263,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x477999x2a1278c2f150316916239731759,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x478999x2a1278c2f154820515867102255,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x479999x2a1278c2f159324115494472751,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x47a999x2a1278c2f163827715121843247,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x47b999x2a1278c2f168331314749213743,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x47c999x2a1278c2f172834914376584239,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x47d999x2a1278c2f177338514003954735,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x47e999x2a1278c2f181842113631325231,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x47f999x2a1278c2f186345713258695727,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x480999x2a1278c2f190849312886066223,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x481999x2a1278c2f195352912513436719,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x482999x2a1278c2f199856512140807215,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x483999x2a1278c2f204360111768177711,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x484999x2a1278c2f208863711395548207,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x485999x2a1278c2f213367311022918703,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x486999x2a1278c2f217870910650289199,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x487999x2a1278c2f222374510277659695,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x488999x2a1278c2f226878109905030191,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x489999x2a1278c2f231381709532400687,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x48a999x2a1278c2f235885309159771183,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x48b999x2a1278c2f240388908787141679,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x48c999x2a1278c2f244892508414512175,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x48d999x2a1278c2f249396108041882671,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x48e999x2a1278c2f253899707669253167,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x48f999x2a1278c2f258403307296623663,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x490999x2a1278c2f262906906923994159,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x509999x2a1278c2f807842461835824175,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x108999x2a1278c2f191652843781065775,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3f3999x2a1278c2f555841765426826287,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3f4999x2a1278c2f560345365054196783,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3f6999x2a1278c2f569352564308937775,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3f7999x2a1278c2f573856163936308271,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3f8999x2a1278c2f578359763563678767,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3f9999x2a1278c2f582863363191049263,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3fa999x2a1278c2f587366962818419759,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3fb999x2a1278c2f591870562445790255,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3fc999x2a1278c2f596374162073160751,64,FLEN)
NAN_BOXED(0x5f8132d8x91b7583881837613072479619,64,FLEN)
NAN_BOXED(0x5fab1e2d5b3584f7893636834773271799,64,FLEN)
NAN_BOXED(0x3fd999x2a1278c2f600877761700531247,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 86*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
