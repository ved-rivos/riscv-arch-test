
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_66816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f00000000000ff; valaddr_reg:x3; val_offset:200448*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200448*0 + 3*0*FLEN/8, x4, x1, x2)

inst_66817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f00000000001ff; valaddr_reg:x3; val_offset:200451*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200451*0 + 3*1*FLEN/8, x4, x1, x2)

inst_66818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f00000000003ff; valaddr_reg:x3; val_offset:200454*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200454*0 + 3*2*FLEN/8, x4, x1, x2)

inst_66819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f00000000007ff; valaddr_reg:x3; val_offset:200457*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200457*0 + 3*3*FLEN/8, x4, x1, x2)

inst_66820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f0000000000fff; valaddr_reg:x3; val_offset:200460*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200460*0 + 3*4*FLEN/8, x4, x1, x2)

inst_66821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f0000000001fff; valaddr_reg:x3; val_offset:200463*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200463*0 + 3*5*FLEN/8, x4, x1, x2)

inst_66822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f0000000003fff; valaddr_reg:x3; val_offset:200466*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200466*0 + 3*6*FLEN/8, x4, x1, x2)

inst_66823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f0000000007fff; valaddr_reg:x3; val_offset:200469*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200469*0 + 3*7*FLEN/8, x4, x1, x2)

inst_66824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f000000000ffff; valaddr_reg:x3; val_offset:200472*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200472*0 + 3*8*FLEN/8, x4, x1, x2)

inst_66825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f000000001ffff; valaddr_reg:x3; val_offset:200475*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200475*0 + 3*9*FLEN/8, x4, x1, x2)

inst_66826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f000000003ffff; valaddr_reg:x3; val_offset:200478*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200478*0 + 3*10*FLEN/8, x4, x1, x2)

inst_66827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f000000007ffff; valaddr_reg:x3; val_offset:200481*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200481*0 + 3*11*FLEN/8, x4, x1, x2)

inst_66828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f00000000fffff; valaddr_reg:x3; val_offset:200484*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200484*0 + 3*12*FLEN/8, x4, x1, x2)

inst_66829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f00000001fffff; valaddr_reg:x3; val_offset:200487*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200487*0 + 3*13*FLEN/8, x4, x1, x2)

inst_66830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f00000003fffff; valaddr_reg:x3; val_offset:200490*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200490*0 + 3*14*FLEN/8, x4, x1, x2)

inst_66831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f00000007fffff; valaddr_reg:x3; val_offset:200493*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200493*0 + 3*15*FLEN/8, x4, x1, x2)

inst_66832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f0000000ffffff; valaddr_reg:x3; val_offset:200496*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200496*0 + 3*16*FLEN/8, x4, x1, x2)

inst_66833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f0000001ffffff; valaddr_reg:x3; val_offset:200499*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200499*0 + 3*17*FLEN/8, x4, x1, x2)

inst_66834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f0000003ffffff; valaddr_reg:x3; val_offset:200502*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200502*0 + 3*18*FLEN/8, x4, x1, x2)

inst_66835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f0000007ffffff; valaddr_reg:x3; val_offset:200505*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200505*0 + 3*19*FLEN/8, x4, x1, x2)

inst_66836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f000000fffffff; valaddr_reg:x3; val_offset:200508*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200508*0 + 3*20*FLEN/8, x4, x1, x2)

inst_66837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f000001fffffff; valaddr_reg:x3; val_offset:200511*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200511*0 + 3*21*FLEN/8, x4, x1, x2)

inst_66838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f000003fffffff; valaddr_reg:x3; val_offset:200514*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200514*0 + 3*22*FLEN/8, x4, x1, x2)

inst_66839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f000007fffffff; valaddr_reg:x3; val_offset:200517*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200517*0 + 3*23*FLEN/8, x4, x1, x2)

inst_66840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f00000ffffffff; valaddr_reg:x3; val_offset:200520*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200520*0 + 3*24*FLEN/8, x4, x1, x2)

inst_66841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f00001ffffffff; valaddr_reg:x3; val_offset:200523*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200523*0 + 3*25*FLEN/8, x4, x1, x2)

inst_66842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f00003ffffffff; valaddr_reg:x3; val_offset:200526*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200526*0 + 3*26*FLEN/8, x4, x1, x2)

inst_66843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f00007ffffffff; valaddr_reg:x3; val_offset:200529*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200529*0 + 3*27*FLEN/8, x4, x1, x2)

inst_66844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f0000fffffffff; valaddr_reg:x3; val_offset:200532*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200532*0 + 3*28*FLEN/8, x4, x1, x2)

inst_66845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f0001fffffffff; valaddr_reg:x3; val_offset:200535*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200535*0 + 3*29*FLEN/8, x4, x1, x2)

inst_66846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f0003fffffffff; valaddr_reg:x3; val_offset:200538*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200538*0 + 3*30*FLEN/8, x4, x1, x2)

inst_66847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f0007fffffffff; valaddr_reg:x3; val_offset:200541*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200541*0 + 3*31*FLEN/8, x4, x1, x2)

inst_66848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f000ffffffffff; valaddr_reg:x3; val_offset:200544*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200544*0 + 3*32*FLEN/8, x4, x1, x2)

inst_66849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f001ffffffffff; valaddr_reg:x3; val_offset:200547*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200547*0 + 3*33*FLEN/8, x4, x1, x2)

inst_66850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f003ffffffffff; valaddr_reg:x3; val_offset:200550*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200550*0 + 3*34*FLEN/8, x4, x1, x2)

inst_66851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f007ffffffffff; valaddr_reg:x3; val_offset:200553*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200553*0 + 3*35*FLEN/8, x4, x1, x2)

inst_66852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3x00fffffffffff; valaddr_reg:x3; val_offset:200556*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200556*0 + 3*36*FLEN/8, x4, x1, x2)

inst_66853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3x01fffffffffff; valaddr_reg:x3; val_offset:200559*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200559*0 + 3*37*FLEN/8, x4, x1, x2)

inst_66854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3x03fffffffffff; valaddr_reg:x3; val_offset:200562*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200562*0 + 3*38*FLEN/8, x4, x1, x2)

inst_66855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3x07fffffffffff; valaddr_reg:x3; val_offset:200565*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200565*0 + 3*39*FLEN/8, x4, x1, x2)

inst_66856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3x0ffffffffffff; valaddr_reg:x3; val_offset:200568*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200568*0 + 3*40*FLEN/8, x4, x1, x2)

inst_66857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3x1ffffffffffff; valaddr_reg:x3; val_offset:200571*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200571*0 + 3*41*FLEN/8, x4, x1, x2)

inst_66858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3x3ffffffffffff; valaddr_reg:x3; val_offset:200574*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200574*0 + 3*42*FLEN/8, x4, x1, x2)

inst_66859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3x7ffffffffffff; valaddr_reg:x3; val_offset:200577*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200577*0 + 3*43*FLEN/8, x4, x1, x2)

inst_66860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3f8000000000000; valaddr_reg:x3; val_offset:200580*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200580*0 + 3*44*FLEN/8, x4, x1, x2)

inst_66861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fc000000000000; valaddr_reg:x3; val_offset:200583*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200583*0 + 3*45*FLEN/8, x4, x1, x2)

inst_66862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fe000000000000; valaddr_reg:x3; val_offset:200586*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200586*0 + 3*46*FLEN/8, x4, x1, x2)

inst_66863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ff000000000000; valaddr_reg:x3; val_offset:200589*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200589*0 + 3*47*FLEN/8, x4, x1, x2)

inst_66864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ff800000000000; valaddr_reg:x3; val_offset:200592*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200592*0 + 3*48*FLEN/8, x4, x1, x2)

inst_66865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffc00000000000; valaddr_reg:x3; val_offset:200595*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200595*0 + 3*49*FLEN/8, x4, x1, x2)

inst_66866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffe00000000000; valaddr_reg:x3; val_offset:200598*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200598*0 + 3*50*FLEN/8, x4, x1, x2)

inst_66867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fff00000000000; valaddr_reg:x3; val_offset:200601*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200601*0 + 3*51*FLEN/8, x4, x1, x2)

inst_66868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fff80000000000; valaddr_reg:x3; val_offset:200604*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200604*0 + 3*52*FLEN/8, x4, x1, x2)

inst_66869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffc0000000000; valaddr_reg:x3; val_offset:200607*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200607*0 + 3*53*FLEN/8, x4, x1, x2)

inst_66870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffe0000000000; valaddr_reg:x3; val_offset:200610*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200610*0 + 3*54*FLEN/8, x4, x1, x2)

inst_66871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffff0000000000; valaddr_reg:x3; val_offset:200613*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200613*0 + 3*55*FLEN/8, x4, x1, x2)

inst_66872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffff8000000000; valaddr_reg:x3; val_offset:200616*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200616*0 + 3*56*FLEN/8, x4, x1, x2)

inst_66873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffc000000000; valaddr_reg:x3; val_offset:200619*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200619*0 + 3*57*FLEN/8, x4, x1, x2)

inst_66874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffe000000000; valaddr_reg:x3; val_offset:200622*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200622*0 + 3*58*FLEN/8, x4, x1, x2)

inst_66875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffff000000000; valaddr_reg:x3; val_offset:200625*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200625*0 + 3*59*FLEN/8, x4, x1, x2)

inst_66876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffff800000000; valaddr_reg:x3; val_offset:200628*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200628*0 + 3*60*FLEN/8, x4, x1, x2)

inst_66877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffc00000000; valaddr_reg:x3; val_offset:200631*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200631*0 + 3*61*FLEN/8, x4, x1, x2)

inst_66878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffe00000000; valaddr_reg:x3; val_offset:200634*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200634*0 + 3*62*FLEN/8, x4, x1, x2)

inst_66879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffff00000000; valaddr_reg:x3; val_offset:200637*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200637*0 + 3*63*FLEN/8, x4, x1, x2)

inst_66880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffff80000000; valaddr_reg:x3; val_offset:200640*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200640*0 + 3*64*FLEN/8, x4, x1, x2)

inst_66881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffc0000000; valaddr_reg:x3; val_offset:200643*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200643*0 + 3*65*FLEN/8, x4, x1, x2)

inst_66882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffe0000000; valaddr_reg:x3; val_offset:200646*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200646*0 + 3*66*FLEN/8, x4, x1, x2)

inst_66883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffff0000000; valaddr_reg:x3; val_offset:200649*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200649*0 + 3*67*FLEN/8, x4, x1, x2)

inst_66884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffff8000000; valaddr_reg:x3; val_offset:200652*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200652*0 + 3*68*FLEN/8, x4, x1, x2)

inst_66885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffc000000; valaddr_reg:x3; val_offset:200655*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200655*0 + 3*69*FLEN/8, x4, x1, x2)

inst_66886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffe000000; valaddr_reg:x3; val_offset:200658*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200658*0 + 3*70*FLEN/8, x4, x1, x2)

inst_66887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffff000000; valaddr_reg:x3; val_offset:200661*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200661*0 + 3*71*FLEN/8, x4, x1, x2)

inst_66888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffff800000; valaddr_reg:x3; val_offset:200664*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200664*0 + 3*72*FLEN/8, x4, x1, x2)

inst_66889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffffc00000; valaddr_reg:x3; val_offset:200667*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200667*0 + 3*73*FLEN/8, x4, x1, x2)

inst_66890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffffe00000; valaddr_reg:x3; val_offset:200670*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200670*0 + 3*74*FLEN/8, x4, x1, x2)

inst_66891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffff00000; valaddr_reg:x3; val_offset:200673*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200673*0 + 3*75*FLEN/8, x4, x1, x2)

inst_66892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffff80000; valaddr_reg:x3; val_offset:200676*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200676*0 + 3*76*FLEN/8, x4, x1, x2)

inst_66893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffffc0000; valaddr_reg:x3; val_offset:200679*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200679*0 + 3*77*FLEN/8, x4, x1, x2)

inst_66894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffffe0000; valaddr_reg:x3; val_offset:200682*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200682*0 + 3*78*FLEN/8, x4, x1, x2)

inst_66895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffffff0000; valaddr_reg:x3; val_offset:200685*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200685*0 + 3*79*FLEN/8, x4, x1, x2)

inst_66896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffffff8000; valaddr_reg:x3; val_offset:200688*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200688*0 + 3*80*FLEN/8, x4, x1, x2)

inst_66897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffffffc000; valaddr_reg:x3; val_offset:200691*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200691*0 + 3*81*FLEN/8, x4, x1, x2)

inst_66898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffffffe000; valaddr_reg:x3; val_offset:200694*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200694*0 + 3*82*FLEN/8, x4, x1, x2)

inst_66899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffffff000; valaddr_reg:x3; val_offset:200697*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200697*0 + 3*83*FLEN/8, x4, x1, x2)

inst_66900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffffff800; valaddr_reg:x3; val_offset:200700*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200700*0 + 3*84*FLEN/8, x4, x1, x2)

inst_66901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffffffc00; valaddr_reg:x3; val_offset:200703*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200703*0 + 3*85*FLEN/8, x4, x1, x2)

inst_66902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffffffe00; valaddr_reg:x3; val_offset:200706*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200706*0 + 3*86*FLEN/8, x4, x1, x2)

inst_66903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffffffx00; valaddr_reg:x3; val_offset:200709*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200709*0 + 3*87*FLEN/8, x4, x1, x2)

inst_66904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffffffx80; valaddr_reg:x3; val_offset:200712*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200712*0 + 3*88*FLEN/8, x4, x1, x2)

inst_66905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffffffffc0; valaddr_reg:x3; val_offset:200715*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200715*0 + 3*89*FLEN/8, x4, x1, x2)

inst_66906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffffffffe0; valaddr_reg:x3; val_offset:200718*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200718*0 + 3*90*FLEN/8, x4, x1, x2)

inst_66907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffffffffx0; valaddr_reg:x3; val_offset:200721*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200721*0 + 3*91*FLEN/8, x4, x1, x2)

inst_66908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffffffffx8; valaddr_reg:x3; val_offset:200724*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200724*0 + 3*92*FLEN/8, x4, x1, x2)

inst_66909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffffffffc; valaddr_reg:x3; val_offset:200727*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200727*0 + 3*93*FLEN/8, x4, x1, x2)

inst_66910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3fffffffffffffe; valaddr_reg:x3; val_offset:200730*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200730*0 + 3*94*FLEN/8, x4, x1, x2)

inst_66911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x42581092acc45 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa42581092acc45; op2val:0x0;
op3val:0x3ffffffffffffff; valaddr_reg:x3; val_offset:200733*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200733*0 + 3*95*FLEN/8, x4, x1, x2)

inst_66912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:200736*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200736*0 + 3*96*FLEN/8, x4, x1, x2)

inst_66913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:200739*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200739*0 + 3*97*FLEN/8, x4, x1, x2)

inst_66914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:200742*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200742*0 + 3*98*FLEN/8, x4, x1, x2)

inst_66915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:200745*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200745*0 + 3*99*FLEN/8, x4, x1, x2)

inst_66916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:200748*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200748*0 + 3*100*FLEN/8, x4, x1, x2)

inst_66917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:200751*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200751*0 + 3*101*FLEN/8, x4, x1, x2)

inst_66918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:200754*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200754*0 + 3*102*FLEN/8, x4, x1, x2)

inst_66919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:200757*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200757*0 + 3*103*FLEN/8, x4, x1, x2)

inst_66920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:200760*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200760*0 + 3*104*FLEN/8, x4, x1, x2)

inst_66921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:200763*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200763*0 + 3*105*FLEN/8, x4, x1, x2)

inst_66922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:200766*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200766*0 + 3*106*FLEN/8, x4, x1, x2)

inst_66923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:200769*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200769*0 + 3*107*FLEN/8, x4, x1, x2)

inst_66924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:200772*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200772*0 + 3*108*FLEN/8, x4, x1, x2)

inst_66925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:200775*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200775*0 + 3*109*FLEN/8, x4, x1, x2)

inst_66926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:200778*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200778*0 + 3*110*FLEN/8, x4, x1, x2)

inst_66927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:200781*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200781*0 + 3*111*FLEN/8, x4, x1, x2)

inst_66928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:200784*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200784*0 + 3*112*FLEN/8, x4, x1, x2)

inst_66929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:200787*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200787*0 + 3*113*FLEN/8, x4, x1, x2)

inst_66930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0xfffffffffffx0; valaddr_reg:x3; val_offset:200790*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200790*0 + 3*114*FLEN/8, x4, x1, x2)

inst_66931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0xfffffffffffx8; valaddr_reg:x3; val_offset:200793*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200793*0 + 3*115*FLEN/8, x4, x1, x2)

inst_66932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:200796*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200796*0 + 3*116*FLEN/8, x4, x1, x2)

inst_66933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:200799*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200799*0 + 3*117*FLEN/8, x4, x1, x2)

inst_66934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000000000000; valaddr_reg:x3; val_offset:200802*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200802*0 + 3*118*FLEN/8, x4, x1, x2)

inst_66935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000000000001; valaddr_reg:x3; val_offset:200805*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200805*0 + 3*119*FLEN/8, x4, x1, x2)

inst_66936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000000000003; valaddr_reg:x3; val_offset:200808*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200808*0 + 3*120*FLEN/8, x4, x1, x2)

inst_66937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000000000007; valaddr_reg:x3; val_offset:200811*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200811*0 + 3*121*FLEN/8, x4, x1, x2)

inst_66938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000000000000f; valaddr_reg:x3; val_offset:200814*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200814*0 + 3*122*FLEN/8, x4, x1, x2)

inst_66939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000000000001f; valaddr_reg:x3; val_offset:200817*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200817*0 + 3*123*FLEN/8, x4, x1, x2)

inst_66940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000000000003f; valaddr_reg:x3; val_offset:200820*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200820*0 + 3*124*FLEN/8, x4, x1, x2)

inst_66941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000000000007f; valaddr_reg:x3; val_offset:200823*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200823*0 + 3*125*FLEN/8, x4, x1, x2)

inst_66942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100000000000ff; valaddr_reg:x3; val_offset:200826*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200826*0 + 3*126*FLEN/8, x4, x1, x2)

inst_66943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100000000001ff; valaddr_reg:x3; val_offset:200829*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200829*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_66944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100000000003ff; valaddr_reg:x3; val_offset:200832*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200832*0 + 3*128*FLEN/8, x4, x1, x2)

inst_66945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100000000007ff; valaddr_reg:x3; val_offset:200835*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200835*0 + 3*129*FLEN/8, x4, x1, x2)

inst_66946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000000000fff; valaddr_reg:x3; val_offset:200838*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200838*0 + 3*130*FLEN/8, x4, x1, x2)

inst_66947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000000001fff; valaddr_reg:x3; val_offset:200841*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200841*0 + 3*131*FLEN/8, x4, x1, x2)

inst_66948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000000003fff; valaddr_reg:x3; val_offset:200844*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200844*0 + 3*132*FLEN/8, x4, x1, x2)

inst_66949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000000007fff; valaddr_reg:x3; val_offset:200847*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200847*0 + 3*133*FLEN/8, x4, x1, x2)

inst_66950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000000000ffff; valaddr_reg:x3; val_offset:200850*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200850*0 + 3*134*FLEN/8, x4, x1, x2)

inst_66951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000000001ffff; valaddr_reg:x3; val_offset:200853*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200853*0 + 3*135*FLEN/8, x4, x1, x2)

inst_66952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000000003ffff; valaddr_reg:x3; val_offset:200856*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200856*0 + 3*136*FLEN/8, x4, x1, x2)

inst_66953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000000007ffff; valaddr_reg:x3; val_offset:200859*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200859*0 + 3*137*FLEN/8, x4, x1, x2)

inst_66954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100000000fffff; valaddr_reg:x3; val_offset:200862*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200862*0 + 3*138*FLEN/8, x4, x1, x2)

inst_66955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100000001fffff; valaddr_reg:x3; val_offset:200865*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200865*0 + 3*139*FLEN/8, x4, x1, x2)

inst_66956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100000003fffff; valaddr_reg:x3; val_offset:200868*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200868*0 + 3*140*FLEN/8, x4, x1, x2)

inst_66957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100000007fffff; valaddr_reg:x3; val_offset:200871*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200871*0 + 3*141*FLEN/8, x4, x1, x2)

inst_66958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000000ffffff; valaddr_reg:x3; val_offset:200874*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200874*0 + 3*142*FLEN/8, x4, x1, x2)

inst_66959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000001ffffff; valaddr_reg:x3; val_offset:200877*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200877*0 + 3*143*FLEN/8, x4, x1, x2)

inst_66960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000003ffffff; valaddr_reg:x3; val_offset:200880*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200880*0 + 3*144*FLEN/8, x4, x1, x2)

inst_66961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000007ffffff; valaddr_reg:x3; val_offset:200883*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200883*0 + 3*145*FLEN/8, x4, x1, x2)

inst_66962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000000fffffff; valaddr_reg:x3; val_offset:200886*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200886*0 + 3*146*FLEN/8, x4, x1, x2)

inst_66963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000001fffffff; valaddr_reg:x3; val_offset:200889*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200889*0 + 3*147*FLEN/8, x4, x1, x2)

inst_66964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000003fffffff; valaddr_reg:x3; val_offset:200892*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200892*0 + 3*148*FLEN/8, x4, x1, x2)

inst_66965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000007fffffff; valaddr_reg:x3; val_offset:200895*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200895*0 + 3*149*FLEN/8, x4, x1, x2)

inst_66966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100000ffffffff; valaddr_reg:x3; val_offset:200898*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200898*0 + 3*150*FLEN/8, x4, x1, x2)

inst_66967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100001ffffffff; valaddr_reg:x3; val_offset:200901*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200901*0 + 3*151*FLEN/8, x4, x1, x2)

inst_66968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100003ffffffff; valaddr_reg:x3; val_offset:200904*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200904*0 + 3*152*FLEN/8, x4, x1, x2)

inst_66969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100007ffffffff; valaddr_reg:x3; val_offset:200907*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200907*0 + 3*153*FLEN/8, x4, x1, x2)

inst_66970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210000fffffffff; valaddr_reg:x3; val_offset:200910*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200910*0 + 3*154*FLEN/8, x4, x1, x2)

inst_66971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210001fffffffff; valaddr_reg:x3; val_offset:200913*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200913*0 + 3*155*FLEN/8, x4, x1, x2)

inst_66972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210003fffffffff; valaddr_reg:x3; val_offset:200916*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200916*0 + 3*156*FLEN/8, x4, x1, x2)

inst_66973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210007fffffffff; valaddr_reg:x3; val_offset:200919*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200919*0 + 3*157*FLEN/8, x4, x1, x2)

inst_66974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21000ffffffffff; valaddr_reg:x3; val_offset:200922*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200922*0 + 3*158*FLEN/8, x4, x1, x2)

inst_66975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21001ffffffffff; valaddr_reg:x3; val_offset:200925*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200925*0 + 3*159*FLEN/8, x4, x1, x2)

inst_66976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21003ffffffffff; valaddr_reg:x3; val_offset:200928*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200928*0 + 3*160*FLEN/8, x4, x1, x2)

inst_66977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21007ffffffffff; valaddr_reg:x3; val_offset:200931*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200931*0 + 3*161*FLEN/8, x4, x1, x2)

inst_66978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2100fffffffffff; valaddr_reg:x3; val_offset:200934*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200934*0 + 3*162*FLEN/8, x4, x1, x2)

inst_66979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2101fffffffffff; valaddr_reg:x3; val_offset:200937*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200937*0 + 3*163*FLEN/8, x4, x1, x2)

inst_66980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2103fffffffffff; valaddr_reg:x3; val_offset:200940*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200940*0 + 3*164*FLEN/8, x4, x1, x2)

inst_66981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x2107fffffffffff; valaddr_reg:x3; val_offset:200943*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200943*0 + 3*165*FLEN/8, x4, x1, x2)

inst_66982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x210ffffffffffff; valaddr_reg:x3; val_offset:200946*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200946*0 + 3*166*FLEN/8, x4, x1, x2)

inst_66983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x211ffffffffffff; valaddr_reg:x3; val_offset:200949*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200949*0 + 3*167*FLEN/8, x4, x1, x2)

inst_66984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x213ffffffffffff; valaddr_reg:x3; val_offset:200952*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200952*0 + 3*168*FLEN/8, x4, x1, x2)

inst_66985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x217ffffffffffff; valaddr_reg:x3; val_offset:200955*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200955*0 + 3*169*FLEN/8, x4, x1, x2)

inst_66986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x218000000000000; valaddr_reg:x3; val_offset:200958*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200958*0 + 3*170*FLEN/8, x4, x1, x2)

inst_66987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21c000000000000; valaddr_reg:x3; val_offset:200961*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200961*0 + 3*171*FLEN/8, x4, x1, x2)

inst_66988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21e000000000000; valaddr_reg:x3; val_offset:200964*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200964*0 + 3*172*FLEN/8, x4, x1, x2)

inst_66989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21f000000000000; valaddr_reg:x3; val_offset:200967*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200967*0 + 3*173*FLEN/8, x4, x1, x2)

inst_66990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21f800000000000; valaddr_reg:x3; val_offset:200970*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200970*0 + 3*174*FLEN/8, x4, x1, x2)

inst_66991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fc00000000000; valaddr_reg:x3; val_offset:200973*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200973*0 + 3*175*FLEN/8, x4, x1, x2)

inst_66992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fe00000000000; valaddr_reg:x3; val_offset:200976*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200976*0 + 3*176*FLEN/8, x4, x1, x2)

inst_66993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ff00000000000; valaddr_reg:x3; val_offset:200979*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200979*0 + 3*177*FLEN/8, x4, x1, x2)

inst_66994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ff80000000000; valaddr_reg:x3; val_offset:200982*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200982*0 + 3*178*FLEN/8, x4, x1, x2)

inst_66995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffc0000000000; valaddr_reg:x3; val_offset:200985*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200985*0 + 3*179*FLEN/8, x4, x1, x2)

inst_66996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffe0000000000; valaddr_reg:x3; val_offset:200988*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200988*0 + 3*180*FLEN/8, x4, x1, x2)

inst_66997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fff0000000000; valaddr_reg:x3; val_offset:200991*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200991*0 + 3*181*FLEN/8, x4, x1, x2)

inst_66998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fff8000000000; valaddr_reg:x3; val_offset:200994*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200994*0 + 3*182*FLEN/8, x4, x1, x2)

inst_66999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffc000000000; valaddr_reg:x3; val_offset:200997*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 200997*0 + 3*183*FLEN/8, x4, x1, x2)

inst_67000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffe000000000; valaddr_reg:x3; val_offset:201000*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201000*0 + 3*184*FLEN/8, x4, x1, x2)

inst_67001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffff000000000; valaddr_reg:x3; val_offset:201003*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201003*0 + 3*185*FLEN/8, x4, x1, x2)

inst_67002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffff800000000; valaddr_reg:x3; val_offset:201006*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201006*0 + 3*186*FLEN/8, x4, x1, x2)

inst_67003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffc00000000; valaddr_reg:x3; val_offset:201009*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201009*0 + 3*187*FLEN/8, x4, x1, x2)

inst_67004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffe00000000; valaddr_reg:x3; val_offset:201012*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201012*0 + 3*188*FLEN/8, x4, x1, x2)

inst_67005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffff00000000; valaddr_reg:x3; val_offset:201015*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201015*0 + 3*189*FLEN/8, x4, x1, x2)

inst_67006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffff80000000; valaddr_reg:x3; val_offset:201018*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201018*0 + 3*190*FLEN/8, x4, x1, x2)

inst_67007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffc0000000; valaddr_reg:x3; val_offset:201021*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201021*0 + 3*191*FLEN/8, x4, x1, x2)

inst_67008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffe0000000; valaddr_reg:x3; val_offset:201024*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201024*0 + 3*192*FLEN/8, x4, x1, x2)

inst_67009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffff0000000; valaddr_reg:x3; val_offset:201027*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201027*0 + 3*193*FLEN/8, x4, x1, x2)

inst_67010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffff8000000; valaddr_reg:x3; val_offset:201030*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201030*0 + 3*194*FLEN/8, x4, x1, x2)

inst_67011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffc000000; valaddr_reg:x3; val_offset:201033*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201033*0 + 3*195*FLEN/8, x4, x1, x2)

inst_67012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffe000000; valaddr_reg:x3; val_offset:201036*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201036*0 + 3*196*FLEN/8, x4, x1, x2)

inst_67013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffff000000; valaddr_reg:x3; val_offset:201039*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201039*0 + 3*197*FLEN/8, x4, x1, x2)

inst_67014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffff800000; valaddr_reg:x3; val_offset:201042*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201042*0 + 3*198*FLEN/8, x4, x1, x2)

inst_67015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffffc00000; valaddr_reg:x3; val_offset:201045*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201045*0 + 3*199*FLEN/8, x4, x1, x2)

inst_67016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffffe00000; valaddr_reg:x3; val_offset:201048*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201048*0 + 3*200*FLEN/8, x4, x1, x2)

inst_67017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffff00000; valaddr_reg:x3; val_offset:201051*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201051*0 + 3*201*FLEN/8, x4, x1, x2)

inst_67018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffff80000; valaddr_reg:x3; val_offset:201054*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201054*0 + 3*202*FLEN/8, x4, x1, x2)

inst_67019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffffc0000; valaddr_reg:x3; val_offset:201057*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201057*0 + 3*203*FLEN/8, x4, x1, x2)

inst_67020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffffe0000; valaddr_reg:x3; val_offset:201060*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201060*0 + 3*204*FLEN/8, x4, x1, x2)

inst_67021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffffff0000; valaddr_reg:x3; val_offset:201063*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201063*0 + 3*205*FLEN/8, x4, x1, x2)

inst_67022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffffff8000; valaddr_reg:x3; val_offset:201066*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201066*0 + 3*206*FLEN/8, x4, x1, x2)

inst_67023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffffffc000; valaddr_reg:x3; val_offset:201069*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201069*0 + 3*207*FLEN/8, x4, x1, x2)

inst_67024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffffffe000; valaddr_reg:x3; val_offset:201072*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201072*0 + 3*208*FLEN/8, x4, x1, x2)

inst_67025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffffff000; valaddr_reg:x3; val_offset:201075*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201075*0 + 3*209*FLEN/8, x4, x1, x2)

inst_67026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffffff800; valaddr_reg:x3; val_offset:201078*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201078*0 + 3*210*FLEN/8, x4, x1, x2)

inst_67027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffffffc00; valaddr_reg:x3; val_offset:201081*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201081*0 + 3*211*FLEN/8, x4, x1, x2)

inst_67028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffffffe00; valaddr_reg:x3; val_offset:201084*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201084*0 + 3*212*FLEN/8, x4, x1, x2)

inst_67029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffffffx00; valaddr_reg:x3; val_offset:201087*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201087*0 + 3*213*FLEN/8, x4, x1, x2)

inst_67030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffffffx80; valaddr_reg:x3; val_offset:201090*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201090*0 + 3*214*FLEN/8, x4, x1, x2)

inst_67031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffffffffc0; valaddr_reg:x3; val_offset:201093*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201093*0 + 3*215*FLEN/8, x4, x1, x2)

inst_67032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffffffffe0; valaddr_reg:x3; val_offset:201096*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201096*0 + 3*216*FLEN/8, x4, x1, x2)

inst_67033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffffffffx0; valaddr_reg:x3; val_offset:201099*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201099*0 + 3*217*FLEN/8, x4, x1, x2)

inst_67034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffffffffx8; valaddr_reg:x3; val_offset:201102*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201102*0 + 3*218*FLEN/8, x4, x1, x2)

inst_67035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffffffffc; valaddr_reg:x3; val_offset:201105*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201105*0 + 3*219*FLEN/8, x4, x1, x2)

inst_67036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21ffffffffffffe; valaddr_reg:x3; val_offset:201108*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201108*0 + 3*220*FLEN/8, x4, x1, x2)

inst_67037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43a8687039e7e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa43a8687039e7e; op2val:0x0;
op3val:0x21fffffffffffff; valaddr_reg:x3; val_offset:201111*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201111*0 + 3*221*FLEN/8, x4, x1, x2)

inst_67038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000000000000; valaddr_reg:x3; val_offset:201114*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201114*0 + 3*222*FLEN/8, x4, x1, x2)

inst_67039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000000000001; valaddr_reg:x3; val_offset:201117*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201117*0 + 3*223*FLEN/8, x4, x1, x2)

inst_67040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000000000003; valaddr_reg:x3; val_offset:201120*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201120*0 + 3*224*FLEN/8, x4, x1, x2)

inst_67041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000000000007; valaddr_reg:x3; val_offset:201123*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201123*0 + 3*225*FLEN/8, x4, x1, x2)

inst_67042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000000000000f; valaddr_reg:x3; val_offset:201126*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201126*0 + 3*226*FLEN/8, x4, x1, x2)

inst_67043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000000000001f; valaddr_reg:x3; val_offset:201129*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201129*0 + 3*227*FLEN/8, x4, x1, x2)

inst_67044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000000000003f; valaddr_reg:x3; val_offset:201132*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201132*0 + 3*228*FLEN/8, x4, x1, x2)

inst_67045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000000000007f; valaddr_reg:x3; val_offset:201135*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201135*0 + 3*229*FLEN/8, x4, x1, x2)

inst_67046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100000000000ff; valaddr_reg:x3; val_offset:201138*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201138*0 + 3*230*FLEN/8, x4, x1, x2)

inst_67047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100000000001ff; valaddr_reg:x3; val_offset:201141*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201141*0 + 3*231*FLEN/8, x4, x1, x2)

inst_67048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100000000003ff; valaddr_reg:x3; val_offset:201144*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201144*0 + 3*232*FLEN/8, x4, x1, x2)

inst_67049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100000000007ff; valaddr_reg:x3; val_offset:201147*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201147*0 + 3*233*FLEN/8, x4, x1, x2)

inst_67050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000000000fff; valaddr_reg:x3; val_offset:201150*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201150*0 + 3*234*FLEN/8, x4, x1, x2)

inst_67051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000000001fff; valaddr_reg:x3; val_offset:201153*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201153*0 + 3*235*FLEN/8, x4, x1, x2)

inst_67052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000000003fff; valaddr_reg:x3; val_offset:201156*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201156*0 + 3*236*FLEN/8, x4, x1, x2)

inst_67053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000000007fff; valaddr_reg:x3; val_offset:201159*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201159*0 + 3*237*FLEN/8, x4, x1, x2)

inst_67054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000000000ffff; valaddr_reg:x3; val_offset:201162*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201162*0 + 3*238*FLEN/8, x4, x1, x2)

inst_67055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000000001ffff; valaddr_reg:x3; val_offset:201165*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201165*0 + 3*239*FLEN/8, x4, x1, x2)

inst_67056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000000003ffff; valaddr_reg:x3; val_offset:201168*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201168*0 + 3*240*FLEN/8, x4, x1, x2)

inst_67057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000000007ffff; valaddr_reg:x3; val_offset:201171*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201171*0 + 3*241*FLEN/8, x4, x1, x2)

inst_67058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100000000fffff; valaddr_reg:x3; val_offset:201174*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201174*0 + 3*242*FLEN/8, x4, x1, x2)

inst_67059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100000001fffff; valaddr_reg:x3; val_offset:201177*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201177*0 + 3*243*FLEN/8, x4, x1, x2)

inst_67060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100000003fffff; valaddr_reg:x3; val_offset:201180*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201180*0 + 3*244*FLEN/8, x4, x1, x2)

inst_67061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100000007fffff; valaddr_reg:x3; val_offset:201183*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201183*0 + 3*245*FLEN/8, x4, x1, x2)

inst_67062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000000ffffff; valaddr_reg:x3; val_offset:201186*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201186*0 + 3*246*FLEN/8, x4, x1, x2)

inst_67063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000001ffffff; valaddr_reg:x3; val_offset:201189*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201189*0 + 3*247*FLEN/8, x4, x1, x2)

inst_67064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000003ffffff; valaddr_reg:x3; val_offset:201192*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201192*0 + 3*248*FLEN/8, x4, x1, x2)

inst_67065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000007ffffff; valaddr_reg:x3; val_offset:201195*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201195*0 + 3*249*FLEN/8, x4, x1, x2)

inst_67066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000000fffffff; valaddr_reg:x3; val_offset:201198*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201198*0 + 3*250*FLEN/8, x4, x1, x2)

inst_67067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000001fffffff; valaddr_reg:x3; val_offset:201201*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201201*0 + 3*251*FLEN/8, x4, x1, x2)

inst_67068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000003fffffff; valaddr_reg:x3; val_offset:201204*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201204*0 + 3*252*FLEN/8, x4, x1, x2)

inst_67069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000007fffffff; valaddr_reg:x3; val_offset:201207*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201207*0 + 3*253*FLEN/8, x4, x1, x2)

inst_67070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100000ffffffff; valaddr_reg:x3; val_offset:201210*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201210*0 + 3*254*FLEN/8, x4, x1, x2)

inst_67071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100001ffffffff; valaddr_reg:x3; val_offset:201213*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201213*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_67072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100003ffffffff; valaddr_reg:x3; val_offset:201216*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201216*0 + 3*256*FLEN/8, x4, x1, x2)

inst_67073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100007ffffffff; valaddr_reg:x3; val_offset:201219*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201219*0 + 3*257*FLEN/8, x4, x1, x2)

inst_67074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10000fffffffff; valaddr_reg:x3; val_offset:201222*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201222*0 + 3*258*FLEN/8, x4, x1, x2)

inst_67075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10001fffffffff; valaddr_reg:x3; val_offset:201225*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201225*0 + 3*259*FLEN/8, x4, x1, x2)

inst_67076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10003fffffffff; valaddr_reg:x3; val_offset:201228*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201228*0 + 3*260*FLEN/8, x4, x1, x2)

inst_67077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf10007fffffffff; valaddr_reg:x3; val_offset:201231*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201231*0 + 3*261*FLEN/8, x4, x1, x2)

inst_67078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1000ffffffffff; valaddr_reg:x3; val_offset:201234*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201234*0 + 3*262*FLEN/8, x4, x1, x2)

inst_67079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1001ffffffffff; valaddr_reg:x3; val_offset:201237*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201237*0 + 3*263*FLEN/8, x4, x1, x2)

inst_67080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1003ffffffffff; valaddr_reg:x3; val_offset:201240*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201240*0 + 3*264*FLEN/8, x4, x1, x2)

inst_67081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf1007ffffffffff; valaddr_reg:x3; val_offset:201243*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201243*0 + 3*265*FLEN/8, x4, x1, x2)

inst_67082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf100fffffffffff; valaddr_reg:x3; val_offset:201246*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201246*0 + 3*266*FLEN/8, x4, x1, x2)

inst_67083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf101fffffffffff; valaddr_reg:x3; val_offset:201249*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201249*0 + 3*267*FLEN/8, x4, x1, x2)

inst_67084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf103fffffffffff; valaddr_reg:x3; val_offset:201252*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201252*0 + 3*268*FLEN/8, x4, x1, x2)

inst_67085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf107fffffffffff; valaddr_reg:x3; val_offset:201255*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201255*0 + 3*269*FLEN/8, x4, x1, x2)

inst_67086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx10ffffffffffff; valaddr_reg:x3; val_offset:201258*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201258*0 + 3*270*FLEN/8, x4, x1, x2)

inst_67087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx11ffffffffffff; valaddr_reg:x3; val_offset:201261*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201261*0 + 3*271*FLEN/8, x4, x1, x2)

inst_67088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx13ffffffffffff; valaddr_reg:x3; val_offset:201264*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201264*0 + 3*272*FLEN/8, x4, x1, x2)

inst_67089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx17ffffffffffff; valaddr_reg:x3; val_offset:201267*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201267*0 + 3*273*FLEN/8, x4, x1, x2)

inst_67090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf18000000000000; valaddr_reg:x3; val_offset:201270*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201270*0 + 3*274*FLEN/8, x4, x1, x2)

inst_67091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1c000000000000; valaddr_reg:x3; val_offset:201273*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201273*0 + 3*275*FLEN/8, x4, x1, x2)

inst_67092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1e000000000000; valaddr_reg:x3; val_offset:201276*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201276*0 + 3*276*FLEN/8, x4, x1, x2)

inst_67093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1f000000000000; valaddr_reg:x3; val_offset:201279*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201279*0 + 3*277*FLEN/8, x4, x1, x2)

inst_67094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1f800000000000; valaddr_reg:x3; val_offset:201282*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201282*0 + 3*278*FLEN/8, x4, x1, x2)

inst_67095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fc00000000000; valaddr_reg:x3; val_offset:201285*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201285*0 + 3*279*FLEN/8, x4, x1, x2)

inst_67096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fe00000000000; valaddr_reg:x3; val_offset:201288*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201288*0 + 3*280*FLEN/8, x4, x1, x2)

inst_67097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ff00000000000; valaddr_reg:x3; val_offset:201291*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201291*0 + 3*281*FLEN/8, x4, x1, x2)

inst_67098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ff80000000000; valaddr_reg:x3; val_offset:201294*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201294*0 + 3*282*FLEN/8, x4, x1, x2)

inst_67099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffc0000000000; valaddr_reg:x3; val_offset:201297*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201297*0 + 3*283*FLEN/8, x4, x1, x2)

inst_67100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffe0000000000; valaddr_reg:x3; val_offset:201300*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201300*0 + 3*284*FLEN/8, x4, x1, x2)

inst_67101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fff0000000000; valaddr_reg:x3; val_offset:201303*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201303*0 + 3*285*FLEN/8, x4, x1, x2)

inst_67102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fff8000000000; valaddr_reg:x3; val_offset:201306*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201306*0 + 3*286*FLEN/8, x4, x1, x2)

inst_67103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffc000000000; valaddr_reg:x3; val_offset:201309*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201309*0 + 3*287*FLEN/8, x4, x1, x2)

inst_67104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffe000000000; valaddr_reg:x3; val_offset:201312*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201312*0 + 3*288*FLEN/8, x4, x1, x2)

inst_67105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffff000000000; valaddr_reg:x3; val_offset:201315*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201315*0 + 3*289*FLEN/8, x4, x1, x2)

inst_67106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffff800000000; valaddr_reg:x3; val_offset:201318*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201318*0 + 3*290*FLEN/8, x4, x1, x2)

inst_67107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffc00000000; valaddr_reg:x3; val_offset:201321*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201321*0 + 3*291*FLEN/8, x4, x1, x2)

inst_67108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffe00000000; valaddr_reg:x3; val_offset:201324*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201324*0 + 3*292*FLEN/8, x4, x1, x2)

inst_67109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffff00000000; valaddr_reg:x3; val_offset:201327*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201327*0 + 3*293*FLEN/8, x4, x1, x2)

inst_67110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffff80000000; valaddr_reg:x3; val_offset:201330*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201330*0 + 3*294*FLEN/8, x4, x1, x2)

inst_67111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffc0000000; valaddr_reg:x3; val_offset:201333*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201333*0 + 3*295*FLEN/8, x4, x1, x2)

inst_67112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffe0000000; valaddr_reg:x3; val_offset:201336*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201336*0 + 3*296*FLEN/8, x4, x1, x2)

inst_67113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffff0000000; valaddr_reg:x3; val_offset:201339*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201339*0 + 3*297*FLEN/8, x4, x1, x2)

inst_67114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffff8000000; valaddr_reg:x3; val_offset:201342*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201342*0 + 3*298*FLEN/8, x4, x1, x2)

inst_67115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffc000000; valaddr_reg:x3; val_offset:201345*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201345*0 + 3*299*FLEN/8, x4, x1, x2)

inst_67116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffe000000; valaddr_reg:x3; val_offset:201348*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201348*0 + 3*300*FLEN/8, x4, x1, x2)

inst_67117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffff000000; valaddr_reg:x3; val_offset:201351*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201351*0 + 3*301*FLEN/8, x4, x1, x2)

inst_67118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffff800000; valaddr_reg:x3; val_offset:201354*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201354*0 + 3*302*FLEN/8, x4, x1, x2)

inst_67119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffffc00000; valaddr_reg:x3; val_offset:201357*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201357*0 + 3*303*FLEN/8, x4, x1, x2)

inst_67120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffffe00000; valaddr_reg:x3; val_offset:201360*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201360*0 + 3*304*FLEN/8, x4, x1, x2)

inst_67121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffff00000; valaddr_reg:x3; val_offset:201363*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201363*0 + 3*305*FLEN/8, x4, x1, x2)

inst_67122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffff80000; valaddr_reg:x3; val_offset:201366*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201366*0 + 3*306*FLEN/8, x4, x1, x2)

inst_67123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffffc0000; valaddr_reg:x3; val_offset:201369*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201369*0 + 3*307*FLEN/8, x4, x1, x2)

inst_67124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffffe0000; valaddr_reg:x3; val_offset:201372*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201372*0 + 3*308*FLEN/8, x4, x1, x2)

inst_67125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffffff0000; valaddr_reg:x3; val_offset:201375*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201375*0 + 3*309*FLEN/8, x4, x1, x2)

inst_67126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffffff8000; valaddr_reg:x3; val_offset:201378*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201378*0 + 3*310*FLEN/8, x4, x1, x2)

inst_67127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffffffc000; valaddr_reg:x3; val_offset:201381*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201381*0 + 3*311*FLEN/8, x4, x1, x2)

inst_67128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffffffe000; valaddr_reg:x3; val_offset:201384*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201384*0 + 3*312*FLEN/8, x4, x1, x2)

inst_67129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffffff000; valaddr_reg:x3; val_offset:201387*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201387*0 + 3*313*FLEN/8, x4, x1, x2)

inst_67130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffffff800; valaddr_reg:x3; val_offset:201390*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201390*0 + 3*314*FLEN/8, x4, x1, x2)

inst_67131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffffffc00; valaddr_reg:x3; val_offset:201393*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201393*0 + 3*315*FLEN/8, x4, x1, x2)

inst_67132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffffffe00; valaddr_reg:x3; val_offset:201396*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201396*0 + 3*316*FLEN/8, x4, x1, x2)

inst_67133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffffffx00; valaddr_reg:x3; val_offset:201399*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201399*0 + 3*317*FLEN/8, x4, x1, x2)

inst_67134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffffffx80; valaddr_reg:x3; val_offset:201402*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201402*0 + 3*318*FLEN/8, x4, x1, x2)

inst_67135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffffffffc0; valaddr_reg:x3; val_offset:201405*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201405*0 + 3*319*FLEN/8, x4, x1, x2)

inst_67136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffffffffe0; valaddr_reg:x3; val_offset:201408*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201408*0 + 3*320*FLEN/8, x4, x1, x2)

inst_67137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffffffffx0; valaddr_reg:x3; val_offset:201411*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201411*0 + 3*321*FLEN/8, x4, x1, x2)

inst_67138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffffffffx8; valaddr_reg:x3; val_offset:201414*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201414*0 + 3*322*FLEN/8, x4, x1, x2)

inst_67139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffffffffc; valaddr_reg:x3; val_offset:201417*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201417*0 + 3*323*FLEN/8, x4, x1, x2)

inst_67140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1ffffffffffffe; valaddr_reg:x3; val_offset:201420*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201420*0 + 3*324*FLEN/8, x4, x1, x2)

inst_67141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x1 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx1fffffffffffff; valaddr_reg:x3; val_offset:201423*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201423*0 + 3*325*FLEN/8, x4, x1, x2)

inst_67142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:201426*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201426*0 + 3*326*FLEN/8, x4, x1, x2)

inst_67143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:201429*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201429*0 + 3*327*FLEN/8, x4, x1, x2)

inst_67144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:201432*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201432*0 + 3*328*FLEN/8, x4, x1, x2)

inst_67145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:201435*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201435*0 + 3*329*FLEN/8, x4, x1, x2)

inst_67146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:201438*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201438*0 + 3*330*FLEN/8, x4, x1, x2)

inst_67147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:201441*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201441*0 + 3*331*FLEN/8, x4, x1, x2)

inst_67148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:201444*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201444*0 + 3*332*FLEN/8, x4, x1, x2)

inst_67149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:201447*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201447*0 + 3*333*FLEN/8, x4, x1, x2)

inst_67150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:201450*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201450*0 + 3*334*FLEN/8, x4, x1, x2)

inst_67151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx86db6db6db6db6; valaddr_reg:x3; val_offset:201453*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201453*0 + 3*335*FLEN/8, x4, x1, x2)

inst_67152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:201456*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201456*0 + 3*336*FLEN/8, x4, x1, x2)

inst_67153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:201459*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201459*0 + 3*337*FLEN/8, x4, x1, x2)

inst_67154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:201462*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201462*0 + 3*338*FLEN/8, x4, x1, x2)

inst_67155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx8b6db6db6db6db; valaddr_reg:x3; val_offset:201465*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201465*0 + 3*339*FLEN/8, x4, x1, x2)

inst_67156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx8ccccccccccccc; valaddr_reg:x3; val_offset:201468*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201468*0 + 3*340*FLEN/8, x4, x1, x2)

inst_67157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx8db6db6db6db6d; valaddr_reg:x3; val_offset:201471*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201471*0 + 3*341*FLEN/8, x4, x1, x2)

inst_67158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx8fffffffffffc0; valaddr_reg:x3; val_offset:201474*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201474*0 + 3*342*FLEN/8, x4, x1, x2)

inst_67159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx8fffffffffffe0; valaddr_reg:x3; val_offset:201477*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201477*0 + 3*343*FLEN/8, x4, x1, x2)

inst_67160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx8fffffffffffx0; valaddr_reg:x3; val_offset:201480*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201480*0 + 3*344*FLEN/8, x4, x1, x2)

inst_67161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx8fffffffffffx8; valaddr_reg:x3; val_offset:201483*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201483*0 + 3*345*FLEN/8, x4, x1, x2)

inst_67162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx8ffffffffffffc; valaddr_reg:x3; val_offset:201486*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201486*0 + 3*346*FLEN/8, x4, x1, x2)

inst_67163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4441c90d7aacb and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9438fce4f256f and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4441c90d7aacb; op2val:0x9fc9438fce4f256f;
op3val:0xbx8ffffffffffffe; valaddr_reg:x3; val_offset:201489*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201489*0 + 3*347*FLEN/8, x4, x1, x2)

inst_67164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000000000000; valaddr_reg:x3; val_offset:201492*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201492*0 + 3*348*FLEN/8, x4, x1, x2)

inst_67165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000000000001; valaddr_reg:x3; val_offset:201495*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201495*0 + 3*349*FLEN/8, x4, x1, x2)

inst_67166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000000000003; valaddr_reg:x3; val_offset:201498*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201498*0 + 3*350*FLEN/8, x4, x1, x2)

inst_67167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000000000007; valaddr_reg:x3; val_offset:201501*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201501*0 + 3*351*FLEN/8, x4, x1, x2)

inst_67168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000000000000f; valaddr_reg:x3; val_offset:201504*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201504*0 + 3*352*FLEN/8, x4, x1, x2)

inst_67169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000000000001f; valaddr_reg:x3; val_offset:201507*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201507*0 + 3*353*FLEN/8, x4, x1, x2)

inst_67170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000000000003f; valaddr_reg:x3; val_offset:201510*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201510*0 + 3*354*FLEN/8, x4, x1, x2)

inst_67171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000000000007f; valaddr_reg:x3; val_offset:201513*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201513*0 + 3*355*FLEN/8, x4, x1, x2)

inst_67172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400000000000ff; valaddr_reg:x3; val_offset:201516*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201516*0 + 3*356*FLEN/8, x4, x1, x2)

inst_67173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400000000001ff; valaddr_reg:x3; val_offset:201519*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201519*0 + 3*357*FLEN/8, x4, x1, x2)

inst_67174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400000000003ff; valaddr_reg:x3; val_offset:201522*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201522*0 + 3*358*FLEN/8, x4, x1, x2)

inst_67175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400000000007ff; valaddr_reg:x3; val_offset:201525*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201525*0 + 3*359*FLEN/8, x4, x1, x2)

inst_67176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000000000fff; valaddr_reg:x3; val_offset:201528*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201528*0 + 3*360*FLEN/8, x4, x1, x2)

inst_67177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000000001fff; valaddr_reg:x3; val_offset:201531*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201531*0 + 3*361*FLEN/8, x4, x1, x2)

inst_67178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000000003fff; valaddr_reg:x3; val_offset:201534*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201534*0 + 3*362*FLEN/8, x4, x1, x2)

inst_67179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000000007fff; valaddr_reg:x3; val_offset:201537*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201537*0 + 3*363*FLEN/8, x4, x1, x2)

inst_67180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000000000ffff; valaddr_reg:x3; val_offset:201540*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201540*0 + 3*364*FLEN/8, x4, x1, x2)

inst_67181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000000001ffff; valaddr_reg:x3; val_offset:201543*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201543*0 + 3*365*FLEN/8, x4, x1, x2)

inst_67182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000000003ffff; valaddr_reg:x3; val_offset:201546*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201546*0 + 3*366*FLEN/8, x4, x1, x2)

inst_67183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000000007ffff; valaddr_reg:x3; val_offset:201549*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201549*0 + 3*367*FLEN/8, x4, x1, x2)

inst_67184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400000000fffff; valaddr_reg:x3; val_offset:201552*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201552*0 + 3*368*FLEN/8, x4, x1, x2)

inst_67185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400000001fffff; valaddr_reg:x3; val_offset:201555*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201555*0 + 3*369*FLEN/8, x4, x1, x2)

inst_67186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400000003fffff; valaddr_reg:x3; val_offset:201558*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201558*0 + 3*370*FLEN/8, x4, x1, x2)

inst_67187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400000007fffff; valaddr_reg:x3; val_offset:201561*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201561*0 + 3*371*FLEN/8, x4, x1, x2)

inst_67188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000000ffffff; valaddr_reg:x3; val_offset:201564*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201564*0 + 3*372*FLEN/8, x4, x1, x2)

inst_67189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000001ffffff; valaddr_reg:x3; val_offset:201567*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201567*0 + 3*373*FLEN/8, x4, x1, x2)

inst_67190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000003ffffff; valaddr_reg:x3; val_offset:201570*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201570*0 + 3*374*FLEN/8, x4, x1, x2)

inst_67191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000007ffffff; valaddr_reg:x3; val_offset:201573*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201573*0 + 3*375*FLEN/8, x4, x1, x2)

inst_67192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000000fffffff; valaddr_reg:x3; val_offset:201576*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201576*0 + 3*376*FLEN/8, x4, x1, x2)

inst_67193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000001fffffff; valaddr_reg:x3; val_offset:201579*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201579*0 + 3*377*FLEN/8, x4, x1, x2)

inst_67194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000003fffffff; valaddr_reg:x3; val_offset:201582*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201582*0 + 3*378*FLEN/8, x4, x1, x2)

inst_67195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000007fffffff; valaddr_reg:x3; val_offset:201585*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201585*0 + 3*379*FLEN/8, x4, x1, x2)

inst_67196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400000ffffffff; valaddr_reg:x3; val_offset:201588*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201588*0 + 3*380*FLEN/8, x4, x1, x2)

inst_67197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400001ffffffff; valaddr_reg:x3; val_offset:201591*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201591*0 + 3*381*FLEN/8, x4, x1, x2)

inst_67198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400003ffffffff; valaddr_reg:x3; val_offset:201594*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201594*0 + 3*382*FLEN/8, x4, x1, x2)

inst_67199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400007ffffffff; valaddr_reg:x3; val_offset:201597*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201597*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_67200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40000fffffffff; valaddr_reg:x3; val_offset:201600*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201600*0 + 3*384*FLEN/8, x4, x1, x2)

inst_67201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40001fffffffff; valaddr_reg:x3; val_offset:201603*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201603*0 + 3*385*FLEN/8, x4, x1, x2)

inst_67202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40003fffffffff; valaddr_reg:x3; val_offset:201606*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201606*0 + 3*386*FLEN/8, x4, x1, x2)

inst_67203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40007fffffffff; valaddr_reg:x3; val_offset:201609*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201609*0 + 3*387*FLEN/8, x4, x1, x2)

inst_67204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4000ffffffffff; valaddr_reg:x3; val_offset:201612*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201612*0 + 3*388*FLEN/8, x4, x1, x2)

inst_67205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4001ffffffffff; valaddr_reg:x3; val_offset:201615*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201615*0 + 3*389*FLEN/8, x4, x1, x2)

inst_67206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4003ffffffffff; valaddr_reg:x3; val_offset:201618*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201618*0 + 3*390*FLEN/8, x4, x1, x2)

inst_67207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4007ffffffffff; valaddr_reg:x3; val_offset:201621*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201621*0 + 3*391*FLEN/8, x4, x1, x2)

inst_67208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba400fffffffffff; valaddr_reg:x3; val_offset:201624*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201624*0 + 3*392*FLEN/8, x4, x1, x2)

inst_67209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba401fffffffffff; valaddr_reg:x3; val_offset:201627*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201627*0 + 3*393*FLEN/8, x4, x1, x2)

inst_67210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba403fffffffffff; valaddr_reg:x3; val_offset:201630*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201630*0 + 3*394*FLEN/8, x4, x1, x2)

inst_67211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba407fffffffffff; valaddr_reg:x3; val_offset:201633*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201633*0 + 3*395*FLEN/8, x4, x1, x2)

inst_67212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba40ffffffffffff; valaddr_reg:x3; val_offset:201636*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201636*0 + 3*396*FLEN/8, x4, x1, x2)

inst_67213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba41ffffffffffff; valaddr_reg:x3; val_offset:201639*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201639*0 + 3*397*FLEN/8, x4, x1, x2)

inst_67214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba43ffffffffffff; valaddr_reg:x3; val_offset:201642*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201642*0 + 3*398*FLEN/8, x4, x1, x2)

inst_67215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba47ffffffffffff; valaddr_reg:x3; val_offset:201645*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201645*0 + 3*399*FLEN/8, x4, x1, x2)

inst_67216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba48000000000000; valaddr_reg:x3; val_offset:201648*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201648*0 + 3*400*FLEN/8, x4, x1, x2)

inst_67217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4c000000000000; valaddr_reg:x3; val_offset:201651*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201651*0 + 3*401*FLEN/8, x4, x1, x2)

inst_67218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4e000000000000; valaddr_reg:x3; val_offset:201654*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201654*0 + 3*402*FLEN/8, x4, x1, x2)

inst_67219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4f000000000000; valaddr_reg:x3; val_offset:201657*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201657*0 + 3*403*FLEN/8, x4, x1, x2)

inst_67220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4f800000000000; valaddr_reg:x3; val_offset:201660*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201660*0 + 3*404*FLEN/8, x4, x1, x2)

inst_67221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fc00000000000; valaddr_reg:x3; val_offset:201663*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201663*0 + 3*405*FLEN/8, x4, x1, x2)

inst_67222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fe00000000000; valaddr_reg:x3; val_offset:201666*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201666*0 + 3*406*FLEN/8, x4, x1, x2)

inst_67223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ff00000000000; valaddr_reg:x3; val_offset:201669*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201669*0 + 3*407*FLEN/8, x4, x1, x2)

inst_67224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ff80000000000; valaddr_reg:x3; val_offset:201672*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201672*0 + 3*408*FLEN/8, x4, x1, x2)

inst_67225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffc0000000000; valaddr_reg:x3; val_offset:201675*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201675*0 + 3*409*FLEN/8, x4, x1, x2)

inst_67226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffe0000000000; valaddr_reg:x3; val_offset:201678*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201678*0 + 3*410*FLEN/8, x4, x1, x2)

inst_67227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fff0000000000; valaddr_reg:x3; val_offset:201681*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201681*0 + 3*411*FLEN/8, x4, x1, x2)

inst_67228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fff8000000000; valaddr_reg:x3; val_offset:201684*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201684*0 + 3*412*FLEN/8, x4, x1, x2)

inst_67229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffc000000000; valaddr_reg:x3; val_offset:201687*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201687*0 + 3*413*FLEN/8, x4, x1, x2)

inst_67230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffe000000000; valaddr_reg:x3; val_offset:201690*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201690*0 + 3*414*FLEN/8, x4, x1, x2)

inst_67231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffff000000000; valaddr_reg:x3; val_offset:201693*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201693*0 + 3*415*FLEN/8, x4, x1, x2)

inst_67232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffff800000000; valaddr_reg:x3; val_offset:201696*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201696*0 + 3*416*FLEN/8, x4, x1, x2)

inst_67233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffc00000000; valaddr_reg:x3; val_offset:201699*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201699*0 + 3*417*FLEN/8, x4, x1, x2)

inst_67234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffe00000000; valaddr_reg:x3; val_offset:201702*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201702*0 + 3*418*FLEN/8, x4, x1, x2)

inst_67235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffff00000000; valaddr_reg:x3; val_offset:201705*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201705*0 + 3*419*FLEN/8, x4, x1, x2)

inst_67236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffff80000000; valaddr_reg:x3; val_offset:201708*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201708*0 + 3*420*FLEN/8, x4, x1, x2)

inst_67237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffc0000000; valaddr_reg:x3; val_offset:201711*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201711*0 + 3*421*FLEN/8, x4, x1, x2)

inst_67238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffe0000000; valaddr_reg:x3; val_offset:201714*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201714*0 + 3*422*FLEN/8, x4, x1, x2)

inst_67239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffff0000000; valaddr_reg:x3; val_offset:201717*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201717*0 + 3*423*FLEN/8, x4, x1, x2)

inst_67240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffff8000000; valaddr_reg:x3; val_offset:201720*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201720*0 + 3*424*FLEN/8, x4, x1, x2)

inst_67241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffc000000; valaddr_reg:x3; val_offset:201723*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201723*0 + 3*425*FLEN/8, x4, x1, x2)

inst_67242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffe000000; valaddr_reg:x3; val_offset:201726*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201726*0 + 3*426*FLEN/8, x4, x1, x2)

inst_67243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffff000000; valaddr_reg:x3; val_offset:201729*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201729*0 + 3*427*FLEN/8, x4, x1, x2)

inst_67244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffff800000; valaddr_reg:x3; val_offset:201732*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201732*0 + 3*428*FLEN/8, x4, x1, x2)

inst_67245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffffc00000; valaddr_reg:x3; val_offset:201735*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201735*0 + 3*429*FLEN/8, x4, x1, x2)

inst_67246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffffe00000; valaddr_reg:x3; val_offset:201738*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201738*0 + 3*430*FLEN/8, x4, x1, x2)

inst_67247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffff00000; valaddr_reg:x3; val_offset:201741*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201741*0 + 3*431*FLEN/8, x4, x1, x2)

inst_67248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffff80000; valaddr_reg:x3; val_offset:201744*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201744*0 + 3*432*FLEN/8, x4, x1, x2)

inst_67249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffffc0000; valaddr_reg:x3; val_offset:201747*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201747*0 + 3*433*FLEN/8, x4, x1, x2)

inst_67250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffffe0000; valaddr_reg:x3; val_offset:201750*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201750*0 + 3*434*FLEN/8, x4, x1, x2)

inst_67251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffffff0000; valaddr_reg:x3; val_offset:201753*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201753*0 + 3*435*FLEN/8, x4, x1, x2)

inst_67252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffffff8000; valaddr_reg:x3; val_offset:201756*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201756*0 + 3*436*FLEN/8, x4, x1, x2)

inst_67253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffffffc000; valaddr_reg:x3; val_offset:201759*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201759*0 + 3*437*FLEN/8, x4, x1, x2)

inst_67254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffffffe000; valaddr_reg:x3; val_offset:201762*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201762*0 + 3*438*FLEN/8, x4, x1, x2)

inst_67255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffffff000; valaddr_reg:x3; val_offset:201765*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201765*0 + 3*439*FLEN/8, x4, x1, x2)

inst_67256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffffff800; valaddr_reg:x3; val_offset:201768*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201768*0 + 3*440*FLEN/8, x4, x1, x2)

inst_67257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffffffc00; valaddr_reg:x3; val_offset:201771*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201771*0 + 3*441*FLEN/8, x4, x1, x2)

inst_67258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffffffe00; valaddr_reg:x3; val_offset:201774*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201774*0 + 3*442*FLEN/8, x4, x1, x2)

inst_67259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffffffx00; valaddr_reg:x3; val_offset:201777*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201777*0 + 3*443*FLEN/8, x4, x1, x2)

inst_67260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffffffx80; valaddr_reg:x3; val_offset:201780*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201780*0 + 3*444*FLEN/8, x4, x1, x2)

inst_67261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffffffffc0; valaddr_reg:x3; val_offset:201783*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201783*0 + 3*445*FLEN/8, x4, x1, x2)

inst_67262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffffffffe0; valaddr_reg:x3; val_offset:201786*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201786*0 + 3*446*FLEN/8, x4, x1, x2)

inst_67263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffffffffx0; valaddr_reg:x3; val_offset:201789*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201789*0 + 3*447*FLEN/8, x4, x1, x2)

inst_67264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffffffffx8; valaddr_reg:x3; val_offset:201792*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201792*0 + 3*448*FLEN/8, x4, x1, x2)

inst_67265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffffffffc; valaddr_reg:x3; val_offset:201795*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201795*0 + 3*449*FLEN/8, x4, x1, x2)

inst_67266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4ffffffffffffe; valaddr_reg:x3; val_offset:201798*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201798*0 + 3*450*FLEN/8, x4, x1, x2)

inst_67267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3a4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xba4fffffffffffff; valaddr_reg:x3; val_offset:201801*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201801*0 + 3*451*FLEN/8, x4, x1, x2)

inst_67268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:201804*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201804*0 + 3*452*FLEN/8, x4, x1, x2)

inst_67269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:201807*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201807*0 + 3*453*FLEN/8, x4, x1, x2)

inst_67270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:201810*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201810*0 + 3*454*FLEN/8, x4, x1, x2)

inst_67271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:201813*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201813*0 + 3*455*FLEN/8, x4, x1, x2)

inst_67272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:201816*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201816*0 + 3*456*FLEN/8, x4, x1, x2)

inst_67273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:201819*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201819*0 + 3*457*FLEN/8, x4, x1, x2)

inst_67274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:201822*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201822*0 + 3*458*FLEN/8, x4, x1, x2)

inst_67275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:201825*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201825*0 + 3*459*FLEN/8, x4, x1, x2)

inst_67276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:201828*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201828*0 + 3*460*FLEN/8, x4, x1, x2)

inst_67277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbx86db6db6db6db6; valaddr_reg:x3; val_offset:201831*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201831*0 + 3*461*FLEN/8, x4, x1, x2)

inst_67278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:201834*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201834*0 + 3*462*FLEN/8, x4, x1, x2)

inst_67279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:201837*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201837*0 + 3*463*FLEN/8, x4, x1, x2)

inst_67280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:201840*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201840*0 + 3*464*FLEN/8, x4, x1, x2)

inst_67281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbx8b6db6db6db6db; valaddr_reg:x3; val_offset:201843*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201843*0 + 3*465*FLEN/8, x4, x1, x2)

inst_67282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbx8ccccccccccccc; valaddr_reg:x3; val_offset:201846*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201846*0 + 3*466*FLEN/8, x4, x1, x2)

inst_67283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbx8db6db6db6db6d; valaddr_reg:x3; val_offset:201849*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201849*0 + 3*467*FLEN/8, x4, x1, x2)

inst_67284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbx8fffffffffffc0; valaddr_reg:x3; val_offset:201852*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201852*0 + 3*468*FLEN/8, x4, x1, x2)

inst_67285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbx8fffffffffffe0; valaddr_reg:x3; val_offset:201855*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201855*0 + 3*469*FLEN/8, x4, x1, x2)

inst_67286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbx8fffffffffffx0; valaddr_reg:x3; val_offset:201858*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201858*0 + 3*470*FLEN/8, x4, x1, x2)

inst_67287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbx8fffffffffffx8; valaddr_reg:x3; val_offset:201861*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201861*0 + 3*471*FLEN/8, x4, x1, x2)

inst_67288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbx8ffffffffffffc; valaddr_reg:x3; val_offset:201864*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201864*0 + 3*472*FLEN/8, x4, x1, x2)

inst_67289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x9341cc87ee461 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x9fc9341cc87ee461;
op3val:0xbx8ffffffffffffe; valaddr_reg:x3; val_offset:201867*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201867*0 + 3*473*FLEN/8, x4, x1, x2)

inst_67290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000000000000; valaddr_reg:x3; val_offset:201870*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201870*0 + 3*474*FLEN/8, x4, x1, x2)

inst_67291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000000000001; valaddr_reg:x3; val_offset:201873*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201873*0 + 3*475*FLEN/8, x4, x1, x2)

inst_67292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000000000003; valaddr_reg:x3; val_offset:201876*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201876*0 + 3*476*FLEN/8, x4, x1, x2)

inst_67293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000000000007; valaddr_reg:x3; val_offset:201879*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201879*0 + 3*477*FLEN/8, x4, x1, x2)

inst_67294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000000000000f; valaddr_reg:x3; val_offset:201882*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201882*0 + 3*478*FLEN/8, x4, x1, x2)

inst_67295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000000000001f; valaddr_reg:x3; val_offset:201885*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201885*0 + 3*479*FLEN/8, x4, x1, x2)

inst_67296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000000000003f; valaddr_reg:x3; val_offset:201888*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201888*0 + 3*480*FLEN/8, x4, x1, x2)

inst_67297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000000000007f; valaddr_reg:x3; val_offset:201891*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201891*0 + 3*481*FLEN/8, x4, x1, x2)

inst_67298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f00000000000ff; valaddr_reg:x3; val_offset:201894*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201894*0 + 3*482*FLEN/8, x4, x1, x2)

inst_67299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f00000000001ff; valaddr_reg:x3; val_offset:201897*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201897*0 + 3*483*FLEN/8, x4, x1, x2)

inst_67300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f00000000003ff; valaddr_reg:x3; val_offset:201900*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201900*0 + 3*484*FLEN/8, x4, x1, x2)

inst_67301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f00000000007ff; valaddr_reg:x3; val_offset:201903*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201903*0 + 3*485*FLEN/8, x4, x1, x2)

inst_67302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000000000fff; valaddr_reg:x3; val_offset:201906*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201906*0 + 3*486*FLEN/8, x4, x1, x2)

inst_67303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000000001fff; valaddr_reg:x3; val_offset:201909*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201909*0 + 3*487*FLEN/8, x4, x1, x2)

inst_67304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000000003fff; valaddr_reg:x3; val_offset:201912*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201912*0 + 3*488*FLEN/8, x4, x1, x2)

inst_67305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000000007fff; valaddr_reg:x3; val_offset:201915*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201915*0 + 3*489*FLEN/8, x4, x1, x2)

inst_67306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000000000ffff; valaddr_reg:x3; val_offset:201918*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201918*0 + 3*490*FLEN/8, x4, x1, x2)

inst_67307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000000001ffff; valaddr_reg:x3; val_offset:201921*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201921*0 + 3*491*FLEN/8, x4, x1, x2)

inst_67308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000000003ffff; valaddr_reg:x3; val_offset:201924*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201924*0 + 3*492*FLEN/8, x4, x1, x2)

inst_67309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000000007ffff; valaddr_reg:x3; val_offset:201927*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201927*0 + 3*493*FLEN/8, x4, x1, x2)

inst_67310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f00000000fffff; valaddr_reg:x3; val_offset:201930*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201930*0 + 3*494*FLEN/8, x4, x1, x2)

inst_67311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f00000001fffff; valaddr_reg:x3; val_offset:201933*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201933*0 + 3*495*FLEN/8, x4, x1, x2)

inst_67312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f00000003fffff; valaddr_reg:x3; val_offset:201936*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201936*0 + 3*496*FLEN/8, x4, x1, x2)

inst_67313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f00000007fffff; valaddr_reg:x3; val_offset:201939*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201939*0 + 3*497*FLEN/8, x4, x1, x2)

inst_67314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000000ffffff; valaddr_reg:x3; val_offset:201942*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201942*0 + 3*498*FLEN/8, x4, x1, x2)

inst_67315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000001ffffff; valaddr_reg:x3; val_offset:201945*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201945*0 + 3*499*FLEN/8, x4, x1, x2)

inst_67316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000003ffffff; valaddr_reg:x3; val_offset:201948*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201948*0 + 3*500*FLEN/8, x4, x1, x2)

inst_67317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000007ffffff; valaddr_reg:x3; val_offset:201951*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201951*0 + 3*501*FLEN/8, x4, x1, x2)

inst_67318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000000fffffff; valaddr_reg:x3; val_offset:201954*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201954*0 + 3*502*FLEN/8, x4, x1, x2)

inst_67319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000001fffffff; valaddr_reg:x3; val_offset:201957*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201957*0 + 3*503*FLEN/8, x4, x1, x2)

inst_67320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000003fffffff; valaddr_reg:x3; val_offset:201960*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201960*0 + 3*504*FLEN/8, x4, x1, x2)

inst_67321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000007fffffff; valaddr_reg:x3; val_offset:201963*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201963*0 + 3*505*FLEN/8, x4, x1, x2)

inst_67322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f00000ffffffff; valaddr_reg:x3; val_offset:201966*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201966*0 + 3*506*FLEN/8, x4, x1, x2)

inst_67323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f00001ffffffff; valaddr_reg:x3; val_offset:201969*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201969*0 + 3*507*FLEN/8, x4, x1, x2)

inst_67324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f00003ffffffff; valaddr_reg:x3; val_offset:201972*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201972*0 + 3*508*FLEN/8, x4, x1, x2)

inst_67325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f00007ffffffff; valaddr_reg:x3; val_offset:201975*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201975*0 + 3*509*FLEN/8, x4, x1, x2)

inst_67326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0000fffffffff; valaddr_reg:x3; val_offset:201978*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201978*0 + 3*510*FLEN/8, x4, x1, x2)

inst_67327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0001fffffffff; valaddr_reg:x3; val_offset:201981*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201981*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_67328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0003fffffffff; valaddr_reg:x3; val_offset:201984*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201984*0 + 3*512*FLEN/8, x4, x1, x2)

inst_67329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f0007fffffffff; valaddr_reg:x3; val_offset:201987*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201987*0 + 3*513*FLEN/8, x4, x1, x2)

inst_67330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f000ffffffffff; valaddr_reg:x3; val_offset:201990*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201990*0 + 3*514*FLEN/8, x4, x1, x2)

inst_67331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f001ffffffffff; valaddr_reg:x3; val_offset:201993*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201993*0 + 3*515*FLEN/8, x4, x1, x2)

inst_67332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f003ffffffffff; valaddr_reg:x3; val_offset:201996*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201996*0 + 3*516*FLEN/8, x4, x1, x2)

inst_67333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f007ffffffffff; valaddr_reg:x3; val_offset:201999*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201999*0 + 3*517*FLEN/8, x4, x1, x2)

inst_67334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38x00fffffffffff; valaddr_reg:x3; val_offset:202002*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202002*0 + 3*518*FLEN/8, x4, x1, x2)

inst_67335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38x01fffffffffff; valaddr_reg:x3; val_offset:202005*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202005*0 + 3*519*FLEN/8, x4, x1, x2)

inst_67336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38x03fffffffffff; valaddr_reg:x3; val_offset:202008*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202008*0 + 3*520*FLEN/8, x4, x1, x2)

inst_67337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38x07fffffffffff; valaddr_reg:x3; val_offset:202011*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202011*0 + 3*521*FLEN/8, x4, x1, x2)

inst_67338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38x0ffffffffffff; valaddr_reg:x3; val_offset:202014*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202014*0 + 3*522*FLEN/8, x4, x1, x2)

inst_67339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38x1ffffffffffff; valaddr_reg:x3; val_offset:202017*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202017*0 + 3*523*FLEN/8, x4, x1, x2)

inst_67340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38x3ffffffffffff; valaddr_reg:x3; val_offset:202020*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202020*0 + 3*524*FLEN/8, x4, x1, x2)

inst_67341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38x7ffffffffffff; valaddr_reg:x3; val_offset:202023*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202023*0 + 3*525*FLEN/8, x4, x1, x2)

inst_67342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38f8000000000000; valaddr_reg:x3; val_offset:202026*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202026*0 + 3*526*FLEN/8, x4, x1, x2)

inst_67343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fc000000000000; valaddr_reg:x3; val_offset:202029*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202029*0 + 3*527*FLEN/8, x4, x1, x2)

inst_67344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fe000000000000; valaddr_reg:x3; val_offset:202032*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202032*0 + 3*528*FLEN/8, x4, x1, x2)

inst_67345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ff000000000000; valaddr_reg:x3; val_offset:202035*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202035*0 + 3*529*FLEN/8, x4, x1, x2)

inst_67346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ff800000000000; valaddr_reg:x3; val_offset:202038*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202038*0 + 3*530*FLEN/8, x4, x1, x2)

inst_67347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffc00000000000; valaddr_reg:x3; val_offset:202041*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202041*0 + 3*531*FLEN/8, x4, x1, x2)

inst_67348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffe00000000000; valaddr_reg:x3; val_offset:202044*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202044*0 + 3*532*FLEN/8, x4, x1, x2)

inst_67349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fff00000000000; valaddr_reg:x3; val_offset:202047*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202047*0 + 3*533*FLEN/8, x4, x1, x2)

inst_67350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fff80000000000; valaddr_reg:x3; val_offset:202050*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202050*0 + 3*534*FLEN/8, x4, x1, x2)

inst_67351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffc0000000000; valaddr_reg:x3; val_offset:202053*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202053*0 + 3*535*FLEN/8, x4, x1, x2)

inst_67352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffe0000000000; valaddr_reg:x3; val_offset:202056*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202056*0 + 3*536*FLEN/8, x4, x1, x2)

inst_67353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffff0000000000; valaddr_reg:x3; val_offset:202059*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202059*0 + 3*537*FLEN/8, x4, x1, x2)

inst_67354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffff8000000000; valaddr_reg:x3; val_offset:202062*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202062*0 + 3*538*FLEN/8, x4, x1, x2)

inst_67355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffc000000000; valaddr_reg:x3; val_offset:202065*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202065*0 + 3*539*FLEN/8, x4, x1, x2)

inst_67356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffe000000000; valaddr_reg:x3; val_offset:202068*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202068*0 + 3*540*FLEN/8, x4, x1, x2)

inst_67357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffff000000000; valaddr_reg:x3; val_offset:202071*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202071*0 + 3*541*FLEN/8, x4, x1, x2)

inst_67358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffff800000000; valaddr_reg:x3; val_offset:202074*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202074*0 + 3*542*FLEN/8, x4, x1, x2)

inst_67359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffc00000000; valaddr_reg:x3; val_offset:202077*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202077*0 + 3*543*FLEN/8, x4, x1, x2)

inst_67360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffe00000000; valaddr_reg:x3; val_offset:202080*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202080*0 + 3*544*FLEN/8, x4, x1, x2)

inst_67361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffff00000000; valaddr_reg:x3; val_offset:202083*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202083*0 + 3*545*FLEN/8, x4, x1, x2)

inst_67362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffff80000000; valaddr_reg:x3; val_offset:202086*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202086*0 + 3*546*FLEN/8, x4, x1, x2)

inst_67363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffc0000000; valaddr_reg:x3; val_offset:202089*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202089*0 + 3*547*FLEN/8, x4, x1, x2)

inst_67364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffe0000000; valaddr_reg:x3; val_offset:202092*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202092*0 + 3*548*FLEN/8, x4, x1, x2)

inst_67365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffff0000000; valaddr_reg:x3; val_offset:202095*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202095*0 + 3*549*FLEN/8, x4, x1, x2)

inst_67366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffff8000000; valaddr_reg:x3; val_offset:202098*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202098*0 + 3*550*FLEN/8, x4, x1, x2)

inst_67367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffc000000; valaddr_reg:x3; val_offset:202101*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202101*0 + 3*551*FLEN/8, x4, x1, x2)

inst_67368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffe000000; valaddr_reg:x3; val_offset:202104*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202104*0 + 3*552*FLEN/8, x4, x1, x2)

inst_67369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffff000000; valaddr_reg:x3; val_offset:202107*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202107*0 + 3*553*FLEN/8, x4, x1, x2)

inst_67370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffff800000; valaddr_reg:x3; val_offset:202110*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202110*0 + 3*554*FLEN/8, x4, x1, x2)

inst_67371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffffc00000; valaddr_reg:x3; val_offset:202113*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202113*0 + 3*555*FLEN/8, x4, x1, x2)

inst_67372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffffe00000; valaddr_reg:x3; val_offset:202116*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202116*0 + 3*556*FLEN/8, x4, x1, x2)

inst_67373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffff00000; valaddr_reg:x3; val_offset:202119*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202119*0 + 3*557*FLEN/8, x4, x1, x2)

inst_67374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffff80000; valaddr_reg:x3; val_offset:202122*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202122*0 + 3*558*FLEN/8, x4, x1, x2)

inst_67375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffffc0000; valaddr_reg:x3; val_offset:202125*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202125*0 + 3*559*FLEN/8, x4, x1, x2)

inst_67376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffffe0000; valaddr_reg:x3; val_offset:202128*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202128*0 + 3*560*FLEN/8, x4, x1, x2)

inst_67377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffffff0000; valaddr_reg:x3; val_offset:202131*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202131*0 + 3*561*FLEN/8, x4, x1, x2)

inst_67378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffffff8000; valaddr_reg:x3; val_offset:202134*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202134*0 + 3*562*FLEN/8, x4, x1, x2)

inst_67379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffffffc000; valaddr_reg:x3; val_offset:202137*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202137*0 + 3*563*FLEN/8, x4, x1, x2)

inst_67380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffffffe000; valaddr_reg:x3; val_offset:202140*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202140*0 + 3*564*FLEN/8, x4, x1, x2)

inst_67381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffffff000; valaddr_reg:x3; val_offset:202143*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202143*0 + 3*565*FLEN/8, x4, x1, x2)

inst_67382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffffff800; valaddr_reg:x3; val_offset:202146*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202146*0 + 3*566*FLEN/8, x4, x1, x2)

inst_67383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffffffc00; valaddr_reg:x3; val_offset:202149*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202149*0 + 3*567*FLEN/8, x4, x1, x2)

inst_67384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffffffe00; valaddr_reg:x3; val_offset:202152*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202152*0 + 3*568*FLEN/8, x4, x1, x2)

inst_67385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffffffx00; valaddr_reg:x3; val_offset:202155*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202155*0 + 3*569*FLEN/8, x4, x1, x2)

inst_67386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffffffx80; valaddr_reg:x3; val_offset:202158*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202158*0 + 3*570*FLEN/8, x4, x1, x2)

inst_67387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffffffffc0; valaddr_reg:x3; val_offset:202161*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202161*0 + 3*571*FLEN/8, x4, x1, x2)

inst_67388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffffffffe0; valaddr_reg:x3; val_offset:202164*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202164*0 + 3*572*FLEN/8, x4, x1, x2)

inst_67389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffffffffx0; valaddr_reg:x3; val_offset:202167*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202167*0 + 3*573*FLEN/8, x4, x1, x2)

inst_67390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffffffffx8; valaddr_reg:x3; val_offset:202170*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202170*0 + 3*574*FLEN/8, x4, x1, x2)

inst_67391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffffffffc; valaddr_reg:x3; val_offset:202173*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202173*0 + 3*575*FLEN/8, x4, x1, x2)

inst_67392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38fffffffffffffe; valaddr_reg:x3; val_offset:202176*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202176*0 + 3*576*FLEN/8, x4, x1, x2)

inst_67393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x38f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x38ffffffffffffff; valaddr_reg:x3; val_offset:202179*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202179*0 + 3*577*FLEN/8, x4, x1, x2)

inst_67394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:202182*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202182*0 + 3*578*FLEN/8, x4, x1, x2)

inst_67395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:202185*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202185*0 + 3*579*FLEN/8, x4, x1, x2)

inst_67396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:202188*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202188*0 + 3*580*FLEN/8, x4, x1, x2)

inst_67397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:202191*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202191*0 + 3*581*FLEN/8, x4, x1, x2)

inst_67398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:202194*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202194*0 + 3*582*FLEN/8, x4, x1, x2)

inst_67399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:202197*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202197*0 + 3*583*FLEN/8, x4, x1, x2)

inst_67400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:202200*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202200*0 + 3*584*FLEN/8, x4, x1, x2)

inst_67401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:202203*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202203*0 + 3*585*FLEN/8, x4, x1, x2)

inst_67402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:202206*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202206*0 + 3*586*FLEN/8, x4, x1, x2)

inst_67403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3fx6db6db6db6db6; valaddr_reg:x3; val_offset:202209*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202209*0 + 3*587*FLEN/8, x4, x1, x2)

inst_67404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:202212*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202212*0 + 3*588*FLEN/8, x4, x1, x2)

inst_67405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:202215*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202215*0 + 3*589*FLEN/8, x4, x1, x2)

inst_67406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:202218*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202218*0 + 3*590*FLEN/8, x4, x1, x2)

inst_67407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:202221*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202221*0 + 3*591*FLEN/8, x4, x1, x2)

inst_67408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:202224*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202224*0 + 3*592*FLEN/8, x4, x1, x2)

inst_67409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:202227*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202227*0 + 3*593*FLEN/8, x4, x1, x2)

inst_67410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:202230*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202230*0 + 3*594*FLEN/8, x4, x1, x2)

inst_67411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:202233*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202233*0 + 3*595*FLEN/8, x4, x1, x2)

inst_67412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3fffffffffffffx0; valaddr_reg:x3; val_offset:202236*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202236*0 + 3*596*FLEN/8, x4, x1, x2)

inst_67413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3fffffffffffffx8; valaddr_reg:x3; val_offset:202239*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202239*0 + 3*597*FLEN/8, x4, x1, x2)

inst_67414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:202242*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202242*0 + 3*598*FLEN/8, x4, x1, x2)

inst_67415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4528a44ed36fb and fs2 == 0 and fe2 == 0x203 and fm2 == 0x9319fx61ed495 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4528a44ed36fb; op2val:0x2039319fx61ed495;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:202245*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202245*0 + 3*599*FLEN/8, x4, x1, x2)

inst_67416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000000000000; valaddr_reg:x3; val_offset:202248*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202248*0 + 3*600*FLEN/8, x4, x1, x2)

inst_67417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:202251*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202251*0 + 3*601*FLEN/8, x4, x1, x2)

inst_67418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:202254*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202254*0 + 3*602*FLEN/8, x4, x1, x2)

inst_67419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:202257*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202257*0 + 3*603*FLEN/8, x4, x1, x2)

inst_67420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:202260*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202260*0 + 3*604*FLEN/8, x4, x1, x2)

inst_67421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:202263*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202263*0 + 3*605*FLEN/8, x4, x1, x2)

inst_67422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:202266*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202266*0 + 3*606*FLEN/8, x4, x1, x2)

inst_67423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000000000007f; valaddr_reg:x3; val_offset:202269*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202269*0 + 3*607*FLEN/8, x4, x1, x2)

inst_67424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100000000000ff; valaddr_reg:x3; val_offset:202272*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202272*0 + 3*608*FLEN/8, x4, x1, x2)

inst_67425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100000000001ff; valaddr_reg:x3; val_offset:202275*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202275*0 + 3*609*FLEN/8, x4, x1, x2)

inst_67426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100000000003ff; valaddr_reg:x3; val_offset:202278*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202278*0 + 3*610*FLEN/8, x4, x1, x2)

inst_67427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100000000007ff; valaddr_reg:x3; val_offset:202281*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202281*0 + 3*611*FLEN/8, x4, x1, x2)

inst_67428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000000000fff; valaddr_reg:x3; val_offset:202284*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202284*0 + 3*612*FLEN/8, x4, x1, x2)

inst_67429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000000001fff; valaddr_reg:x3; val_offset:202287*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202287*0 + 3*613*FLEN/8, x4, x1, x2)

inst_67430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000000003fff; valaddr_reg:x3; val_offset:202290*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202290*0 + 3*614*FLEN/8, x4, x1, x2)

inst_67431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000000007fff; valaddr_reg:x3; val_offset:202293*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202293*0 + 3*615*FLEN/8, x4, x1, x2)

inst_67432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000000000ffff; valaddr_reg:x3; val_offset:202296*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202296*0 + 3*616*FLEN/8, x4, x1, x2)

inst_67433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000000001ffff; valaddr_reg:x3; val_offset:202299*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202299*0 + 3*617*FLEN/8, x4, x1, x2)

inst_67434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000000003ffff; valaddr_reg:x3; val_offset:202302*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202302*0 + 3*618*FLEN/8, x4, x1, x2)

inst_67435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000000007ffff; valaddr_reg:x3; val_offset:202305*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202305*0 + 3*619*FLEN/8, x4, x1, x2)

inst_67436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100000000fffff; valaddr_reg:x3; val_offset:202308*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202308*0 + 3*620*FLEN/8, x4, x1, x2)

inst_67437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100000001fffff; valaddr_reg:x3; val_offset:202311*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202311*0 + 3*621*FLEN/8, x4, x1, x2)

inst_67438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100000003fffff; valaddr_reg:x3; val_offset:202314*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202314*0 + 3*622*FLEN/8, x4, x1, x2)

inst_67439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100000007fffff; valaddr_reg:x3; val_offset:202317*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202317*0 + 3*623*FLEN/8, x4, x1, x2)

inst_67440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000000ffffff; valaddr_reg:x3; val_offset:202320*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202320*0 + 3*624*FLEN/8, x4, x1, x2)

inst_67441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000001ffffff; valaddr_reg:x3; val_offset:202323*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202323*0 + 3*625*FLEN/8, x4, x1, x2)

inst_67442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000003ffffff; valaddr_reg:x3; val_offset:202326*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202326*0 + 3*626*FLEN/8, x4, x1, x2)

inst_67443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000007ffffff; valaddr_reg:x3; val_offset:202329*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202329*0 + 3*627*FLEN/8, x4, x1, x2)

inst_67444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000000fffffff; valaddr_reg:x3; val_offset:202332*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202332*0 + 3*628*FLEN/8, x4, x1, x2)

inst_67445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000001fffffff; valaddr_reg:x3; val_offset:202335*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202335*0 + 3*629*FLEN/8, x4, x1, x2)

inst_67446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000003fffffff; valaddr_reg:x3; val_offset:202338*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202338*0 + 3*630*FLEN/8, x4, x1, x2)

inst_67447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000007fffffff; valaddr_reg:x3; val_offset:202341*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202341*0 + 3*631*FLEN/8, x4, x1, x2)

inst_67448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100000ffffffff; valaddr_reg:x3; val_offset:202344*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202344*0 + 3*632*FLEN/8, x4, x1, x2)

inst_67449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100001ffffffff; valaddr_reg:x3; val_offset:202347*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202347*0 + 3*633*FLEN/8, x4, x1, x2)

inst_67450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100003ffffffff; valaddr_reg:x3; val_offset:202350*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202350*0 + 3*634*FLEN/8, x4, x1, x2)

inst_67451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100007ffffffff; valaddr_reg:x3; val_offset:202353*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202353*0 + 3*635*FLEN/8, x4, x1, x2)

inst_67452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010000fffffffff; valaddr_reg:x3; val_offset:202356*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202356*0 + 3*636*FLEN/8, x4, x1, x2)

inst_67453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010001fffffffff; valaddr_reg:x3; val_offset:202359*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202359*0 + 3*637*FLEN/8, x4, x1, x2)

inst_67454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010003fffffffff; valaddr_reg:x3; val_offset:202362*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202362*0 + 3*638*FLEN/8, x4, x1, x2)

inst_67455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010007fffffffff; valaddr_reg:x3; val_offset:202365*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202365*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_67456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801000ffffffffff; valaddr_reg:x3; val_offset:202368*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202368*0 + 3*640*FLEN/8, x4, x1, x2)

inst_67457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801001ffffffffff; valaddr_reg:x3; val_offset:202371*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202371*0 + 3*641*FLEN/8, x4, x1, x2)

inst_67458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801003ffffffffff; valaddr_reg:x3; val_offset:202374*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202374*0 + 3*642*FLEN/8, x4, x1, x2)

inst_67459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801007ffffffffff; valaddr_reg:x3; val_offset:202377*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202377*0 + 3*643*FLEN/8, x4, x1, x2)

inst_67460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80100fffffffffff; valaddr_reg:x3; val_offset:202380*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202380*0 + 3*644*FLEN/8, x4, x1, x2)

inst_67461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80101fffffffffff; valaddr_reg:x3; val_offset:202383*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202383*0 + 3*645*FLEN/8, x4, x1, x2)

inst_67462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80103fffffffffff; valaddr_reg:x3; val_offset:202386*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202386*0 + 3*646*FLEN/8, x4, x1, x2)

inst_67463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x80107fffffffffff; valaddr_reg:x3; val_offset:202389*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202389*0 + 3*647*FLEN/8, x4, x1, x2)

inst_67464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8010ffffffffffff; valaddr_reg:x3; val_offset:202392*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202392*0 + 3*648*FLEN/8, x4, x1, x2)

inst_67465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8011ffffffffffff; valaddr_reg:x3; val_offset:202395*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202395*0 + 3*649*FLEN/8, x4, x1, x2)

inst_67466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:202398*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202398*0 + 3*650*FLEN/8, x4, x1, x2)

inst_67467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8013ffffffffffff; valaddr_reg:x3; val_offset:202401*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202401*0 + 3*651*FLEN/8, x4, x1, x2)

inst_67468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:202404*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202404*0 + 3*652*FLEN/8, x4, x1, x2)

inst_67469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:202407*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202407*0 + 3*653*FLEN/8, x4, x1, x2)

inst_67470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:202410*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202410*0 + 3*654*FLEN/8, x4, x1, x2)

inst_67471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:202413*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202413*0 + 3*655*FLEN/8, x4, x1, x2)

inst_67472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8017ffffffffffff; valaddr_reg:x3; val_offset:202416*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202416*0 + 3*656*FLEN/8, x4, x1, x2)

inst_67473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8018000000000000; valaddr_reg:x3; val_offset:202419*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202419*0 + 3*657*FLEN/8, x4, x1, x2)

inst_67474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:202422*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202422*0 + 3*658*FLEN/8, x4, x1, x2)

inst_67475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:202425*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202425*0 + 3*659*FLEN/8, x4, x1, x2)

inst_67476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:202428*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202428*0 + 3*660*FLEN/8, x4, x1, x2)

inst_67477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801c000000000000; valaddr_reg:x3; val_offset:202431*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202431*0 + 3*661*FLEN/8, x4, x1, x2)

inst_67478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:202434*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202434*0 + 3*662*FLEN/8, x4, x1, x2)

inst_67479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:202437*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202437*0 + 3*663*FLEN/8, x4, x1, x2)

inst_67480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801e000000000000; valaddr_reg:x3; val_offset:202440*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202440*0 + 3*664*FLEN/8, x4, x1, x2)

inst_67481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801f000000000000; valaddr_reg:x3; val_offset:202443*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202443*0 + 3*665*FLEN/8, x4, x1, x2)

inst_67482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801f800000000000; valaddr_reg:x3; val_offset:202446*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202446*0 + 3*666*FLEN/8, x4, x1, x2)

inst_67483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fc00000000000; valaddr_reg:x3; val_offset:202449*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202449*0 + 3*667*FLEN/8, x4, x1, x2)

inst_67484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fe00000000000; valaddr_reg:x3; val_offset:202452*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202452*0 + 3*668*FLEN/8, x4, x1, x2)

inst_67485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ff00000000000; valaddr_reg:x3; val_offset:202455*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202455*0 + 3*669*FLEN/8, x4, x1, x2)

inst_67486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ff80000000000; valaddr_reg:x3; val_offset:202458*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202458*0 + 3*670*FLEN/8, x4, x1, x2)

inst_67487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffc0000000000; valaddr_reg:x3; val_offset:202461*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202461*0 + 3*671*FLEN/8, x4, x1, x2)

inst_67488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffe0000000000; valaddr_reg:x3; val_offset:202464*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202464*0 + 3*672*FLEN/8, x4, x1, x2)

inst_67489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fff0000000000; valaddr_reg:x3; val_offset:202467*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202467*0 + 3*673*FLEN/8, x4, x1, x2)

inst_67490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fff8000000000; valaddr_reg:x3; val_offset:202470*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202470*0 + 3*674*FLEN/8, x4, x1, x2)

inst_67491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffc000000000; valaddr_reg:x3; val_offset:202473*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202473*0 + 3*675*FLEN/8, x4, x1, x2)

inst_67492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffe000000000; valaddr_reg:x3; val_offset:202476*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202476*0 + 3*676*FLEN/8, x4, x1, x2)

inst_67493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffff000000000; valaddr_reg:x3; val_offset:202479*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202479*0 + 3*677*FLEN/8, x4, x1, x2)

inst_67494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffff800000000; valaddr_reg:x3; val_offset:202482*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202482*0 + 3*678*FLEN/8, x4, x1, x2)

inst_67495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffc00000000; valaddr_reg:x3; val_offset:202485*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202485*0 + 3*679*FLEN/8, x4, x1, x2)

inst_67496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffe00000000; valaddr_reg:x3; val_offset:202488*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202488*0 + 3*680*FLEN/8, x4, x1, x2)

inst_67497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffff00000000; valaddr_reg:x3; val_offset:202491*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202491*0 + 3*681*FLEN/8, x4, x1, x2)

inst_67498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffff80000000; valaddr_reg:x3; val_offset:202494*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202494*0 + 3*682*FLEN/8, x4, x1, x2)

inst_67499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffc0000000; valaddr_reg:x3; val_offset:202497*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202497*0 + 3*683*FLEN/8, x4, x1, x2)

inst_67500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffe0000000; valaddr_reg:x3; val_offset:202500*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202500*0 + 3*684*FLEN/8, x4, x1, x2)

inst_67501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffff0000000; valaddr_reg:x3; val_offset:202503*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202503*0 + 3*685*FLEN/8, x4, x1, x2)

inst_67502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffff8000000; valaddr_reg:x3; val_offset:202506*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202506*0 + 3*686*FLEN/8, x4, x1, x2)

inst_67503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffc000000; valaddr_reg:x3; val_offset:202509*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202509*0 + 3*687*FLEN/8, x4, x1, x2)

inst_67504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffe000000; valaddr_reg:x3; val_offset:202512*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202512*0 + 3*688*FLEN/8, x4, x1, x2)

inst_67505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffff000000; valaddr_reg:x3; val_offset:202515*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202515*0 + 3*689*FLEN/8, x4, x1, x2)

inst_67506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffff800000; valaddr_reg:x3; val_offset:202518*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202518*0 + 3*690*FLEN/8, x4, x1, x2)

inst_67507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffffc00000; valaddr_reg:x3; val_offset:202521*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202521*0 + 3*691*FLEN/8, x4, x1, x2)

inst_67508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffffe00000; valaddr_reg:x3; val_offset:202524*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202524*0 + 3*692*FLEN/8, x4, x1, x2)

inst_67509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffff00000; valaddr_reg:x3; val_offset:202527*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202527*0 + 3*693*FLEN/8, x4, x1, x2)

inst_67510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffff80000; valaddr_reg:x3; val_offset:202530*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202530*0 + 3*694*FLEN/8, x4, x1, x2)

inst_67511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffffc0000; valaddr_reg:x3; val_offset:202533*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202533*0 + 3*695*FLEN/8, x4, x1, x2)

inst_67512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffffe0000; valaddr_reg:x3; val_offset:202536*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202536*0 + 3*696*FLEN/8, x4, x1, x2)

inst_67513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffffff0000; valaddr_reg:x3; val_offset:202539*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202539*0 + 3*697*FLEN/8, x4, x1, x2)

inst_67514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffffff8000; valaddr_reg:x3; val_offset:202542*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202542*0 + 3*698*FLEN/8, x4, x1, x2)

inst_67515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffffffc000; valaddr_reg:x3; val_offset:202545*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202545*0 + 3*699*FLEN/8, x4, x1, x2)

inst_67516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffffffe000; valaddr_reg:x3; val_offset:202548*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202548*0 + 3*700*FLEN/8, x4, x1, x2)

inst_67517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffffff000; valaddr_reg:x3; val_offset:202551*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202551*0 + 3*701*FLEN/8, x4, x1, x2)

inst_67518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffffff800; valaddr_reg:x3; val_offset:202554*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202554*0 + 3*702*FLEN/8, x4, x1, x2)

inst_67519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffffffc00; valaddr_reg:x3; val_offset:202557*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202557*0 + 3*703*FLEN/8, x4, x1, x2)

inst_67520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffffffe00; valaddr_reg:x3; val_offset:202560*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202560*0 + 3*704*FLEN/8, x4, x1, x2)

inst_67521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffffffx00; valaddr_reg:x3; val_offset:202563*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202563*0 + 3*705*FLEN/8, x4, x1, x2)

inst_67522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffffffx80; valaddr_reg:x3; val_offset:202566*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202566*0 + 3*706*FLEN/8, x4, x1, x2)

inst_67523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:202569*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202569*0 + 3*707*FLEN/8, x4, x1, x2)

inst_67524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:202572*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202572*0 + 3*708*FLEN/8, x4, x1, x2)

inst_67525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffffffffx0; valaddr_reg:x3; val_offset:202575*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202575*0 + 3*709*FLEN/8, x4, x1, x2)

inst_67526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffffffffx8; valaddr_reg:x3; val_offset:202578*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202578*0 + 3*710*FLEN/8, x4, x1, x2)

inst_67527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:202581*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202581*0 + 3*711*FLEN/8, x4, x1, x2)

inst_67528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:202584*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202584*0 + 3*712*FLEN/8, x4, x1, x2)

inst_67529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4590b711a2751 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4590b711a2751; op2val:0x8000;
op3val:0x801fffffffffffff; valaddr_reg:x3; val_offset:202587*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202587*0 + 3*713*FLEN/8, x4, x1, x2)

inst_67530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:202590*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202590*0 + 3*714*FLEN/8, x4, x1, x2)

inst_67531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:202593*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202593*0 + 3*715*FLEN/8, x4, x1, x2)

inst_67532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:202596*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202596*0 + 3*716*FLEN/8, x4, x1, x2)

inst_67533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:202599*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202599*0 + 3*717*FLEN/8, x4, x1, x2)

inst_67534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:202602*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202602*0 + 3*718*FLEN/8, x4, x1, x2)

inst_67535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:202605*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202605*0 + 3*719*FLEN/8, x4, x1, x2)

inst_67536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:202608*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202608*0 + 3*720*FLEN/8, x4, x1, x2)

inst_67537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:202611*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202611*0 + 3*721*FLEN/8, x4, x1, x2)

inst_67538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:202614*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202614*0 + 3*722*FLEN/8, x4, x1, x2)

inst_67539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:202617*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202617*0 + 3*723*FLEN/8, x4, x1, x2)

inst_67540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:202620*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202620*0 + 3*724*FLEN/8, x4, x1, x2)

inst_67541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:202623*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202623*0 + 3*725*FLEN/8, x4, x1, x2)

inst_67542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:202626*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202626*0 + 3*726*FLEN/8, x4, x1, x2)

inst_67543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:202629*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202629*0 + 3*727*FLEN/8, x4, x1, x2)

inst_67544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:202632*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202632*0 + 3*728*FLEN/8, x4, x1, x2)

inst_67545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:202635*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202635*0 + 3*729*FLEN/8, x4, x1, x2)

inst_67546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:202638*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202638*0 + 3*730*FLEN/8, x4, x1, x2)

inst_67547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:202641*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202641*0 + 3*731*FLEN/8, x4, x1, x2)

inst_67548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0xfffffffffffx0; valaddr_reg:x3; val_offset:202644*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202644*0 + 3*732*FLEN/8, x4, x1, x2)

inst_67549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0xfffffffffffx8; valaddr_reg:x3; val_offset:202647*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202647*0 + 3*733*FLEN/8, x4, x1, x2)

inst_67550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:202650*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202650*0 + 3*734*FLEN/8, x4, x1, x2)

inst_67551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:202653*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202653*0 + 3*735*FLEN/8, x4, x1, x2)

inst_67552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x250000000000000; valaddr_reg:x3; val_offset:202656*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202656*0 + 3*736*FLEN/8, x4, x1, x2)

inst_67553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x250000000000001; valaddr_reg:x3; val_offset:202659*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202659*0 + 3*737*FLEN/8, x4, x1, x2)

inst_67554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x250000000000003; valaddr_reg:x3; val_offset:202662*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202662*0 + 3*738*FLEN/8, x4, x1, x2)

inst_67555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x250000000000007; valaddr_reg:x3; val_offset:202665*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202665*0 + 3*739*FLEN/8, x4, x1, x2)

inst_67556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x25000000000000f; valaddr_reg:x3; val_offset:202668*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202668*0 + 3*740*FLEN/8, x4, x1, x2)

inst_67557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x25000000000001f; valaddr_reg:x3; val_offset:202671*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202671*0 + 3*741*FLEN/8, x4, x1, x2)

inst_67558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x25000000000003f; valaddr_reg:x3; val_offset:202674*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202674*0 + 3*742*FLEN/8, x4, x1, x2)

inst_67559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x25000000000007f; valaddr_reg:x3; val_offset:202677*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202677*0 + 3*743*FLEN/8, x4, x1, x2)

inst_67560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x2500000000000ff; valaddr_reg:x3; val_offset:202680*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202680*0 + 3*744*FLEN/8, x4, x1, x2)

inst_67561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x2500000000001ff; valaddr_reg:x3; val_offset:202683*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202683*0 + 3*745*FLEN/8, x4, x1, x2)

inst_67562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x2500000000003ff; valaddr_reg:x3; val_offset:202686*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202686*0 + 3*746*FLEN/8, x4, x1, x2)

inst_67563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x2500000000007ff; valaddr_reg:x3; val_offset:202689*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202689*0 + 3*747*FLEN/8, x4, x1, x2)

inst_67564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x250000000000fff; valaddr_reg:x3; val_offset:202692*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202692*0 + 3*748*FLEN/8, x4, x1, x2)

inst_67565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x250000000001fff; valaddr_reg:x3; val_offset:202695*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202695*0 + 3*749*FLEN/8, x4, x1, x2)

inst_67566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x250000000003fff; valaddr_reg:x3; val_offset:202698*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202698*0 + 3*750*FLEN/8, x4, x1, x2)

inst_67567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x250000000007fff; valaddr_reg:x3; val_offset:202701*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202701*0 + 3*751*FLEN/8, x4, x1, x2)

inst_67568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x25000000000ffff; valaddr_reg:x3; val_offset:202704*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202704*0 + 3*752*FLEN/8, x4, x1, x2)

inst_67569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x25000000001ffff; valaddr_reg:x3; val_offset:202707*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202707*0 + 3*753*FLEN/8, x4, x1, x2)

inst_67570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x25000000003ffff; valaddr_reg:x3; val_offset:202710*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202710*0 + 3*754*FLEN/8, x4, x1, x2)

inst_67571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x25000000007ffff; valaddr_reg:x3; val_offset:202713*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202713*0 + 3*755*FLEN/8, x4, x1, x2)

inst_67572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x2500000000fffff; valaddr_reg:x3; val_offset:202716*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202716*0 + 3*756*FLEN/8, x4, x1, x2)

inst_67573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x2500000001fffff; valaddr_reg:x3; val_offset:202719*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202719*0 + 3*757*FLEN/8, x4, x1, x2)

inst_67574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x2500000003fffff; valaddr_reg:x3; val_offset:202722*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202722*0 + 3*758*FLEN/8, x4, x1, x2)

inst_67575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x2500000007fffff; valaddr_reg:x3; val_offset:202725*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202725*0 + 3*759*FLEN/8, x4, x1, x2)

inst_67576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x250000000ffffff; valaddr_reg:x3; val_offset:202728*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202728*0 + 3*760*FLEN/8, x4, x1, x2)

inst_67577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x250000001ffffff; valaddr_reg:x3; val_offset:202731*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202731*0 + 3*761*FLEN/8, x4, x1, x2)

inst_67578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x250000003ffffff; valaddr_reg:x3; val_offset:202734*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202734*0 + 3*762*FLEN/8, x4, x1, x2)

inst_67579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x250000007ffffff; valaddr_reg:x3; val_offset:202737*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202737*0 + 3*763*FLEN/8, x4, x1, x2)

inst_67580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x25000000fffffff; valaddr_reg:x3; val_offset:202740*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202740*0 + 3*764*FLEN/8, x4, x1, x2)

inst_67581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x25000001fffffff; valaddr_reg:x3; val_offset:202743*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202743*0 + 3*765*FLEN/8, x4, x1, x2)

inst_67582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x25000003fffffff; valaddr_reg:x3; val_offset:202746*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202746*0 + 3*766*FLEN/8, x4, x1, x2)

inst_67583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4623fdaaec0x3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x025 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4623fdaaec0x3; op2val:0x0;
op3val:0x25000007fffffff; valaddr_reg:x3; val_offset:202749*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 202749*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f00000000000ff83726776524341503,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f00000000001ff83726776524341759,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f00000000003ff83726776524342271,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f00000000007ff83726776524343295,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f0000000000fff83726776524345343,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f0000000001fff83726776524349439,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f0000000003fff83726776524357631,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f0000000007fff83726776524374015,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f000000000ffff83726776524406783,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f000000001ffff83726776524472319,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f000000003ffff83726776524603391,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f000000007ffff83726776524865535,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f00000000fffff83726776525389823,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f00000001fffff83726776526438399,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f00000003fffff83726776528535551,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f00000007fffff83726776532729855,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f0000000ffffff83726776541118463,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f0000001ffffff83726776557895679,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f0000003ffffff83726776591450111,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f0000007ffffff83726776658558975,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f000000fffffff83726776792776703,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f000001fffffff83726777061212159,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f000003fffffff83726777598083071,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f000007fffffff83726778671824895,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f00000ffffffff83726780819308543,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f00001ffffffff83726785114275839,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f00003ffffffff83726793704210431,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f00007ffffffff83726810884079615,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f0000fffffffff83726845243817983,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f0001fffffffff83726913963294719,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f0003fffffffff83727051402248191,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f0007fffffffff83727326280155135,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f000ffffffffff83727876035969023,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f001ffffffffff83728975547596799,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f003ffffffffff83731174570852351,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f007ffffffffff83735572617363455,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x00fffffffffff83744368710385663,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x01fffffffffff83761960896430079,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x03fffffffffff83797145268518911,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x07fffffffffff83867514012696575,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x0ffffffffffff84008251501051903,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x1ffffffffffff84289726477762559,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x3ffffffffffff84852676431183871,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x7ffffffffffff85978576338026495,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f800000000000085978576338026496,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fc00000000000087104476244869120,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fe00000000000087667426198290432,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ff00000000000087948901175001088,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ff80000000000088089638663356416,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffc0000000000088160007407534080,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffe0000000000088195191779622912,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fff0000000000088212783965667328,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fff8000000000088221580058689536,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffc000000000088225978105200640,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffe000000000088228177128456192,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffff000000000088229276640083968,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffff800000000088229826395897856,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffc00000000088230101273804800,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffe00000000088230238712758272,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffff00000000088230307432235008,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffff80000000088230341791973376,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffc0000000088230358971842560,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffe0000000088230367561777152,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffff0000000088230371856744448,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffff8000000088230374004228096,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffc000000088230375077969920,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffe000000088230375614840832,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffff000000088230375883276288,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffff800000088230376017494016,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffc00000088230376084602880,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffe00000088230376118157312,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffff00000088230376134934528,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffff80000088230376143323136,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffc0000088230376147517440,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffe0000088230376149614592,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffff0000088230376150663168,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffff8000088230376151187456,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffffc000088230376151449600,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffffe000088230376151580672,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffff000088230376151646208,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffff800088230376151678976,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffffc00088230376151695360,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffffe00088230376151703552,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffffff00088230376151707648,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffffff80088230376151709696,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffffffc0088230376151710720,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffffffe0088230376151711232,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffffff0088230376151711488,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffffff8088230376151711616,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffffffc088230376151711680,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffffffe088230376151711712,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffffffff088230376151711728,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffffffff888230376151711736,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffffffffc88230376151711740,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffffffffe88230376151711742,64,FLEN)
NAN_BOXED(0x5fa42581092acc45891674565918510149,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffffffff88230376151711743,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xx5,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1x1,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x3,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x333333333333300719925474099,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4924924924924286742750677284,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6666666666666801439850948198,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6db6db6db6db6930114126015926,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7777777777777101679826106231,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8888888888888401919801264264,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x9999999999999702159776422297,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb6db6db6db6db216856876693211,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xccccccccccccc602879701896396,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xdb6db6db6db6d860228252031853,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffc0503599627370432,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffe0503599627370464,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff0503599627370480,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff8503599627370488,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffc503599627370492,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffe503599627370494,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000000000048618787703226368,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000000000148618787703226369,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000000000348618787703226371,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000000000748618787703226375,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000000000f48618787703226383,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000000001f48618787703226399,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000000003f48618787703226431,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000000007f48618787703226495,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100000000000ff48618787703226623,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100000000001ff48618787703226879,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100000000003ff48618787703227391,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100000000007ff48618787703228415,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210000000000fff48618787703230463,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210000000001fff48618787703234559,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210000000003fff48618787703242751,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210000000007fff48618787703259135,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000000ffff48618787703291903,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000001ffff48618787703357439,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000003ffff48618787703488511,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000007ffff48618787703750655,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100000000fffff48618787704274943,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100000001fffff48618787705323519,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100000003fffff48618787707420671,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100000007fffff48618787711614975,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210000000ffffff48618787720003583,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210000001ffffff48618787736780799,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210000003ffffff48618787770335231,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210000007ffffff48618787837444095,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000000fffffff48618787971661823,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000001fffffff48618788240097279,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000003fffffff48618788776968191,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000007fffffff48618789850710015,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100000ffffffff48618791998193663,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100001ffffffff48618796293160959,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100003ffffffff48618804883095551,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100007ffffffff48618822062964735,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210000fffffffff48618856422703103,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210001fffffffff48618925142179839,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210003fffffffff48619062581133311,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210007fffffffff48619337459040255,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21000ffffffffff48619887214854143,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21001ffffffffff48620986726481919,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21003ffffffffff48623185749737471,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21007ffffffffff48627583796248575,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2100fffffffffff48636379889270783,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2101fffffffffff48653972075315199,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2103fffffffffff48689156447404031,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2107fffffffffff48759525191581695,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x210ffffffffffff48900262679937023,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x211ffffffffffff49181737656647679,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x213ffffffffffff49744687610068991,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x217ffffffffffff50870587516911615,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21800000000000050870587516911616,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21c00000000000051996487423754240,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21e00000000000052559437377175552,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21f00000000000052840912353886208,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21f80000000000052981649842241536,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fc0000000000053052018586419200,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fe0000000000053087202958508032,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ff0000000000053104795144552448,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ff8000000000053113591237574656,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffc000000000053117989284085760,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffe000000000053120188307341312,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fff000000000053121287818969088,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fff800000000053121837574782976,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffc00000000053122112452689920,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffe00000000053122249891643392,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffff00000000053122318611120128,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffff80000000053122352970858496,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffc0000000053122370150727680,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffe0000000053122378740662272,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffff0000000053122383035629568,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffff8000000053122385183113216,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffc000000053122386256855040,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffe000000053122386793725952,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffff000000053122387062161408,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffff800000053122387196379136,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffc00000053122387263488000,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffe00000053122387297042432,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffff00000053122387313819648,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffff80000053122387322208256,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffc0000053122387326402560,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffe0000053122387328499712,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffff0000053122387329548288,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffff8000053122387330072576,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffc000053122387330334720,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffe000053122387330465792,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffff000053122387330531328,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffff800053122387330564096,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffc00053122387330580480,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffe00053122387330588672,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffff00053122387330592768,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffff80053122387330594816,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffffc0053122387330595840,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffffe0053122387330596352,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffff0053122387330596608,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffff8053122387330596736,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffffc053122387330596800,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffffe053122387330596832,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffffff053122387330596848,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffffff853122387330596856,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffffffc53122387330596860,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffffffe53122387330596862,64,FLEN)
NAN_BOXED(0x5fa43a8687039e7e891697679248891518,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffffff53122387330596863,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000000000003767504060871606272,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000000000013767504060871606273,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000000000033767504060871606275,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000000000073767504060871606279,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000000000000f3767504060871606287,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000000000001f3767504060871606303,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000000000003f3767504060871606335,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000000000007f3767504060871606399,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000000000ff3767504060871606527,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000000001ff3767504060871606783,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000000003ff3767504060871607295,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000000007ff3767504060871608319,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf10000000000fff3767504060871610367,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf10000000001fff3767504060871614463,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf10000000003fff3767504060871622655,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf10000000007fff3767504060871639039,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000000000ffff3767504060871671807,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000000001ffff3767504060871737343,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000000003ffff3767504060871868415,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000000007ffff3767504060872130559,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000000fffff3767504060872654847,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000001fffff3767504060873703423,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000003fffff3767504060875800575,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000007fffff3767504060879994879,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf10000000ffffff3767504060888383487,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf10000001ffffff3767504060905160703,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf10000003ffffff3767504060938715135,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf10000007ffffff3767504061005823999,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000000fffffff3767504061140041727,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000001fffffff3767504061408477183,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000003fffffff3767504061945348095,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000007fffffff3767504063019089919,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100000ffffffff3767504065166573567,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100001ffffffff3767504069461540863,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100003ffffffff3767504078051475455,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100007ffffffff3767504095231344639,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf10000fffffffff3767504129591083007,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf10001fffffffff3767504198310559743,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf10003fffffffff3767504335749513215,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf10007fffffffff3767504610627420159,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1000ffffffffff3767505160383234047,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1001ffffffffff3767506259894861823,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1003ffffffffff3767508458918117375,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf1007ffffffffff3767512856964628479,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf100fffffffffff3767521653057650687,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf101fffffffffff3767539245243695103,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf103fffffffffff3767574429615783935,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf107fffffffffff3767644798359961599,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx10ffffffffffff3767785535848316927,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx11ffffffffffff3768067010825027583,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx13ffffffffffff3768629960778448895,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx17ffffffffffff3769755860685291519,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf180000000000003769755860685291520,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1c0000000000003770881760592134144,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1e0000000000003771444710545555456,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1f0000000000003771726185522266112,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1f8000000000003771866923010621440,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fc000000000003771937291754799104,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fe000000000003771972476126887936,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ff000000000003771990068312932352,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ff800000000003771998864405954560,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffc00000000003772003262452465664,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffe00000000003772005461475721216,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fff00000000003772006560987348992,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fff80000000003772007110743162880,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffc0000000003772007385621069824,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffe0000000003772007523060023296,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffff0000000003772007591779500032,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffff8000000003772007626139238400,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffc000000003772007643319107584,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffe000000003772007651909042176,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffff000000003772007656204009472,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffff800000003772007658351493120,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffc00000003772007659425234944,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffe00000003772007659962105856,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffff00000003772007660230541312,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffff80000003772007660364759040,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffc0000003772007660431867904,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffe0000003772007660465422336,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffff0000003772007660482199552,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffff8000003772007660490588160,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffffc000003772007660494782464,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffffe000003772007660496879616,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffff000003772007660497928192,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffff800003772007660498452480,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffffc00003772007660498714624,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffffe00003772007660498845696,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffffff00003772007660498911232,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffffff80003772007660498944000,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffffffc0003772007660498960384,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffffffe0003772007660498968576,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffffff0003772007660498972672,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffffff8003772007660498974720,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffffffc003772007660498975744,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffffffe003772007660498976256,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffffffff003772007660498976512,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffffffff803772007660498976640,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffffffffc03772007660498976704,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffffffffe03772007660498976736,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffffffff03772007660498976752,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffffffff83772007660498976760,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffffffffc3772007660498976764,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1ffffffffffffe3772007660498976766,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx1fffffffffffff3772007660498976767,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf800000000000013799029258263199745,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf800000000000033799029258263199747,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf800000000000073799029258263199751,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf8000000000000f3799029258263199759,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf8000000000001f3799029258263199775,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf8000000000003f3799029258263199807,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf833333333333333799929978188673843,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf849249249249243800316001013877028,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf866666666666663800830698114147942,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx86db6db6db6db63800959372389215670,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf877777777777773801130938089305975,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf888888888888883801431178064464008,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbf899999999999993801731418039622041,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx8b6db6db6db6db3802246115139892955,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx8ccccccccccccc3802632137965096140,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx8db6db6db6db6d3802889486515231597,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx8fffffffffffc03803532857890570176,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx8fffffffffffe03803532857890570208,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx8ffffffffffff03803532857890570224,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx8ffffffffffff83803532857890570232,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx8ffffffffffffc3803532857890570236,64,FLEN)
NAN_BOXED(0x5fa4441c90d7aacb891708219263527627,64,FLEN)
NAN_BOXED(0x9fc9438fce4f256f1513808207270061423,64,FLEN)
NAN_BOXED(0xbx8ffffffffffffe3803532857890570238,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000000000003420726889564078080,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000000000013420726889564078081,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000000000033420726889564078083,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000000000073420726889564078087,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000000000000f3420726889564078095,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000000000001f3420726889564078111,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000000000003f3420726889564078143,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000000000007f3420726889564078207,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000000000ff3420726889564078335,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000000001ff3420726889564078591,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000000003ff3420726889564079103,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000000007ff3420726889564080127,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40000000000fff3420726889564082175,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40000000001fff3420726889564086271,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40000000003fff3420726889564094463,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40000000007fff3420726889564110847,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000000000ffff3420726889564143615,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000000001ffff3420726889564209151,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000000003ffff3420726889564340223,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000000007ffff3420726889564602367,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000000fffff3420726889565126655,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000001fffff3420726889566175231,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000003fffff3420726889568272383,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000007fffff3420726889572466687,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40000000ffffff3420726889580855295,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40000001ffffff3420726889597632511,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40000003ffffff3420726889631186943,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40000007ffffff3420726889698295807,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000000fffffff3420726889832513535,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000001fffffff3420726890100948991,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000003fffffff3420726890637819903,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000007fffffff3420726891711561727,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400000ffffffff3420726893859045375,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400001ffffffff3420726898154012671,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400003ffffffff3420726906743947263,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400007ffffffff3420726923923816447,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40000fffffffff3420726958283554815,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40001fffffffff3420727027003031551,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40003fffffffff3420727164441985023,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40007fffffffff3420727439319891967,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4000ffffffffff3420727989075705855,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4001ffffffffff3420729088587333631,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4003ffffffffff3420731287610589183,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4007ffffffffff3420735685657100287,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba400fffffffffff3420744481750122495,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba401fffffffffff3420762073936166911,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba403fffffffffff3420797258308255743,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba407fffffffffff3420867627052433407,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba40ffffffffffff3421008364540788735,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba41ffffffffffff3421289839517499391,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba43ffffffffffff3421852789470920703,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba47ffffffffffff3422978689377763327,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba480000000000003422978689377763328,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4c0000000000003424104589284605952,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4e0000000000003424667539238027264,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4f0000000000003424949014214737920,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4f8000000000003425089751703093248,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fc000000000003425160120447270912,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fe000000000003425195304819359744,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ff000000000003425212897005404160,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ff800000000003425221693098426368,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffc00000000003425226091144937472,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffe00000000003425228290168193024,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fff00000000003425229389679820800,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fff80000000003425229939435634688,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffc0000000003425230214313541632,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffe0000000003425230351752495104,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffff0000000003425230420471971840,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffff8000000003425230454831710208,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffc000000003425230472011579392,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffe000000003425230480601513984,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffff000000003425230484896481280,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffff800000003425230487043964928,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffc00000003425230488117706752,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffe00000003425230488654577664,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffff00000003425230488923013120,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffff80000003425230489057230848,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffc0000003425230489124339712,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffe0000003425230489157894144,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffff0000003425230489174671360,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffff8000003425230489183059968,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffffc000003425230489187254272,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffffe000003425230489189351424,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffff000003425230489190400000,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffff800003425230489190924288,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffffc00003425230489191186432,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffffe00003425230489191317504,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffffff00003425230489191383040,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffffff80003425230489191415808,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffffffc0003425230489191432192,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffffffe0003425230489191440384,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffffff0003425230489191444480,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffffff8003425230489191446528,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffffffc003425230489191447552,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffffffe003425230489191448064,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffffffff003425230489191448320,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffffffff803425230489191448448,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffffffffc03425230489191448512,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffffffffe03425230489191448544,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffffffff03425230489191448560,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffffffff83425230489191448568,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffffffffc3425230489191448572,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4ffffffffffffe3425230489191448574,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xba4fffffffffffff3425230489191448575,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbf800000000000013799029258263199745,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbf800000000000033799029258263199747,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbf800000000000073799029258263199751,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbf8000000000000f3799029258263199759,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbf8000000000001f3799029258263199775,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbf8000000000003f3799029258263199807,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbf833333333333333799929978188673843,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbf849249249249243800316001013877028,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbf866666666666663800830698114147942,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbx86db6db6db6db63800959372389215670,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbf877777777777773801130938089305975,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbf888888888888883801431178064464008,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbf899999999999993801731418039622041,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbx8b6db6db6db6db3802246115139892955,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbx8ccccccccccccc3802632137965096140,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbx8db6db6db6db6d3802889486515231597,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbx8fffffffffffc03803532857890570176,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbx8fffffffffffe03803532857890570208,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbx8ffffffffffff03803532857890570224,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbx8ffffffffffff83803532857890570232,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbx8ffffffffffffc3803532857890570236,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x9fc9341cc87ee4611513791220576871521,64,FLEN)
NAN_BOXED(0xbx8ffffffffffffe3803532857890570238,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000000000000102779260534521856,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000000000001102779260534521857,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000000000003102779260534521859,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000000000007102779260534521863,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000000000000f102779260534521871,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000000000001f102779260534521887,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000000000003f102779260534521919,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000000000007f102779260534521983,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f00000000000ff102779260534522111,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f00000000001ff102779260534522367,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f00000000003ff102779260534522879,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f00000000007ff102779260534523903,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000000000fff102779260534525951,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000000001fff102779260534530047,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000000003fff102779260534538239,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000000007fff102779260534554623,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000000000ffff102779260534587391,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000000001ffff102779260534652927,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000000003ffff102779260534783999,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000000007ffff102779260535046143,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f00000000fffff102779260535570431,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f00000001fffff102779260536619007,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f00000003fffff102779260538716159,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f00000007fffff102779260542910463,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000000ffffff102779260551299071,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000001ffffff102779260568076287,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000003ffffff102779260601630719,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000007ffffff102779260668739583,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000000fffffff102779260802957311,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000001fffffff102779261071392767,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000003fffffff102779261608263679,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000007fffffff102779262682005503,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f00000ffffffff102779264829489151,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f00001ffffffff102779269124456447,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f00003ffffffff102779277714391039,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f00007ffffffff102779294894260223,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0000fffffffff102779329253998591,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0001fffffffff102779397973475327,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0003fffffffff102779535412428799,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f0007fffffffff102779810290335743,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f000ffffffffff102780360046149631,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f001ffffffffff102781459557777407,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f003ffffffffff102783658581032959,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f007ffffffffff102788056627544063,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38x00fffffffffff102796852720566271,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38x01fffffffffff102814444906610687,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38x03fffffffffff102849629278699519,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38x07fffffffffff102919998022877183,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38x0ffffffffffff103060735511232511,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38x1ffffffffffff103342210487943167,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38x3ffffffffffff103905160441364479,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38x7ffffffffffff105031060348207103,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38f8000000000000105031060348207104,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fc000000000000106156960255049728,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fe000000000000106719910208471040,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ff000000000000107001385185181696,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ff800000000000107142122673537024,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffc00000000000107212491417714688,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffe00000000000107247675789803520,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fff00000000000107265267975847936,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fff80000000000107274064068870144,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffc0000000000107278462115381248,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffe0000000000107280661138636800,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffff0000000000107281760650264576,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffff8000000000107282310406078464,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffc000000000107282585283985408,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffe000000000107282722722938880,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffff000000000107282791442415616,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffff800000000107282825802153984,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffc00000000107282842982023168,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffe00000000107282851571957760,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffff00000000107282855866925056,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffff80000000107282858014408704,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffc0000000107282859088150528,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffe0000000107282859625021440,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffff0000000107282859893456896,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffff8000000107282860027674624,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffc000000107282860094783488,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffe000000107282860128337920,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffff000000107282860145115136,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffff800000107282860153503744,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffffc00000107282860157698048,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffffe00000107282860159795200,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffff00000107282860160843776,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffff80000107282860161368064,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffffc0000107282860161630208,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffffe0000107282860161761280,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffffff0000107282860161826816,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffffff8000107282860161859584,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffffffc000107282860161875968,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffffffe000107282860161884160,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffffff000107282860161888256,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffffff800107282860161890304,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffffffc00107282860161891328,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffffffe00107282860161891840,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffffffff00107282860161892096,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffffffff80107282860161892224,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffffffffc0107282860161892288,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffffffffe0107282860161892320,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffffffff0107282860161892336,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffffffff8107282860161892344,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffffffffc107282860161892348,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38fffffffffffffe107282860161892350,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x38ffffffffffffff107282860161892351,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ff0000000000001607182418800017409,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ff0000000000003607182418800017411,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ff0000000000007607182418800017415,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ff000000000000f607182418800017423,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ff000000000001f607182418800017439,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ff000000000003f607182418800017471,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ff3333333333333608083138725491507,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ff4924924924924608469161550694692,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ff6666666666666608983858650965606,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3fx6db6db6db6db6609112532926033334,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ff7777777777777609284098626123639,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ff8888888888888609584338601281672,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ff9999999999999609884578576439705,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ffb6db6db6db6db610399275676710619,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ffccccccccccccc610785298501913804,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ffdb6db6db6db6d611042647052049261,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3fffffffffffffc0611686018427387840,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3fffffffffffffe0611686018427387872,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ffffffffffffff0611686018427387888,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ffffffffffffff8611686018427387896,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ffffffffffffffc611686018427387900,64,FLEN)
NAN_BOXED(0x5fa4528a44ed36fb891724083599062779,64,FLEN)
NAN_BOXED(0x2039319fx61ed495321941645984978069,64,FLEN)
NAN_BOXED(0x3ffffffffffffffe611686018427387902,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000000000227875636482146304,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000000001227875636482146305,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000000003227875636482146307,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000000007227875636482146311,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000000000f227875636482146319,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000000001f227875636482146335,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000000003f227875636482146367,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000000007f227875636482146431,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100000000000ff227875636482146559,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100000000001ff227875636482146815,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100000000003ff227875636482147327,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100000000007ff227875636482148351,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000000fff227875636482150399,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000001fff227875636482154495,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000003fff227875636482162687,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000007fff227875636482179071,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000000ffff227875636482211839,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000001ffff227875636482277375,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000003ffff227875636482408447,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000007ffff227875636482670591,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100000000fffff227875636483194879,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100000001fffff227875636484243455,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100000003fffff227875636486340607,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100000007fffff227875636490534911,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000ffffff227875636498923519,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000001ffffff227875636515700735,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000003ffffff227875636549255167,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000007ffffff227875636616364031,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000fffffff227875636750581759,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000001fffffff227875637019017215,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000003fffffff227875637555888127,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000007fffffff227875638629629951,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100000ffffffff227875640777113599,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100001ffffffff227875645072080895,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100003ffffffff227875653662015487,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100007ffffffff227875670841884671,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000fffffffff227875705201623039,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010001fffffffff227875773921099775,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010003fffffffff227875911360053247,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010007fffffffff227876186237960191,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000ffffffffff227876735993774079,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801001ffffffffff227877835505401855,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801003ffffffffff227880034528657407,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801007ffffffffff227884432575168511,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80100fffffffffff227893228668190719,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80101fffffffffff227910820854235135,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80103fffffffffff227946005226323967,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80107fffffffffff228016373970501631,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010ffffffffffff228157111458856959,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8011ffffffffffff228438586435567615,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8013333333333333228776356407620403,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8013ffffffffffff229001536388988927,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8014924924924924229162379232823588,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8016666666666666229677076333094502,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8016db6db6db6db6229805750608162230,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8017777777777777229977316308252535,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8017ffffffffffff230127436295831551,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8018000000000000230127436295831552,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8018888888888888230277556283410568,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8019999999999999230577796258568601,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801b6db6db6db6db231092493358839515,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801c000000000000231253336202674176,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ccccccccccccc231478516184042700,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801db6db6db6db6d231735864734178157,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801e000000000000231816286156095488,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801f000000000000232097761132806144,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801f800000000000232238498621161472,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fc00000000000232308867365339136,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fe00000000000232344051737427968,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ff00000000000232361643923472384,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ff80000000000232370440016494592,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffc0000000000232374838063005696,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffe0000000000232377037086261248,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fff0000000000232378136597889024,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fff8000000000232378686353702912,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffc000000000232378961231609856,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffe000000000232379098670563328,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffff000000000232379167390040064,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffff800000000232379201749778432,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffc00000000232379218929647616,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffe00000000232379227519582208,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffff00000000232379231814549504,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffff80000000232379233962033152,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffc0000000232379235035774976,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffe0000000232379235572645888,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffff0000000232379235841081344,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffff8000000232379235975299072,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffc000000232379236042407936,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffe000000232379236075962368,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffff000000232379236092739584,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffff800000232379236101128192,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffc00000232379236105322496,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffe00000232379236107419648,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffff00000232379236108468224,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffff80000232379236108992512,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffc0000232379236109254656,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffe0000232379236109385728,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffff0000232379236109451264,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffff8000232379236109484032,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffffc000232379236109500416,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffffe000232379236109508608,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffff000232379236109512704,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffff800232379236109514752,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffc00232379236109515776,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffe00232379236109516288,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffffff00232379236109516544,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffffff80232379236109516672,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffffffc0232379236109516736,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffffffe0232379236109516768,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffff0232379236109516784,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffff8232379236109516792,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffffc232379236109516796,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffffe232379236109516798,64,FLEN)
NAN_BOXED(0x5fa4590b711a2751891731235460753233,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffffffff232379236109516799,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xx5,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1x1,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x3,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x333333333333300719925474099,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4924924924924286742750677284,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6666666666666801439850948198,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6db6db6db6db6930114126015926,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7777777777777101679826106231,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8888888888888401919801264264,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x9999999999999702159776422297,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb6db6db6db6db216856876693211,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xccccccccccccc602879701896396,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xdb6db6db6db6d860228252031853,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffc0503599627370432,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffe0503599627370464,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff0503599627370480,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff8503599627370488,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffc503599627370492,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffe503599627370494,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000000000066633186212708352,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000000000166633186212708353,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000000000366633186212708355,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000000000766633186212708359,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000000000f66633186212708367,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000000001f66633186212708383,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000000003f66633186212708415,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000000007f66633186212708479,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2500000000000ff66633186212708607,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2500000000001ff66633186212708863,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2500000000003ff66633186212709375,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2500000000007ff66633186212710399,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x250000000000fff66633186212712447,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x250000000001fff66633186212716543,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x250000000003fff66633186212724735,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x250000000007fff66633186212741119,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000000ffff66633186212773887,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000001ffff66633186212839423,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000003ffff66633186212970495,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000007ffff66633186213232639,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2500000000fffff66633186213756927,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2500000001fffff66633186214805503,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2500000003fffff66633186216902655,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2500000007fffff66633186221096959,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x250000000ffffff66633186229485567,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x250000001ffffff66633186246262783,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x250000003ffffff66633186279817215,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x250000007ffffff66633186346926079,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000000fffffff66633186481143807,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000001fffffff66633186749579263,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000003fffffff66633187286450175,64,FLEN)
NAN_BOXED(0x5fa4623fdaaec0f3891741356175048947,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x25000007fffffff66633188360191999,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
