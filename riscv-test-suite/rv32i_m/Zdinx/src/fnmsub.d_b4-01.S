
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x17, rs2==x16, rs3==x17, rd==x14,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221x1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x17; op2:x16; op3:x17; dest:x14; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e;
op3val:0x7f8867824bb36ebf; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x14, x17, x16, x17, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==x11, rs2==x11, rs3==x11, rd==x5,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221x1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x11; op2:x11; op3:x11; dest:x5; op1val:0x7f8867824bb36ebf; op2val:0x7f8867824bb36ebf;
op3val:0x7f8867824bb36ebf; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x5, x11, x11, x11, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==x18, rs2==x18, rs3==x4, rd==x18,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221x1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x18; op2:x18; op3:x4; dest:x18; op1val:0x7f8867824bb36ebf; op2val:0x7f8867824bb36ebf;
op3val:0x7fd5f78051c221x1; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x18, x18, x18, x4, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x2, rs2==x21, rs3==x28, rd==x2,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221x1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x2; op2:x21; op3:x28; dest:x2; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e;
op3val:0x7fd5f78051c221x1; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x2, x2, x21, x28, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x22, rs2==x24, rs3==x24, rd==x30,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221x1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x22; op2:x24; op3:x24; dest:x30; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e;
op3val:0x4078295552baee7e; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x30, x22, x24, x24, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==x7, rs2==x12, rs3==x12, rd==x12,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x7; op2:x12; op3:x12; dest:x12; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5;
op3val:0xc04faed66280d8b5; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x12, x7, x12, x12, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs1 == rd == rs3 != rs2, rs1==x27, rs2==x8, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x27; op2:x8; op3:x27; dest:x27; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5;
op3val:0x7f947899d9bfab7f; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x27, x27, x8, x27, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x26, rs2==x17, rs3==x14, rd==x17,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x26; op2:x17; op3:x14; dest:x17; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5;
op3val:0x7fd112b7d42952fb; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x17, x26, x17, x14, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x31, rs2==x10, rs3==x6, rd==x6,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x31; op2:x10; op3:x6; dest:x6; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5;
op3val:0x7fd112b7d42952fb; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x6, x31, x10, x6, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x15, rs2==x23, rs3==x10, rd==x31,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x15; op2:x23; op3:x10; dest:x31; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5;
op3val:0x7fd112b7d42952fb; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x15, x23, x10, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs2 == rs3 == rd, rs1==x19, rs2==x19, rs3==x19, rd==x19,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22x7 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9ae4916027c77 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x19; op2:x19; op3:x19; dest:x19; op1val:0x7fb026946c5d22x7; op2val:0x7fb026946c5d22x7;
op3val:0x7fb026946c5d22x7; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x19, x19, x19, x19, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x20, rs2==x20, rs3==x26, rd==x16,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22x7 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9ae4916027c77 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x20; op2:x20; op3:x26; dest:x16; op1val:0x7fb026946c5d22x7; op2val:0x7fb026946c5d22x7;
op3val:0x7fe3d86a7b5170e5; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x16, x20, x20, x26, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x21, rs2==x14, rs3==x9, rd==x3,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22x7 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9ae4916027c77 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x21; op2:x14; op3:x9; dest:x3; op1val:0x7fb026946c5d22x7; op2val:0xc039ae4916027c77;
op3val:0x7fe3d86a7b5170e5; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x3, x21, x14, x9, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x10, rs2==x25, rs3==x8, rd==x22,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22x7 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9ae4916027c77 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x10; op2:x25; op3:x8; dest:x22; op1val:0x7fb026946c5d22x7; op2val:0xc039ae4916027c77;
op3val:0x7fe3d86a7b5170e5; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x22, x10, x25, x8, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x12, rs2==x26, rs3==x0, rd==x10,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22x7 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9ae4916027c77 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x12; op2:x26; op3:x0; dest:x10; op1val:0x7fb026946c5d22x7; op2val:0xc039ae4916027c77;
op3val:0x7fe3d86a7b5170e5; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x10, x12, x26, x0, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x0, rs2==x9, rs3==x22, rd==x21,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5a233041e3ac1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ex36d4887 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x0; op2:x9; op3:x22; dest:x21; op1val:0x7fb248a2b9dc22bf; op2val:0xc035a233041e3ac1;
op3val:0x7fece72ex36d4887; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x21, x0, x9, x22, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x8, rs2==x1, rs3==x30, rd==x9,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5a233041e3ac1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ex36d4887 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x8; op2:x1; op3:x30; dest:x9; op1val:0x7fb248a2b9dc22bf; op2val:0xc035a233041e3ac1;
op3val:0x7fece72ex36d4887; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x9, x8, x1, x30, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x13, rs2==x2, rs3==x23, rd==x28,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5a233041e3ac1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ex36d4887 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x13; op2:x2; op3:x23; dest:x28; op1val:0x7fb248a2b9dc22bf; op2val:0xc035a233041e3ac1;
op3val:0x7fece72ex36d4887; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x28, x13, x2, x23, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x23, rs2==x6, rs3==x2, rd==x29,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5a233041e3ac1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ex36d4887 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x23; op2:x6; op3:x2; dest:x29; op1val:0x7fb248a2b9dc22bf; op2val:0xc035a233041e3ac1;
op3val:0x7fece72ex36d4887; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x29, x23, x6, x2, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x4, rs2==x3, rs3==x1, rd==x15,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x248a2b9dc22bf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5a233041e3ac1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce72ex36d4887 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x4; op2:x3; op3:x1; dest:x15; op1val:0x7fb248a2b9dc22bf; op2val:0xc035a233041e3ac1;
op3val:0x7fece72ex36d4887; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x15, x4, x3, x1, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x16, rs2==x7, rs3==x25, rd==x13,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cx85ex57 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xb8x2e4x11fd26 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdx9b50c24x6a7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x16; op2:x7; op3:x25; dest:x13; op1val:0x7fb6edc5cx85ex57; op2val:0xc02b8x2e4x11fd26;
op3val:0x7fcdx9b50c24x6a7; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x13, x16, x7, x25, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x5, rs2==x4, rs3==x29, rd==x8,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cx85ex57 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xb8x2e4x11fd26 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdx9b50c24x6a7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x5; op2:x4; op3:x29; dest:x8; op1val:0x7fb6edc5cx85ex57; op2val:0xc02b8x2e4x11fd26;
op3val:0x7fcdx9b50c24x6a7; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x8, x5, x4, x29, dyn, 32, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==x25, rs2==x30, rs3==x3, rd==x0,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cx85ex57 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xb8x2e4x11fd26 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdx9b50c24x6a7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x25; op2:x30; op3:x3; dest:x0; op1val:0x7fb6edc5cx85ex57; op2val:0xc02b8x2e4x11fd26;
op3val:0x7fcdx9b50c24x6a7; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x0, x25, x30, x3, dyn, 64, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==x1, rs2==x15, rs3==x31, rd==x11,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cx85ex57 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xb8x2e4x11fd26 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdx9b50c24x6a7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x1; op2:x15; op3:x31; dest:x11; op1val:0x7fb6edc5cx85ex57; op2val:0xc02b8x2e4x11fd26;
op3val:0x7fcdx9b50c24x6a7; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x11, x1, x15, x31, dyn, 96, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==x30, rs2==x5, rs3==x13, rd==x26,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6edc5cx85ex57 and fs2 == 1 and fe2 == 0x402 and fm2 == 0xb8x2e4x11fd26 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xdx9b50c24x6a7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x5; op3:x13; dest:x26; op1val:0x7fb6edc5cx85ex57; op2val:0xc02b8x2e4x11fd26;
op3val:0x7fcdx9b50c24x6a7; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x26, x30, x5, x13, dyn, 128, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==x9, rs2==x29, rs3==x18, rd==x1,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x964aae7b394df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x9; op2:x29; op3:x18; dest:x1; op1val:0x7fb8fd64f104922f; op2val:0xc01964aae7b394df;
op3val:0x7fe615f701415147; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x1, x9, x29, x18, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==x29, rs2==x0, rs3==x7, rd==x4,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x964aae7b394df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x29; op2:x0; op3:x7; dest:x4; op1val:0x7fb8fd64f104922f; op2val:0xc01964aae7b394df;
op3val:0x7fe615f701415147; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x4, x29, x0, x7, dyn, 32, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==x3, rs2==x27, rs3==x15, rd==x23,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x964aae7b394df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x3; op2:x27; op3:x15; dest:x23; op1val:0x7fb8fd64f104922f; op2val:0xc01964aae7b394df;
op3val:0x7fe615f701415147; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x23, x3, x27, x15, dyn, 64, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==x14, rs2==x28, rs3==x5, rd==x25,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x964aae7b394df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x14; op2:x28; op3:x5; dest:x25; op1val:0x7fb8fd64f104922f; op2val:0xc01964aae7b394df;
op3val:0x7fe615f701415147; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x25, x14, x28, x5, dyn, 96, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==x28, rs2==x22, rs3==x20, rd==x7,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8fd64f104922f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x964aae7b394df and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x615f701415147 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x28; op2:x22; op3:x20; dest:x7; op1val:0x7fb8fd64f104922f; op2val:0xc01964aae7b394df;
op3val:0x7fe615f701415147; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x7, x28, x22, x20, dyn, 128, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==x6, rs2==x31, rs3==x21, rd==x24,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa64c77bdc4c08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x6; op2:x31; op3:x21; dest:x24; op1val:0x7fc146e28288654f; op2val:0xc01a64c77bdc4c08;
op3val:0x7fe8751b6a67be4c; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x24, x6, x31, x21, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==x24, rs2==x13, rs3==x16, rd==x20,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa64c77bdc4c08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x24; op2:x13; op3:x16; dest:x20; op1val:0x7fc146e28288654f; op2val:0xc01a64c77bdc4c08;
op3val:0x7fe8751b6a67be4c; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x20, x24, x13, x16, dyn, 32, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa64c77bdc4c08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc146e28288654f; op2val:0xc01a64c77bdc4c08;
op3val:0x7fe8751b6a67be4c; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa64c77bdc4c08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc146e28288654f; op2val:0xc01a64c77bdc4c08;
op3val:0x7fe8751b6a67be4c; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x146e28288654f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xa64c77bdc4c08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8751b6a67be4c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc146e28288654f; op2val:0xc01a64c77bdc4c08;
op3val:0x7fe8751b6a67be4c; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xdf407fe3fe871 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc23193c9b51c5f; op2val:0xc01df407fe3fe871;
op3val:0x7fb07ac811455a27; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xdf407fe3fe871 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc23193c9b51c5f; op2val:0xc01df407fe3fe871;
op3val:0x7fb07ac811455a27; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xdf407fe3fe871 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc23193c9b51c5f; op2val:0xc01df407fe3fe871;
op3val:0x7fb07ac811455a27; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xdf407fe3fe871 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc23193c9b51c5f; op2val:0xc01df407fe3fe871;
op3val:0x7fb07ac811455a27; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x23193c9b51c5f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xdf407fe3fe871 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x07ac811455a27 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc23193c9b51c5f; op2val:0xc01df407fe3fe871;
op3val:0x7fb07ac811455a27; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325x0x1f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x413d1x8d0c012 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febx70x5c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc8d035325x0x1f; op2val:0xc02413d1x8d0c012;
op3val:0x7fee45febx70x5c4; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325x0x1f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x413d1x8d0c012 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febx70x5c4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc8d035325x0x1f; op2val:0xc02413d1x8d0c012;
op3val:0x7fee45febx70x5c4; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325x0x1f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x413d1x8d0c012 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febx70x5c4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc8d035325x0x1f; op2val:0xc02413d1x8d0c012;
op3val:0x7fee45febx70x5c4; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325x0x1f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x413d1x8d0c012 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febx70x5c4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc8d035325x0x1f; op2val:0xc02413d1x8d0c012;
op3val:0x7fee45febx70x5c4; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8d035325x0x1f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x413d1x8d0c012 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe45febx70x5c4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc8d035325x0x1f; op2val:0xc02413d1x8d0c012;
op3val:0x7fee45febx70x5c4; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4x0cx23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x43e6e4398fx87 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc94c88e4x0cx23; op2val:0xbfx43e6e4398fx87;
op3val:0x7fc3387045b11b73; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4x0cx23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x43e6e4398fx87 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc94c88e4x0cx23; op2val:0xbfx43e6e4398fx87;
op3val:0x7fc3387045b11b73; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4x0cx23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x43e6e4398fx87 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc94c88e4x0cx23; op2val:0xbfx43e6e4398fx87;
op3val:0x7fc3387045b11b73; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4x0cx23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x43e6e4398fx87 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc94c88e4x0cx23; op2val:0xbfx43e6e4398fx87;
op3val:0x7fc3387045b11b73; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x94c88e4x0cx23 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x43e6e4398fx87 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3387045b11b73 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc94c88e4x0cx23; op2val:0xbfx43e6e4398fx87;
op3val:0x7fc3387045b11b73; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5b5bea83c3x5c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xx37aa6e86c68b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcc277c8581da67; op2val:0xc035b5bea83c3x5c;
op3val:0x7fcx37aa6e86c68b; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5b5bea83c3x5c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xx37aa6e86c68b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcc277c8581da67; op2val:0xc035b5bea83c3x5c;
op3val:0x7fcx37aa6e86c68b; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5b5bea83c3x5c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xx37aa6e86c68b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcc277c8581da67; op2val:0xc035b5bea83c3x5c;
op3val:0x7fcx37aa6e86c68b; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5b5bea83c3x5c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xx37aa6e86c68b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcc277c8581da67; op2val:0xc035b5bea83c3x5c;
op3val:0x7fcx37aa6e86c68b; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc277c8581da67 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x5b5bea83c3x5c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xx37aa6e86c68b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcc277c8581da67; op2val:0xc035b5bea83c3x5c;
op3val:0x7fcx37aa6e86c68b; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6fx9b and fs2 == 1 and fe2 == 0x401 and fm2 == 0xed5bda0d17287 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd088ea90c6fx9b; op2val:0xc01ed5bda0d17287;
op3val:0x7fefbb34f341c62f; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6fx9b and fs2 == 1 and fe2 == 0x401 and fm2 == 0xed5bda0d17287 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd088ea90c6fx9b; op2val:0xc01ed5bda0d17287;
op3val:0x7fefbb34f341c62f; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6fx9b and fs2 == 1 and fe2 == 0x401 and fm2 == 0xed5bda0d17287 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd088ea90c6fx9b; op2val:0xc01ed5bda0d17287;
op3val:0x7fefbb34f341c62f; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6fx9b and fs2 == 1 and fe2 == 0x401 and fm2 == 0xed5bda0d17287 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd088ea90c6fx9b; op2val:0xc01ed5bda0d17287;
op3val:0x7fefbb34f341c62f; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x088ea90c6fx9b and fs2 == 1 and fe2 == 0x401 and fm2 == 0xed5bda0d17287 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfbb34f341c62f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd088ea90c6fx9b; op2val:0xc01ed5bda0d17287;
op3val:0x7fefbb34f341c62f; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113x1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd113x1b844ec29; op2val:0xc02194cca6feaee6;
op3val:0x7fdb19041a09c655; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113x1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd113x1b844ec29; op2val:0xc02194cca6feaee6;
op3val:0x7fdb19041a09c655; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113x1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd113x1b844ec29; op2val:0xc02194cca6feaee6;
op3val:0x7fdb19041a09c655; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113x1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd113x1b844ec29; op2val:0xc02194cca6feaee6;
op3val:0x7fdb19041a09c655; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x113x1b844ec29 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x194cca6feaee6 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb19041a09c655 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd113x1b844ec29; op2val:0xc02194cca6feaee6;
op3val:0x7fdb19041a09c655; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3fd4ccd713462 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd5a8fa51e01729; op2val:0xc013fd4ccd713462;
op3val:0x7fe61f2260581ec6; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3fd4ccd713462 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd5a8fa51e01729; op2val:0xc013fd4ccd713462;
op3val:0x7fe61f2260581ec6; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3fd4ccd713462 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd5a8fa51e01729; op2val:0xc013fd4ccd713462;
op3val:0x7fe61f2260581ec6; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3fd4ccd713462 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd5a8fa51e01729; op2val:0xc013fd4ccd713462;
op3val:0x7fe61f2260581ec6; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a8fa51e01729 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x3fd4ccd713462 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61f2260581ec6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd5a8fa51e01729; op2val:0xc013fd4ccd713462;
op3val:0x7fe61f2260581ec6; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x18907e493e2x5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd6d41e8ed71efb; op2val:0xc0018907e493e2x5;
op3val:0x7fec1933e5b458c9; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x18907e493e2x5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd6d41e8ed71efb; op2val:0xc0018907e493e2x5;
op3val:0x7fec1933e5b458c9; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x18907e493e2x5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd6d41e8ed71efb; op2val:0xc0018907e493e2x5;
op3val:0x7fec1933e5b458c9; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x18907e493e2x5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd6d41e8ed71efb; op2val:0xc0018907e493e2x5;
op3val:0x7fec1933e5b458c9; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6d41e8ed71efb and fs2 == 1 and fe2 == 0x400 and fm2 == 0x18907e493e2x5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc1933e5b458c9 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd6d41e8ed71efb; op2val:0xc0018907e493e2x5;
op3val:0x7fec1933e5b458c9; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81x8e726306x5 and fs2 == 1 and fe2 == 0x3x8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd81x8e726306x5; op2val:0xbf849e96e9cad6d5;
op3val:0x7feab2b7e6d25349; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81x8e726306x5 and fs2 == 1 and fe2 == 0x3x8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd81x8e726306x5; op2val:0xbf849e96e9cad6d5;
op3val:0x7feab2b7e6d25349; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81x8e726306x5 and fs2 == 1 and fe2 == 0x3x8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd81x8e726306x5; op2val:0xbf849e96e9cad6d5;
op3val:0x7feab2b7e6d25349; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81x8e726306x5 and fs2 == 1 and fe2 == 0x3x8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd81x8e726306x5; op2val:0xbf849e96e9cad6d5;
op3val:0x7feab2b7e6d25349; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81x8e726306x5 and fs2 == 1 and fe2 == 0x3x8 and fm2 == 0x49e96e9cad6d5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xab2b7e6d25349 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd81x8e726306x5; op2val:0xbf849e96e9cad6d5;
op3val:0x7feab2b7e6d25349; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0x9 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x19cb243429355 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8242100dca0x9; op2val:0xc0119cb243429355;
op3val:0x7fe525a0943b7292; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0x9 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x19cb243429355 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8242100dca0x9; op2val:0xc0119cb243429355;
op3val:0x7fe525a0943b7292; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0x9 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x19cb243429355 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8242100dca0x9; op2val:0xc0119cb243429355;
op3val:0x7fe525a0943b7292; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0x9 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x19cb243429355 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8242100dca0x9; op2val:0xc0119cb243429355;
op3val:0x7fe525a0943b7292; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8242100dca0x9 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x19cb243429355 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x525a0943b7292 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8242100dca0x9; op2val:0xc0119cb243429355;
op3val:0x7fe525a0943b7292; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x781104c024b06 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd842c58dceda19; op2val:0xc00781104c024b06;
op3val:0x7fbd1d785536fc77; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x781104c024b06 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd842c58dceda19; op2val:0xc00781104c024b06;
op3val:0x7fbd1d785536fc77; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x781104c024b06 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd842c58dceda19; op2val:0xc00781104c024b06;
op3val:0x7fbd1d785536fc77; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x781104c024b06 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd842c58dceda19; op2val:0xc00781104c024b06;
op3val:0x7fbd1d785536fc77; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x842c58dceda19 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x781104c024b06 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xd1d785536fc77 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd842c58dceda19; op2val:0xc00781104c024b06;
op3val:0x7fbd1d785536fc77; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2a9bea1ec3bd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5x3a506a8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fda172a2bcb69dd; op2val:0xc012a9bea1ec3bd8;
op3val:0x7fecddb5x3a506a8; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2a9bea1ec3bd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5x3a506a8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fda172a2bcb69dd; op2val:0xc012a9bea1ec3bd8;
op3val:0x7fecddb5x3a506a8; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2a9bea1ec3bd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5x3a506a8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fda172a2bcb69dd; op2val:0xc012a9bea1ec3bd8;
op3val:0x7fecddb5x3a506a8; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2a9bea1ec3bd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5x3a506a8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fda172a2bcb69dd; op2val:0xc012a9bea1ec3bd8;
op3val:0x7fecddb5x3a506a8; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa172a2bcb69dd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2a9bea1ec3bd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xcddb5x3a506a8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fda172a2bcb69dd; op2val:0xc012a9bea1ec3bd8;
op3val:0x7fecddb5x3a506a8; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa861d98748e27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdfd85c073a2591; op2val:0xc00a861d98748e27;
op3val:0x7fe4ca84761136ef; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa861d98748e27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdfd85c073a2591; op2val:0xc00a861d98748e27;
op3val:0x7fe4ca84761136ef; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa861d98748e27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdfd85c073a2591; op2val:0xc00a861d98748e27;
op3val:0x7fe4ca84761136ef; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa861d98748e27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdfd85c073a2591; op2val:0xc00a861d98748e27;
op3val:0x7fe4ca84761136ef; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfd85c073a2591 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa861d98748e27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ca84761136ef and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdfd85c073a2591; op2val:0xc00a861d98748e27;
op3val:0x7fe4ca84761136ef; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xeaa5a1d3c9b55 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe03cc30fa6fa7d; op2val:0x401eaa5a1d3c9b55;
op3val:0x7fe67101be2e03ab; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xeaa5a1d3c9b55 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe03cc30fa6fa7d; op2val:0x401eaa5a1d3c9b55;
op3val:0x7fe67101be2e03ab; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xeaa5a1d3c9b55 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe03cc30fa6fa7d; op2val:0x401eaa5a1d3c9b55;
op3val:0x7fe67101be2e03ab; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xeaa5a1d3c9b55 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe03cc30fa6fa7d; op2val:0x401eaa5a1d3c9b55;
op3val:0x7fe67101be2e03ab; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x03cc30fa6fa7d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xeaa5a1d3c9b55 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x67101be2e03ab and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe03cc30fa6fa7d; op2val:0x401eaa5a1d3c9b55;
op3val:0x7fe67101be2e03ab; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22e4c1eeb8fbf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0eb469d232dd1; op2val:0xbfe22e4c1eeb8fbf;
op3val:0x7fe05034d6a0d355; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22e4c1eeb8fbf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0eb469d232dd1; op2val:0xbfe22e4c1eeb8fbf;
op3val:0x7fe05034d6a0d355; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22e4c1eeb8fbf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0eb469d232dd1; op2val:0xbfe22e4c1eeb8fbf;
op3val:0x7fe05034d6a0d355; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22e4c1eeb8fbf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0eb469d232dd1; op2val:0xbfe22e4c1eeb8fbf;
op3val:0x7fe05034d6a0d355; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0eb469d232dd1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22e4c1eeb8fbf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x05034d6a0d355 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0eb469d232dd1; op2val:0xbfe22e4c1eeb8fbf;
op3val:0x7fe05034d6a0d355; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7e3e64752bdd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe286daddd336a6; op2val:0xc007e3e64752bdd8;
op3val:0x7fe7537d0a566421; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7e3e64752bdd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe286daddd336a6; op2val:0xc007e3e64752bdd8;
op3val:0x7fe7537d0a566421; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7e3e64752bdd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe286daddd336a6; op2val:0xc007e3e64752bdd8;
op3val:0x7fe7537d0a566421; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7e3e64752bdd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe286daddd336a6; op2val:0xc007e3e64752bdd8;
op3val:0x7fe7537d0a566421; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x286daddd336a6 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x7e3e64752bdd8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7537d0a566421 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe286daddd336a6; op2val:0xc007e3e64752bdd8;
op3val:0x7fe7537d0a566421; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677x9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x796cd8a02d3x6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe677x9a96d9966; op2val:0xbff796cd8a02d3x6;
op3val:0x7fee6665d6935c36; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677x9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x796cd8a02d3x6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe677x9a96d9966; op2val:0xbff796cd8a02d3x6;
op3val:0x7fee6665d6935c36; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677x9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x796cd8a02d3x6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe677x9a96d9966; op2val:0xbff796cd8a02d3x6;
op3val:0x7fee6665d6935c36; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677x9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x796cd8a02d3x6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe677x9a96d9966; op2val:0xbff796cd8a02d3x6;
op3val:0x7fee6665d6935c36; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x677x9a96d9966 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x796cd8a02d3x6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe6665d6935c36 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe677x9a96d9966; op2val:0xbff796cd8a02d3x6;
op3val:0x7fee6665d6935c36; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4x5fa80c8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3700bd52d2c4f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ex61b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feafde4x5fa80c8; op2val:0xbfd3700bd52d2c4f;
op3val:0x7fe01daaa27ex61b; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4x5fa80c8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3700bd52d2c4f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ex61b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feafde4x5fa80c8; op2val:0xbfd3700bd52d2c4f;
op3val:0x7fe01daaa27ex61b; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4x5fa80c8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3700bd52d2c4f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ex61b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feafde4x5fa80c8; op2val:0xbfd3700bd52d2c4f;
op3val:0x7fe01daaa27ex61b; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4x5fa80c8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3700bd52d2c4f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ex61b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feafde4x5fa80c8; op2val:0xbfd3700bd52d2c4f;
op3val:0x7fe01daaa27ex61b; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xafde4x5fa80c8 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x3700bd52d2c4f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x01daaa27ex61b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feafde4x5fa80c8; op2val:0xbfd3700bd52d2c4f;
op3val:0x7fe01daaa27ex61b; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1x8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x29c66c9d482fb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec30d25dc7d1x8; op2val:0xbfe29c66c9d482fb;
op3val:0x7fd248247c756437; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1x8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x29c66c9d482fb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec30d25dc7d1x8; op2val:0xbfe29c66c9d482fb;
op3val:0x7fd248247c756437; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1x8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x29c66c9d482fb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec30d25dc7d1x8; op2val:0xbfe29c66c9d482fb;
op3val:0x7fd248247c756437; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1x8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x29c66c9d482fb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec30d25dc7d1x8; op2val:0xbfe29c66c9d482fb;
op3val:0x7fd248247c756437; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc30d25dc7d1x8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x29c66c9d482fb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x248247c756437 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec30d25dc7d1x8; op2val:0xbfe29c66c9d482fb;
op3val:0x7fd248247c756437; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc12c4e221x23c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fecd8104cd4e803; op2val:0xbffc12c4e221x23c;
op3val:0x7fe29bf2873bcb4b; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc12c4e221x23c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fecd8104cd4e803; op2val:0xbffc12c4e221x23c;
op3val:0x7fe29bf2873bcb4b; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc12c4e221x23c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fecd8104cd4e803; op2val:0xbffc12c4e221x23c;
op3val:0x7fe29bf2873bcb4b; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc12c4e221x23c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fecd8104cd4e803; op2val:0xbffc12c4e221x23c;
op3val:0x7fe29bf2873bcb4b; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd8104cd4e803 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc12c4e221x23c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29bf2873bcb4b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fecd8104cd4e803; op2val:0xbffc12c4e221x23c;
op3val:0x7fe29bf2873bcb4b; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x92d4b2f309x8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee460da8265d2d; op2val:0xbfx92d4b2f309x8a;
op3val:0x7fdf46513d9d53ab; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x92d4b2f309x8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee460da8265d2d; op2val:0xbfx92d4b2f309x8a;
op3val:0x7fdf46513d9d53ab; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x92d4b2f309x8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee460da8265d2d; op2val:0xbfx92d4b2f309x8a;
op3val:0x7fdf46513d9d53ab; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x92d4b2f309x8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee460da8265d2d; op2val:0xbfx92d4b2f309x8a;
op3val:0x7fdf46513d9d53ab; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe460da8265d2d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x92d4b2f309x8a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf46513d9d53ab and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee460da8265d2d; op2val:0xbfx92d4b2f309x8a;
op3val:0x7fdf46513d9d53ab; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221x1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e;
op3val:0x7fd5f78051c221x1; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221x1 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e;
op3val:0x7fd5f78051c221x1; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221x1 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e;
op3val:0x7fd5f78051c221x1; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221x1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e;
op3val:0x7fd5f78051c221x1; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x867824bb36ebf and fs2 == 0 and fe2 == 0x407 and fm2 == 0x8295552baee7e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5f78051c221x1 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f8867824bb36ebf; op2val:0x4078295552baee7e;
op3val:0x7fd5f78051c221x1; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5;
op3val:0x7fd112b7d42952fb; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5;
op3val:0x7fd112b7d42952fb; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5;
op3val:0x7fd112b7d42952fb; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x47899d9bfab7f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xfaed66280d8b5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x112b7d42952fb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f947899d9bfab7f; op2val:0xc04faed66280d8b5;
op3val:0x7fd112b7d42952fb; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22x7 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9ae4916027c77 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fb026946c5d22x7; op2val:0xc039ae4916027c77;
op3val:0x7fe3d86a7b5170e5; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x026946c5d22x7 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9ae4916027c77 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3d86a7b5170e5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fb026946c5d22x7; op2val:0xc039ae4916027c77;
op3val:0x7fe3d86a7b5170e5; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 450*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x4078295552baee7e645508462069608062,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x7fd5f78051c221f1211540743355769329,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x4078295552baee7e645508462069608062,64,FLEN)
NAN_BOXED(0x7fd5f78051c221f1211540743355769329,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x4078295552baee7e645508462069608062,64,FLEN)
NAN_BOXED(0x4078295552baee7e645508462069608062,64,FLEN)
NAN_BOXED(0x7f947899d9bfab7f193105341548571519,64,FLEN)
NAN_BOXED(0xc04faed66280d8b53857486814241151157,64,FLEN)
NAN_BOXED(0xc04faed66280d8b53857486814241151157,64,FLEN)
NAN_BOXED(0x7f947899d9bfab7f193105341548571519,64,FLEN)
NAN_BOXED(0xc04faed66280d8b53857486814241151157,64,FLEN)
NAN_BOXED(0x7f947899d9bfab7f193105341548571519,64,FLEN)
NAN_BOXED(0x7f947899d9bfab7f193105341548571519,64,FLEN)
NAN_BOXED(0xc04faed66280d8b53857486814241151157,64,FLEN)
NAN_BOXED(0x7fd112b7d42952fb210163293697168123,64,FLEN)
NAN_BOXED(0x7f947899d9bfab7f193105341548571519,64,FLEN)
NAN_BOXED(0xc04faed66280d8b53857486814241151157,64,FLEN)
NAN_BOXED(0x7fd112b7d42952fb210163293697168123,64,FLEN)
NAN_BOXED(0x7f947899d9bfab7f193105341548571519,64,FLEN)
NAN_BOXED(0xc04faed66280d8b53857486814241151157,64,FLEN)
NAN_BOXED(0x7fd112b7d42952fb210163293697168123,64,FLEN)
NAN_BOXED(0x7fb026946c5d22f7200896457632981751,64,FLEN)
NAN_BOXED(0x7fb026946c5d22f7200896457632981751,64,FLEN)
NAN_BOXED(0x7fb026946c5d22f7200896457632981751,64,FLEN)
NAN_BOXED(0x7fb026946c5d22f7200896457632981751,64,FLEN)
NAN_BOXED(0x7fb026946c5d22f7200896457632981751,64,FLEN)
NAN_BOXED(0x7fe3d86a7b5170e5215447214377234661,64,FLEN)
NAN_BOXED(0x7fb026946c5d22f7200896457632981751,64,FLEN)
NAN_BOXED(0xc039ae4916027c773851293757879778423,64,FLEN)
NAN_BOXED(0x7fe3d86a7b5170e5215447214377234661,64,FLEN)
NAN_BOXED(0x7fb026946c5d22f7200896457632981751,64,FLEN)
NAN_BOXED(0xc039ae4916027c773851293757879778423,64,FLEN)
NAN_BOXED(0x7fe3d86a7b5170e5215447214377234661,64,FLEN)
NAN_BOXED(0x7fb026946c5d22f7200896457632981751,64,FLEN)
NAN_BOXED(0xc039ae4916027c773851293757879778423,64,FLEN)
NAN_BOXED(0x7fe3d86a7b5170e5215447214377234661,64,FLEN)
NAN_BOXED(0x7fb248a2b9dc22bf201496852411458239,64,FLEN)
NAN_BOXED(0xc035a233041e3ac13850154569043950273,64,FLEN)
NAN_BOXED(0x7fece72ex36d4887217996726159100039,64,FLEN)
NAN_BOXED(0x7fb248a2b9dc22bf201496852411458239,64,FLEN)
NAN_BOXED(0xc035a233041e3ac13850154569043950273,64,FLEN)
NAN_BOXED(0x7fece72ex36d4887217996726159100039,64,FLEN)
NAN_BOXED(0x7fb248a2b9dc22bf201496852411458239,64,FLEN)
NAN_BOXED(0xc035a233041e3ac13850154569043950273,64,FLEN)
NAN_BOXED(0x7fece72ex36d4887217996726159100039,64,FLEN)
NAN_BOXED(0x7fb248a2b9dc22bf201496852411458239,64,FLEN)
NAN_BOXED(0xc035a233041e3ac13850154569043950273,64,FLEN)
NAN_BOXED(0x7fece72ex36d4887217996726159100039,64,FLEN)
NAN_BOXED(0x7fb248a2b9dc22bf201496852411458239,64,FLEN)
NAN_BOXED(0xc035a233041e3ac13850154569043950273,64,FLEN)
NAN_BOXED(0x7fece72ex36d4887217996726159100039,64,FLEN)
NAN_BOXED(0x7fb6edc5cx85ef57202804322424188759,64,FLEN)
NAN_BOXED(0xc02b8x2e4x11fd263847318908338568486,64,FLEN)
NAN_BOXED(0x7fcdx9b50c24x6a7209291369030678183,64,FLEN)
NAN_BOXED(0x7fb6edc5cx85ef57202804322424188759,64,FLEN)
NAN_BOXED(0xc02b8x2e4x11fd263847318908338568486,64,FLEN)
NAN_BOXED(0x7fcdx9b50c24x6a7209291369030678183,64,FLEN)
NAN_BOXED(0x7fb6edc5cx85ef57202804322424188759,64,FLEN)
NAN_BOXED(0xc02b8x2e4x11fd263847318908338568486,64,FLEN)
NAN_BOXED(0x7fcdx9b50c24x6a7209291369030678183,64,FLEN)
NAN_BOXED(0x7fb6edc5cx85ef57202804322424188759,64,FLEN)
NAN_BOXED(0xc02b8x2e4x11fd263847318908338568486,64,FLEN)
NAN_BOXED(0x7fcdx9b50c24x6a7209291369030678183,64,FLEN)
NAN_BOXED(0x7fb6edc5cx85ef57202804322424188759,64,FLEN)
NAN_BOXED(0xc02b8x2e4x11fd263847318908338568486,64,FLEN)
NAN_BOXED(0x7fcdx9b50c24x6a7209291369030678183,64,FLEN)
NAN_BOXED(0x7fb8fd64f104922f203384448513774127,64,FLEN)
NAN_BOXED(0xc01964aae7b394df3842205614894453983,64,FLEN)
NAN_BOXED(0x7fe615f701415147216077838082462023,64,FLEN)
NAN_BOXED(0x7fb8fd64f104922f203384448513774127,64,FLEN)
NAN_BOXED(0xc01964aae7b394df3842205614894453983,64,FLEN)
NAN_BOXED(0x7fe615f701415147216077838082462023,64,FLEN)
NAN_BOXED(0x7fb8fd64f104922f203384448513774127,64,FLEN)
NAN_BOXED(0xc01964aae7b394df3842205614894453983,64,FLEN)
NAN_BOXED(0x7fe615f701415147216077838082462023,64,FLEN)
NAN_BOXED(0x7fb8fd64f104922f203384448513774127,64,FLEN)
NAN_BOXED(0xc01964aae7b394df3842205614894453983,64,FLEN)
NAN_BOXED(0x7fe615f701415147216077838082462023,64,FLEN)
NAN_BOXED(0x7fb8fd64f104922f203384448513774127,64,FLEN)
NAN_BOXED(0xc01964aae7b394df3842205614894453983,64,FLEN)
NAN_BOXED(0x7fe615f701415147216077838082462023,64,FLEN)
NAN_BOXED(0x7fc146e28288654f205717051988534607,64,FLEN)
NAN_BOXED(0xc01a64c77bdc4c083842487212615945224,64,FLEN)
NAN_BOXED(0x7fe8751b6a67be4c216745398023470668,64,FLEN)
NAN_BOXED(0x7fc146e28288654f205717051988534607,64,FLEN)
NAN_BOXED(0xc01a64c77bdc4c083842487212615945224,64,FLEN)
NAN_BOXED(0x7fe8751b6a67be4c216745398023470668,64,FLEN)
NAN_BOXED(0x7fc146e28288654f205717051988534607,64,FLEN)
NAN_BOXED(0xc01a64c77bdc4c083842487212615945224,64,FLEN)
NAN_BOXED(0x7fe8751b6a67be4c216745398023470668,64,FLEN)
NAN_BOXED(0x7fc146e28288654f205717051988534607,64,FLEN)
NAN_BOXED(0xc01a64c77bdc4c083842487212615945224,64,FLEN)
NAN_BOXED(0x7fe8751b6a67be4c216745398023470668,64,FLEN)
NAN_BOXED(0x7fc146e28288654f205717051988534607,64,FLEN)
NAN_BOXED(0xc01a64c77bdc4c083842487212615945224,64,FLEN)
NAN_BOXED(0x7fe8751b6a67be4c216745398023470668,64,FLEN)
NAN_BOXED(0x7fc23193c9b51c5f205975099112758367,64,FLEN)
NAN_BOXED(0xc01df407fe3fe8713843489144774322289,64,FLEN)
NAN_BOXED(0x7fb07ac811455a27200989038419728935,64,FLEN)
NAN_BOXED(0x7fc23193c9b51c5f205975099112758367,64,FLEN)
NAN_BOXED(0xc01df407fe3fe8713843489144774322289,64,FLEN)
NAN_BOXED(0x7fb07ac811455a27200989038419728935,64,FLEN)
NAN_BOXED(0x7fc23193c9b51c5f205975099112758367,64,FLEN)
NAN_BOXED(0xc01df407fe3fe8713843489144774322289,64,FLEN)
NAN_BOXED(0x7fb07ac811455a27200989038419728935,64,FLEN)
NAN_BOXED(0x7fc23193c9b51c5f205975099112758367,64,FLEN)
NAN_BOXED(0xc01df407fe3fe8713843489144774322289,64,FLEN)
NAN_BOXED(0x7fb07ac811455a27200989038419728935,64,FLEN)
NAN_BOXED(0x7fc23193c9b51c5f205975099112758367,64,FLEN)
NAN_BOXED(0xc01df407fe3fe8713843489144774322289,64,FLEN)
NAN_BOXED(0x7fb07ac811455a27200989038419728935,64,FLEN)
NAN_BOXED(0x7fc8d035325x0x1f207838365055913759,64,FLEN)
NAN_BOXED(0xc02413d1x8d0c0123845212946987270162,64,FLEN)
NAN_BOXED(0x7fee45febx70x5c4218382447709844932,64,FLEN)
NAN_BOXED(0x7fc8d035325x0x1f207838365055913759,64,FLEN)
NAN_BOXED(0xc02413d1x8d0c0123845212946987270162,64,FLEN)
NAN_BOXED(0x7fee45febx70x5c4218382447709844932,64,FLEN)
NAN_BOXED(0x7fc8d035325x0x1f207838365055913759,64,FLEN)
NAN_BOXED(0xc02413d1x8d0c0123845212946987270162,64,FLEN)
NAN_BOXED(0x7fee45febx70x5c4218382447709844932,64,FLEN)
NAN_BOXED(0x7fc8d035325x0x1f207838365055913759,64,FLEN)
NAN_BOXED(0xc02413d1x8d0c0123845212946987270162,64,FLEN)
NAN_BOXED(0x7fee45febx70x5c4218382447709844932,64,FLEN)
NAN_BOXED(0x7fc8d035325x0x1f207838365055913759,64,FLEN)
NAN_BOXED(0xc02413d1x8d0c0123845212946987270162,64,FLEN)
NAN_BOXED(0x7fee45febx70x5c4218382447709844932,64,FLEN)
NAN_BOXED(0x7fc94c88e4x0cf23207975063975939875,64,FLEN)
NAN_BOXED(0xbfx43e6e4398ff873831748998863060871,64,FLEN)
NAN_BOXED(0x7fc3387045b11b73206264118132153203,64,FLEN)
NAN_BOXED(0x7fc94c88e4x0cf23207975063975939875,64,FLEN)
NAN_BOXED(0xbfx43e6e4398ff873831748998863060871,64,FLEN)
NAN_BOXED(0x7fc3387045b11b73206264118132153203,64,FLEN)
NAN_BOXED(0x7fc94c88e4x0cf23207975063975939875,64,FLEN)
NAN_BOXED(0xbfx43e6e4398ff873831748998863060871,64,FLEN)
NAN_BOXED(0x7fc3387045b11b73206264118132153203,64,FLEN)
NAN_BOXED(0x7fc94c88e4x0cf23207975063975939875,64,FLEN)
NAN_BOXED(0xbfx43e6e4398ff873831748998863060871,64,FLEN)
NAN_BOXED(0x7fc3387045b11b73206264118132153203,64,FLEN)
NAN_BOXED(0x7fc94c88e4x0cf23207975063975939875,64,FLEN)
NAN_BOXED(0xbfx43e6e4398ff873831748998863060871,64,FLEN)
NAN_BOXED(0x7fc3387045b11b73206264118132153203,64,FLEN)
NAN_BOXED(0x7fcc277c8581da67208778753835129447,64,FLEN)
NAN_BOXED(0xc035b5bea83c3x5c3850176059518762844,64,FLEN)
NAN_BOXED(0x7fcx37aa6e86c68b209640968134248075,64,FLEN)
NAN_BOXED(0x7fcc277c8581da67208778753835129447,64,FLEN)
NAN_BOXED(0xc035b5bea83c3x5c3850176059518762844,64,FLEN)
NAN_BOXED(0x7fcx37aa6e86c68b209640968134248075,64,FLEN)
NAN_BOXED(0x7fcc277c8581da67208778753835129447,64,FLEN)
NAN_BOXED(0xc035b5bea83c3x5c3850176059518762844,64,FLEN)
NAN_BOXED(0x7fcx37aa6e86c68b209640968134248075,64,FLEN)
NAN_BOXED(0x7fcc277c8581da67208778753835129447,64,FLEN)
NAN_BOXED(0xc035b5bea83c3x5c3850176059518762844,64,FLEN)
NAN_BOXED(0x7fcx37aa6e86c68b209640968134248075,64,FLEN)
NAN_BOXED(0x7fcc277c8581da67208778753835129447,64,FLEN)
NAN_BOXED(0xc035b5bea83c3x5c3850176059518762844,64,FLEN)
NAN_BOXED(0x7fcx37aa6e86c68b209640968134248075,64,FLEN)
NAN_BOXED(0x7fd088ea90c6fx9b210011779005349787,64,FLEN)
NAN_BOXED(0xc01ed5bda0d172873843737315007099527,64,FLEN)
NAN_BOXED(0x7fefbb34f341c62f218792798344562223,64,FLEN)
NAN_BOXED(0x7fd088ea90c6fx9b210011779005349787,64,FLEN)
NAN_BOXED(0xc01ed5bda0d172873843737315007099527,64,FLEN)
NAN_BOXED(0x7fefbb34f341c62f218792798344562223,64,FLEN)
NAN_BOXED(0x7fd088ea90c6fx9b210011779005349787,64,FLEN)
NAN_BOXED(0xc01ed5bda0d172873843737315007099527,64,FLEN)
NAN_BOXED(0x7fefbb34f341c62f218792798344562223,64,FLEN)
NAN_BOXED(0x7fd088ea90c6fx9b210011779005349787,64,FLEN)
NAN_BOXED(0xc01ed5bda0d172873843737315007099527,64,FLEN)
NAN_BOXED(0x7fefbb34f341c62f218792798344562223,64,FLEN)
NAN_BOXED(0x7fd088ea90c6fx9b210011779005349787,64,FLEN)
NAN_BOXED(0xc01ed5bda0d172873843737315007099527,64,FLEN)
NAN_BOXED(0x7fefbb34f341c62f218792798344562223,64,FLEN)
NAN_BOXED(0x7fd113x1b844ec29210164641848945705,64,FLEN)
NAN_BOXED(0xc02194cca6feaee63844510336209563366,64,FLEN)
NAN_BOXED(0x7fdb19041a09c655212984968123893333,64,FLEN)
NAN_BOXED(0x7fd113x1b844ec29210164641848945705,64,FLEN)
NAN_BOXED(0xc02194cca6feaee63844510336209563366,64,FLEN)
NAN_BOXED(0x7fdb19041a09c655212984968123893333,64,FLEN)
NAN_BOXED(0x7fd113x1b844ec29210164641848945705,64,FLEN)
NAN_BOXED(0xc02194cca6feaee63844510336209563366,64,FLEN)
NAN_BOXED(0x7fdb19041a09c655212984968123893333,64,FLEN)
NAN_BOXED(0x7fd113x1b844ec29210164641848945705,64,FLEN)
NAN_BOXED(0xc02194cca6feaee63844510336209563366,64,FLEN)
NAN_BOXED(0x7fdb19041a09c655212984968123893333,64,FLEN)
NAN_BOXED(0x7fd113x1b844ec29210164641848945705,64,FLEN)
NAN_BOXED(0xc02194cca6feaee63844510336209563366,64,FLEN)
NAN_BOXED(0x7fdb19041a09c655212984968123893333,64,FLEN)
NAN_BOXED(0x7fd5a8fa51e01729211454405925148457,64,FLEN)
NAN_BOXED(0xc013fd4ccd7134623840684586145756258,64,FLEN)
NAN_BOXED(0x7fe61f2260581ec6216087919966035654,64,FLEN)
NAN_BOXED(0x7fd5a8fa51e01729211454405925148457,64,FLEN)
NAN_BOXED(0xc013fd4ccd7134623840684586145756258,64,FLEN)
NAN_BOXED(0x7fe61f2260581ec6216087919966035654,64,FLEN)
NAN_BOXED(0x7fd5a8fa51e01729211454405925148457,64,FLEN)
NAN_BOXED(0xc013fd4ccd7134623840684586145756258,64,FLEN)
NAN_BOXED(0x7fe61f2260581ec6216087919966035654,64,FLEN)
NAN_BOXED(0x7fd5a8fa51e01729211454405925148457,64,FLEN)
NAN_BOXED(0xc013fd4ccd7134623840684586145756258,64,FLEN)
NAN_BOXED(0x7fe61f2260581ec6216087919966035654,64,FLEN)
NAN_BOXED(0x7fd5a8fa51e01729211454405925148457,64,FLEN)
NAN_BOXED(0xc013fd4ccd7134623840684586145756258,64,FLEN)
NAN_BOXED(0x7fe61f2260581ec6216087919966035654,64,FLEN)
NAN_BOXED(0x7fd6d41e8ed71efb211783315543498491,64,FLEN)
NAN_BOXED(0xc0018907e493e2f53835490197251547893,64,FLEN)
NAN_BOXED(0x7fec1933e5b458c9217770248008390857,64,FLEN)
NAN_BOXED(0x7fd6d41e8ed71efb211783315543498491,64,FLEN)
NAN_BOXED(0xc0018907e493e2f53835490197251547893,64,FLEN)
NAN_BOXED(0x7fec1933e5b458c9217770248008390857,64,FLEN)
NAN_BOXED(0x7fd6d41e8ed71efb211783315543498491,64,FLEN)
NAN_BOXED(0xc0018907e493e2f53835490197251547893,64,FLEN)
NAN_BOXED(0x7fec1933e5b458c9217770248008390857,64,FLEN)
NAN_BOXED(0x7fd6d41e8ed71efb211783315543498491,64,FLEN)
NAN_BOXED(0xc0018907e493e2f53835490197251547893,64,FLEN)
NAN_BOXED(0x7fec1933e5b458c9217770248008390857,64,FLEN)
NAN_BOXED(0x7fd6d41e8ed71efb211783315543498491,64,FLEN)
NAN_BOXED(0xc0018907e493e2f53835490197251547893,64,FLEN)
NAN_BOXED(0x7fec1933e5b458c9217770248008390857,64,FLEN)
NAN_BOXED(0x7fd81x8e726306f5212147734451259125,64,FLEN)
NAN_BOXED(0xbf849e96e9cad6d53800329529174709973,64,FLEN)
NAN_BOXED(0x7feab2b7e6d25349217376090288444233,64,FLEN)
NAN_BOXED(0x7fd81x8e726306f5212147734451259125,64,FLEN)
NAN_BOXED(0xbf849e96e9cad6d53800329529174709973,64,FLEN)
NAN_BOXED(0x7feab2b7e6d25349217376090288444233,64,FLEN)
NAN_BOXED(0x7fd81x8e726306f5212147734451259125,64,FLEN)
NAN_BOXED(0xbf849e96e9cad6d53800329529174709973,64,FLEN)
NAN_BOXED(0x7feab2b7e6d25349217376090288444233,64,FLEN)
NAN_BOXED(0x7fd81x8e726306f5212147734451259125,64,FLEN)
NAN_BOXED(0xbf849e96e9cad6d53800329529174709973,64,FLEN)
NAN_BOXED(0x7feab2b7e6d25349217376090288444233,64,FLEN)
NAN_BOXED(0x7fd81x8e726306f5212147734451259125,64,FLEN)
NAN_BOXED(0xbf849e96e9cad6d53800329529174709973,64,FLEN)
NAN_BOXED(0x7feab2b7e6d25349217376090288444233,64,FLEN)
NAN_BOXED(0x7fd8242100dca0f9212152761953329401,64,FLEN)
NAN_BOXED(0xc0119cb2434293553840015419332793173,64,FLEN)
NAN_BOXED(0x7fe525a0943b7292215813584095507090,64,FLEN)
NAN_BOXED(0x7fd8242100dca0f9212152761953329401,64,FLEN)
NAN_BOXED(0xc0119cb2434293553840015419332793173,64,FLEN)
NAN_BOXED(0x7fe525a0943b7292215813584095507090,64,FLEN)
NAN_BOXED(0x7fd8242100dca0f9212152761953329401,64,FLEN)
NAN_BOXED(0xc0119cb2434293553840015419332793173,64,FLEN)
NAN_BOXED(0x7fe525a0943b7292215813584095507090,64,FLEN)
NAN_BOXED(0x7fd8242100dca0f9212152761953329401,64,FLEN)
NAN_BOXED(0xc0119cb2434293553840015419332793173,64,FLEN)
NAN_BOXED(0x7fe525a0943b7292215813584095507090,64,FLEN)
NAN_BOXED(0x7fd8242100dca0f9212152761953329401,64,FLEN)
NAN_BOXED(0xc0119cb2434293553840015419332793173,64,FLEN)
NAN_BOXED(0x7fe525a0943b7292215813584095507090,64,FLEN)
NAN_BOXED(0x7fd842c58dceda19212186454041483801,64,FLEN)
NAN_BOXED(0xc00781104c024b063837170287113816838,64,FLEN)
NAN_BOXED(0x7fbd1d785536fc77204545616078109815,64,FLEN)
NAN_BOXED(0x7fd842c58dceda19212186454041483801,64,FLEN)
NAN_BOXED(0xc00781104c024b063837170287113816838,64,FLEN)
NAN_BOXED(0x7fbd1d785536fc77204545616078109815,64,FLEN)
NAN_BOXED(0x7fd842c58dceda19212186454041483801,64,FLEN)
NAN_BOXED(0xc00781104c024b063837170287113816838,64,FLEN)
NAN_BOXED(0x7fbd1d785536fc77204545616078109815,64,FLEN)
NAN_BOXED(0x7fd842c58dceda19212186454041483801,64,FLEN)
NAN_BOXED(0xc00781104c024b063837170287113816838,64,FLEN)
NAN_BOXED(0x7fbd1d785536fc77204545616078109815,64,FLEN)
NAN_BOXED(0x7fd842c58dceda19212186454041483801,64,FLEN)
NAN_BOXED(0xc00781104c024b063837170287113816838,64,FLEN)
NAN_BOXED(0x7fbd1d785536fc77204545616078109815,64,FLEN)
NAN_BOXED(0x7fda172a2bcb69dd212701457630587357,64,FLEN)
NAN_BOXED(0xc012a9bea1ec3bd83840311241088449496,64,FLEN)
NAN_BOXED(0x7fecddb5x3a506a8217986310867060392,64,FLEN)
NAN_BOXED(0x7fda172a2bcb69dd212701457630587357,64,FLEN)
NAN_BOXED(0xc012a9bea1ec3bd83840311241088449496,64,FLEN)
NAN_BOXED(0x7fecddb5x3a506a8217986310867060392,64,FLEN)
NAN_BOXED(0x7fda172a2bcb69dd212701457630587357,64,FLEN)
NAN_BOXED(0xc012a9bea1ec3bd83840311241088449496,64,FLEN)
NAN_BOXED(0x7fecddb5x3a506a8217986310867060392,64,FLEN)
NAN_BOXED(0x7fda172a2bcb69dd212701457630587357,64,FLEN)
NAN_BOXED(0xc012a9bea1ec3bd83840311241088449496,64,FLEN)
NAN_BOXED(0x7fecddb5x3a506a8217986310867060392,64,FLEN)
NAN_BOXED(0x7fda172a2bcb69dd212701457630587357,64,FLEN)
NAN_BOXED(0xc012a9bea1ec3bd83840311241088449496,64,FLEN)
NAN_BOXED(0x7fecddb5x3a506a8217986310867060392,64,FLEN)
NAN_BOXED(0x7fdfd85c073a2591214321252393166225,64,FLEN)
NAN_BOXED(0xc00a861d98748e273838020266719219239,64,FLEN)
NAN_BOXED(0x7fe4ca84761136ef215713407772210927,64,FLEN)
NAN_BOXED(0x7fdfd85c073a2591214321252393166225,64,FLEN)
NAN_BOXED(0xc00a861d98748e273838020266719219239,64,FLEN)
NAN_BOXED(0x7fe4ca84761136ef215713407772210927,64,FLEN)
NAN_BOXED(0x7fdfd85c073a2591214321252393166225,64,FLEN)
NAN_BOXED(0xc00a861d98748e273838020266719219239,64,FLEN)
NAN_BOXED(0x7fe4ca84761136ef215713407772210927,64,FLEN)
NAN_BOXED(0x7fdfd85c073a2591214321252393166225,64,FLEN)
NAN_BOXED(0xc00a861d98748e273838020266719219239,64,FLEN)
NAN_BOXED(0x7fe4ca84761136ef215713407772210927,64,FLEN)
NAN_BOXED(0x7fdfd85c073a2591214321252393166225,64,FLEN)
NAN_BOXED(0xc00a861d98748e273838020266719219239,64,FLEN)
NAN_BOXED(0x7fe4ca84761136ef215713407772210927,64,FLEN)
NAN_BOXED(0x7fe03cc30fa6fa7d214431646078925437,64,FLEN)
NAN_BOXED(0x401eaa5a1d3c9b55620317571742997333,64,FLEN)
NAN_BOXED(0x7fe67101be2e03ab216177939759891371,64,FLEN)
NAN_BOXED(0x7fe03cc30fa6fa7d214431646078925437,64,FLEN)
NAN_BOXED(0x401eaa5a1d3c9b55620317571742997333,64,FLEN)
NAN_BOXED(0x7fe67101be2e03ab216177939759891371,64,FLEN)
NAN_BOXED(0x7fe03cc30fa6fa7d214431646078925437,64,FLEN)
NAN_BOXED(0x401eaa5a1d3c9b55620317571742997333,64,FLEN)
NAN_BOXED(0x7fe67101be2e03ab216177939759891371,64,FLEN)
NAN_BOXED(0x7fe03cc30fa6fa7d214431646078925437,64,FLEN)
NAN_BOXED(0x401eaa5a1d3c9b55620317571742997333,64,FLEN)
NAN_BOXED(0x7fe67101be2e03ab216177939759891371,64,FLEN)
NAN_BOXED(0x7fe03cc30fa6fa7d214431646078925437,64,FLEN)
NAN_BOXED(0x401eaa5a1d3c9b55620317571742997333,64,FLEN)
NAN_BOXED(0x7fe67101be2e03ab216177939759891371,64,FLEN)
NAN_BOXED(0x7fe0eb469d232dd1214623526116601297,64,FLEN)
NAN_BOXED(0xbfe22e4c1eeb8fbf3826664710451990463,64,FLEN)
NAN_BOXED(0x7fe05034d6a0d355214453025469420373,64,FLEN)
NAN_BOXED(0x7fe0eb469d232dd1214623526116601297,64,FLEN)
NAN_BOXED(0xbfe22e4c1eeb8fbf3826664710451990463,64,FLEN)
NAN_BOXED(0x7fe05034d6a0d355214453025469420373,64,FLEN)
NAN_BOXED(0x7fe0eb469d232dd1214623526116601297,64,FLEN)
NAN_BOXED(0xbfe22e4c1eeb8fbf3826664710451990463,64,FLEN)
NAN_BOXED(0x7fe05034d6a0d355214453025469420373,64,FLEN)
NAN_BOXED(0x7fe0eb469d232dd1214623526116601297,64,FLEN)
NAN_BOXED(0xbfe22e4c1eeb8fbf3826664710451990463,64,FLEN)
NAN_BOXED(0x7fe05034d6a0d355214453025469420373,64,FLEN)
NAN_BOXED(0x7fe0eb469d232dd1214623526116601297,64,FLEN)
NAN_BOXED(0xbfe22e4c1eeb8fbf3826664710451990463,64,FLEN)
NAN_BOXED(0x7fe05034d6a0d355214453025469420373,64,FLEN)
NAN_BOXED(0x7fe286daddd336a6215076062136055462,64,FLEN)
NAN_BOXED(0xc007e3e64752bdd83837278958297726424,64,FLEN)
NAN_BOXED(0x7fe7537d0a566421216426958946460705,64,FLEN)
NAN_BOXED(0x7fe286daddd336a6215076062136055462,64,FLEN)
NAN_BOXED(0xc007e3e64752bdd83837278958297726424,64,FLEN)
NAN_BOXED(0x7fe7537d0a566421216426958946460705,64,FLEN)
NAN_BOXED(0x7fe286daddd336a6215076062136055462,64,FLEN)
NAN_BOXED(0xc007e3e64752bdd83837278958297726424,64,FLEN)
NAN_BOXED(0x7fe7537d0a566421216426958946460705,64,FLEN)
NAN_BOXED(0x7fe286daddd336a6215076062136055462,64,FLEN)
NAN_BOXED(0xc007e3e64752bdd83837278958297726424,64,FLEN)
NAN_BOXED(0x7fe7537d0a566421216426958946460705,64,FLEN)
NAN_BOXED(0x7fe286daddd336a6215076062136055462,64,FLEN)
NAN_BOXED(0xc007e3e64752bdd83837278958297726424,64,FLEN)
NAN_BOXED(0x7fe7537d0a566421216426958946460705,64,FLEN)
NAN_BOXED(0x7fe677x9a96d9966216185601633392998,64,FLEN)
NAN_BOXED(0xbff796cd8a02d3f63832690590019671030,64,FLEN)
NAN_BOXED(0x7fee6665d6935c36218418074851695670,64,FLEN)
NAN_BOXED(0x7fe677x9a96d9966216185601633392998,64,FLEN)
NAN_BOXED(0xbff796cd8a02d3f63832690590019671030,64,FLEN)
NAN_BOXED(0x7fee6665d6935c36218418074851695670,64,FLEN)
NAN_BOXED(0x7fe677x9a96d9966216185601633392998,64,FLEN)
NAN_BOXED(0xbff796cd8a02d3f63832690590019671030,64,FLEN)
NAN_BOXED(0x7fee6665d6935c36218418074851695670,64,FLEN)
NAN_BOXED(0x7fe677x9a96d9966216185601633392998,64,FLEN)
NAN_BOXED(0xbff796cd8a02d3f63832690590019671030,64,FLEN)
NAN_BOXED(0x7fee6665d6935c36218418074851695670,64,FLEN)
NAN_BOXED(0x7fe677x9a96d9966216185601633392998,64,FLEN)
NAN_BOXED(0xbff796cd8a02d3f63832690590019671030,64,FLEN)
NAN_BOXED(0x7fee6665d6935c36218418074851695670,64,FLEN)
NAN_BOXED(0x7feafde4x5fa80c8217458747188347080,64,FLEN)
NAN_BOXED(0xbfd3700bd52d2c4f3822514877453642831,64,FLEN)
NAN_BOXED(0x7fe01daaa27ex61b214397456307910171,64,FLEN)
NAN_BOXED(0x7feafde4x5fa80c8217458747188347080,64,FLEN)
NAN_BOXED(0xbfd3700bd52d2c4f3822514877453642831,64,FLEN)
NAN_BOXED(0x7fe01daaa27ex61b214397456307910171,64,FLEN)
NAN_BOXED(0x7feafde4x5fa80c8217458747188347080,64,FLEN)
NAN_BOXED(0xbfd3700bd52d2c4f3822514877453642831,64,FLEN)
NAN_BOXED(0x7fe01daaa27ex61b214397456307910171,64,FLEN)
NAN_BOXED(0x7feafde4x5fa80c8217458747188347080,64,FLEN)
NAN_BOXED(0xbfd3700bd52d2c4f3822514877453642831,64,FLEN)
NAN_BOXED(0x7fe01daaa27ex61b214397456307910171,64,FLEN)
NAN_BOXED(0x7feafde4x5fa80c8217458747188347080,64,FLEN)
NAN_BOXED(0xbfd3700bd52d2c4f3822514877453642831,64,FLEN)
NAN_BOXED(0x7fe01daaa27ex61b214397456307910171,64,FLEN)
NAN_BOXED(0x7fec30d25dc7d1f8217796217395204600,64,FLEN)
NAN_BOXED(0xbfe29c66c9d482fb3826785771267588859,64,FLEN)
NAN_BOXED(0x7fd248247c756437210503509470176311,64,FLEN)
NAN_BOXED(0x7fec30d25dc7d1f8217796217395204600,64,FLEN)
NAN_BOXED(0xbfe29c66c9d482fb3826785771267588859,64,FLEN)
NAN_BOXED(0x7fd248247c756437210503509470176311,64,FLEN)
NAN_BOXED(0x7fec30d25dc7d1f8217796217395204600,64,FLEN)
NAN_BOXED(0xbfe29c66c9d482fb3826785771267588859,64,FLEN)
NAN_BOXED(0x7fd248247c756437210503509470176311,64,FLEN)
NAN_BOXED(0x7fec30d25dc7d1f8217796217395204600,64,FLEN)
NAN_BOXED(0xbfe29c66c9d482fb3826785771267588859,64,FLEN)
NAN_BOXED(0x7fd248247c756437210503509470176311,64,FLEN)
NAN_BOXED(0x7fec30d25dc7d1f8217796217395204600,64,FLEN)
NAN_BOXED(0xbfe29c66c9d482fb3826785771267588859,64,FLEN)
NAN_BOXED(0x7fd248247c756437210503509470176311,64,FLEN)
NAN_BOXED(0x7fecd8104cd4e803217980101840660483,64,FLEN)
NAN_BOXED(0xbffc12c4e221x23c3833952792192086588,64,FLEN)
NAN_BOXED(0x7fe29bf2873bcb4b215099253506689867,64,FLEN)
NAN_BOXED(0x7fecd8104cd4e803217980101840660483,64,FLEN)
NAN_BOXED(0xbffc12c4e221x23c3833952792192086588,64,FLEN)
NAN_BOXED(0x7fe29bf2873bcb4b215099253506689867,64,FLEN)
NAN_BOXED(0x7fecd8104cd4e803217980101840660483,64,FLEN)
NAN_BOXED(0xbffc12c4e221x23c3833952792192086588,64,FLEN)
NAN_BOXED(0x7fe29bf2873bcb4b215099253506689867,64,FLEN)
NAN_BOXED(0x7fecd8104cd4e803217980101840660483,64,FLEN)
NAN_BOXED(0xbffc12c4e221x23c3833952792192086588,64,FLEN)
NAN_BOXED(0x7fe29bf2873bcb4b215099253506689867,64,FLEN)
NAN_BOXED(0x7fecd8104cd4e803217980101840660483,64,FLEN)
NAN_BOXED(0xbffc12c4e221x23c3833952792192086588,64,FLEN)
NAN_BOXED(0x7fe29bf2873bcb4b215099253506689867,64,FLEN)
NAN_BOXED(0x7fee460da8265d2d218382511743589677,64,FLEN)
NAN_BOXED(0xbfx92d4b2f309x8a3833137531382701962,64,FLEN)
NAN_BOXED(0x7fdf46513d9d53ab214160677363340203,64,FLEN)
NAN_BOXED(0x7fee460da8265d2d218382511743589677,64,FLEN)
NAN_BOXED(0xbfx92d4b2f309x8a3833137531382701962,64,FLEN)
NAN_BOXED(0x7fdf46513d9d53ab214160677363340203,64,FLEN)
NAN_BOXED(0x7fee460da8265d2d218382511743589677,64,FLEN)
NAN_BOXED(0xbfx92d4b2f309x8a3833137531382701962,64,FLEN)
NAN_BOXED(0x7fdf46513d9d53ab214160677363340203,64,FLEN)
NAN_BOXED(0x7fee460da8265d2d218382511743589677,64,FLEN)
NAN_BOXED(0xbfx92d4b2f309x8a3833137531382701962,64,FLEN)
NAN_BOXED(0x7fdf46513d9d53ab214160677363340203,64,FLEN)
NAN_BOXED(0x7fee460da8265d2d218382511743589677,64,FLEN)
NAN_BOXED(0xbfx92d4b2f309x8a3833137531382701962,64,FLEN)
NAN_BOXED(0x7fdf46513d9d53ab214160677363340203,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x4078295552baee7e645508462069608062,64,FLEN)
NAN_BOXED(0x7fd5f78051c221f1211540743355769329,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x4078295552baee7e645508462069608062,64,FLEN)
NAN_BOXED(0x7fd5f78051c221f1211540743355769329,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x4078295552baee7e645508462069608062,64,FLEN)
NAN_BOXED(0x7fd5f78051c221f1211540743355769329,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x4078295552baee7e645508462069608062,64,FLEN)
NAN_BOXED(0x7fd5f78051c221f1211540743355769329,64,FLEN)
NAN_BOXED(0x7f8867824bb36ebf189708848962956991,64,FLEN)
NAN_BOXED(0x4078295552baee7e645508462069608062,64,FLEN)
NAN_BOXED(0x7fd5f78051c221f1211540743355769329,64,FLEN)
NAN_BOXED(0x7f947899d9bfab7f193105341548571519,64,FLEN)
NAN_BOXED(0xc04faed66280d8b53857486814241151157,64,FLEN)
NAN_BOXED(0x7fd112b7d42952fb210163293697168123,64,FLEN)
NAN_BOXED(0x7f947899d9bfab7f193105341548571519,64,FLEN)
NAN_BOXED(0xc04faed66280d8b53857486814241151157,64,FLEN)
NAN_BOXED(0x7fd112b7d42952fb210163293697168123,64,FLEN)
NAN_BOXED(0x7f947899d9bfab7f193105341548571519,64,FLEN)
NAN_BOXED(0xc04faed66280d8b53857486814241151157,64,FLEN)
NAN_BOXED(0x7fd112b7d42952fb210163293697168123,64,FLEN)
NAN_BOXED(0x7f947899d9bfab7f193105341548571519,64,FLEN)
NAN_BOXED(0xc04faed66280d8b53857486814241151157,64,FLEN)
NAN_BOXED(0x7fd112b7d42952fb210163293697168123,64,FLEN)
NAN_BOXED(0x7fb026946c5d22f7200896457632981751,64,FLEN)
NAN_BOXED(0xc039ae4916027c773851293757879778423,64,FLEN)
NAN_BOXED(0x7fe3d86a7b5170e5215447214377234661,64,FLEN)
NAN_BOXED(0x7fb026946c5d22f7200896457632981751,64,FLEN)
NAN_BOXED(0xc039ae4916027c773851293757879778423,64,FLEN)
NAN_BOXED(0x7fe3d86a7b5170e5215447214377234661,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 46*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
