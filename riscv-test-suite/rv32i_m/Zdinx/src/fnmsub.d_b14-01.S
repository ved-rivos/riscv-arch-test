
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b14 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b14)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x31, rs2==x7, rs3==x31, rd==x2,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x26c and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x31; op2:x7; op3:x31; dest:x2; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x5x8e759fx97b7507; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x2, x31, x7, x31, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==x4, rs2==x4, rs3==x4, rd==x11,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x2 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x4; op2:x4; op3:x4; dest:x11; op1val:0x5x8e759fx97b7507; op2val:0x5x8e759fx97b7507;
op3val:0x5x8e759fx97b7507; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x11, x4, x4, x4, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==x0, rs2==x0, rs3==x10, rd==x0,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x3 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x0; op2:x0; op3:x10; dest:x0; op1val:0x5x8e759fx97b7507; op2val:0x5x8e759fx97b7507;
op3val:0x3x38cd2b1c8952cf; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x0, x0, x0, x10, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x12, rs2==x3, rs3==x16, rd==x12,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x4 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x12; op2:x3; op3:x16; dest:x12; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3x48cd2b1c8952cf; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x12, x12, x3, x16, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x21, rs2==x13, rs3==x13, rd==x9,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x5 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x21; op2:x13; op3:x13; dest:x9; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x5fa16a5368858d8c; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x9, x21, x13, x13, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==x19, rs2==x27, rs3==x27, rd==x27,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x6 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x19; op2:x27; op3:x27; dest:x27; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x5fa16a5368858d8c; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x27, x19, x27, x27, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs1 == rd == rs3 != rs2, rs1==x24, rs2==x16, rs3==x24, rd==x24,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x7 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x24; op2:x16; op3:x24; dest:x24; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x5x8e759fx97b7507; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x24, x24, x16, x24, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x14, rs2==x15, rs3==x22, rd==x15,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x8 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x14; op2:x15; op3:x22; dest:x15; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3x88cd2b1c8952cf; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x15, x14, x15, x22, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x25, rs2==x9, rs3==x23, rd==x23,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x9 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x25; op2:x9; op3:x23; dest:x23; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3x98cd2b1c8952cf; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x23, x25, x9, x23, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x28, rs2==x12, rs3==x9, rd==x17,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3fa and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x28; op2:x12; op3:x9; dest:x17; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3fa8cd2b1c8952cf; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x17, x28, x12, x9, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs2 == rs3 == rd, rs1==x20, rs2==x20, rs3==x20, rd==x20,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x20; op2:x20; op3:x20; dest:x20; op1val:0x5x8e759fx97b7507; op2val:0x5x8e759fx97b7507;
op3val:0x5x8e759fx97b7507; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x20, x20, x20, x20, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x8, rs2==x8, rs3==x5, rd==x22,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x8; op2:x8; op3:x5; dest:x22; op1val:0x5x8e759fx97b7507; op2val:0x5x8e759fx97b7507;
op3val:0x3fc8cd2b1c8952cf; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x22, x8, x8, x5, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x17, rs2==x14, rs3==x15, rd==x7,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3fd and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x17; op2:x14; op3:x15; dest:x7; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3fd8cd2b1c8952cf; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x7, x17, x14, x15, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x16, rs2==x17, rs3==x21, rd==x25,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3fe and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x16; op2:x17; op3:x21; dest:x25; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3fe8cd2b1c8952cf; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x25, x16, x17, x21, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x30, rs2==x22, rs3==x29, rd==x4,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x22; op3:x29; dest:x4; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3fx8cd2b1c8952cf; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x4, x30, x22, x29, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x29, rs2==x23, rs3==x30, rd==x16,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x400 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x29; op2:x23; op3:x30; dest:x16; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4008cd2b1c8952cf; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x16, x29, x23, x30, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x18, rs2==x5, rs3==x3, rd==x1,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x401 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x18; op2:x5; op3:x3; dest:x1; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4018cd2b1c8952cf; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x1, x18, x5, x3, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x10, rs2==x11, rs3==x28, rd==x14,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x402 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x10; op2:x11; op3:x28; dest:x14; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4028cd2b1c8952cf; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x14, x10, x11, x28, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x3, rs2==x31, rs3==x7, rd==x18,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x403 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x3; op2:x31; op3:x7; dest:x18; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4038cd2b1c8952cf; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x18, x3, x31, x7, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x2, rs2==x21, rs3==x25, rd==x28,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x404 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x2; op2:x21; op3:x25; dest:x28; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4048cd2b1c8952cf; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x28, x2, x21, x25, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x23, rs2==x30, rs3==x6, rd==x5,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x405 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x23; op2:x30; op3:x6; dest:x5; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4058cd2b1c8952cf; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x5, x23, x30, x6, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x9, rs2==x6, rs3==x18, rd==x19,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x406 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x9; op2:x6; op3:x18; dest:x19; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4068cd2b1c8952cf; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x19, x9, x6, x18, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==x6, rs2==x10, rs3==x1, rd==x29,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x407 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x6; op2:x10; op3:x1; dest:x29; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4078cd2b1c8952cf; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x29, x6, x10, x1, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==x27, rs2==x24, rs3==x17, rd==x26,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x408 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x27; op2:x24; op3:x17; dest:x26; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4088cd2b1c8952cf; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x26, x27, x24, x17, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==x13, rs2==x29, rs3==x14, rd==x8,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x409 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x13; op2:x29; op3:x14; dest:x8; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4098cd2b1c8952cf; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x8, x13, x29, x14, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==x5, rs2==x18, rs3==x0, rd==x10,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x40a and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x5; op2:x18; op3:x0; dest:x10; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x40a8cd2b1c8952cf; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x10, x5, x18, x0, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==x7, rs2==x26, rs3==x11, rd==x6,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x40b and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x7; op2:x26; op3:x11; dest:x6; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x40b8cd2b1c8952cf; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x6, x7, x26, x11, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==x26, rs2==x28, rs3==x8, rd==x31,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x40c and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x26; op2:x28; op3:x8; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x40c8cd2b1c8952cf; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x26, x28, x8, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==x22, rs2==x1, rs3==x26, rd==x13,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x40d and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x22; op2:x1; op3:x26; dest:x13; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x40d8cd2b1c8952cf; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x13, x22, x1, x26, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==x11, rs2==x2, rs3==x12, rd==x21,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x40e and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x11; op2:x2; op3:x12; dest:x21; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x40e8cd2b1c8952cf; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x21, x11, x2, x12, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==x1, rs2==x19, rs3==x2, rd==x3,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x40f and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x1; op2:x19; op3:x2; dest:x3; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x40x8cd2b1c8952cf; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x3, x1, x19, x2, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==x15, rs2==x25, rs3==x19, rd==x30,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x410 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x15; op2:x25; op3:x19; dest:x30; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4108cd2b1c8952cf; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x30, x15, x25, x19, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x411 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4118cd2b1c8952cf; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x412 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4128cd2b1c8952cf; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x413 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4138cd2b1c8952cf; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x414 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4148cd2b1c8952cf; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x415 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4158cd2b1c8952cf; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x416 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4168cd2b1c8952cf; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x417 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4178cd2b1c8952cf; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x418 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4188cd2b1c8952cf; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x419 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4198cd2b1c8952cf; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x41a and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x41a8cd2b1c8952cf; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x41b and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x41b8cd2b1c8952cf; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x41c and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x41c8cd2b1c8952cf; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x41d and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x41d8cd2b1c8952cf; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x41e and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x41e8cd2b1c8952cf; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x41f and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x41x8cd2b1c8952cf; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x420 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4208cd2b1c8952cf; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x421 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4218cd2b1c8952cf; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x422 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4228cd2b1c8952cf; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x423 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4238cd2b1c8952cf; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x424 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4248cd2b1c8952cf; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x425 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4258cd2b1c8952cf; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x426 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4268cd2b1c8952cf; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x427 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4278cd2b1c8952cf; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x428 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4288cd2b1c8952cf; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x429 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4298cd2b1c8952cf; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x42a and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x42a8cd2b1c8952cf; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x42b and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x42b8cd2b1c8952cf; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x42c and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x42c8cd2b1c8952cf; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x42d and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x42d8cd2b1c8952cf; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x42e and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x42e8cd2b1c8952cf; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x42f and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x42x8cd2b1c8952cf; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x430 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4308cd2b1c8952cf; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x431 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4318cd2b1c8952cf; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x432 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4328cd2b1c8952cf; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x433 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4338cd2b1c8952cf; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x434 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4348cd2b1c8952cf; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x435 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4358cd2b1c8952cf; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x436 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4368cd2b1c8952cf; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x437 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4378cd2b1c8952cf; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x438 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4388cd2b1c8952cf; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x439 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4398cd2b1c8952cf; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x43a and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x43a8cd2b1c8952cf; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x43b and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x43b8cd2b1c8952cf; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x43c and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x43c8cd2b1c8952cf; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x43d and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x43d8cd2b1c8952cf; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x43e and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x43e8cd2b1c8952cf; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x43f and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x43x8cd2b1c8952cf; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x440 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4408cd2b1c8952cf; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x441 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4418cd2b1c8952cf; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x442 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4428cd2b1c8952cf; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x443 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4438cd2b1c8952cf; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x444 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4448cd2b1c8952cf; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x445 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4458cd2b1c8952cf; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x446 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4468cd2b1c8952cf; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x447 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4478cd2b1c8952cf; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x448 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4488cd2b1c8952cf; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x449 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4498cd2b1c8952cf; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x44a and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x44a8cd2b1c8952cf; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x44b and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x44b8cd2b1c8952cf; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x44c and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x44c8cd2b1c8952cf; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x44d and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x44d8cd2b1c8952cf; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x44e and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x44e8cd2b1c8952cf; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x44f and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x44x8cd2b1c8952cf; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x450 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4508cd2b1c8952cf; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x451 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4518cd2b1c8952cf; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x452 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4528cd2b1c8952cf; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x453 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4538cd2b1c8952cf; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x454 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4548cd2b1c8952cf; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x455 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4558cd2b1c8952cf; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x456 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4568cd2b1c8952cf; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x457 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4578cd2b1c8952cf; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x458 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4588cd2b1c8952cf; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x459 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4598cd2b1c8952cf; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x45a and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x45a8cd2b1c8952cf; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x45b and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x45b8cd2b1c8952cf; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x45c and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x45c8cd2b1c8952cf; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x45d and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x45d8cd2b1c8952cf; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x45e and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x45e8cd2b1c8952cf; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x45f and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x45x8cd2b1c8952cf; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x460 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4608cd2b1c8952cf; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x461 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4618cd2b1c8952cf; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x462 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4628cd2b1c8952cf; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x463 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4638cd2b1c8952cf; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x464 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4648cd2b1c8952cf; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x465 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4658cd2b1c8952cf; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x466 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4668cd2b1c8952cf; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x467 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4678cd2b1c8952cf; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x468 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4688cd2b1c8952cf; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x469 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4698cd2b1c8952cf; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x46a and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x46a8cd2b1c8952cf; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x46b and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x46b8cd2b1c8952cf; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x46c and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x46c8cd2b1c8952cf; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x46d and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x46d8cd2b1c8952cf; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x46e and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x46e8cd2b1c8952cf; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x46f and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x46x8cd2b1c8952cf; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x470 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4708cd2b1c8952cf; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x471 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4718cd2b1c8952cf; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x472 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4728cd2b1c8952cf; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x473 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4738cd2b1c8952cf; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x474 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4748cd2b1c8952cf; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x475 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4758cd2b1c8952cf; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x476 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4768cd2b1c8952cf; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x477 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4778cd2b1c8952cf; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x478 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4788cd2b1c8952cf; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x479 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4798cd2b1c8952cf; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x47a and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x47a8cd2b1c8952cf; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x47b and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x47b8cd2b1c8952cf; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x47c and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x47c8cd2b1c8952cf; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x47d and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x47d8cd2b1c8952cf; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x47e and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x47e8cd2b1c8952cf; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x47f and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x47x8cd2b1c8952cf; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x480 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4808cd2b1c8952cf; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x481 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4818cd2b1c8952cf; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x482 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4828cd2b1c8952cf; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x483 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4838cd2b1c8952cf; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x484 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4848cd2b1c8952cf; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x485 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4858cd2b1c8952cf; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x486 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4868cd2b1c8952cf; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x487 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4878cd2b1c8952cf; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x488 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4888cd2b1c8952cf; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x489 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x4898cd2b1c8952cf; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x48a and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x48a8cd2b1c8952cf; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x48b and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x48b8cd2b1c8952cf; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x48c and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x48c8cd2b1c8952cf; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x48d and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x48d8cd2b1c8952cf; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x48e and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x48e8cd2b1c8952cf; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x48f and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x48x8cd2b1c8952cf; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x675 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x6758cd2b1c8952cf; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x26c and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x26c8cd2b1c8952cf; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x2 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3x28cd2b1c8952cf; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x3 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3x38cd2b1c8952cf; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x4 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3x48cd2b1c8952cf; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x5 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3x58cd2b1c8952cf; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x6 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3x68cd2b1c8952cf; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x7 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3x78cd2b1c8952cf; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x8 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3x88cd2b1c8952cf; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3x9 and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3x98cd2b1c8952cf; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3fb and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3fb8cd2b1c8952cf; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x16a5368858d8c and fs3 == 0 and fe3 == 0x3fc and fm3 == 0x8cd2b1c8952cf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x5fa16a5368858d8c;
op3val:0x3fc8cd2b1c8952cf; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x3x38cd2b1c8952cf555616608131306191,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3x48cd2b1c8952cf560120207758676687,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3x88cd2b1c8952cf578134606268158671,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3x98cd2b1c8952cf582638205895529167,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3fa8cd2b1c8952cf587141805522899663,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x3fc8cd2b1c8952cf596149004777640655,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3fd8cd2b1c8952cf600652604405011151,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3fe8cd2b1c8952cf605156204032381647,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3fx8cd2b1c8952cf609659803659752143,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4008cd2b1c8952cf614163403287122639,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4018cd2b1c8952cf618667002914493135,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4028cd2b1c8952cf623170602541863631,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4038cd2b1c8952cf627674202169234127,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4048cd2b1c8952cf632177801796604623,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4058cd2b1c8952cf636681401423975119,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4068cd2b1c8952cf641185001051345615,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4078cd2b1c8952cf645688600678716111,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4088cd2b1c8952cf650192200306086607,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4098cd2b1c8952cf654695799933457103,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x40a8cd2b1c8952cf659199399560827599,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x40b8cd2b1c8952cf663702999188198095,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x40c8cd2b1c8952cf668206598815568591,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x40d8cd2b1c8952cf672710198442939087,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x40e8cd2b1c8952cf677213798070309583,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x40x8cd2b1c8952cf681717397697680079,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4108cd2b1c8952cf686220997325050575,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4118cd2b1c8952cf690724596952421071,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4128cd2b1c8952cf695228196579791567,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4138cd2b1c8952cf699731796207162063,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4148cd2b1c8952cf704235395834532559,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4158cd2b1c8952cf708738995461903055,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4168cd2b1c8952cf713242595089273551,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4178cd2b1c8952cf717746194716644047,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4188cd2b1c8952cf722249794344014543,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4198cd2b1c8952cf726753393971385039,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x41a8cd2b1c8952cf731256993598755535,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x41b8cd2b1c8952cf735760593226126031,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x41c8cd2b1c8952cf740264192853496527,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x41d8cd2b1c8952cf744767792480867023,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x41e8cd2b1c8952cf749271392108237519,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x41x8cd2b1c8952cf753774991735608015,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4208cd2b1c8952cf758278591362978511,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4218cd2b1c8952cf762782190990349007,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4228cd2b1c8952cf767285790617719503,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4238cd2b1c8952cf771789390245089999,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4248cd2b1c8952cf776292989872460495,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4258cd2b1c8952cf780796589499830991,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4268cd2b1c8952cf785300189127201487,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4278cd2b1c8952cf789803788754571983,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4288cd2b1c8952cf794307388381942479,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4298cd2b1c8952cf798810988009312975,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x42a8cd2b1c8952cf803314587636683471,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x42b8cd2b1c8952cf807818187264053967,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x42c8cd2b1c8952cf812321786891424463,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x42d8cd2b1c8952cf816825386518794959,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x42e8cd2b1c8952cf821328986146165455,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x42x8cd2b1c8952cf825832585773535951,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4308cd2b1c8952cf830336185400906447,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4318cd2b1c8952cf834839785028276943,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4328cd2b1c8952cf839343384655647439,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4338cd2b1c8952cf843846984283017935,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4348cd2b1c8952cf848350583910388431,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4358cd2b1c8952cf852854183537758927,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4368cd2b1c8952cf857357783165129423,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4378cd2b1c8952cf861861382792499919,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4388cd2b1c8952cf866364982419870415,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4398cd2b1c8952cf870868582047240911,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x43a8cd2b1c8952cf875372181674611407,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x43b8cd2b1c8952cf879875781301981903,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x43c8cd2b1c8952cf884379380929352399,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x43d8cd2b1c8952cf888882980556722895,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x43e8cd2b1c8952cf893386580184093391,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x43x8cd2b1c8952cf897890179811463887,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4408cd2b1c8952cf902393779438834383,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4418cd2b1c8952cf906897379066204879,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4428cd2b1c8952cf911400978693575375,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4438cd2b1c8952cf915904578320945871,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4448cd2b1c8952cf920408177948316367,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4458cd2b1c8952cf924911777575686863,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4468cd2b1c8952cf929415377203057359,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4478cd2b1c8952cf933918976830427855,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4488cd2b1c8952cf938422576457798351,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4498cd2b1c8952cf942926176085168847,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x44a8cd2b1c8952cf947429775712539343,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x44b8cd2b1c8952cf951933375339909839,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x44c8cd2b1c8952cf956436974967280335,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x44d8cd2b1c8952cf960940574594650831,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x44e8cd2b1c8952cf965444174222021327,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x44x8cd2b1c8952cf969947773849391823,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4508cd2b1c8952cf974451373476762319,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4518cd2b1c8952cf978954973104132815,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4528cd2b1c8952cf983458572731503311,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4538cd2b1c8952cf987962172358873807,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4548cd2b1c8952cf992465771986244303,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4558cd2b1c8952cf996969371613614799,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4568cd2b1c8952cf001472971240985295,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4578cd2b1c8952cf005976570868355791,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4588cd2b1c8952cf010480170495726287,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4598cd2b1c8952cf014983770123096783,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x45a8cd2b1c8952cf019487369750467279,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x45b8cd2b1c8952cf023990969377837775,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x45c8cd2b1c8952cf028494569005208271,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x45d8cd2b1c8952cf032998168632578767,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x45e8cd2b1c8952cf037501768259949263,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x45x8cd2b1c8952cf042005367887319759,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4608cd2b1c8952cf046508967514690255,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4618cd2b1c8952cf051012567142060751,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4628cd2b1c8952cf055516166769431247,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4638cd2b1c8952cf060019766396801743,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4648cd2b1c8952cf064523366024172239,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4658cd2b1c8952cf069026965651542735,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4668cd2b1c8952cf073530565278913231,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4678cd2b1c8952cf078034164906283727,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4688cd2b1c8952cf082537764533654223,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4698cd2b1c8952cf087041364161024719,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x46a8cd2b1c8952cf091544963788395215,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x46b8cd2b1c8952cf096048563415765711,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x46c8cd2b1c8952cf100552163043136207,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x46d8cd2b1c8952cf105055762670506703,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x46e8cd2b1c8952cf109559362297877199,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x46x8cd2b1c8952cf114062961925247695,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4708cd2b1c8952cf118566561552618191,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4718cd2b1c8952cf123070161179988687,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4728cd2b1c8952cf127573760807359183,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4738cd2b1c8952cf132077360434729679,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4748cd2b1c8952cf136580960062100175,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4758cd2b1c8952cf141084559689470671,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4768cd2b1c8952cf145588159316841167,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4778cd2b1c8952cf150091758944211663,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4788cd2b1c8952cf154595358571582159,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4798cd2b1c8952cf159098958198952655,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x47a8cd2b1c8952cf163602557826323151,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x47b8cd2b1c8952cf168106157453693647,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x47c8cd2b1c8952cf172609757081064143,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x47d8cd2b1c8952cf177113356708434639,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x47e8cd2b1c8952cf181616956335805135,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x47x8cd2b1c8952cf186120555963175631,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4808cd2b1c8952cf190624155590546127,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4818cd2b1c8952cf195127755217916623,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4828cd2b1c8952cf199631354845287119,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4838cd2b1c8952cf204134954472657615,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4848cd2b1c8952cf208638554100028111,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4858cd2b1c8952cf213142153727398607,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4868cd2b1c8952cf217645753354769103,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4878cd2b1c8952cf222149352982139599,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4888cd2b1c8952cf226652952609510095,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x4898cd2b1c8952cf231156552236880591,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x48a8cd2b1c8952cf235660151864251087,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x48b8cd2b1c8952cf240163751491621583,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x48c8cd2b1c8952cf244667351118992079,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x48d8cd2b1c8952cf249170950746362575,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x48e8cd2b1c8952cf253674550373733071,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x48x8cd2b1c8952cf258178150001103567,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x6758cd2b1c8952cf446927568903164623,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x26c8cd2b1c8952cf794709153829442255,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3x28cd2b1c8952cf551113008503935695,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3x38cd2b1c8952cf555616608131306191,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3x48cd2b1c8952cf560120207758676687,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3x58cd2b1c8952cf564623807386047183,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3x68cd2b1c8952cf569127407013417679,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3x78cd2b1c8952cf573631006640788175,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3x88cd2b1c8952cf578134606268158671,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3x98cd2b1c8952cf582638205895529167,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3fb8cd2b1c8952cf591645405150270159,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x5fa16a5368858d8c890905811321982348,64,FLEN)
NAN_BOXED(0x3fc8cd2b1c8952cf596149004777640655,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 86*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
