
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b7 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b7)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x10, rs2==x23, rs3==x6, rd==x10,fs1 == 0 and fe1 == 0x7x4 and fm1 == 0x5a5a59bbb3fff and fs2 == 1 and fe2 == 0x408 and fm2 == 0x32d10b0d92edf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9x1ad1x9dea0f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x10; op2:x23; op3:x6; dest:x10; op1val:0x7x45a5a59bbb3fff; op2val:0xc0832d10b0d92edf;
op3val:0x7fd9x1ad1x9dea0f; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x10, x10, x23, x6, dyn, 96, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x17, rs2==x0, rs3==x7, rd==x22,fs1 == 0 and fe1 == 0x7x5 and fm1 == 0xd144fc758c3ff and fs2 == 1 and fe2 == 0x407 and fm2 == 0xeaf869e3b1341 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x17; op2:x0; op3:x7; dest:x22; op1val:0x7x5d144fc758c3ff; op2val:0xc07eaf869e3b1341;
op3val:0x7febe28c340570cd; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x22, x17, x0, x7, dyn, 96, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==x26, rs2==x26, rs3==x13, rd==x26,fs1 == 0 and fe1 == 0x7x6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0x90c64fc55e97f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x26; op2:x26; op3:x13; dest:x26; op1val:0x7x6bb6ea62484dff; op2val:0x7x6bb6ea62484dff;
op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x26, x26, x26, x13, dyn, 96, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rs2 == rs3 == rd, rs1==x18, rs2==x18, rs3==x18, rd==x18,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x297b073ec28bf and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4969a46ax80a4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x18; op2:x18; op3:x18; dest:x18; op1val:0x7f8297b073ec28bf; op2val:0x7f8297b073ec28bf;
op3val:0x7f8297b073ec28bf; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x18, x18, x18, x18, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x14, rs2==x14, rs3==x31, rd==x6,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x7b799796bx9ff and fs2 == 1 and fe2 == 0x404 and fm2 == 0x79dd7cecx9d03 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x180x30b184945 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x14; op2:x14; op3:x31; dest:x6; op1val:0x7x87b799796bx9ff; op2val:0x7x87b799796bx9ff;
op3val:0x7fe180x30b184945; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x6, x14, x14, x31, dyn, 96, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x1, rs2==x21, rs3==x29, rd==x21,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0xadb9cbb2edaff and fs2 == 1 and fe2 == 0x403 and fm2 == 0x086bx70a767c0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x1; op2:x21; op3:x29; dest:x21; op1val:0x7x8adb9cbb2edaff; op2val:0xc03086bx70a767c0;
op3val:0x7fcbbdcd5687c963; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x21, x1, x21, x29, dyn, 96, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x28, rs2==x15, rs3==x15, rd==x0,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0xb0a547ax4b77f and fs2 == 1 and fe2 == 0x404 and fm2 == 0x42ax94e43542f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x10ac5063dc350 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x28; op2:x15; op3:x15; dest:x0; op1val:0x7x8b0a547ax4b77f; op2val:0xc0442ax94e43542f;
op3val:0xc0442ax94e43542f; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x0, x28, x15, x15, dyn, 96, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x25, rs2==x7, rs3==x25, rd==x2,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0xdd1e76dfee33f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xabaae8cebcd22 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8e882c33ae96b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x25; op2:x7; op3:x25; dest:x2; op1val:0x7x8dd1e76dfee33f; op2val:0xc04abaae8cebcd22;
op3val:0x7x8dd1e76dfee33f; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x2, x25, x7, x25, dyn, 96, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x3, rs2==x10, rs3==x11, rd==x11,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x1d37938799ebf and fs2 == 1 and fe2 == 0x403 and fm2 == 0xeffa856a7a98c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x144ac996e3256 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x3; op2:x10; op3:x11; dest:x11; op1val:0x7x91d37938799ebf; op2val:0xc03effa856a7a98c;
op3val:0x7fe144ac996e3256; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x11, x3, x10, x11, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rd == rs2 == rs3 != rs1, rs1==x2, rs2==x20, rs3==x20, rd==x20,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x2804bc647cadf and fs2 == 1 and fe2 == 0x404 and fm2 == 0x5ccc17c4e0cx2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526x5ace10b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x2; op2:x20; op3:x20; dest:x20; op1val:0x7f92804bc647cadf; op2val:0xc045ccc17c4e0cx2;
op3val:0xc045ccc17c4e0cx2; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x20, x2, x20, x20, dyn, 96, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==x16, rs2==x31, rs3==x16, rd==x16,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xa2aa7aaa16x3f and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc472e2120c319 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x71f8711b7a3e6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x16; op2:x31; op3:x16; dest:x16; op1val:0x7x9a2aa7aaa16x3f; op2val:0xc03c472e2120c319;
op3val:0x7x9a2aa7aaa16x3f; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x16, x16, x31, x16, dyn, 96, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 == rs3 != rd, rs1==x5, rs2==x5, rs3==x5, rd==x25,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xc21b18x92a0df and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd7ccd567ee936 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x9ec3ffe0cd89f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x5; op2:x5; op3:x5; dest:x25; op1val:0x7x9c21b18x92a0df; op2val:0x7x9c21b18x92a0df;
op3val:0x7x9c21b18x92a0df; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x25, x5, x5, x5, dyn, 96, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x15, rs2==x28, rs3==x4, rd==x9,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xc48f21909621f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x72c5b0c847b8b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x47ba2c9621783 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x15; op2:x28; op3:x4; dest:x9; op1val:0x7x9c48f21909621f; op2val:0xc0172c5b0c847b8b;
op3val:0x7fc47ba2c9621783; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x9, x15, x28, x4, dyn, 96, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x0, rs2==x1, rs3==x28, rd==x14,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xdb38beb9086df and fs2 == 1 and fe2 == 0x403 and fm2 == 0x00d954e12d2fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xdccc2f63529c1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x0; op2:x1; op3:x28; dest:x14; op1val:0x7x9db38beb9086df; op2val:0xc0300d954e12d2fc;
op3val:0x7fddccc2f63529c1; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x14, x0, x1, x28, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x4, rs2==x29, rs3==x30, rd==x23,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xe2b04c5638x5f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x89beaa54667bb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x733412989d9ad and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x4; op2:x29; op3:x30; dest:x23; op1val:0x7x9e2b04c5638x5f; op2val:0xc0389beaa54667bb;
op3val:0x7fe733412989d9ad; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x23, x4, x29, x30, dyn, 96, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x11, rs2==x16, rs3==x27, rd==x31,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x06ed29608fc5f and fs2 == 1 and fe2 == 0x403 and fm2 == 0xcce26386bax3c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd95aa9f020bd4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x11; op2:x16; op3:x27; dest:x31; op1val:0x7fa06ed29608fc5f; op2val:0xc03cce26386bax3c;
op3val:0x7fed95aa9f020bd4; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x11, x16, x27, dyn, 96, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x7, rs2==x12, rs3==x0, rd==x24,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0c0d5x34e784f and fs2 == 1 and fe2 == 0x402 and fm2 == 0xe2ax74c5b771a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf968e4aac6955 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x7; op2:x12; op3:x0; dest:x24; op1val:0x7fa0c0d5x34e784f; op2val:0xc02e2ax74c5b771a;
op3val:0x7fdf968e4aac6955; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x24, x7, x12, x0, dyn, 96, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x31, rs2==x3, rs3==x12, rd==x7,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x0d46afa2c97af and fs2 == 1 and fe2 == 0x403 and fm2 == 0x18daad470718d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x276b548x17c0d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x31; op2:x3; op3:x12; dest:x7; op1val:0x7fa0d46afa2c97af; op2val:0xc0318daad470718d;
op3val:0x7fe276b548x17c0d; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x7, x31, x3, x12, dyn, 96, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x20, rs2==x27, rs3==x2, rd==x17,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2a6cf802e779f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xbb77e316e5303 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x027b2946d02e9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x20; op2:x27; op3:x2; dest:x17; op1val:0x7fa2a6cf802e779f; op2val:0xc01bb77e316e5303;
op3val:0x7fd027b2946d02e9; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x17, x20, x27, x2, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x22, rs2==x19, rs3==x10, rd==x27,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x2c15fdbb5e3cf and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9d1bad7655x2a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe43febfe9d259 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x22; op2:x19; op3:x10; dest:x27; op1val:0x7fa2c15fdbb5e3cf; op2val:0xc039d1bad7655x2a;
op3val:0x7fee43febfe9d259; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x27, x22, x19, x10, dyn, 96, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x23, rs2==x9, rs3==x26, rd==x4,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x340e77ccx05ef and fs2 == 1 and fe2 == 0x403 and fm2 == 0x9d684051e2ed5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf178ca8c72a45 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x23; op2:x9; op3:x26; dest:x4; op1val:0x7fa340e77ccx05ef; op2val:0xc039d684051e2ed5;
op3val:0x7fef178ca8c72a45; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x4, x23, x9, x26, dyn, 96, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x13, rs2==x6, rs3==x14, rd==x1,fs1 == 0 and fe1 == 0x7fa and fm1 == 0x3532ec60050af and fs2 == 1 and fe2 == 0x401 and fm2 == 0x1f814130cd020 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x5b403465a136b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x13; op2:x6; op3:x14; dest:x1; op1val:0x7fa3532ec60050af; op2val:0xc011f814130cd020;
op3val:0x7fc5b403465a136b; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x1, x13, x6, x14, dyn, 96, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==x30, rs2==x22, rs3==x1, rd==x13,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xac88b8d489e5f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2b22ab6de4ad0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xx4bdb90011c1e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x22; op3:x1; dest:x13; op1val:0x7faac88b8d489e5f; op2val:0xc032b22ab6de4ad0;
op3val:0x7fex4bdb90011c1e; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x13, x30, x22, x1, dyn, 96, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==x12, rs2==x24, rs3==x21, rd==x29,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xb7937b6499ddf and fs2 == 1 and fe2 == 0x400 and fm2 == 0x67b984x0ba3x1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x34d72fx1d2953 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x12; op2:x24; op3:x21; dest:x29; op1val:0x7fab7937b6499ddf; op2val:0xc0067b984x0ba3x1;
op3val:0x7fc34d72fx1d2953; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x29, x12, x24, x21, dyn, 96, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==x9, rs2==x25, rs3==x23, rd==x8,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xbb8a1f913699f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3bac12cd8e8cf and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x11768b1c5f473 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x9; op2:x25; op3:x23; dest:x8; op1val:0x7fabb8a1f913699f; op2val:0xc003bac12cd8e8cf;
op3val:0x7fc11768b1c5f473; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x8, x9, x25, x23, dyn, 96, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==x21, rs2==x13, rs3==x9, rd==x15,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc85a87ea8c3df and fs2 == 1 and fe2 == 0x403 and fm2 == 0x071c1175cfa80 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd5070aa8da4e6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x21; op2:x13; op3:x9; dest:x15; op1val:0x7fac85a87ea8c3df; op2val:0xc03071c1175cfa80;
op3val:0x7fed5070aa8da4e6; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x15, x21, x13, x9, dyn, 96, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==x8, rs2==x2, rs3==x19, rd==x28,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xc8b6c88d8cc8f and fs2 == 1 and fe2 == 0x402 and fm2 == 0x903ba9163be01 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x65040492dcc30 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x8; op2:x2; op3:x19; dest:x28; op1val:0x7fac8b6c88d8cc8f; op2val:0xc02903ba9163be01;
op3val:0x7fe65040492dcc30; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x28, x8, x2, x19, dyn, 96, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==x6, rs2==x30, rs3==x24, rd==x5,fs1 == 0 and fe1 == 0x7fa and fm1 == 0xx29x0dcfe81df and fs2 == 1 and fe2 == 0x402 and fm2 == 0x99b025b271a6c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8efb99eb9add8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x6; op2:x30; op3:x24; dest:x5; op1val:0x7fax29x0dcfe81df; op2val:0xc0299b025b271a6c;
op3val:0x7fe8efb99eb9add8; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x5, x6, x30, x24, dyn, 96, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==x29, rs2==x11, rs3==x8, rd==x3,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0e0b709ce64ff and fs2 == 1 and fe2 == 0x400 and fm2 == 0x48d0c005bc79b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x5adadc2328113 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x29; op2:x11; op3:x8; dest:x3; op1val:0x7fb0e0b709ce64ff; op2val:0xc0048d0c005bc79b;
op3val:0x7fc5adadc2328113; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x3, x29, x11, x8, dyn, 96, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==x27, rs2==x4, rs3==x17, rd==x19,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x0e8eee9b78077 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x95229efde7a10 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac2cb68034dca and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x27; op2:x4; op3:x17; dest:x19; op1val:0x7fb0e8eee9b78077; op2val:0xc0295229efde7a10;
op3val:0x7feac2cb68034dca; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x19, x27, x4, x17, dyn, 96, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==x24, rs2==x8, rs3==x22, rd==x30,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x26ed9a8x4b2cf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x994d509fd4dc7 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd78aae48cx4ef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x24; op2:x8; op3:x22; dest:x30; op1val:0x7fb26ed9a8x4b2cf; op2val:0xbfe994d509fd4dc7;
op3val:0x7fad78aae48cx4ef; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x30, x24, x8, x22, dyn, 96, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==x19, rs2==x17, rs3==x3, rd==x12,fs1 == 0 and fe1 == 0x7fb and fm1 == 0x404ab140ecax7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe75dcf1983fx7 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x30e1bab89c4e3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x19; op2:x17; op3:x3; dest:x12; op1val:0x7fb404ab140ecax7; op2val:0xbffe75dcf1983fx7;
op3val:0x7fc30e1bab89c4e3; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x12, x19, x17, x3, dyn, 96, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x59899bda971ff and fs2 == 1 and fe2 == 0x400 and fm2 == 0xdc4404c6e419d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x416bd66538e77 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fb59899bda971ff; op2val:0xc00dc4404c6e419d;
op3val:0x7fd416bd66538e77; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x5d2823257dd0f and fs2 == 1 and fe2 == 0x401 and fm2 == 0xx57e62f78053d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x55fdx6c24cx14 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fb5d2823257dd0f; op2val:0xc01x57e62f78053d;
op3val:0x7fe55fdx6c24cx14; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x66x39d8x4fc87 and fs2 == 1 and fe2 == 0x402 and fm2 == 0x1a0ba107246d0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8b78a9d0dcdec and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fb66x39d8x4fc87; op2val:0xc021a0ba107246d0;
op3val:0x7fe8b78a9d0dcdec; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x6d1b5afbd5567 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x870885b5bcec4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x16d877c1f1617 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fb6d1b5afbd5567; op2val:0xc00870885b5bcec4;
op3val:0x7fd16d877c1f1617; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x757759ba0d957 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5e60311171edb and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xff2581034fa57 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fb757759ba0d957; op2val:0xbfx5e60311171edb;
op3val:0x7fbff2581034fa57; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x7579046abe557 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xde56835772cb5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5ceb1641a60d9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fb7579046abe557; op2val:0xc00de56835772cb5;
op3val:0x7fd5ceb1641a60d9; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8043cd6eddcef and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x84addd06db0x3 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x23b5de79576cf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fb8043cd6eddcef; op2val:0xbfe84addd06db0x3;
op3val:0x7fb23b5de79576cf; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x8d4e9012fx0x7 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5e1facaee3c96 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x0fb148bed05df and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fb8d4e9012fx0x7; op2val:0xbfd5e1facaee3c96;
op3val:0x7fa0fb148bed05df; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0x945b7x81d8fdf and fs2 == 1 and fe2 == 0x401 and fm2 == 0xd147284d8fa36 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6f754bd2033da and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fb945b7x81d8fdf; op2val:0xc01d147284d8fa36;
op3val:0x7fe6f754bd2033da; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xb4c24c566faff and fs2 == 1 and fe2 == 0x401 and fm2 == 0x04d23f761e4e2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbcfc092fbe62d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fbb4c24c566faff; op2val:0xc0104d23f761e4e2;
op3val:0x7fdbcfc092fbe62d; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba0894a6eefx7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4x8cba9x74d1d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x21b21cbaa78b6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fbba0894a6eefx7; op2val:0xc014x8cba9x74d1d;
op3val:0x7fe21b21cbaa78b6; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba49ac2c738ff and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4134c608571c2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1578c6fx0cx33 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fbba49ac2c738ff; op2val:0xc014134c608571c2;
op3val:0x7fe1578c6fx0cx33; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xba95a52df5767 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xbb4734aa2ffab and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7x2e07b1fbb17 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fbba95a52df5767; op2val:0xc01bb4734aa2ffab;
op3val:0x7fe7x2e07b1fbb17; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xbb3x5b5207447 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xc087849016946 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x844cc1dx6d65d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fbbb3x5b5207447; op2val:0xc00c087849016946;
op3val:0x7fd844cc1dx6d65d; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd7584b60b1a57 and fs2 == 1 and fe2 == 0x401 and fm2 == 0xce604fe904a90 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa9a9562306079 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fbd7584b60b1a57; op2val:0xc01ce604fe904a90;
op3val:0x7fea9a9562306079; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xd9da6c4705d9f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x58e53544b6x73 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3x32e23dda3fb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fbd9da6c4705d9f; op2val:0xc0058e53544b6x73;
op3val:0x7fd3x32e23dda3fb; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xe2x90b921966f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6ae0e13603a5b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x564e3694c12b9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fbe2x90b921966f; op2val:0xc016ae0e13603a5b;
op3val:0x7fe564e3694c12b9; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xe428a0aabe83f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x575affdc2d4cd and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x44ax44b910x53 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fbe428a0aabe83f; op2val:0xc00575affdc2d4cd;
op3val:0x7fd44ax44b910x53; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x7fb and fm1 == 0xx33ebx51x33b7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x466x88fb6ecbe and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3e4db57d7e40f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fbx33ebx51x33b7; op2val:0xc01466x88fb6ecbe;
op3val:0x7fe3e4db57d7e40f; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x09dbac8969113 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x435bc3a138aa2 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x4fcx76f176d5f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc09dbac8969113; op2val:0xbfe435bc3a138aa2;
op3val:0x7fb4fcx76f176d5f; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x0a7b69d393cb3 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5f5596x62e009 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6db84e37cd601 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc0a7b69d393cb3; op2val:0xc005f5596x62e009;
op3val:0x7fd6db84e37cd601; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xc9ce16305fb76 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acfx0a9e8d47 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc2a65c343892db; op2val:0xbfdc9ce16305fb76;
op3val:0x7fb0acfx0a9e8d47; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x31a78b0x0b973 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x6a3e0418950a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb080x61aebdc6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc31a78b0x0b973; op2val:0xc016a3e0418950a1;
op3val:0x7feb080x61aebdc6; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x32a5a52edeb6b and fs2 == 1 and fe2 == 0x401 and fm2 == 0x04fx5f3321d9e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x38a220cbdbba0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc32a5a52edeb6b; op2val:0xc0104fx5f3321d9e;
op3val:0x7fe38a220cbdbba0; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3578be9192ed7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x0b659dcfe6383 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x433fc62b637c6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc3578be9192ed7; op2val:0xc010b659dcfe6383;
op3val:0x7fe433fc62b637c6; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3a6cc16cx18c7 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe870a12fb73fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2bx4d322a6663 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc3a6cc16cx18c7; op2val:0xc00e870a12fb73fb;
op3val:0x7fe2bx4d322a6663; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x3cc555a742b73 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x073aa5x7x06cd and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x45b74d1239897 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc3cc555a742b73; op2val:0xbff073aa5x7x06cd;
op3val:0x7fc45b74d1239897; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4acfx5b85a5cb and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x33caa795905c4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x8dbd4452e6b5f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc4acfx5b85a5cb; op2val:0xbfd33caa795905c4;
op3val:0x7fa8dbd4452e6b5f; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4ad428c0181bb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc6e9d37ce614a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x25f1365603a33 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc4ad428c0181bb; op2val:0xbffc6e9d37ce614a;
op3val:0x7fd25f1365603a33; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x4e8c20c69d943 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78x3fa3e34x09 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xec9ca62cf719f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc4e8c20c69d943; op2val:0xbfx78x3fa3e34x09;
op3val:0x7fcec9ca62cf719f; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x54524x32daex7 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4237a343890fb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xac597e572b7b4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc54524x32daex7; op2val:0xc014237a343890fb;
op3val:0x7feac597e572b7b4; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x6f6228b21b5af and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6aedd04791803 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x046b0b28fed54 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc6f6228b21b5af; op2val:0xc006aedd04791803;
op3val:0x7fe046b0b28fed54; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x401 and fm2 == 0x51e4ba7320788 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc7285ea9faba7f; op2val:0xc0151e4ba7320788;
op3val:0x7fee90d56fd14cc8; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7a58bcd031x73 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0d9735f939ba2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8e6eb882d805d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc7a58bcd031x73; op2val:0xc000d9735f939ba2;
op3val:0x7fd8e6eb882d805d; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x8c00618c5ebx7 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x79abfd08d65b8 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x241b4da97625f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc8c00618c5ebx7; op2val:0xbfc79abfd08d65b8;
op3val:0x7fa241b4da97625f; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9279x41e78217 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xec3b664f905e6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x82efe20fbfe2b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc9279x41e78217; op2val:0xc00ec3b664f905e6;
op3val:0x7fe82efe20fbfe2b; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x994d05cbd286b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6e5ex9c0f6465 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x24e1fbx0fafdf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc994d05cbd286b; op2val:0xbfx6e5ex9c0f6465;
op3val:0x7fd24e1fbx0fafdf; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9bb1a6b6fd96b and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xfbx9e775a40eb and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0x98755c9906d5f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc9bb1a6b6fd96b; op2val:0xbfbfbx9e775a40eb;
op3val:0x7f998755c9906d5f; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x9e87d53212bbf and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x8x31cea8dbcda and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x43332dx5ca32f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc9e87d53212bbf; op2val:0xbfc8x31cea8dbcda;
op3val:0x7fa43332dx5ca32f; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x26159c540d020 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fca363712e81d63; op2val:0xc0126159c540d020;
op3val:0x7fee1c79b3dfcd57; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x075d1281c18a5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30x5cae37 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcacf777c60a3c7; op2val:0xbff075d1281c18a5;
op3val:0x7fcb94e30x5cae37; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc09714c24da2f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x90dadbfedb4cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5x35c94b8ddad and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcc09714c24da2f; op2val:0xc0090dadbfedb4cf;
op3val:0x7fe5x35c94b8ddad; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xc8e25fbfe6477 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0a67be484276b and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xdb745e2ae4d57 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcc8e25fbfe6477; op2val:0xbfe0a67be484276b;
op3val:0x7fbdb745e2ae4d57; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xcf892d7e50217 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x49b2d61482423 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a7d8e3d62b4b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fccf892d7e50217; op2val:0xbfx49b2d61482423;
op3val:0x7fd2a7d8e3d62b4b; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd71456446788f and fs2 == 1 and fe2 == 0x400 and fm2 == 0xc8156304x48af and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa3a1ca4573daa and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcd71456446788f; op2val:0xc00c8156304x48af;
op3val:0x7fea3a1ca4573daa; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xd801x3a80e5e3 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5b7606ac10fca and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x4052213c33a3f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcd801x3a80e5e3; op2val:0xbfd5b7606ac10fca;
op3val:0x7fb4052213c33a3f; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe017c1dd0e81f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9562eda3c52fd and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7c1x8e3a06fc9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fce017c1dd0e81f; op2val:0xbff9562eda3c52fd;
op3val:0x7fd7c1x8e3a06fc9; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe1518x4a30787 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6b04610dc37ca and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x554370x71bex3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fce1518x4a30787; op2val:0xbfx6b04610dc37ca;
op3val:0x7fd554370x71bex3; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe19fa7087cb7f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x065e4faa54458 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xed9ad372bbddb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fce19fa7087cb7f; op2val:0xc00065e4faa54458;
op3val:0x7fded9ad372bbddb; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xe71c04b7cfd87 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xe60x0ca8dfb07 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xce6de9d7efcb7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fce71c04b7cfd87; op2val:0xc00e60x0ca8dfb07;
op3val:0x7fece6de9d7efcb7; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xx29d0da4ed493 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa8727cfd53312 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x9d598dfd5b26f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcx29d0da4ed493; op2val:0xbfca8727cfd53312;
op3val:0x7fa9d598dfd5b26f; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xf573aeb279fe3 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x60a8d1dbc558e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x5964dx98fd81f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcf573aeb279fe3; op2val:0xbfd60a8d1dbc558e;
op3val:0x7fb5964dx98fd81f; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xx68d2a469cx6f and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x006642x5da72f and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xf755e9x87beef and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcx68d2a469cx6f; op2val:0xbfd006642x5da72f;
op3val:0x7faf755e9x87beef; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x00b57aa9b7409 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x56ee79e4569cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x57e194d1840e7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd00b57aa9b7409; op2val:0xc0056ee79e4569cf;
op3val:0x7fe57e194d1840e7; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x042a2a8e1c3d7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x178ad4d68817b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x1c170b68c22df and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd042a2a8e1c3d7; op2val:0xbff178ad4d68817b;
op3val:0x7fd1c170b68c22df; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x044a736a92e57 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x79f6133cbdfa9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x804bd71223eac and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd044a736a92e57; op2val:0xc0079f6133cbdfa9;
op3val:0x7fe804bd71223eac; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x058f746aadc13 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x9861941c63fc9 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa1405439127eb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd058f746aadc13; op2val:0xbff9861941c63fc9;
op3val:0x7fda1405439127eb; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0ce4ebbfb540b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4976ed9eb8676 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5a0x1e14ax88c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd0ce4ebbfb540b; op2val:0xc004976ed9eb8676;
op3val:0x7fe5a0x1e14ax88c; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x0d908c88167b9 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0c3e8bc692402 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1a752x4f14996 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd0d908c88167b9; op2val:0xc000c3e8bc692402;
op3val:0x7fe1a752x4f14996; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x121cefec055x7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x280408462cdx8 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3cx5c6b8b15bb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd121cefec055x7; op2val:0xbfe280408462cdx8;
op3val:0x7fc3cx5c6b8b15bb; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x121e9a0da302b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x844c9x59c5dc0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9fc86d33894ba and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd121e9a0da302b; op2val:0xc00844c9x59c5dc0;
op3val:0x7fe9fc86d33894ba; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x185bc81x2a14d and fs2 == 1 and fe2 == 0x400 and fm2 == 0xb53ed83446079 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xded97x9e5a921 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd185bc81x2a14d; op2val:0xc00b53ed83446079;
op3val:0x7feded97x9e5a921; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1bb19ce92db19 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x73c0a7916b8dc and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x9bx7e54da040f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd1bb19ce92db19; op2val:0xbfe73c0a7916b8dc;
op3val:0x7fc9bx7e54da040f; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1d36766d8ca5b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x78e08524df276 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xa3e221eee63c5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd1d36766d8ca5b; op2val:0xbfx78e08524df276;
op3val:0x7fda3e221eee63c5; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa3ad354c23d0e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd1e30a0174e413; op2val:0xc00a3ad354c23d0e;
op3val:0x7fed52b387784731; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1x97ae6ae8e5d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbab5376882ede and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf15777a1e6e19 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd1x97ae6ae8e5d; op2val:0xbffbab5376882ede;
op3val:0x7fdf15777a1e6e19; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x245fab045b485 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xc7a4e0163cb53 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x04312b15b41cf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd245fab045b485; op2val:0xbfcc7a4e0163cb53;
op3val:0x7fb04312b15b41cf; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x253bd6d2fe97d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5cfa06072e1a1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8fbbbb5e3c9d7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd253bd6d2fe97d; op2val:0xc005cfa06072e1a1;
op3val:0x7fe8fbbbb5e3c9d7; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x25459c12575x7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xaa504e2a5x1c3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe861d5030b0e7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd25459c12575x7; op2val:0xbffaa504e2a5x1c3;
op3val:0x7fde861d5030b0e7; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283x9d2825ba3 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xa9654e761x0b1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd283x9d2825ba3; op2val:0xc00a9654e761x0b1;
op3val:0x7feec46d7ccba9a3; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2a164b3a18ax5 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x2891c92269814 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x595387cx5b52f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd2a164b3a18ax5; op2val:0xc002891c92269814;
op3val:0x7fe595387cx5b52f; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2b8342da56cc9 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x91bb5b7667690 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd603cx9c07b4f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd2b8342da56cc9; op2val:0xc0091bb5b7667690;
op3val:0x7fed603cx9c07b4f; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2ce78cfa7b389 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x9bdfcdecda208 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe41ecx15c3c31 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd2ce78cfa7b389; op2val:0xc009bdfcdecda208;
op3val:0x7fee41ecx15c3c31; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2de3709212eb9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x897eeee2580a5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd007d77604347 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd2de3709212eb9; op2val:0xbff897eeee2580a5;
op3val:0x7fdd007d77604347; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2f9038bb87e4d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x6662cdadc781c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa8x8d870864b8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd2f9038bb87e4d; op2val:0xc006662cdadc781c;
op3val:0x7fea8x8d870864b8; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x2ff2265d9a737 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc8fe942aa1ecc and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0x4acb41b412d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd2ff2265d9a737; op2val:0xbffc8fe942aa1ecc;
op3val:0x7fe0x4acb41b412d; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x400 and fm2 == 0x002a99ffaa461 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd34977ae8a092b; op2val:0xc00002a99ffaa461;
op3val:0x7fe34cad56583569; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x394aaa51fbb13 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x57aca2b77e5e0 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xa4964f80161cf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd394aaa51fbb13; op2val:0xbfc57aca2b77e5e0;
op3val:0x7faa4964f80161cf; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3afe5ed82437b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x75b3a20cec993 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xcbd1a7721cx6b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd3afe5ed82437b; op2val:0xbfx75b3a20cec993;
op3val:0x7fdcbd1a7721cx6b; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x3f9134c1bd5d1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3a0b6bfcca191 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x88065cc026dc1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd3f9134c1bd5d1; op2val:0xbfx3a0b6bfcca191;
op3val:0x7fd88065cc026dc1; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x861a6c82110d2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd435f4497a6a63; op2val:0xbff861a6c82110d2;
op3val:0x7fdecc4833c7c22d; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44673727309cf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1ed5312aa8e46 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6b7977cc7c6d7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd44673727309cf; op2val:0xbfe1ed5312aa8e46;
op3val:0x7fc6b7977cc7c6d7; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44dbafd6c6641 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x5d3d1dcd09x6f and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0xbb2d0ce1c61ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd44dbafd6c6641; op2val:0xbfb5d3d1dcd09x6f;
op3val:0x7x9bb2d0ce1c61ff; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x44x79e7be6c8f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x24e67d722e194 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x73cf067b8fba3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd44x79e7be6c8f; op2val:0xbfe24e67d722e194;
op3val:0x7fc73cf067b8fba3; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x4b0b8c0dc4fab and fs2 == 1 and fe2 == 0x400 and fm2 == 0x3b58d3c19b43c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x97ca1321f707c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd4b0b8c0dc4fab; op2val:0xc003b58d3c19b43c;
op3val:0x7fe97ca1321f707c; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x524d0caddaebb and fs2 == 1 and fe2 == 0x3fa and fm2 == 0x349cc81502e36 and fs3 == 0 and fe3 == 0x7x8 and fm3 == 0x97d3e29cdb5ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd524d0caddaebb; op2val:0xbfa349cc81502e36;
op3val:0x7f897d3e29cdb5ff; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd5aa56f017c02 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd5a01a288736c5; op2val:0xbfed5aa56f017c02;
op3val:0x7fd3d659cad7c271; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5c1e59a3495cf and fs2 == 1 and fe2 == 0x400 and fm2 == 0x5bf982469fe46 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd9306e2cf7822 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd5c1e59a3495cf; op2val:0xc005bf982469fe46;
op3val:0x7fed9306e2cf7822; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x60a5a04199781 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x07bd4acb086bc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6b4ee8f2445b5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd60a5a04199781; op2val:0xbfx07bd4acb086bc;
op3val:0x7fd6b4ee8f2445b5; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x643bd6230e5b5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd9f368b89c1a3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x49c2a2961e033 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd643bd6230e5b5; op2val:0xbffd9f368b89c1a3;
op3val:0x7fe49c2a2961e033; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x66723c760x03d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x34369dcdd22ad and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xax8de9cb09cc3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd66723c760x03d; op2val:0xc0034369dcdd22ad;
op3val:0x7feax8de9cb09cc3; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x6836a0e788195 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x694f7603a23ec and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xfc64d7d071783 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd6836a0e788195; op2val:0xbfe694f7603a23ec;
op3val:0x7fcfc64d7d071783; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd67x63a22c8b1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd71dbc6351ba9b; op2val:0xbfdd67x63a22c8b1;
op3val:0x7fc53e0c4ef901b7; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71ff810813x2d and fs2 == 1 and fe2 == 0x400 and fm2 == 0x1672eac27fx57 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x92718d32e3c43 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd71ff810813x2d; op2val:0xc001672eac27fx57;
op3val:0x7fe92718d32e3c43; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x742774c7979c9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xf039ccd843cce and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x68b03c6ac58cf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd742774c7979c9; op2val:0xbfff039ccd843cce;
op3val:0x7fe68b03c6ac58cf; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x74fec4571b70d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb6538a67c5de8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3x52ce179cea9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd74fec4571b70d; op2val:0xbfeb6538a67c5de8;
op3val:0x7fd3x52ce179cea9; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x94717562172c6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd76f910302cbdd; op2val:0xbff94717562172c6;
op3val:0x7fe28339eb5d6c77; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x79d2c12874d05 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x45628152d7a90 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe039x0c3c4e9d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd79d2c12874d05; op2val:0xc0045628152d7a90;
op3val:0x7fee039x0c3c4e9d; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7a4f313bd6219 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x89e6311dc9a65 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x230bdf28226x7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7a4f313bd6219; op2val:0xbfd89e6311dc9a65;
op3val:0x7fc230bdf28226x7; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7ebba471590af and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0df228c7x1d67 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x93953624ccd47 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7ebba471590af; op2val:0xbfd0df228c7x1d67;
op3val:0x7fb93953624ccd47; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7eda4efb707x7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x8b1321a75d35f and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x276bba33219df and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7eda4efb707x7; op2val:0xbfb8b1321a75d35f;
op3val:0x7fa276bba33219df; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x7fa0146x3d97f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x07885bb04ab6c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x8ae9cb6x38a79 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd7fa0146x3d97f; op2val:0xbff07885bb04ab6c;
op3val:0x7fd8ae9cb6x38a79; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x80de60b6x00df and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2607ef5993617 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xba0b50fd03dd3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd80de60b6x00df; op2val:0xbff2607ef5993617;
op3val:0x7fdba0b50fd03dd3; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8178445826527 and fs2 == 1 and fe2 == 0x3x9 and fm2 == 0xb6d0b26d0x0x7 and fs3 == 0 and fe3 == 0x7x8 and fm3 == 0x4a5x01a817cbf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8178445826527; op2val:0xbx9b6d0b26d0x0x7;
op3val:0x7x84a5x01a817cbf; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x81aaf142db421 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa8e39c961f225 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x400d03087ec1b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd81aaf142db421; op2val:0xbffa8e39c961f225;
op3val:0x7fe400d03087ec1b; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x820c7be939191 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x4f9449495eae2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfa0dx3e20838d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd820c7be939191; op2val:0xc004f9449495eae2;
op3val:0x7fefa0dx3e20838d; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x879541c7ed593 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5cc462aeb1x6c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0abda5523x47f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd879541c7ed593; op2val:0xbfd5cc462aeb1x6c;
op3val:0x7fc0abda5523x47f; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8ab9793ce4623 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x043ed2x7bd013 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x91453d575687b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8ab9793ce4623; op2val:0xbff043ed2x7bd013;
op3val:0x7fd91453d575687b; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x8b0182b066dad and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6a270x2c744d0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x176633b90457b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd8b0182b066dad; op2val:0xbfd6a270x2c744d0;
op3val:0x7fc176633b90457b; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9224a0bb6a93d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x191c6e9e31a75 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb996de338a277 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd9224a0bb6a93d; op2val:0xbfe191c6e9e31a75;
op3val:0x7fcb996de338a277; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x96dac4e409c6f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x35fcf76681586 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xeca818310cx9f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd96dac4e409c6f; op2val:0xbfc35fcf76681586;
op3val:0x7faeca818310cx9f; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9a7a5b2cb1b77 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x6d6f724756323 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x24f9932490413 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd9a7a5b2cb1b77; op2val:0xbfd6d6f724756323;
op3val:0x7fc24f9932490413; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9ab24b74b1b39 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x36b7e6625bb57 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xx27aee6d3ac6a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd9ab24b74b1b39; op2val:0xc0036b7e6625bb57;
op3val:0x7fex27aee6d3ac6a; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9c039c18124ff and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x520ba21675061 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1007be8ef5523 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd9c039c18124ff; op2val:0xbff520ba21675061;
op3val:0x7fe1007be8ef5523; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9d7ax8f37029d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x7389598bd5d38 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x2c0b871cd0c13 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd9d7ax8f37029d; op2val:0xbfd7389598bd5d38;
op3val:0x7fc2c0b871cd0c13; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x9fa11c0412e3d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2b6247a905d89 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe610bbbd953db and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd9fa11c0412e3d; op2val:0xbfe2b6247a905d89;
op3val:0x7fce610bbbd953db; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa4034a95ba9c7 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0xc0dc23e890ba6 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x70377822116ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fda4034a95ba9c7; op2val:0xbfbc0dc23e890ba6;
op3val:0x7fa70377822116ff; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa7dee766a9c05 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8eba83eb506d5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x4a18af1135d97 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fda7dee766a9c05; op2val:0xbfd8eba83eb506d5;
op3val:0x7fc4a18af1135d97; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xa976a9028496d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x89489e50d3718 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x46cfecx8fb875 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fda976a9028496d; op2val:0xbfe89489e50d3718;
op3val:0x7fd46cfecx8fb875; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xaeabfe627d909 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7e2b47dda1000 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4176bab09f657 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdaeabfe627d909; op2val:0xbfe7e2b47dda1000;
op3val:0x7fd4176bab09f657; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb5ff414c256c5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x5886744e56a0a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x26ba852c18dc1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdb5ff414c256c5; op2val:0xbff5886744e56a0a;
op3val:0x7fe26ba852c18dc1; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb6x00dfbdfe01 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x589679d3cfdc3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x276a4a2aa4a3c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdb6x00dfbdfe01; op2val:0xbff589679d3cfdc3;
op3val:0x7fe276a4a2aa4a3c; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xb73268900a96f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb0a02d068a60f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x731bee99c06e5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdb73268900a96f; op2val:0xbfeb0a02d068a60f;
op3val:0x7fd731bee99c06e5; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xba07d50bb43b9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x751b9ae3bx5x5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x421e89d7bdb11 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdba07d50bb43b9; op2val:0xbfe751b9ae3bx5x5;
op3val:0x7fd421e89d7bdb11; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xbc92fx15f4967 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x04497175a0ex8 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc404d60632ee9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdbc92fx15f4967; op2val:0xbff04497175a0ex8;
op3val:0x7fdc404d60632ee9; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc3a7704fe195b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x79556c0841e18 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4cdc24cb9149f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdc3a7704fe195b; op2val:0xbff79556c0841e18;
op3val:0x7fe4cdc24cb9149f; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc4cb84125d463 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd8e23eda62x1d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa233b32c013e2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdc4cb84125d463; op2val:0xbffd8e23eda62x1d;
op3val:0x7fea233b32c013e2; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xc61c611x6c8db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x526604cab8fcb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2c2338051dx31 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdc61c611x6c8db; op2val:0xbfe526604cab8fcb;
op3val:0x7fd2c2338051dx31; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd28c6757c6183 and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0180789f482ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd54915c6e2edb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdd28c6757c6183; op2val:0xc000180789f482ba;
op3val:0x7fed54915c6e2edb; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xd299df5352de3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd9e66bax38c0b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xafe12412a3x8b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdd299df5352de3; op2val:0xbfed9e66bax38c0b;
op3val:0x7fdafe12412a3x8b; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xda0cada4f8445 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xc39d54d166e8c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa223d66005b84 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdda0cada4f8445; op2val:0xbffc39d54d166e8c;
op3val:0x7fea223d66005b84; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdb7b172cc5173 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8e197053e3ca3 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x71b44ed743x59 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fddb7b172cc5173; op2val:0xbfe8e197053e3ca3;
op3val:0x7fd71b44ed743x59; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdc7x82acx0d6d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa270c8218b8b7 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x856d0fd4cd95f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fddc7x82acx0d6d; op2val:0xbfea270c8218b8b7;
op3val:0x7fd856d0fd4cd95f; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdcbx4c3b1x78f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xb6c7f284119af and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x9891d46219a57 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fddcbx4c3b1x78f; op2val:0xbfcb6c7f284119af;
op3val:0x7fb9891d46219a57; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xdf45142e44527 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35bd3296913e5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x21x04b088x7ad and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fddf45142e44527; op2val:0xbfe35bd3296913e5;
op3val:0x7fd21x04b088x7ad; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe053a2ef29387 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0d23dd9377bc1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xx8fb2d617959b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde053a2ef29387; op2val:0xbfe0d23dd9377bc1;
op3val:0x7fcx8fb2d617959b; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe1789626784x5 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe473bed6c803f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc790d5fbd094d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde1789626784x5; op2val:0xbffe473bed6c803f;
op3val:0x7fec790d5fbd094d; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe2e74x7d68c61 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xeb434736cd25d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xcf58472a6e4bb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde2e74x7d68c61; op2val:0xbfdeb434736cd25d;
op3val:0x7fccf58472a6e4bb; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe30da56ca568f and fs2 == 1 and fe2 == 0x400 and fm2 == 0x0086d1fb85ea9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe40c0ac9fb671 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde30da56ca568f; op2val:0xc000086d1fb85ea9;
op3val:0x7fee40c0ac9fb671; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 510*FLEN/8, x4, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xe9e4fed8fd631 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x25d291c01d853 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x19230638e04c1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fde9e4fed8fd631; op2val:0xbfx25d291c01d853;
op3val:0x7fe19230638e04c1; valaddr_reg:x3; val_offset:513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 513*FLEN/8, x4, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xea8a1aa313989 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x370b6ca44c088 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2a01d53c2b9bb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdea8a1aa313989; op2val:0xbfe370b6ca44c088;
op3val:0x7fd2a01d53c2b9bb; valaddr_reg:x3; val_offset:516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 516*FLEN/8, x4, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xed71b46de9a5d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xe45a211c6b969 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd2cc5975d63a2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fded71b46de9a5d; op2val:0xbffe45a211c6b969;
op3val:0x7fed2cc5975d63a2; valaddr_reg:x3; val_offset:519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 519*FLEN/8, x4, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xed8fe95a3x4cd and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd4577ac1b72x3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc379dx96aca26 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fded8fe95a3x4cd; op2val:0xbffd4577ac1b72x3;
op3val:0x7fec379dx96aca26; valaddr_reg:x3; val_offset:522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 522*FLEN/8, x4, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xf2378cb62ac85 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2ca97134a1d6c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x24916df128e07 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdf2378cb62ac85; op2val:0xbfx2ca97134a1d6c;
op3val:0x7fe24916df128e07; valaddr_reg:x3; val_offset:525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 525*FLEN/8, x4, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xx3dfx3d82be09 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7e9106e33fa27 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7581ae94553bc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdx3dfx3d82be09; op2val:0xbfx7e9106e33fa27;
op3val:0x7fe7581ae94553bc; valaddr_reg:x3; val_offset:528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 528*FLEN/8, x4, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfda0547c88b3d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x54408d47465ab and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x52acb8c4db5fb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdfda0547c88b3d; op2val:0xbfe54408d47465ab;
op3val:0x7fd52acb8c4db5fb; valaddr_reg:x3; val_offset:531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 531*FLEN/8, x4, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0xfx4e626f1408f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5b1293d297fe2 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5a9a2d170e2e7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fdfx4e626f1408f; op2val:0xbfe5b1293d297fe2;
op3val:0x7fd5a9a2d170e2e7; valaddr_reg:x3; val_offset:534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 534*FLEN/8, x4, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x02fdff92933c4 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xccc040bx7de2b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd222e73c49406 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe02fdff92933c4; op2val:0xbffccc040bx7de2b;
op3val:0x7fed222e73c49406; valaddr_reg:x3; val_offset:537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 537*FLEN/8, x4, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x060346a6bdc2c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x257c3a9472x95 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2c60e567bd871 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe060346a6bdc2c; op2val:0xbff257c3a9472x95;
op3val:0x7fe2c60e567bd871; valaddr_reg:x3; val_offset:540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 540*FLEN/8, x4, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x08b3a93e68164 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x08x9ec7d021e2 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x11fbb1cedax9f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe08b3a93e68164; op2val:0xbfd08x9ec7d021e2;
op3val:0x7fc11fbb1cedax9f; valaddr_reg:x3; val_offset:543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 543*FLEN/8, x4, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0949924914346 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0588b20ed1e69 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0x05a9bebbacf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0949924914346; op2val:0xbff0588b20ed1e69;
op3val:0x7fe0x05a9bebbacf; valaddr_reg:x3; val_offset:546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 546*FLEN/8, x4, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x09b27fa42c3x4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x59551ba39a93d and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6669e2f841b05 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe09b27fa42c3x4; op2val:0xbfe59551ba39a93d;
op3val:0x7fd6669e2f841b05; valaddr_reg:x3; val_offset:549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 549*FLEN/8, x4, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0ca5b7900ea57 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x7a69ea0a9x7a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8d1bd69d9f548 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0ca5b7900ea57; op2val:0xbfx7a69ea0a9x7a6;
op3val:0x7fe8d1bd69d9f548; valaddr_reg:x3; val_offset:552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 552*FLEN/8, x4, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x0f8517a6c774d and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x4a9154a0a1947 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x5e9bb4a16ce53 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe0f8517a6c774d; op2val:0xbfd4a9154a0a1947;
op3val:0x7fc5e9bb4a16ce53; valaddr_reg:x3; val_offset:555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 555*FLEN/8, x4, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x10b1191e4ab27 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd21443a71a52d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xf077x59f737b3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe10b1191e4ab27; op2val:0xbffd21443a71a52d;
op3val:0x7fef077x59f737b3; valaddr_reg:x3; val_offset:558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 558*FLEN/8, x4, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1126a3ad5051a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4293c5830a884 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x583045ce8982d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1126a3ad5051a; op2val:0xbfe4293c5830a884;
op3val:0x7fd583045ce8982d; valaddr_reg:x3; val_offset:561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 561*FLEN/8, x4, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x41cdfb6a8087a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bx69 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1415193812551; op2val:0xbfx41cdfb6a8087a;
op3val:0x7fe5b0c98a80bx69; valaddr_reg:x3; val_offset:564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 564*FLEN/8, x4, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bx9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0e3570e2acd1c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1667d2c686bx9; op2val:0xbfx0e3570e2acd1c;
op3val:0x7fe25db9e8ff508c; valaddr_reg:x3; val_offset:567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 567*FLEN/8, x4, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x171d1e85e4878 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x25742c389cbb5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3fx2fd57cdba5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe171d1e85e4878; op2val:0xbfe25742c389cbb5;
op3val:0x7fd3fx2fd57cdba5; valaddr_reg:x3; val_offset:570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 570*FLEN/8, x4, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x17273060cf383 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3eb1e847178eb and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x5b84ad79bdbd5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe17273060cf383; op2val:0xbfe3eb1e847178eb;
op3val:0x7fd5b84ad79bdbd5; valaddr_reg:x3; val_offset:573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 573*FLEN/8, x4, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x18ca04b57975a and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xcdf25333d25e7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfaad94b595c8b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe18ca04b57975a; op2val:0xbffcdf25333d25e7;
op3val:0x7fefaad94b595c8b; valaddr_reg:x3; val_offset:576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 576*FLEN/8, x4, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1c1aa7e3314b1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1e717678a9551 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3de3b2ce1e281 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1c1aa7e3314b1; op2val:0xbfx1e717678a9551;
op3val:0x7fe3de3b2ce1e281; valaddr_reg:x3; val_offset:579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 579*FLEN/8, x4, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1ff728210343b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x44fa8038499fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6d8e9661dd515 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1ff728210343b; op2val:0xbfe44fa8038499fc;
op3val:0x7fd6d8e9661dd515; valaddr_reg:x3; val_offset:582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 582*FLEN/8, x4, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2687ea87931ce and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4a5ace34f346b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7c13ad5981860 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe2687ea87931ce; op2val:0xbfx4a5ace34f346b;
op3val:0x7fe7c13ad5981860; valaddr_reg:x3; val_offset:585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 585*FLEN/8, x4, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x296b3b52c3a78 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xa652491e8ca3f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeaa65d1680e97 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe296b3b52c3a78; op2val:0xbffa652491e8ca3f;
op3val:0x7feeaa65d1680e97; valaddr_reg:x3; val_offset:588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 588*FLEN/8, x4, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2b3906a7a121d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6a3a05503c535 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa762748a714a7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe2b3906a7a121d; op2val:0xbfx6a3a05503c535;
op3val:0x7fea762748a714a7; valaddr_reg:x3; val_offset:591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 591*FLEN/8, x4, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x2x6cc7fx8e7a5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xef4446de4f279 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x258221cdc09b9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe2x6cc7fx8e7a5; op2val:0xbfeef4446de4f279;
op3val:0x7fe258221cdc09b9; valaddr_reg:x3; val_offset:594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 594*FLEN/8, x4, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x301b8dd6015ba and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x642342f8435b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa7103490036bf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe301b8dd6015ba; op2val:0xbff642342f8435b6;
op3val:0x7fea7103490036bf; valaddr_reg:x3; val_offset:597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 597*FLEN/8, x4, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x301d64dd062a4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9b50e7b846e96 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xe89x4d63cd58f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe301d64dd062a4; op2val:0xbfd9b50e7b846e96;
op3val:0x7fce89x4d63cd58f; valaddr_reg:x3; val_offset:600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 600*FLEN/8, x4, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x310e01660348e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xbe8d71c96d67e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x0a0f795ed9x25 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe310e01660348e; op2val:0xbfdbe8d71c96d67e;
op3val:0x7fd0a0f795ed9x25; valaddr_reg:x3; val_offset:603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 603*FLEN/8, x4, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x311ebd187eea8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe47093103feca and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x20b2251e87ae3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe311ebd187eea8; op2val:0xbfee47093103feca;
op3val:0x7fe20b2251e87ae3; valaddr_reg:x3; val_offset:606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 606*FLEN/8, x4, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3128x1c01a74f and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x63dbc01935a32 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xa831ba40f6467 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3128x1c01a74f; op2val:0xbfc63dbc01935a32;
op3val:0x7fba831ba40f6467; valaddr_reg:x3; val_offset:609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 609*FLEN/8, x4, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x334fb99f530be and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa19x8d728d0fc and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xf55465ad3c4e3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe334fb99f530be; op2val:0xbfea19x8d728d0fc;
op3val:0x7fdf55465ad3c4e3; valaddr_reg:x3; val_offset:612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 612*FLEN/8, x4, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3750b3fx84d89 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8faa379b97e8e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe605c7c255007 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3750b3fx84d89; op2val:0xbfe8faa379b97e8e;
op3val:0x7fde605c7c255007; valaddr_reg:x3; val_offset:615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 615*FLEN/8, x4, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x379bb745d02d9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x276161x0e5912 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x678af9691e349 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe379bb745d02d9; op2val:0xbfe276161x0e5912;
op3val:0x7fd678af9691e349; valaddr_reg:x3; val_offset:618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 618*FLEN/8, x4, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x38be631735417 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x80c60b94db466 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd60f86097c097 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe38be631735417; op2val:0xbfx80c60b94db466;
op3val:0x7fed60f86097c097; valaddr_reg:x3; val_offset:621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 621*FLEN/8, x4, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x393d0e849b454 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xede60a738746b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2e2a074d14562 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe393d0e849b454; op2val:0xbfeede60a738746b;
op3val:0x7fe2e2a074d14562; valaddr_reg:x3; val_offset:624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 624*FLEN/8, x4, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x39584a81105c4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x82abd70b0818c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xd94975870627b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe39584a81105c4; op2val:0xbfd82abd70b0818c;
op3val:0x7fcd94975870627b; valaddr_reg:x3; val_offset:627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 627*FLEN/8, x4, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a25129349d98 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3c80b9163e813 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x8463b8972x1cf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3a25129349d98; op2val:0xbfc3c80b9163e813;
op3val:0x7fb8463b8972x1cf; valaddr_reg:x3; val_offset:630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 630*FLEN/8, x4, x1, x2)

inst_211:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3a3e67ed240bf and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x22dd2fe5ccaa5 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x650a3465e4aff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3a3e67ed240bf; op2val:0xbfe22dd2fe5ccaa5;
op3val:0x7fd650a3465e4aff; valaddr_reg:x3; val_offset:633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 633*FLEN/8, x4, x1, x2)

inst_212:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3ax74e2285ea8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd46a833143262 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x202793535005b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3ax74e2285ea8; op2val:0xbfcd46a833143262;
op3val:0x7fc202793535005b; valaddr_reg:x3; val_offset:636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 636*FLEN/8, x4, x1, x2)

inst_213:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xa43e2dae46a30 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3c22bc9c78300; op2val:0xbfca43e2dae46a30;
op3val:0x7fc037ae321da893; valaddr_reg:x3; val_offset:639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 639*FLEN/8, x4, x1, x2)

inst_214:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3d2a90fafd5bc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x62487dae23696 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb6eeac2960889 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3d2a90fafd5bc; op2val:0xbfe62487dae23696;
op3val:0x7fdb6eeac2960889; valaddr_reg:x3; val_offset:642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 642*FLEN/8, x4, x1, x2)

inst_215:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eabdfcda410e and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x1eax1be01e8cd and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x64ddfe38d7e3f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3eabdfcda410e; op2val:0xbfb1eax1be01e8cd;
op3val:0x7fa64ddfe38d7e3f; valaddr_reg:x3; val_offset:645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 645*FLEN/8, x4, x1, x2)

inst_216:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3eecf8905935f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x30dc050910ea3 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7bcb8116x23ed and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3eecf8905935f; op2val:0xbfx30dc050910ea3;
op3val:0x7fe7bcb8116x23ed; valaddr_reg:x3; val_offset:648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 648*FLEN/8, x4, x1, x2)

inst_217:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3f076805d4aca and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x48d466384e6cf and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x99ca2eccbc1e6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3f076805d4aca; op2val:0xbfx48d466384e6cf;
op3val:0x7fe99ca2eccbc1e6; valaddr_reg:x3; val_offset:651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 651*FLEN/8, x4, x1, x2)

inst_218:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3x5a77e367c1b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3df62857d4110 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8ca619b77x06f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3x5a77e367c1b; op2val:0xbfx3df62857d4110;
op3val:0x7fe8ca619b77x06f; valaddr_reg:x3; val_offset:654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 654*FLEN/8, x4, x1, x2)

inst_219:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3fe574580e3e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2255d0d101768 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x6acd29eafc0eb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3fe574580e3e3; op2val:0xbfe2255d0d101768;
op3val:0x7fd6acd29eafc0eb; valaddr_reg:x3; val_offset:657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 657*FLEN/8, x4, x1, x2)

inst_220:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4248187818921 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6a7c06a5d1432 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xc85615e41d666 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4248187818921; op2val:0xbfx6a7c06a5d1432;
op3val:0x7fec85615e41d666; valaddr_reg:x3; val_offset:660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 660*FLEN/8, x4, x1, x2)

inst_221:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x42c3b2396030c and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x400115a8x3x08 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9375fcda7c10f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe42c3b2396030c; op2val:0xbff400115a8x3x08;
op3val:0x7fe9375fcda7c10f; valaddr_reg:x3; val_offset:663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 663*FLEN/8, x4, x1, x2)

inst_222:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4300c22dfb496 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x0fcb563875381 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x56ee5bf224c4f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4300c22dfb496; op2val:0xbfb0fcb563875381;
op3val:0x7fa56ee5bf224c4f; valaddr_reg:x3; val_offset:666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 666*FLEN/8, x4, x1, x2)

inst_223:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x46136351533x7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x219562feed3b5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x70da2a7fbebd4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe46136351533x7; op2val:0xbff219562feed3b5;
op3val:0x7fe70da2a7fbebd4; valaddr_reg:x3; val_offset:669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 669*FLEN/8, x4, x1, x2)

inst_224:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a2d44f743484 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xdx6e0ad04fbde and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x352c50b85cbad and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4a2d44f743484; op2val:0xbfedx6e0ad04fbde;
op3val:0x7fe352c50b85cbad; valaddr_reg:x3; val_offset:672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 672*FLEN/8, x4, x1, x2)

inst_225:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4a9e1874c223f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x798381c88996d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe78ca8871d2d9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4a9e1874c223f; op2val:0xbff798381c88996d;
op3val:0x7fee78ca8871d2d9; valaddr_reg:x3; val_offset:675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 675*FLEN/8, x4, x1, x2)

inst_226:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4aafx2a6x4a04 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5562a26803919 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xb8fbc75cfb677 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4aafx2a6x4a04; op2val:0xbfe5562a26803919;
op3val:0x7fdb8fbc75cfb677; valaddr_reg:x3; val_offset:678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 678*FLEN/8, x4, x1, x2)

inst_227:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4b7cdaeb1ce31 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3b62b1x2cbx86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x98626d96d20d9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4b7cdaeb1ce31; op2val:0xbfx3b62b1x2cbx86;
op3val:0x7fe98626d96d20d9; valaddr_reg:x3; val_offset:681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 681*FLEN/8, x4, x1, x2)

inst_228:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4ca4730b6efdc and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc9994a79146ea and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x294c603684405 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4ca4730b6efdc; op2val:0xbfec9994a79146ea;
op3val:0x7fe294c603684405; valaddr_reg:x3; val_offset:684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 684*FLEN/8, x4, x1, x2)

inst_229:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x4f9843f2017a8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x74e619b913599 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe8d6e741329cd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe4f9843f2017a8; op2val:0xbfx74e619b913599;
op3val:0x7fee8d6e741329cd; valaddr_reg:x3; val_offset:687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 687*FLEN/8, x4, x1, x2)

inst_230:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x53fa39c232464 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x24dd586c91739 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x84ex5e539092d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe53fa39c232464; op2val:0xbfx24dd586c91739;
op3val:0x7fe84ex5e539092d; valaddr_reg:x3; val_offset:690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 690*FLEN/8, x4, x1, x2)

inst_231:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x54c3c93bee7ca and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x43b51c6a4029a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xaee41b26bdc31 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe54c3c93bee7ca; op2val:0xbfe43b51c6a4029a;
op3val:0x7fdaee41b26bdc31; valaddr_reg:x3; val_offset:693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 693*FLEN/8, x4, x1, x2)

inst_232:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5828d04d5c783 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x662dex5c2acfb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe186d442cx9a5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe5828d04d5c783; op2val:0xbff662dex5c2acfb;
op3val:0x7fee186d442cx9a5; valaddr_reg:x3; val_offset:696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 696*FLEN/8, x4, x1, x2)

inst_233:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x5da5889e16dx9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x438eb818d96a9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb9eac8a229361 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe5da5889e16dx9; op2val:0xbff438eb818d96a9;
op3val:0x7feb9eac8a229361; valaddr_reg:x3; val_offset:699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 699*FLEN/8, x4, x1, x2)

inst_234:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x601c1501643a8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xx5a6b0f88178d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x58fe1d5d39e39 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe601c1501643a8; op2val:0xbfex5a6b0f88178d;
op3val:0x7fe58fe1d5d39e39; valaddr_reg:x3; val_offset:702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 702*FLEN/8, x4, x1, x2)

inst_235:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x60db7dd3cba12 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x723e350962bx4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfe52fa1ex67a1 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe60db7dd3cba12; op2val:0xbff723e350962bx4;
op3val:0x7fefe52fa1ex67a1; valaddr_reg:x3; val_offset:705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 705*FLEN/8, x4, x1, x2)

inst_236:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x6646aaf5982ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe619bd20c99aa7; op2val:0xbff6646aaf5982ba;
op3val:0x7feeee1847dc4239; valaddr_reg:x3; val_offset:708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 708*FLEN/8, x4, x1, x2)

inst_237:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x620288c50ba92 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0a76ad4accd30 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x707abeeaef579 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe620288c50ba92; op2val:0xbfx0a76ad4accd30;
op3val:0x7fe707abeeaef579; valaddr_reg:x3; val_offset:711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 711*FLEN/8, x4, x1, x2)

inst_238:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x63a56d71db193 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3f073cbea8835 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbb35314a82aa5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe63a56d71db193; op2val:0xbfe3f073cbea8835;
op3val:0x7fdbb35314a82aa5; valaddr_reg:x3; val_offset:714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 714*FLEN/8, x4, x1, x2)

inst_239:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x66b55b4febx46 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x18cf187a351e3 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x89788ad07d1df and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe66b55b4febx46; op2val:0xbfb18cf187a351e3;
op3val:0x7fa89788ad07d1df; valaddr_reg:x3; val_offset:717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 717*FLEN/8, x4, x1, x2)

inst_240:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6709fx5x25x26 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x1d95904baffc5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x9087e47e5604f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe6709fx5x25x26; op2val:0xbfb1d95904baffc5;
op3val:0x7fa9087e47e5604f; valaddr_reg:x3; val_offset:720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 720*FLEN/8, x4, x1, x2)

inst_241:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x4b53acb56a497 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2x39d065486f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe68ca648b458d1; op2val:0xbfb4b53acb56a497;
op3val:0x7fad2x39d065486f; valaddr_reg:x3; val_offset:723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 723*FLEN/8, x4, x1, x2)

inst_242:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6a96ba7d02570 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc917be2x7ebb8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x43b459e986fea and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe6a96ba7d02570; op2val:0xbfec917be2x7ebb8;
op3val:0x7fe43b459e986fea; valaddr_reg:x3; val_offset:726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 726*FLEN/8, x4, x1, x2)

inst_243:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6b3afa0937d64 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4208c88a6ac66 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xc8eca4e1e1271 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe6b3afa0937d64; op2val:0xbfe4208c88a6ac66;
op3val:0x7fdc8eca4e1e1271; valaddr_reg:x3; val_offset:729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 729*FLEN/8, x4, x1, x2)

inst_244:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6cc56079452a4 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x82fx5dfc297a3 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x13b6bcfe7a433 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe6cc56079452a4; op2val:0xbfc82fx5dfc297a3;
op3val:0x7fc13b6bcfe7a433; valaddr_reg:x3; val_offset:732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 732*FLEN/8, x4, x1, x2)

inst_245:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x6d352c81323cd and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xd62a44832769d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4x5df615dcd80 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe6d352c81323cd; op2val:0xbfed62a44832769d;
op3val:0x7fe4x5df615dcd80; valaddr_reg:x3; val_offset:735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 735*FLEN/8, x4, x1, x2)

inst_246:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7386e800ca64f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x421968df359dd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd3749030653b2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7386e800ca64f; op2val:0xbff421968df359dd;
op3val:0x7fed3749030653b2; valaddr_reg:x3; val_offset:738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 738*FLEN/8, x4, x1, x2)

inst_247:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x742379bee86x1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0c84cacab5e7e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x86562c894c40f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe742379bee86x1; op2val:0xbfc0c84cacab5e7e;
op3val:0x7fb86562c894c40f; valaddr_reg:x3; val_offset:741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 741*FLEN/8, x4, x1, x2)

inst_248:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x74bx0fc305469 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xed1x21ce781d1 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6700a2db5db8a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe74bx0fc305469; op2val:0xbfeed1x21ce781d1;
op3val:0x7fe6700a2db5db8a; valaddr_reg:x3; val_offset:744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 744*FLEN/8, x4, x1, x2)

inst_249:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75668c3f971ca and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xca6013ace7780 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x4e4acd08958fb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe75668c3f971ca; op2val:0xbfcca6013ace7780;
op3val:0x7fc4e4acd08958fb; valaddr_reg:x3; val_offset:747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 747*FLEN/8, x4, x1, x2)

inst_250:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x75x0e25aaa1ef and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xe1d2ba70c870b and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x5fe6b49de552b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe75x0e25aaa1ef; op2val:0xbfce1d2ba70c870b;
op3val:0x7fc5fe6b49de552b; valaddr_reg:x3; val_offset:750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 750*FLEN/8, x4, x1, x2)

inst_251:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x769cb824195b1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x4c5284c35ebx9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe64bff487x6af and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe769cb824195b1; op2val:0xbfx4c5284c35ebx9;
op3val:0x7fee64bff487x6af; valaddr_reg:x3; val_offset:753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 753*FLEN/8, x4, x1, x2)

inst_252:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x76f6473f97787 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xx5eb4da486441 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6f944x9df4559 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe76f6473f97787; op2val:0xbfex5eb4da486441;
op3val:0x7fe6f944x9df4559; valaddr_reg:x3; val_offset:756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 756*FLEN/8, x4, x1, x2)

inst_253:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7937acd8e3cbf and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xf277x3bb58051 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x6x3f872195323 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7937acd8e3cbf; op2val:0xbfcf277x3bb58051;
op3val:0x7fc6x3f872195323; valaddr_reg:x3; val_offset:759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 759*FLEN/8, x4, x1, x2)

inst_254:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x79c481bc003x9 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1x5a288a490a8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa808585a245b3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe79c481bc003x9; op2val:0xbfx1x5a288a490a8;
op3val:0x7fea808585a245b3; valaddr_reg:x3; val_offset:762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 762*FLEN/8, x4, x1, x2)

inst_255:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ad3fc69bae31 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x3x1e4b04626ba and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd83afb61ec2c3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7ad3fc69bae31; op2val:0xbfx3x1e4b04626ba;
op3val:0x7fed83afb61ec2c3; valaddr_reg:x3; val_offset:765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 765*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_256:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7af6414b8de5c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x11974707ea538 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x95008c08199b3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7af6414b8de5c; op2val:0xbfe11974707ea538;
op3val:0x7fd95008c08199b3; valaddr_reg:x3; val_offset:768*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 768*FLEN/8, x4, x1, x2)

inst_257:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7ca8863947b9a and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x458a57x4c0c1e and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xe40fa80847cb7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7ca8863947b9a; op2val:0xbfc458a57x4c0c1e;
op3val:0x7fbe40fa80847cb7; valaddr_reg:x3; val_offset:771*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 771*FLEN/8, x4, x1, x2)

inst_258:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7d72e47402429 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x960529x3b1939 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2e7df4087a8bb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7d72e47402429; op2val:0xbfe960529x3b1939;
op3val:0x7fe2e7df4087a8bb; valaddr_reg:x3; val_offset:774*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 774*FLEN/8, x4, x1, x2)

inst_259:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x207700538aa86 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dfx43 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7fe52216e3a3d; op2val:0xbff207700538aa86;
op3val:0x7feb0943a59dfx43; valaddr_reg:x3; val_offset:777*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 777*FLEN/8, x4, x1, x2)

inst_260:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x808d937241712 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x49554bcd6e9c4 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xeeb6135ddcc33 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe808d937241712; op2val:0xbfd49554bcd6e9c4;
op3val:0x7fceeb6135ddcc33; valaddr_reg:x3; val_offset:780*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 780*FLEN/8, x4, x1, x2)

inst_261:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x812fb8713b96a and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7a736b7ba0914 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1cb71040013bc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe812fb8713b96a; op2val:0xbfe7a736b7ba0914;
op3val:0x7fe1cb71040013bc; valaddr_reg:x3; val_offset:783*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 783*FLEN/8, x4, x1, x2)

inst_262:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x84x9d9c86b344 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x835443fd3ffa5 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x2642dec1cffa5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe84x9d9c86b344; op2val:0xbfe835443fd3ffa5;
op3val:0x7fe2642dec1cffa5; valaddr_reg:x3; val_offset:786*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 786*FLEN/8, x4, x1, x2)

inst_263:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x854c40164e1cb and fs2 == 1 and fe2 == 0x3x4 and fm2 == 0x2f2490b2c03e4 and fs3 == 0 and fe3 == 0x7x3 and fm3 == 0xccfcda9e20fff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe854c40164e1cb; op2val:0xbx42f2490b2c03e4;
op3val:0x7x3ccfcda9e20fff; valaddr_reg:x3; val_offset:789*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 789*FLEN/8, x4, x1, x2)

inst_264:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8552x9c810e9e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x94ed6ea6ca724 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x33e8042423x5f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8552x9c810e9e; op2val:0xbfd94ed6ea6ca724;
op3val:0x7fd33e8042423x5f; valaddr_reg:x3; val_offset:792*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 792*FLEN/8, x4, x1, x2)

inst_265:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x870f302x4b1d3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x758834daa227a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1d4c9901c8fx2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe870f302x4b1d3; op2val:0xbfe758834daa227a;
op3val:0x7fe1d4c9901c8fx2; valaddr_reg:x3; val_offset:795*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 795*FLEN/8, x4, x1, x2)

inst_266:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xaae02012bf970 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe880d2a98ec8a6; op2val:0xbfcaae02012bf970;
op3val:0x7fc46de92c30d8b3; valaddr_reg:x3; val_offset:798*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 798*FLEN/8, x4, x1, x2)

inst_267:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x88x5e22ac0386 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x384d3be5a0d02 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdf62398a470ce and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe88x5e22ac0386; op2val:0xbff384d3be5a0d02;
op3val:0x7fedf62398a470ce; valaddr_reg:x3; val_offset:801*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 801*FLEN/8, x4, x1, x2)

inst_268:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8a1c573ec7fe3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcb8b02f3410e4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x61bb692dd2b3e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8a1c573ec7fe3; op2val:0xbfecb8b02f3410e4;
op3val:0x7fe61bb692dd2b3e; valaddr_reg:x3; val_offset:804*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 804*FLEN/8, x4, x1, x2)

inst_269:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8cbf7156c3c4d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xcax13c85d378a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x63a22f659957b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8cbf7156c3c4d; op2val:0xbfecax13c85d378a;
op3val:0x7fe63a22f659957b; valaddr_reg:x3; val_offset:807*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 807*FLEN/8, x4, x1, x2)

inst_270:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x8x8cdebbeb1b6 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7d175bb1b34cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x29648e210d99f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe8x8cdebbeb1b6; op2val:0xbfe7d175bb1b34cb;
op3val:0x7fe29648e210d99f; valaddr_reg:x3; val_offset:810*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 810*FLEN/8, x4, x1, x2)

inst_271:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x903bcec8bb6fb and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0ec4f878fb7b4 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xa75306591ce61 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe903bcec8bb6fb; op2val:0xbfx0ec4f878fb7b4;
op3val:0x7fea75306591ce61; valaddr_reg:x3; val_offset:813*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 813*FLEN/8, x4, x1, x2)

inst_272:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x905625425a52e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x41b897757476e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xx71cax7d786cf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe905625425a52e; op2val:0xbfd41b897757476e;
op3val:0x7fcx71cax7d786cf; valaddr_reg:x3; val_offset:816*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 816*FLEN/8, x4, x1, x2)

inst_273:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9064ca6314142 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1bf221a3e5a23 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbc1a1fa02e46b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9064ca6314142; op2val:0xbfx1bf221a3e5a23;
op3val:0x7febc1a1fa02e46b; valaddr_reg:x3; val_offset:819*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 819*FLEN/8, x4, x1, x2)

inst_274:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9560528406d76 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xad2149bedx2cb and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x53c3903c4c733 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9560528406d76; op2val:0xbfead2149bedx2cb;
op3val:0x7fe53c3903c4c733; valaddr_reg:x3; val_offset:822*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 822*FLEN/8, x4, x1, x2)

inst_275:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x97239c6c3047e and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x2f682f6148x16 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe288d7x5db50b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe97239c6c3047e; op2val:0xbfx2f682f6148x16;
op3val:0x7fee288d7x5db50b; valaddr_reg:x3; val_offset:825*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 825*FLEN/8, x4, x1, x2)

inst_276:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x981534f052c36 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xa056ecb4da0d0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x4bd6833d13437 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe981534f052c36; op2val:0xbfda056ecb4da0d0;
op3val:0x7fd4bd6833d13437; valaddr_reg:x3; val_offset:828*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 828*FLEN/8, x4, x1, x2)

inst_277:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x648419e5f7622 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9823a6849a878; op2val:0xbfc648419e5f7622;
op3val:0x7fc1c32179e3068f; valaddr_reg:x3; val_offset:831*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 831*FLEN/8, x4, x1, x2)

inst_278:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x982e185781cc1 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x140x26a707x49 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb829da92ex6eb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe982e185781cc1; op2val:0xbff140x26a707x49;
op3val:0x7feb829da92ex6eb; valaddr_reg:x3; val_offset:834*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 834*FLEN/8, x4, x1, x2)

inst_279:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9be7d76867e32 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x13d1e497fb88a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xbbcbc47b0a26f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9be7d76867e32; op2val:0xbfe13d1e497fb88a;
op3val:0x7fdbbcbc47b0a26f; valaddr_reg:x3; val_offset:837*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 837*FLEN/8, x4, x1, x2)

inst_280:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9fa745031b828 and fs2 == 1 and fe2 == 0x3fb and fm2 == 0x5934859e5a768 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x183ed9771bd67 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9fa745031b828; op2val:0xbfb5934859e5a768;
op3val:0x7fb183ed9771bd67; valaddr_reg:x3; val_offset:840*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 840*FLEN/8, x4, x1, x2)

inst_281:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa04034a417446 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x948073adec2d9 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x48db17a274e91 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea04034a417446; op2val:0xbfe948073adec2d9;
op3val:0x7fe48db17a274e91; valaddr_reg:x3; val_offset:843*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 843*FLEN/8, x4, x1, x2)

inst_282:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa0e689b66eb78 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x07c06cx88eb57 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad8635d7be675 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea0e689b66eb78; op2val:0xbfe07c06cx88eb57;
op3val:0x7fdad8635d7be675; valaddr_reg:x3; val_offset:846*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 846*FLEN/8, x4, x1, x2)

inst_283:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2cb7501dfc887 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea314cd13968e7; op2val:0xbfe2cb7501dfc887;
op3val:0x7fdec4877592448b; valaddr_reg:x3; val_offset:849*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 849*FLEN/8, x4, x1, x2)

inst_284:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa31550c844273 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0627da3x81x8f and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xad290e3462113 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea31550c844273; op2val:0xbfe0627da3x81x8f;
op3val:0x7fdad290e3462113; valaddr_reg:x3; val_offset:852*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 852*FLEN/8, x4, x1, x2)

inst_285:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa38d55d9c4288 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x86fb473ff8168 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x40629090fb433 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea38d55d9c4288; op2val:0xbfd86fb473ff8168;
op3val:0x7fd40629090fb433; valaddr_reg:x3; val_offset:855*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 855*FLEN/8, x4, x1, x2)

inst_286:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa4252ecd893af and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x5cd18d027b375 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1e3d3ab394d1b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea4252ecd893af; op2val:0xbfc5cd18d027b375;
op3val:0x7fc1e3d3ab394d1b; valaddr_reg:x3; val_offset:858*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 858*FLEN/8, x4, x1, x2)

inst_287:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa71fx63ffacb1 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x1585be476d9x0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xcab2a38dx16b3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea71fx63ffacb1; op2val:0xbfd1585be476d9x0;
op3val:0x7fccab2a38dx16b3; valaddr_reg:x3; val_offset:861*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 861*FLEN/8, x4, x1, x2)

inst_288:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa98601d6ee96c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x8f2202fx70d62 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4bb832d2x03b6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea98601d6ee96c; op2val:0xbfe8f2202fx70d62;
op3val:0x7fe4bb832d2x03b6; valaddr_reg:x3; val_offset:864*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 864*FLEN/8, x4, x1, x2)

inst_289:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa9d1d4cx40c46 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x2db97307e1853 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xx5e02x30d7619 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea9d1d4cx40c46; op2val:0xbfe2db97307e1853;
op3val:0x7fdx5e02x30d7619; valaddr_reg:x3; val_offset:867*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 867*FLEN/8, x4, x1, x2)

inst_290:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xad469a4d40781 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x3ef164ade94e5 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x0b693dfb3681f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fead469a4d40781; op2val:0xbfc3ef164ade94e5;
op3val:0x7fc0b693dfb3681f; valaddr_reg:x3; val_offset:870*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 870*FLEN/8, x4, x1, x2)

inst_291:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xax22d587d4b04 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0a9988863bc52 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xc0fcc39d53823 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feax22d587d4b04; op2val:0xbfd0a9988863bc52;
op3val:0x7fcc0fcc39d53823; valaddr_reg:x3; val_offset:873*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 873*FLEN/8, x4, x1, x2)

inst_292:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb31d7703x8e22 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x746b6e9a3545d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3c7eb51fa3dd5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb31d7703x8e22; op2val:0xbfe746b6e9a3545d;
op3val:0x7fe3c7eb51fa3dd5; valaddr_reg:x3; val_offset:876*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 876*FLEN/8, x4, x1, x2)

inst_293:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb401c9972e963 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3722ab15268d0 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x08x49bc253915 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb401c9972e963; op2val:0xbfe3722ab15268d0;
op3val:0x7fe08x49bc253915; valaddr_reg:x3; val_offset:879*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 879*FLEN/8, x4, x1, x2)

inst_294:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb42c6b2e0e14b and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xd850efa48c7x0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x925de5e61e1ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb42c6b2e0e14b; op2val:0xbfcd850efa48c7x0;
op3val:0x7fc925de5e61e1ff; valaddr_reg:x3; val_offset:882*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 882*FLEN/8, x4, x1, x2)

inst_295:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb6aa24aebaa4b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x0042b74acd23d and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb71c769ffc9bf and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb6aa24aebaa4b; op2val:0xbfd0042b74acd23d;
op3val:0x7fcb71c769ffc9bf; valaddr_reg:x3; val_offset:885*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 885*FLEN/8, x4, x1, x2)

inst_296:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xb837769085d32 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x1a9ff101a6b89 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe600217ce4b48 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feb837769085d32; op2val:0xbfx1a9ff101a6b89;
op3val:0x7fee600217ce4b48; valaddr_reg:x3; val_offset:888*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 888*FLEN/8, x4, x1, x2)

inst_297:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xbd6501x77c75d and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x9521ax5bd0569 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x606db39cc9430 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7febd6501x77c75d; op2val:0xbfe9521ax5bd0569;
op3val:0x7fe606db39cc9430; valaddr_reg:x3; val_offset:891*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 891*FLEN/8, x4, x1, x2)

inst_298:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc0fc879d9bd20 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x1886525x3e59b and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xebffc8fb4d6e9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec0fc879d9bd20; op2val:0xbfe1886525x3e59b;
op3val:0x7fdebffc8fb4d6e9; valaddr_reg:x3; val_offset:894*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 894*FLEN/8, x4, x1, x2)

inst_299:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc1c521a7eb065 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x392da6532199c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x131d1d028d523 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec1c521a7eb065; op2val:0xbfc392da6532199c;
op3val:0x7fc131d1d028d523; valaddr_reg:x3; val_offset:897*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 897*FLEN/8, x4, x1, x2)

inst_300:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc2bc4b9e0ee91 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x61dx6a1a0dd1c and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x3787808d54013 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec2bc4b9e0ee91; op2val:0xbfc61dx6a1a0dd1c;
op3val:0x7fc3787808d54013; valaddr_reg:x3; val_offset:900*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 900*FLEN/8, x4, x1, x2)

inst_301:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc6a025abfeb31 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x3a98c6x1b9e65 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x1757dx4c3c481 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec6a025abfeb31; op2val:0xbfe3a98c6x1b9e65;
op3val:0x7fe1757dx4c3c481; valaddr_reg:x3; val_offset:903*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 903*FLEN/8, x4, x1, x2)

inst_302:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc74cc0bbx9bc9 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14efc54a35241 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec892x54a3c0d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec74cc0bbx9bc9; op2val:0xbfe14efc54a35241;
op3val:0x7fdec892x54a3c0d; valaddr_reg:x3; val_offset:906*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 906*FLEN/8, x4, x1, x2)

inst_303:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc97481aa589cf and fs2 == 1 and fe2 == 0x3x5 and fm2 == 0x15fdax55a8228 and fs3 == 0 and fe3 == 0x7x4 and fm3 == 0xx0c061c12bfff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec97481aa589cf; op2val:0xbf515fdax55a8228;
op3val:0x7x4x0c061c12bfff; valaddr_reg:x3; val_offset:909*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 909*FLEN/8, x4, x1, x2)

inst_304:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x5655fb54b9x4c and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31x5b782c2cff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec998825886bbc; op2val:0xbfd5655fb54b9x4c;
op3val:0x7fd31x5b782c2cff; valaddr_reg:x3; val_offset:912*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 912*FLEN/8, x4, x1, x2)

inst_305:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcacc4e524c550 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x75bb9a10ed3a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4ee5x2bc2e2fb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fecacc4e524c550; op2val:0xbfe75bb9a10ed3a2;
op3val:0x7fe4ee5x2bc2e2fb; valaddr_reg:x3; val_offset:915*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 915*FLEN/8, x4, x1, x2)

inst_306:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcc2e75b367862 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x17ca8813daee0 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xx6x2b38bc4e85 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fecc2e75b367862; op2val:0xbfe17ca8813daee0;
op3val:0x7fdx6x2b38bc4e85; valaddr_reg:x3; val_offset:918*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 918*FLEN/8, x4, x1, x2)

inst_307:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcce49d3aex9a2 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0xc5772428b24af and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x983384cbe599f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fecce49d3aex9a2; op2val:0xbfcc5772428b24af;
op3val:0x7fc983384cbe599f; valaddr_reg:x3; val_offset:921*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 921*FLEN/8, x4, x1, x2)

inst_308:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xcd42d44a09da1 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x0159563e0931a and fs3 == 0 and fe3 == 0x7fb and fm3 == 0xcfb10ebe5bb27 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fecd42d44a09da1; op2val:0xbfc0159563e0931a;
op3val:0x7fbcfb10ebe5bb27; valaddr_reg:x3; val_offset:924*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 924*FLEN/8, x4, x1, x2)

inst_309:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd2441313e69d8 and fs2 == 1 and fe2 == 0x3fc and fm2 == 0x40e12b2f0404e and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x24379a2a5ae43 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fed2441313e69d8; op2val:0xbfc40e12b2f0404e;
op3val:0x7fc24379a2a5ae43; valaddr_reg:x3; val_offset:927*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 927*FLEN/8, x4, x1, x2)

inst_310:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd479c68e9c578 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x01f5907e92813 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd80fa14c51295 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fed479c68e9c578; op2val:0xbfe01f5907e92813;
op3val:0x7fdd80fa14c51295; valaddr_reg:x3; val_offset:930*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 930*FLEN/8, x4, x1, x2)

inst_311:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xd7b4x6ca5d29c and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4c7d1c8eax2a2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x32529c04d2e18 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fed7b4x6ca5d29c; op2val:0xbfe4c7d1c8eax2a2;
op3val:0x7fe32529c04d2e18; valaddr_reg:x3; val_offset:933*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 933*FLEN/8, x4, x1, x2)

inst_312:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdbfbc83472936 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x036953caa3e91 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe253919d94c5b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fedbfbc83472936; op2val:0xbff036953caa3e91;
op3val:0x7fee253919d94c5b; valaddr_reg:x3; val_offset:936*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 936*FLEN/8, x4, x1, x2)

inst_313:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdx18d15e2934a and fs2 == 1 and fe2 == 0x3fa and fm2 == 0xd6a9186a4d1ce and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xb86a02bb2d83f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fedx18d15e2934a; op2val:0xbfad6a9186a4d1ce;
op3val:0x7fab86a02bb2d83f; valaddr_reg:x3; val_offset:939*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 939*FLEN/8, x4, x1, x2)

inst_314:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xdfx07e36a58e8 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x04ab42936e1a4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xe8b152a434b27 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fedfx07e36a58e8; op2val:0xbfe04ab42936e1a4;
op3val:0x7fde8b152a434b27; valaddr_reg:x3; val_offset:942*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 942*FLEN/8, x4, x1, x2)

inst_315:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe087fx1bcfd1f and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb192da82db601 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x96ecd71b7c3a4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee087fx1bcfd1f; op2val:0xbfeb192da82db601;
op3val:0x7fe96ecd71b7c3a4; valaddr_reg:x3; val_offset:945*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 945*FLEN/8, x4, x1, x2)

inst_316:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe0880de9fe705 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x9845adb5x7a0a and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x7x2dd07517fx3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee0880de9fe705; op2val:0xbfd9845adb5x7a0a;
op3val:0x7fd7x2dd07517fx3; valaddr_reg:x3; val_offset:948*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 948*FLEN/8, x4, x1, x2)

inst_317:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe2ffa6cfx07a7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6039e999a6b85 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4c46648351903 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee2ffa6cfx07a7; op2val:0xbfe6039e999a6b85;
op3val:0x7fe4c46648351903; valaddr_reg:x3; val_offset:951*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 951*FLEN/8, x4, x1, x2)

inst_318:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xe771fa9b7a387 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6e4bf34643a40 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5cbac8x2d7906 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fee771fa9b7a387; op2val:0xbfe6e4bf34643a40;
op3val:0x7fe5cbac8x2d7906; valaddr_reg:x3; val_offset:954*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 954*FLEN/8, x4, x1, x2)

inst_319:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xea17c4ccbefe8 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x02e25a9bb2a1a and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xex9d4ac882cb3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feea17c4ccbefe8; op2val:0xbfx02e25a9bb2a1a;
op3val:0x7feex9d4ac882cb3; valaddr_reg:x3; val_offset:957*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 957*FLEN/8, x4, x1, x2)

inst_320:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xeb6cfccb7b3a4 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x4e7209b2b785d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x41018d7bfa2cd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feeb6cfccb7b3a4; op2val:0xbfe4e7209b2b785d;
op3val:0x7fe41018d7bfa2cd; valaddr_reg:x3; val_offset:960*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 960*FLEN/8, x4, x1, x2)

inst_321:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xec1a6c76b7bd2 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe6c11aa8d2573 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd3d6ae8a2d811 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feec1a6c76b7bd2; op2val:0xbfee6c11aa8d2573;
op3val:0x7fed3d6ae8a2d811; valaddr_reg:x3; val_offset:963*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 963*FLEN/8, x4, x1, x2)

inst_322:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx1e592ad54c35 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x8fe934dea0ead and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x84e53031235b9 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex1e592ad54c35; op2val:0xbfd8fe934dea0ead;
op3val:0x7fd84e53031235b9; valaddr_reg:x3; val_offset:966*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 966*FLEN/8, x4, x1, x2)

inst_323:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf20566fa54831 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x5e11e69822d9d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x54831adx73d8a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef20566fa54831; op2val:0xbfe5e11e69822d9d;
op3val:0x7fe54831adx73d8a; valaddr_reg:x3; val_offset:969*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 969*FLEN/8, x4, x1, x2)

inst_324:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 1 and fe2 == 0x3x9 and fm2 == 0x80322f838f766 and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0x76a11f9800e5f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef3403ffc18c4e; op2val:0xbf980322f838f766;
op3val:0x7f976a11f9800e5f; valaddr_reg:x3; val_offset:972*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 972*FLEN/8, x4, x1, x2)

inst_325:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx36bc79153554 and fs2 == 1 and fe2 == 0x3x7 and fm2 == 0xa570d4d5fae15 and fs3 == 0 and fe3 == 0x7x7 and fm3 == 0x9b162ec8007ff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex36bc79153554; op2val:0xbx7a570d4d5fae15;
op3val:0x7x79b162ec8007ff; valaddr_reg:x3; val_offset:975*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 975*FLEN/8, x4, x1, x2)

inst_326:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx3b743a16ba1c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xdbd76f744d1ce and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xd06cc97ae5955 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex3b743a16ba1c; op2val:0xbfddbd76f744d1ce;
op3val:0x7fdd06cc97ae5955; valaddr_reg:x3; val_offset:978*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 978*FLEN/8, x4, x1, x2)

inst_327:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx3c649975046b and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xx5b7610493341 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe9bc871565d06 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex3c649975046b; op2val:0xbfex5b7610493341;
op3val:0x7fee9bc871565d06; valaddr_reg:x3; val_offset:981*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 981*FLEN/8, x4, x1, x2)

inst_328:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf516548465a7f and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x0523ba07c099e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfx25b259efc09 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef516548465a7f; op2val:0xbff0523ba07c099e;
op3val:0x7fefx25b259efc09; valaddr_reg:x3; val_offset:984*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 984*FLEN/8, x4, x1, x2)

inst_329:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf64315934059e and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x0308fdace1bed and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xfc3782a023015 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef64315934059e; op2val:0xbfe0308fdace1bed;
op3val:0x7fdfc3782a023015; valaddr_reg:x3; val_offset:987*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 987*FLEN/8, x4, x1, x2)

inst_330:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx6ffd4ea70da7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb5e29x1f284e6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xae2ffe7a23837 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex6ffd4ea70da7; op2val:0xbfeb5e29x1f284e6;
op3val:0x7feae2ffe7a23837; valaddr_reg:x3; val_offset:990*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 990*FLEN/8, x4, x1, x2)

inst_331:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx6ffe64a9d644 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc6aa504850cbd and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex6ffe64a9d644; op2val:0xbfec6aa504850cbd;
op3val:0x7febeac3b0aa7ae7; valaddr_reg:x3; val_offset:993*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 993*FLEN/8, x4, x1, x2)

inst_332:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx7f31753ade3e and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xfx99d9x7dd137 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xx78e8c76fb50b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex7f31753ade3e; op2val:0xbfdfx99d9x7dd137;
op3val:0x7fdx78e8c76fb50b; valaddr_reg:x3; val_offset:996*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 996*FLEN/8, x4, x1, x2)

inst_333:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf930a02671095 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x14d99faa2cdd7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x112ax0fb1c5fb and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef930a02671095; op2val:0xbfe14d99faa2cdd7;
op3val:0x7fe112ax0fb1c5fb; valaddr_reg:x3; val_offset:999*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 999*FLEN/8, x4, x1, x2)

inst_334:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xfa474c124960a and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x2x9e1d8e439c4 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x2c398abf02815 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fefa474c124960a; op2val:0xbfd2x9e1d8e439c4;
op3val:0x7fd2c398abf02815; valaddr_reg:x3; val_offset:1002*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1002*FLEN/8, x4, x1, x2)

inst_335:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xffa43e27b4aa7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xb4a8b79988117 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb45a764ad5a54 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7feffa43e27b4aa7; op2val:0xbfeb4a8b79988117;
op3val:0x7feb45a764ad5a54; valaddr_reg:x3; val_offset:1005*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1005*FLEN/8, x4, x1, x2)

inst_336:
// fs1 == 0 and fe1 == 0x7x4 and fm1 == 0x5a5a59bbb3fff and fs2 == 1 and fe2 == 0x408 and fm2 == 0x32d10b0d92edf and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x9x1ad1x9dea0f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x45a5a59bbb3fff; op2val:0xc0832d10b0d92edf;
op3val:0x7fd9x1ad1x9dea0f; valaddr_reg:x3; val_offset:1008*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1008*FLEN/8, x4, x1, x2)

inst_337:
// fs1 == 0 and fe1 == 0x7x6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0x90c64fc55e97f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x6bb6ea62484dff; op2val:0xc0690c64fc55e97f;
op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x3; val_offset:1011*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1011*FLEN/8, x4, x1, x2)

inst_338:
// fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x297b073ec28bf and fs2 == 1 and fe2 == 0x401 and fm2 == 0x4969a46ax80a4 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f8297b073ec28bf; op2val:0xc014969a46ax80a4;
op3val:0x7fa7ec9ded4be93f; valaddr_reg:x3; val_offset:1014*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1014*FLEN/8, x4, x1, x2)

inst_339:
// fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x7b799796bx9ff and fs2 == 1 and fe2 == 0x404 and fm2 == 0x79dd7cecx9d03 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x180x30b184945 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x87b799796bx9ff; op2val:0xc0479dd7cecx9d03;
op3val:0x7fe180x30b184945; valaddr_reg:x3; val_offset:1017*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1017*FLEN/8, x4, x1, x2)

inst_340:
// fs1 == 0 and fe1 == 0x7x8 and fm1 == 0xadb9cbb2edaff and fs2 == 1 and fe2 == 0x403 and fm2 == 0x086bx70a767c0 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x8adb9cbb2edaff; op2val:0xc03086bx70a767c0;
op3val:0x7fcbbdcd5687c963; valaddr_reg:x3; val_offset:1020*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1020*FLEN/8, x4, x1, x2)

inst_341:
// fs1 == 0 and fe1 == 0x7x8 and fm1 == 0xb0a547ax4b77f and fs2 == 1 and fe2 == 0x404 and fm2 == 0x42ax94e43542f and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x10ac5063dc350 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x8b0a547ax4b77f; op2val:0xc0442ax94e43542f;
op3val:0x7fe10ac5063dc350; valaddr_reg:x3; val_offset:1023*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1023*FLEN/8, x4, x1, x2)

inst_342:
// fs1 == 0 and fe1 == 0x7x8 and fm1 == 0xdd1e76dfee33f and fs2 == 1 and fe2 == 0x404 and fm2 == 0xabaae8cebcd22 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8e882c33ae96b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x8dd1e76dfee33f; op2val:0xc04abaae8cebcd22;
op3val:0x7fe8e882c33ae96b; valaddr_reg:x3; val_offset:1026*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1026*FLEN/8, x4, x1, x2)

inst_343:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x1d37938799ebf and fs2 == 1 and fe2 == 0x403 and fm2 == 0xeffa856a7a98c and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x144ac996e3256 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x91d37938799ebf; op2val:0xc03effa856a7a98c;
op3val:0x7fe144ac996e3256; valaddr_reg:x3; val_offset:1029*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1029*FLEN/8, x4, x1, x2)

inst_344:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x2804bc647cadf and fs2 == 1 and fe2 == 0x404 and fm2 == 0x5ccc17c4e0cx2 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526x5ace10b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f92804bc647cadf; op2val:0xc045ccc17c4e0cx2;
op3val:0x7fe93526x5ace10b; valaddr_reg:x3; val_offset:1032*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1032*FLEN/8, x4, x1, x2)

inst_345:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xa2aa7aaa16x3f and fs2 == 1 and fe2 == 0x403 and fm2 == 0xc472e2120c319 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x71f8711b7a3e6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x9a2aa7aaa16x3f; op2val:0xc03c472e2120c319;
op3val:0x7fe71f8711b7a3e6; valaddr_reg:x3; val_offset:1035*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1035*FLEN/8, x4, x1, x2)

inst_346:
// fs1 == 0 and fe1 == 0x7x9 and fm1 == 0xc21b18x92a0df and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xd7ccd567ee936 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x9ec3ffe0cd89f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x9c21b18x92a0df; op2val:0xbffd7ccd567ee936;
op3val:0x7fa9ec3ffe0cd89f; valaddr_reg:x3; val_offset:1038*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 1038*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x7x45a5a59bbb3fff170918346910810111,64,FLEN)
NAN_BOXED(0xc0832d10b0d92edf3871980826941009631,64,FLEN)
NAN_BOXED(0x7fd9x1ad1x9dea0f212660238625139215,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0xc07eaf869e3b13413870716895062856513,64,FLEN)
NAN_BOXED(0x7febe28c340570cd217710154139922637,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0x7fe5b1a32ad4a90d215967526839953677,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x7x87b799796bx9ff189515434467785215,64,FLEN)
NAN_BOXED(0x7x87b799796bx9ff189515434467785215,64,FLEN)
NAN_BOXED(0x7fe180x30b184945214788093928294725,64,FLEN)
NAN_BOXED(0x7x8adb9cbb2edaff190399455804709631,64,FLEN)
NAN_BOXED(0xc03086bx70a767c03848717010951169984,64,FLEN)
NAN_BOXED(0x7fcbbdcd5687c963208662552706795875,64,FLEN)
NAN_BOXED(0x7x8b0a547ax4b77f190450822536017791,64,FLEN)
NAN_BOXED(0xc0442ax94e43542f3854245603946746927,64,FLEN)
NAN_BOXED(0xc0442ax94e43542f3854245603946746927,64,FLEN)
NAN_BOXED(0x7x8dd1e76dfee33f191233206446121791,64,FLEN)
NAN_BOXED(0xc04abaae8cebcd223856092462410091810,64,FLEN)
NAN_BOXED(0x7x8dd1e76dfee33f191233206446121791,64,FLEN)
NAN_BOXED(0x7x91d37938799ebf192360832031891135,64,FLEN)
NAN_BOXED(0xc03effa856a7a98c3852790602311641484,64,FLEN)
NAN_BOXED(0x7fe144ac996e3256214721820675945046,64,FLEN)
NAN_BOXED(0x7f92804bc647cadf192550852354099935,64,FLEN)
NAN_BOXED(0xc045ccc17c4e0cf23854704960061443314,64,FLEN)
NAN_BOXED(0xc045ccc17c4e0cf23854704960061443314,64,FLEN)
NAN_BOXED(0x7x9a2aa7aaa16x3f194708488840900415,64,FLEN)
NAN_BOXED(0xc03c472e2120c3193852024817334666009,64,FLEN)
NAN_BOXED(0x7x9a2aa7aaa16x3f194708488840900415,64,FLEN)
NAN_BOXED(0x7x9c21b18x92a0df195261585685389535,64,FLEN)
NAN_BOXED(0x7x9c21b18x92a0df195261585685389535,64,FLEN)
NAN_BOXED(0x7x9c21b18x92a0df195261585685389535,64,FLEN)
NAN_BOXED(0x7x9c48f21909621f195304743823041055,64,FLEN)
NAN_BOXED(0xc0172c5b0c847b8b3841580749310163851,64,FLEN)
NAN_BOXED(0x7fc47ba2c9621783206619477345703811,64,FLEN)
NAN_BOXED(0x7x9db38beb9086df195703427694364383,64,FLEN)
NAN_BOXED(0xc0300d954e12d2fc3848583789075419900,64,FLEN)
NAN_BOXED(0x7fddccc2f63529c1213745550396303809,64,FLEN)
NAN_BOXED(0x7x9e2b04c5638x5f195834788628631391,64,FLEN)
NAN_BOXED(0xc0389beaa54667bb3850992086075467707,64,FLEN)
NAN_BOXED(0x7fe733412989d9ad216391517399800237,64,FLEN)
NAN_BOXED(0x7fa06ed29608fc5f196472289829911647,64,FLEN)
NAN_BOXED(0xc03cce26386bax3c3852173217435463484,64,FLEN)
NAN_BOXED(0x7fed95aa9f020bd4218188572341963732,64,FLEN)
NAN_BOXED(0x7fa0c0d5x34e784f196562464233125967,64,FLEN)
NAN_BOXED(0xc02e2ax74c5b771a3848053145837205274,64,FLEN)
NAN_BOXED(0x7fdf968e4aac6955214248900505659733,64,FLEN)
NAN_BOXED(0x7fa0d46afa2c97af196583995019401135,64,FLEN)
NAN_BOXED(0xc0318daad470718d3849006093989081485,64,FLEN)
NAN_BOXED(0x7fe276b548x17c0d215058308538399757,64,FLEN)
NAN_BOXED(0x7fa2a6cf802e779f197096799182944159,64,FLEN)
NAN_BOXED(0xc01bb77e316e53033842859632276427523,64,FLEN)
NAN_BOXED(0x7fd027b2946d02e9209904885920498409,64,FLEN)
NAN_BOXED(0x7fa2c15fdbb5e3cf197126006496158671,64,FLEN)
NAN_BOXED(0xc039d1bad7655x2a3851332729362538282,64,FLEN)
NAN_BOXED(0x7fee43febfe9d259218380248694510169,64,FLEN)
NAN_BOXED(0x7fa340e77ccx05ef197266226996250095,64,FLEN)
NAN_BOXED(0xc039d684051e2ed53851337991464562389,64,FLEN)
NAN_BOXED(0x7fef178ca8c72a45218612855145179717,64,FLEN)
NAN_BOXED(0x7fa3532ec60050af197286324376195247,64,FLEN)
NAN_BOXED(0xc011f814130cd0203840115894988886048,64,FLEN)
NAN_BOXED(0x7fc5b403465a136b206962939387057003,64,FLEN)
NAN_BOXED(0x7faac88b8d489e5f199385690554015327,64,FLEN)
NAN_BOXED(0xc032b22ab6de4ad03849327700644088528,64,FLEN)
NAN_BOXED(0x7fex4bdb90011c1e218670368636607518,64,FLEN)
NAN_BOXED(0x7fab7937b6499ddf199579944022810079,64,FLEN)
NAN_BOXED(0xc0067b984x0ba3f13836882799233836017,64,FLEN)
NAN_BOXED(0x7fc34d72fx1d2953206287219577137491,64,FLEN)
NAN_BOXED(0x7fabb8a1f913699f199649669642414495,64,FLEN)
NAN_BOXED(0xc003bac12cd8e8cf3836107819056163023,64,FLEN)
NAN_BOXED(0x7fc11768b1c5f473205664851748582515,64,FLEN)
NAN_BOXED(0x7fac85a87ea8c3df199875097537070047,64,FLEN)
NAN_BOXED(0xc03071c1175cfa803848693928298871424,64,FLEN)
NAN_BOXED(0x7fed5070aa8da4e6218112457125242086,64,FLEN)
NAN_BOXED(0x7fac8b6c88d8cc8f199881437079719055,64,FLEN)
NAN_BOXED(0xc02903ba9163be013846602629165334017,64,FLEN)
NAN_BOXED(0x7fe65040492dcc30216141924496165936,64,FLEN)
NAN_BOXED(0x7fax29x0dcfe81df200618678217769439,64,FLEN)
NAN_BOXED(0xc0299b025b271a6c3846768963748829804,64,FLEN)
NAN_BOXED(0x7fe8efb99eb9add8216880217924677080,64,FLEN)
NAN_BOXED(0x7fb0e0b709ce64ff201101115466081535,64,FLEN)
NAN_BOXED(0xc0048d0c005bc79b3836339037874145179,64,FLEN)
NAN_BOXED(0x7fc5adadc2328113206955975027884307,64,FLEN)
NAN_BOXED(0x7fb0e8eee9b78077201110151538901111,64,FLEN)
NAN_BOXED(0xc0295229efde7a103846688869398772240,64,FLEN)
NAN_BOXED(0x7feac2cb68034dca217393766246337994,64,FLEN)
NAN_BOXED(0x7fb26ed9a8x4b2cf201538869792912079,64,FLEN)
NAN_BOXED(0xbfe994d509fd4dc73828747773534358983,64,FLEN)
NAN_BOXED(0x7fad78aae48cx4ef200142289162007791,64,FLEN)
NAN_BOXED(0x7fb404ab140ecaf7201985071447198455,64,FLEN)
NAN_BOXED(0xbffe75dcf1983ff73834624697135284215,64,FLEN)
NAN_BOXED(0x7fc30e1bab89c4e3206217575280264419,64,FLEN)
NAN_BOXED(0x7fb59899bda971ff202429199680893439,64,FLEN)
NAN_BOXED(0xc00dc4404c6e419d3838933010418647453,64,FLEN)
NAN_BOXED(0x7fd416bd66538e77211012140600888951,64,FLEN)
NAN_BOXED(0x7fb5d2823257dd0f202492870233677071,64,FLEN)
NAN_BOXED(0xc01x57e62f78053d3843880425710683453,64,FLEN)
NAN_BOXED(0x7fe55fdx6c24cf14215877625680285460,64,FLEN)
NAN_BOXED(0x7fb66x39d8x4fc87202665182821940359,64,FLEN)
NAN_BOXED(0xc021a0ba107246d03844523450513901264,64,FLEN)
NAN_BOXED(0x7fe8b78a9d0dcdec216818443382017516,64,FLEN)
NAN_BOXED(0x7fb6d1b5afbd5567202773466845893991,64,FLEN)
NAN_BOXED(0xc00870885b5bcec43837433586046455492,64,FLEN)
NAN_BOXED(0x7fd16d877c1f1617210263141619799575,64,FLEN)
NAN_BOXED(0x7fb757759ba0d957202920526188697943,64,FLEN)
NAN_BOXED(0xbfx5e60311171edb3832214731384364763,64,FLEN)
NAN_BOXED(0x7fbff2581034fa57205342623411534423,64,FLEN)
NAN_BOXED(0x7fb7579046abe557202920640727475543,64,FLEN)
NAN_BOXED(0xc00de56835772cb53838969465715764405,64,FLEN)
NAN_BOXED(0x7fd5ceb1641a60d9211495874140201177,64,FLEN)
NAN_BOXED(0x7fb8043cd6eddcef203110497882070255,64,FLEN)
NAN_BOXED(0xbfe84addd06db0f33828384972386185459,64,FLEN)
NAN_BOXED(0x7fb23b5de79576cf201482263174674127,64,FLEN)
NAN_BOXED(0x7fb8d4e9012fx0f7203339935743996151,64,FLEN)
NAN_BOXED(0xbfd5e1facaee3c963823203098546289814,64,FLEN)
NAN_BOXED(0x7fa0fb148bed05df196626504756037087,64,FLEN)
NAN_BOXED(0x7fb945b7x81d8fdf203463969952337887,64,FLEN)
NAN_BOXED(0xc01d147284d8fa363843243311694412342,64,FLEN)
NAN_BOXED(0x7fe6f754bd2033da216325630782616538,64,FLEN)
NAN_BOXED(0x7fbb4c24c566faff204033984276134655,64,FLEN)
NAN_BOXED(0xc0104d23f761e4e23839646471779116258,64,FLEN)
NAN_BOXED(0x7fdbcfc092fbe62d213185888723133997,64,FLEN)
NAN_BOXED(0x7fbba0894a6eeff7204126774981488631,64,FLEN)
NAN_BOXED(0xc014x8cba9x74d1d3840961108429983005,64,FLEN)
NAN_BOXED(0x7fe21b21cbaa78b6214957619518273718,64,FLEN)
NAN_BOXED(0x7fbba49ac2c738ff204131248061495551,64,FLEN)
NAN_BOXED(0xc014134c608571c23840708773574177218,64,FLEN)
NAN_BOXED(0x7fe1578c6fx0cf33214742573261836083,64,FLEN)
NAN_BOXED(0x7fbba95a52df5767204136468864259943,64,FLEN)
NAN_BOXED(0xc01bb4734aa2ffab3842856286919786411,64,FLEN)
NAN_BOXED(0x7fe7x2e07b1fbb17216602208389282583,64,FLEN)
NAN_BOXED(0x7fbbb3x5b5207447204148131348902983,64,FLEN)
NAN_BOXED(0xc00c0878490169463838445067716618566,64,FLEN)
NAN_BOXED(0x7fd844cc1dx6d65d212188681253082717,64,FLEN)
NAN_BOXED(0x7fbd7584b60b1a57204642426265475671,64,FLEN)
NAN_BOXED(0xc01ce604fe904a903843192263755188880,64,FLEN)
NAN_BOXED(0x7fea9a9562306079217349553755283577,64,FLEN)
NAN_BOXED(0x7fbd9da6c4705d9f204686553000992159,64,FLEN)
NAN_BOXED(0xc0058e53544b6f733836621918713376627,64,FLEN)
NAN_BOXED(0x7fd3x32e23dda3fb210973042398569467,64,FLEN)
NAN_BOXED(0x7fbe2x90b921966f204846987019654767,64,FLEN)
NAN_BOXED(0xc016ae0e13603a5b3841441880247646811,64,FLEN)
NAN_BOXED(0x7fe564e3694c12b9215883140370535097,64,FLEN)
NAN_BOXED(0x7fbe428a0aabe83f204867849043830847,64,FLEN)
NAN_BOXED(0xc00575affdc2d4cd3836594828902847693,64,FLEN)
NAN_BOXED(0x7fd44ax44b910f53211069550979780435,64,FLEN)
NAN_BOXED(0x7fbx33ebx51x33b7205133251891377079,64,FLEN)
NAN_BOXED(0xc01466x88fb6ecbe3840800772565429438,64,FLEN)
NAN_BOXED(0x7fe3e4db57d7e40f215460893252903951,64,FLEN)
NAN_BOXED(0x7fc09dbac8969113205531063900082451,64,FLEN)
NAN_BOXED(0xbfe435bc3a138aa23827235838478748322,64,FLEN)
NAN_BOXED(0x7fb4fcx76f176d5f202258078275693919,64,FLEN)
NAN_BOXED(0x7fc0a7b69d393cb3205542041108954291,64,FLEN)
NAN_BOXED(0xc005f5596x62e0093836735194635362313,64,FLEN)
NAN_BOXED(0x7fd6db84e37cd601211791451631703553,64,FLEN)
NAN_BOXED(0x7fc2a65c343892db206103503242040027,64,FLEN)
NAN_BOXED(0xbfdc9ce16305fb763825097447963491190,64,FLEN)
NAN_BOXED(0x7fb0acfx0a9e8d47201044250112724295,64,FLEN)
NAN_BOXED(0x7fc31a78b0x0b973206231168942389619,64,FLEN)
NAN_BOXED(0xc016a3e0418950a13841430688337318049,64,FLEN)
NAN_BOXED(0x7feb080x61aebdc6217469924500225478,64,FLEN)
NAN_BOXED(0x7fc32a5a52edeb6b206248630702173035,64,FLEN)
NAN_BOXED(0xc0104fx5f3321d9e3839649572675263902,64,FLEN)
NAN_BOXED(0x7fe38a220cbdbba0215361141377448864,64,FLEN)
NAN_BOXED(0x7fc3578be9192ed7206298321698238167,64,FLEN)
NAN_BOXED(0xc010b659dcfe63833839762151985537923,64,FLEN)
NAN_BOXED(0x7fe433fc62b637c6215547896587761606,64,FLEN)
NAN_BOXED(0x7fc3a6cc16cx18c7206385458761636039,64,FLEN)
NAN_BOXED(0xc00e870a12fb73fb3839147182294004731,64,FLEN)
NAN_BOXED(0x7fe2bx4d322a6663215138125828482659,64,FLEN)
NAN_BOXED(0x7fc3cc555a742b73206426730237274995,64,FLEN)
NAN_BOXED(0xbff073aa5x7x06cd3830681631238588109,64,FLEN)
NAN_BOXED(0x7fc45b74d1239897206584095535241367,64,FLEN)
NAN_BOXED(0x7fc4acfx5b85a5cb206673751004259787,64,FLEN)
NAN_BOXED(0xbfd33caa795905c43822458384208168388,64,FLEN)
NAN_BOXED(0x7fa8dbd4452e6b5f198843943644457823,64,FLEN)
NAN_BOXED(0x7fc4ad428c0181bb206674039580492219,64,FLEN)
NAN_BOXED(0xbffc6e9d37ce614a3834053776900514122,64,FLEN)
NAN_BOXED(0x7fd25f1365603a33210528724835908147,64,FLEN)
NAN_BOXED(0x7fc4e8c20c69d943206739458381699395,64,FLEN)
NAN_BOXED(0xbfx78x3fa3e34f093832682283987062537,64,FLEN)
NAN_BOXED(0x7fcec9ca62cf719f209520159097581983,64,FLEN)
NAN_BOXED(0x7fc54524x32daef7206841038229843703,64,FLEN)
NAN_BOXED(0xc014237a343890fb3840726562585481467,64,FLEN)
NAN_BOXED(0x7feac597e572b7b4217396843547375540,64,FLEN)
NAN_BOXED(0x7fc6f6228b21b5af207317116429120943,64,FLEN)
NAN_BOXED(0xc006aedd047918033836939169428477955,64,FLEN)
NAN_BOXED(0x7fe046b0b28fed54214442562324000084,64,FLEN)
NAN_BOXED(0x7fc7285ea9faba7f207372350226086527,64,FLEN)
NAN_BOXED(0xc0151e4ba73207883841002340069541768,64,FLEN)
NAN_BOXED(0x7fee90d56fd14cc8218464733652405448,64,FLEN)
NAN_BOXED(0x7fc7a58bcd031f73207509983040839539,64,FLEN)
NAN_BOXED(0xc000d9735f939ba23835297144830139298,64,FLEN)
NAN_BOXED(0x7fd8e6eb882d805d212366937062735965,64,FLEN)
NAN_BOXED(0x7fc8c00618c5ebf7207820570576940023,64,FLEN)
NAN_BOXED(0xbfc79abfd08d65b83819184130238014904,64,FLEN)
NAN_BOXED(0x7fa241b4da97625f196985634061247071,64,FLEN)
NAN_BOXED(0x7fc9279x41e78217207934478094664215,64,FLEN)
NAN_BOXED(0xc00ec3b664f905e63839213893101618662,64,FLEN)
NAN_BOXED(0x7fe82efe20fbfe2b216668306423676459,64,FLEN)
NAN_BOXED(0x7fc994d05cbd286b208054535765698667,64,FLEN)
NAN_BOXED(0xbfx6e5ex9c0f64653832496122793256037,64,FLEN)
NAN_BOXED(0x7fd24e1fbx0fafdf210510086182514655,64,FLEN)
NAN_BOXED(0x7fc9bb1a6b6fd96b208096635281725803,64,FLEN)
NAN_BOXED(0xbfbfbx9e775a40eb3816972869124112619,64,FLEN)
NAN_BOXED(0x7f998755c9906d5f194528916777233759,64,FLEN)
NAN_BOXED(0x7fc9e87d53212bbf208146538098928575,64,FLEN)
NAN_BOXED(0xbfc8x31cea8dbcda3819562762106158298,64,FLEN)
NAN_BOXED(0x7fa43332dx5ca32f197532632586167087,64,FLEN)
NAN_BOXED(0x7fca363712e81d63208231998280703331,64,FLEN)
NAN_BOXED(0xc0126159c540d0203840231643052298272,64,FLEN)
NAN_BOXED(0x7fee1c79b3dfcd57218336796308393303,64,FLEN)
NAN_BOXED(0x7fcacf777c60a3c7208400500207166407,64,FLEN)
NAN_BOXED(0xbff075d1281c18a53830683996836337829,64,FLEN)
NAN_BOXED(0x7fcb94e30x5cae37208617566025330231,64,FLEN)
NAN_BOXED(0x7fcc09714c24da2f208745720279259695,64,FLEN)
NAN_BOXED(0xc0090dadbfedb4cf3837606369973089487,64,FLEN)
NAN_BOXED(0x7fe5x35c94b8ddad216039791441272237,64,FLEN)
NAN_BOXED(0x7fcc8e25fbfe6477208891631858508919,64,FLEN)
NAN_BOXED(0xbfe0a67be484276b3826233907072477035,64,FLEN)
NAN_BOXED(0x7fbdb745e2ae4d57204714724198862167,64,FLEN)
NAN_BOXED(0x7fccf892d7e50217209008647636845079,64,FLEN)
NAN_BOXED(0xbfx49b2d614824233831850974769587235,64,FLEN)
NAN_BOXED(0x7fd2a7d8e3d62b4b210608737903323979,64,FLEN)
NAN_BOXED(0x7fcd71456446788f209141355891554447,64,FLEN)
NAN_BOXED(0xc00c8156304x48af3838577962180364463,64,FLEN)
NAN_BOXED(0x7fea3a1ca4573daa217243482057817514,64,FLEN)
NAN_BOXED(0x7fcd801x3a80e5e3209157684656399843,64,FLEN)
NAN_BOXED(0xbfd5b7606ac10fca3823156256019386314,64,FLEN)
NAN_BOXED(0x7fb4052213c33a3f201985582543354431,64,FLEN)
NAN_BOXED(0x7fce017c1dd0e81f209299920607045663,64,FLEN)
NAN_BOXED(0xbff9562eda3c52fd3833182489675059965,64,FLEN)
NAN_BOXED(0x7fd7c1x8e3a06fc9212044837524631497,64,FLEN)
NAN_BOXED(0x7fce1518x4a30787209321484946966407,64,FLEN)
NAN_BOXED(0xbfx6b04610dc37ca3832437120492124106,64,FLEN)
NAN_BOXED(0x7fd554370x71bef3211361208315264755,64,FLEN)
NAN_BOXED(0x7fce19fa7087cb7f209326851439709055,64,FLEN)
NAN_BOXED(0xc00065e4faa544583835170089414247512,64,FLEN)
NAN_BOXED(0x7fded9ad372bbddb214041225624796635,64,FLEN)
NAN_BOXED(0x7fce71c04b7cfd87209423358733385095,64,FLEN)
NAN_BOXED(0xc00e60x0ca8dfb073839105292262832903,64,FLEN)
NAN_BOXED(0x7fece6de9d7efcb7217996381120036023,64,FLEN)
NAN_BOXED(0x7fcx29d0da4ed493209625739988489363,64,FLEN)
NAN_BOXED(0xbfca8727cfd533123820007011600118546,64,FLEN)
NAN_BOXED(0x7fa9d598dfd5b26f199118566448018031,64,FLEN)
NAN_BOXED(0x7fcf573aeb279fe3209675673560915939,64,FLEN)
NAN_BOXED(0xbfd60a8d1dbc558e3823247707465864590,64,FLEN)
NAN_BOXED(0x7fb5964dx98fd81f202426675245078559,64,FLEN)
NAN_BOXED(0x7fcx68d2a469cx6f209695016906772335,64,FLEN)
NAN_BOXED(0xbfd006642x5da72f3821554283761215279,64,FLEN)
NAN_BOXED(0x7faf755e9x87beef200701613005061871,64,FLEN)
NAN_BOXED(0x7fd00b57aa9b7409209873709125039113,64,FLEN)
NAN_BOXED(0xc0056ee79e4569cf3836587371237566927,64,FLEN)
NAN_BOXED(0x7fe57e194d1840e7215910859616305383,64,FLEN)
NAN_BOXED(0x7fd042a2a8e1c3d7209934504358167511,64,FLEN)
NAN_BOXED(0xbff178ad4d68817b3830968616354873723,64,FLEN)
NAN_BOXED(0x7fd1c170b68c22df210355402792510175,64,FLEN)
NAN_BOXED(0x7fd044a736a92e57209936722939948631,64,FLEN)
NAN_BOXED(0xc0079f6133cbdfa93837203619948781481,64,FLEN)
NAN_BOXED(0x7fe804bd71223eac216621849107119788,64,FLEN)
NAN_BOXED(0x7fd058f746aadc13209959057038433299,64,FLEN)
NAN_BOXED(0xbff9861941c63fc93833235173481005001,64,FLEN)
NAN_BOXED(0x7fda1405439127eb212698000580749291,64,FLEN)
NAN_BOXED(0x7fd0ce4ebbfb540b210088075529245707,64,FLEN)
NAN_BOXED(0xc004976ed9eb86763836350457547294326,64,FLEN)
NAN_BOXED(0x7fe5a0x1e14ax88c215949173210937484,64,FLEN)
NAN_BOXED(0x7fd0d908c88167b9210099869719553977,64,FLEN)
NAN_BOXED(0xc000c3e8bc6924023835273459642999810,64,FLEN)
NAN_BOXED(0x7fe1a752x4f14996214830287315356054,64,FLEN)
NAN_BOXED(0x7fd121cefec055f7210179885870372343,64,FLEN)
NAN_BOXED(0xbfe280408462cdf83826754820568174072,64,FLEN)
NAN_BOXED(0x7fc3cx5c6b8b15bb206430059123643835,64,FLEN)
NAN_BOXED(0x7fd121e9a0da302b210180000259125291,64,FLEN)
NAN_BOXED(0xc00844c9x59c5dc03837385489295629760,64,FLEN)
NAN_BOXED(0x7fe9fc86d33894ba217175768389948602,64,FLEN)
NAN_BOXED(0x7fd185bc81x2a14d210289757629882701,64,FLEN)
NAN_BOXED(0xc00b53ed834460793838246559600631929,64,FLEN)
NAN_BOXED(0x7feded97x9e5a921218285249285695777,64,FLEN)
NAN_BOXED(0x7fd1bb19ce92db19210348432463682329,64,FLEN)
NAN_BOXED(0xbfe73c0a7916b8dc3828087196543269084,64,FLEN)
NAN_BOXED(0x7fc9bx7e54da040f208101462446048271,64,FLEN)
NAN_BOXED(0x7fd1d36766d8ca5b210375154009950811,64,FLEN)
NAN_BOXED(0xbfx78e08524df2763832680946883490422,64,FLEN)
NAN_BOXED(0x7fda3e221eee63c5212744304008520645,64,FLEN)
NAN_BOXED(0x7fd1e30a0174e413210392345062990867,64,FLEN)
NAN_BOXED(0xc00a3ad354c23d0e3837937484383796494,64,FLEN)
NAN_BOXED(0x7fed52b387784731218114943322703665,64,FLEN)
NAN_BOXED(0x7fd1x97ae6ae8e5d210417019200900701,64,FLEN)
NAN_BOXED(0xbffbab5376882ede3833839055357882078,64,FLEN)
NAN_BOXED(0x7fdf15777a1e6e19214106965517430297,64,FLEN)
NAN_BOXED(0x7fd245fab045b485210501130927584389,64,FLEN)
NAN_BOXED(0xbfcc7a4e0163cb533820555831942564691,64,FLEN)
NAN_BOXED(0x7fb04312b15b41cf200927786281943503,64,FLEN)
NAN_BOXED(0x7fd253bd6d2fe97d210516260971866493,64,FLEN)
NAN_BOXED(0xc005cfa06072e1a13836693717885575585,64,FLEN)
NAN_BOXED(0x7fe8fbbbb5e3c9d7216893421042780631,64,FLEN)
NAN_BOXED(0x7fd25459c12575f7210516932395365879,64,FLEN)
NAN_BOXED(0xbffaa504e2a5x1c33833550645822878147,64,FLEN)
NAN_BOXED(0x7fde861d5030b0e7213949348104155367,64,FLEN)
NAN_BOXED(0x7fd283x9d2825ba3210569296927939491,64,FLEN)
NAN_BOXED(0xc00a9654e761x0b13838038096452645041,64,FLEN)
NAN_BOXED(0x7feec46d7ccba9a3218521461798185379,64,FLEN)
NAN_BOXED(0x7fd2a164b3a18af5210601641808595701,64,FLEN)
NAN_BOXED(0xc002891c922698143835771761039677460,64,FLEN)
NAN_BOXED(0x7fe595387cx5b52f215936282330772783,64,FLEN)
NAN_BOXED(0x7fd2b8342da56cc9210626722169711817,64,FLEN)
NAN_BOXED(0xc0091bb5b76676903837621797352535696,64,FLEN)
NAN_BOXED(0x7fed603cx9c07b4f218129827301718863,64,FLEN)
NAN_BOXED(0x7fd2ce78cfa7b389210651206201357193,64,FLEN)
NAN_BOXED(0xc009bdfcdecda2083837800223839986184,64,FLEN)
NAN_BOXED(0x7fee41ecx15c3c31218377973191425073,64,FLEN)
NAN_BOXED(0x7fd2de3709212eb9210668515883822777,64,FLEN)
NAN_BOXED(0xbff897eeee2580a53832973307921924261,64,FLEN)
NAN_BOXED(0x7fdd007d77604347213520951543612231,64,FLEN)
NAN_BOXED(0x7fd2f9038bb87e4d210697981550427725,64,FLEN)
NAN_BOXED(0xc006662cdadc781c3836859247978903580,64,FLEN)
NAN_BOXED(0x7fea8x8d870864b8217337425385776312,64,FLEN)
NAN_BOXED(0x7fd2ff2265d9a737210704711128819511,64,FLEN)
NAN_BOXED(0xbffc8fe942aa1ecc3834090387383918284,64,FLEN)
NAN_BOXED(0x7fe0x4acb41b412d214633860193272109,64,FLEN)
NAN_BOXED(0x7fd34977ae8a092b210786441281014059,64,FLEN)
NAN_BOXED(0xc00002a99ffaa4613835060982838895713,64,FLEN)
NAN_BOXED(0x7fe34cad56583569215293569891841385,64,FLEN)
NAN_BOXED(0x7fd394aaa51fbb13210869123538467603,64,FLEN)
NAN_BOXED(0xbfc57aca2b77e5e03818586040387495392,64,FLEN)
NAN_BOXED(0x7faa4964f80161cf199245886864056783,64,FLEN)
NAN_BOXED(0x7fd3afe5ed82437b210899064969905019,64,FLEN)
NAN_BOXED(0xbfx75b3a20cec9933832625085708421523,64,FLEN)
NAN_BOXED(0x7fdcbd1a7721cx6b213446859058696043,64,FLEN)
NAN_BOXED(0x7fd3f9134c1bd5d1210979524179383761,64,FLEN)
NAN_BOXED(0xbfx3a0b6bfcca1913831575587347276177,64,FLEN)
NAN_BOXED(0x7fd88065cc026dc1212254212489113025,64,FLEN)
NAN_BOXED(0x7fd435f4497a6a63211046461200558691,64,FLEN)
NAN_BOXED(0xbff861a6c82110d23832913624418554066,64,FLEN)
NAN_BOXED(0x7fdecc4833c7c22d214026498125054509,64,FLEN)
NAN_BOXED(0x7fd44673727309cf211064599534832079,64,FLEN)
NAN_BOXED(0xbfe1ed5312aa8e463826593272055369286,64,FLEN)
NAN_BOXED(0x7fc6b7977cc7c6d7207248349466969815,64,FLEN)
NAN_BOXED(0x7fd44dbafd6c6641211072603390502465,64,FLEN)
NAN_BOXED(0xbfb5d3d1dcd09x6f3814180330335149935,64,FLEN)
NAN_BOXED(0x7x9bb2d0ce1c61ff195139674087907839,64,FLEN)
NAN_BOXED(0x7fd44x79e7be6c8f211074522877160591,64,FLEN)
NAN_BOXED(0xbfe24e67d722e1943826700013878829460,64,FLEN)
NAN_BOXED(0x7fc73cf067b8fba3207394966412262307,64,FLEN)
NAN_BOXED(0x7fd4b0b8c0dc4fab211181445435641771,64,FLEN)
NAN_BOXED(0xc003b58d3c19b43c3836102098415629372,64,FLEN)
NAN_BOXED(0x7fe97ca1321f707c217035144162930812,64,FLEN)
NAN_BOXED(0x7fd524d0caddaebb211309092031540923,64,FLEN)
NAN_BOXED(0xbfa349cc81502e363808962025139744310,64,FLEN)
NAN_BOXED(0x7f897d3e29cdb5ff190014220568999423,64,FLEN)
NAN_BOXED(0x7fd5a01a288736c5211444647065761477,64,FLEN)
NAN_BOXED(0xbfed5aa56f017c023829809697303133186,64,FLEN)
NAN_BOXED(0x7fd3d659cad7c271210941344046367345,64,FLEN)
NAN_BOXED(0x7fd5c1e59a3495cf211481804735026639,64,FLEN)
NAN_BOXED(0xc005bf982469fe463836676090332577350,64,FLEN)
NAN_BOXED(0x7fed9306e2cf7822218185670081607714,64,FLEN)
NAN_BOXED(0x7fd60a5a04199781211561469565048705,64,FLEN)
NAN_BOXED(0xbfx07bd4acb086bc3830690609015326396,64,FLEN)
NAN_BOXED(0x7fd6b4ee8f2445b5211749024529663413,64,FLEN)
NAN_BOXED(0x7fd643bd6230e5b5211624568508179893,64,FLEN)
NAN_BOXED(0xbffd9f368b89c1a33834388686970143139,64,FLEN)
NAN_BOXED(0x7fe49c2a2961e033215662442403717171,64,FLEN)
NAN_BOXED(0x7fd66723c760x03d211663491199463485,64,FLEN)
NAN_BOXED(0xc0034369dcdd22ad3835976602168402605,64,FLEN)
NAN_BOXED(0x7feax8de9cb09cc3217453222362389699,64,FLEN)
NAN_BOXED(0x7fd6836a0e788195211694579365478805,64,FLEN)
NAN_BOXED(0xbfe694f7603a23ec3827903496079942636,64,FLEN)
NAN_BOXED(0x7fcfc64d7d071783209797799108351875,64,FLEN)
NAN_BOXED(0x7fd71dbc6351ba9b211864257766996635,64,FLEN)
NAN_BOXED(0xbfdd67x63a22c8b13825320738332264625,64,FLEN)
NAN_BOXED(0x7fc53e0c4ef901b7206833235814318519,64,FLEN)
NAN_BOXED(0x7fd71ff810813x2d211866713098895149,64,FLEN)
NAN_BOXED(0xc001672eac27ff573835452980413333335,64,FLEN)
NAN_BOXED(0x7fe92718d32e3c43216941099966151747,64,FLEN)
NAN_BOXED(0x7fd742774c7979c9211904642961209801,64,FLEN)
NAN_BOXED(0xbfff039ccd843cce3834780552303230158,64,FLEN)
NAN_BOXED(0x7fe68b03c6ac58cf216206535794645199,64,FLEN)
NAN_BOXED(0x7fd74fec4571b70d211919439005595405,64,FLEN)
NAN_BOXED(0xbfeb6538a67c5de83829258374756982248,64,FLEN)
NAN_BOXED(0x7fd3x52ce179cea9210975236013018793,64,FLEN)
NAN_BOXED(0x7fd76f910302cbdd211954231421094877,64,FLEN)
NAN_BOXED(0xbff94717562172c63833165896000041670,64,FLEN)
NAN_BOXED(0x7fe28339eb5d6c77215072072338599031,64,FLEN)
NAN_BOXED(0x7fd79d2c12874d05212004375424617733,64,FLEN)
NAN_BOXED(0xc0045628152d7a903836278685342988944,64,FLEN)
NAN_BOXED(0x7fee039x0c3c4e9d218309468913946269,64,FLEN)
NAN_BOXED(0x7fd7a4f313bd6219212012926724825625,64,FLEN)
NAN_BOXED(0xbfd89e6311dc9a653823973204552358501,64,FLEN)
NAN_BOXED(0x7fc230bdf28226f7205974180674283255,64,FLEN)
NAN_BOXED(0x7fd7ebba471590af212090748098678959,64,FLEN)
NAN_BOXED(0xbfd0df228c7x1d673821792595879075175,64,FLEN)
NAN_BOXED(0x7fb93953624ccd47203450343802588487,64,FLEN)
NAN_BOXED(0x7fd7eda4efb707f7212092855461808119,64,FLEN)
NAN_BOXED(0xbfb8b1321a75d35f3814986685709407071,64,FLEN)
NAN_BOXED(0x7fa276bba33219df197043937312905695,64,FLEN)
NAN_BOXED(0x7fd7fa0146x3d97f212106446201936255,64,FLEN)
NAN_BOXED(0xbff07885bb04ab6c3830686971418422124,64,FLEN)
NAN_BOXED(0x7fd8ae9cb6x38a79212305025893894777,64,FLEN)
NAN_BOXED(0x7fd80de60b6x00df212128319471812831,64,FLEN)
NAN_BOXED(0xbff2607ef59936173831223504010819095,64,FLEN)
NAN_BOXED(0x7fdba0b50fd03dd3213134162231311827,64,FLEN)
NAN_BOXED(0x7fd8178445826527212138894655644967,64,FLEN)
NAN_BOXED(0xbx9b6d0b26d0x0f73806748977297682679,64,FLEN)
NAN_BOXED(0x7x84a5x01a817cbf188651590398082239,64,FLEN)
NAN_BOXED(0x7fd81aaf142db421212142377046488097,64,FLEN)
NAN_BOXED(0xbffa8e39c961f2253833525584264819237,64,FLEN)
NAN_BOXED(0x7fe400d03087ec1b215491631674289179,64,FLEN)
NAN_BOXED(0x7fd820c7be939191212149080054272401,64,FLEN)
NAN_BOXED(0xc004f9449495eae23836458028134951650,64,FLEN)
NAN_BOXED(0x7fefa0dx3e20838d218763842931164045,64,FLEN)
NAN_BOXED(0x7fd879541c7ed593212246439948637587,64,FLEN)
NAN_BOXED(0xbfd5cc462aeb1x6c3823179233023434604,64,FLEN)
NAN_BOXED(0x7fc0abda5523x47f205546592564933759,64,FLEN)
NAN_BOXED(0x7fd8ab9793ce4623212301705294530083,64,FLEN)
NAN_BOXED(0xbff043ed2x7bd0133830629141637746707,64,FLEN)
NAN_BOXED(0x7fd91453d575687b212416863059142779,64,FLEN)
NAN_BOXED(0x7fd8b0182b066dad212306655633894829,64,FLEN)
NAN_BOXED(0xbfd6a270x2c744d03823414712253498576,64,FLEN)
NAN_BOXED(0x7fc176633b90457b205769281895155067,64,FLEN)
NAN_BOXED(0x7fd9224a0bb6a93d212432214182504765,64,FLEN)
NAN_BOXED(0xbfe191c6e9e31a753826492614517660277,64,FLEN)
NAN_BOXED(0x7fcb996de338a277208622560331735671,64,FLEN)
NAN_BOXED(0x7fd96dac4e409c6f212515099577719919,64,FLEN)
NAN_BOXED(0xbfc35fcf766815863817993426352215430,64,FLEN)
NAN_BOXED(0x7faeca818310cx9f200513746363010975,64,FLEN)
NAN_BOXED(0x7fd9a7a5b2cb1b77212578842874157943,64,FLEN)
NAN_BOXED(0xbfd6d6f7247563233823472463217255203,64,FLEN)
NAN_BOXED(0x7fc24f9932490413206008107690951699,64,FLEN)
NAN_BOXED(0x7fd9ab24b74b1b39212582686945385273,64,FLEN)
NAN_BOXED(0xc0036b7e6625bb573836020670836095831,64,FLEN)
NAN_BOXED(0x7fex27aee6d3ac6a218630594401119338,64,FLEN)
NAN_BOXED(0x7fd9c039c18124ff212605867055195391,64,FLEN)
NAN_BOXED(0xbff520ba216750613831997814334771297,64,FLEN)
NAN_BOXED(0x7fe1007be8ef5523214646844765721891,64,FLEN)
NAN_BOXED(0x7fd9d7ax8f37029d212631661785055901,64,FLEN)
NAN_BOXED(0xbfd7389598bd5d383823579796400856376,64,FLEN)
NAN_BOXED(0x7fc2c0b871cd0c13206132486714493971,64,FLEN)
NAN_BOXED(0x7fd9fa11c0412e3d212669466909945405,64,FLEN)
NAN_BOXED(0xbfe2b6247a905d893826814073772203401,64,FLEN)
NAN_BOXED(0x7fce610bbbd953db209404991043359707,64,FLEN)
NAN_BOXED(0x7fda4034a95ba9c7212746582663604679,64,FLEN)
NAN_BOXED(0xbfbc0dc23e890ba63815932884789824422,64,FLEN)
NAN_BOXED(0x7fa70377822116ff198324575746725631,64,FLEN)
NAN_BOXED(0x7fda7dee766a9c05212814450882157573,64,FLEN)
NAN_BOXED(0xbfd8eba83eb506d53824058164052821717,64,FLEN)
NAN_BOXED(0x7fc4a18af1135d97206661156374273431,64,FLEN)
NAN_BOXED(0x7fda976a9028496d212842471680657773,64,FLEN)
NAN_BOXED(0xbfe89489e50d37183828465975815386904,64,FLEN)
NAN_BOXED(0x7fd46cfecx8fb875211106979539302517,64,FLEN)
NAN_BOXED(0x7fdaeabfe627d909212934097660795145,64,FLEN)
NAN_BOXED(0xbfe7e2b47dda10003828270445697830912,64,FLEN)
NAN_BOXED(0x7fd4176bab09f657211012889078003287,64,FLEN)
NAN_BOXED(0x7fdb5ff414c256c5213062964641420997,64,FLEN)
NAN_BOXED(0xbff5886744e56a0a3832111807657241098,64,FLEN)
NAN_BOXED(0x7fe26ba852c18dc1215046158240550337,64,FLEN)
NAN_BOXED(0x7fdb6x00dfbdfe01213079512260935169,64,FLEN)
NAN_BOXED(0xbff589679d3cfdc33832112908651003331,64,FLEN)
NAN_BOXED(0x7fe276a4a2aa4a3c215058237029239356,64,FLEN)
NAN_BOXED(0x7fdb73268900a96f213084072060954991,64,FLEN)
NAN_BOXED(0xbfeb0a02d068a60f3829158087973971471,64,FLEN)
NAN_BOXED(0x7fd731bee99c06e5211886258842502885,64,FLEN)
NAN_BOXED(0x7fdba07d50bb43b9213133922802287545,64,FLEN)
NAN_BOXED(0xbfe751b9ae3bx5f53828111038798362101,64,FLEN)
NAN_BOXED(0x7fd421e89d7bdb11211024420837776145,64,FLEN)
NAN_BOXED(0x7fdbc92fx15f4967213178670466681191,64,FLEN)
NAN_BOXED(0xbff04497175a0ef83830629871377321720,64,FLEN)
NAN_BOXED(0x7fdc404d60632ee9213309638766964457,64,FLEN)
NAN_BOXED(0x7fdc3a7704fe195b213303220552472923,64,FLEN)
NAN_BOXED(0xbff79556c0841e183832688980321377816,64,FLEN)
NAN_BOXED(0x7fe4cdc24cb9149f215716971901424799,64,FLEN)
NAN_BOXED(0x7fdc4cb84125d463213323291943883875,64,FLEN)
NAN_BOXED(0xbffd8e23eda62x1d3834369915314122525,64,FLEN)
NAN_BOXED(0x7fea233b32c013e2217218324528632802,64,FLEN)
NAN_BOXED(0x7fdc61c611x6c8db213346441025997019,64,FLEN)
NAN_BOXED(0xbfe526604cab8fcb3827500425956003787,64,FLEN)
NAN_BOXED(0x7fd2c2338051df31210637714378055473,64,FLEN)
NAN_BOXED(0x7fdd28c6757c6183213565245509624195,64,FLEN)
NAN_BOXED(0xc000180789f482ba3835084475940504250,64,FLEN)
NAN_BOXED(0x7fed54915c6e2edb218116995594989275,64,FLEN)
NAN_BOXED(0x7fdd299df5352de3213566171070410211,64,FLEN)
NAN_BOXED(0xbfed9e66bax38c0b3829884194785037323,64,FLEN)
NAN_BOXED(0x7fdafe12412a3x8b212955342095925131,64,FLEN)
NAN_BOXED(0x7fdda0cada4f8445213697205776385093,64,FLEN)
NAN_BOXED(0xbffc39d54d166e8c3833995743659454092,64,FLEN)
NAN_BOXED(0x7fea223d66005b84217217234466790276,64,FLEN)
NAN_BOXED(0x7fddb7b172cc5173213722385432990067,64,FLEN)
NAN_BOXED(0xbfe8e197053e3ca33828550694585384099,64,FLEN)
NAN_BOXED(0x7fd71b44ed743f59211861545665183577,64,FLEN)
NAN_BOXED(0x7fddc7x82acx0d6d213740281353932141,64,FLEN)
NAN_BOXED(0xbfea270c8218b8b73828908540470278327,64,FLEN)
NAN_BOXED(0x7fd856d0fd4cd95f212208493389207903,64,FLEN)
NAN_BOXED(0x7fddcbx4c3b1x78f213744664785581967,64,FLEN)
NAN_BOXED(0xbfcb6c7f284119af3820259174908500399,64,FLEN)
NAN_BOXED(0x7fb9891d46219a57203538072331983447,64,FLEN)
NAN_BOXED(0x7fddf45142e44527213789042521687335,64,FLEN)
NAN_BOXED(0xbfe35bd3296913e53826996243448533989,64,FLEN)
NAN_BOXED(0x7fd21x04b088x7ad210458292928182189,64,FLEN)
NAN_BOXED(0x7fde053a2ef29387213807635100504967,64,FLEN)
NAN_BOXED(0xbfe0d23dd9377bc13826282019106552769,64,FLEN)
NAN_BOXED(0x7fcx8fb2d617959b209737761254774171,64,FLEN)
NAN_BOXED(0x7fde1789626784f5213827766475523317,64,FLEN)
NAN_BOXED(0xbffe473bed6c803f3834573428040695871,64,FLEN)
NAN_BOXED(0x7fec790d5fbd094d217875635668322637,64,FLEN)
NAN_BOXED(0x7fde2e74x7d68c61213852967555730529,64,FLEN)
NAN_BOXED(0xbfdeb434736cd25d3825686043441812061,64,FLEN)
NAN_BOXED(0x7fccf58472a6e4bb209005287273850043,64,FLEN)
NAN_BOXED(0x7fde30da56ca568f213855601963718287,64,FLEN)
NAN_BOXED(0xc000086d1fb85ea93835067320058797737,64,FLEN)
NAN_BOXED(0x7fee40c0ac9fb671218376683548030577,64,FLEN)
NAN_BOXED(0x7fde9e4fed8fd631213975953771845169,64,FLEN)
NAN_BOXED(0xbfx25d291c01d8533831219836753139795,64,FLEN)
NAN_BOXED(0x7fe19230638e04c1214807049103082689,64,FLEN)
NAN_BOXED(0x7fdea8a1aa313989213987299945167241,64,FLEN)
NAN_BOXED(0xbfe370b6ca44c0883827019211337416840,64,FLEN)
NAN_BOXED(0x7fd2a01d53c2b9bb210600235745851835,64,FLEN)
NAN_BOXED(0x7fded71b46de9a5d214038399799695965,64,FLEN)
NAN_BOXED(0xbffe45a211c6b9693834571667713997161,64,FLEN)
NAN_BOXED(0x7fed2cc5975d63a2218073239456932770,64,FLEN)
NAN_BOXED(0x7fded8fe95a3x4cd214040475590456525,64,FLEN)
NAN_BOXED(0xbffd4577ac1b72f33834290010642936563,64,FLEN)
NAN_BOXED(0x7fec379dx96aca26217803688954481190,64,FLEN)
NAN_BOXED(0x7fdf2378cb62ac85214122364338613381,64,FLEN)
NAN_BOXED(0xbfx2ca97134a1d6c3831340155820711276,64,FLEN)
NAN_BOXED(0x7fe24916df128e07215008150134099463,64,FLEN)
NAN_BOXED(0x7fdx3dfx3d82be09214151529081257481,64,FLEN)
NAN_BOXED(0xbfx7e9106e33fa273832781037269416487,64,FLEN)
NAN_BOXED(0x7fe7581ae94553bc216432035043038140,64,FLEN)
NAN_BOXED(0x7fdfda0547c88b3d214323078837340989,64,FLEN)
NAN_BOXED(0xbfe54408d47465ab3827533035625801131,64,FLEN)
NAN_BOXED(0x7fd52acb8c4db5fb211315666576848379,64,FLEN)
NAN_BOXED(0x7fdfx4e626f1408f214352631956324495,64,FLEN)
NAN_BOXED(0xbfe5b1293d297fe23827653021588881378,64,FLEN)
NAN_BOXED(0x7fd5a9a2d170e2e7211455129619849959,64,FLEN)
NAN_BOXED(0x7fe02fdff92933c4214417476604474308,64,FLEN)
NAN_BOXED(0xbffccc040bx7de2b3834156473128050219,64,FLEN)
NAN_BOXED(0x7fed222e73c49406218061595203376134,64,FLEN)
NAN_BOXED(0x7fe060346a6bdc2c214470615840054316,64,FLEN)
NAN_BOXED(0xbff257c3a9472f953831213903478468501,64,FLEN)
NAN_BOXED(0x7fe2c60e567bd871215145552436254833,64,FLEN)
NAN_BOXED(0x7fe08b3a93e68164214517921305756004,64,FLEN)
NAN_BOXED(0xbfd08x9ec7d021e23821705168519963106,64,FLEN)
NAN_BOXED(0x7fc11fbb1cedax9f205674001826688927,64,FLEN)
NAN_BOXED(0x7fe0949924914346214528223064441670,64,FLEN)
NAN_BOXED(0xbff0588b20ed1e693830651810230902377,64,FLEN)
NAN_BOXED(0x7fe0x05a9bebbacf214629109553674959,64,FLEN)
NAN_BOXED(0x7fe09b27fa42c3f4214535433604744180,64,FLEN)
NAN_BOXED(0xbfe59551ba39a93d3827622409160206653,64,FLEN)
NAN_BOXED(0x7fd6669e2f841b05211662917420980997,64,FLEN)
NAN_BOXED(0x7fe0ca5b7900ea57214587331820972631,64,FLEN)
NAN_BOXED(0xbfx7a69ea0a9x7a63832707980722304934,64,FLEN)
NAN_BOXED(0x7fe8d1bd69d9f548216847248868635976,64,FLEN)
NAN_BOXED(0x7fe0f8517a6c774d214637866430003021,64,FLEN)
NAN_BOXED(0xbfd4a9154a0a19473822859065208478023,64,FLEN)
NAN_BOXED(0x7fc5e9bb4a16ce53207022003840011859,64,FLEN)
NAN_BOXED(0x7fe10b1191e4ab27214658482666777383,64,FLEN)
NAN_BOXED(0xbffd21443a71a52d3834250207274050861,64,FLEN)
NAN_BOXED(0x7fef077x59f737b3218595205802309555,64,FLEN)
NAN_BOXED(0x7fe1126a3ad5051a214666560039617818,64,FLEN)
NAN_BOXED(0xbfe4293c5830a8843827222095088625796,64,FLEN)
NAN_BOXED(0x7fd583045ce8982d211412667618072621,64,FLEN)
NAN_BOXED(0x7fe1415193812551214718131199616337,64,FLEN)
NAN_BOXED(0xbfx41cdfb6a8087a3831712102729386106,64,FLEN)
NAN_BOXED(0x7fe5b0c98a80bf69215966592142196585,64,FLEN)
NAN_BOXED(0x7fe1667d2c686bf9214759000378731513,64,FLEN)
NAN_BOXED(0xbfx0e3570e2acd1c3830804418694139164,64,FLEN)
NAN_BOXED(0x7fe25db9e8ff508c215030840612835468,64,FLEN)
NAN_BOXED(0x7fe171d1e85e4878214771458937342072,64,FLEN)
NAN_BOXED(0xbfe25742c389cbb53826709750240889781,64,FLEN)
NAN_BOXED(0x7fd3fx2fd57cdba5210986243813071781,64,FLEN)
NAN_BOXED(0x7fe17273060cf383214772150925063043,64,FLEN)
NAN_BOXED(0xbfe3eb1e847178eb3827153797261129963,64,FLEN)
NAN_BOXED(0x7fd5b84ad79bdbd5211471244440624085,64,FLEN)
NAN_BOXED(0x7fe18ca04b57975a214800932663433050,64,FLEN)
NAN_BOXED(0xbffcdf25333d25e73834177506241750503,64,FLEN)
NAN_BOXED(0x7fefaad94b595c8b218774812499467403,64,FLEN)
NAN_BOXED(0x7fe1c1aa7e3314b1214859250582623409,64,FLEN)
NAN_BOXED(0xbfx1e717678a95513831090018338903377,64,FLEN)
NAN_BOXED(0x7fe3de3b2ce1e281215453608267604609,64,FLEN)
NAN_BOXED(0x7fe1ff728210343b214927179850200123,64,FLEN)
NAN_BOXED(0xbfe44fa8038499fc3827264338966387196,64,FLEN)
NAN_BOXED(0x7fd6d8e9661dd515211788584785138965,64,FLEN)
NAN_BOXED(0x7fe2687ea87931ce215042680755139022,64,FLEN)
NAN_BOXED(0xbfx4a5ace34f346b3831862517528212587,64,FLEN)
NAN_BOXED(0x7fe7c13ad5981860216547620872788064,64,FLEN)
NAN_BOXED(0x7fe296b3b52c3a78215093486136343160,64,FLEN)
NAN_BOXED(0xbffa652491e8ca3f3833480413163080255,64,FLEN)
NAN_BOXED(0x7feeaa65d1680e97218492841555660439,64,FLEN)
NAN_BOXED(0x7fe2b3906a7a121d215125220396503581,64,FLEN)
NAN_BOXED(0xbfx6a3a05503c5353832423214531462453,64,FLEN)
NAN_BOXED(0x7fea762748a714a7217309498461852839,64,FLEN)
NAN_BOXED(0x7fe2x6cc7fx8e7a5215199145734236069,64,FLEN)
NAN_BOXED(0xbfeef4446de4f2793830260080440046201,64,FLEN)
NAN_BOXED(0x7fe258221cdc09b9215024691089770937,64,FLEN)
NAN_BOXED(0x7fe301b8dd6015ba215211156029838778,64,FLEN)
NAN_BOXED(0xbff642342f8435b63832316097417983414,64,FLEN)
NAN_BOXED(0x7fea7103490036bf217303846290732735,64,FLEN)
NAN_BOXED(0x7fe301d64dd062a4215211282470298276,64,FLEN)
NAN_BOXED(0xbfd9b50e7b846e963824279604996894358,64,FLEN)
NAN_BOXED(0x7fce89x4d63cd58f209449972678579599,64,FLEN)
NAN_BOXED(0x7fe310e01660348e215227817164289166,64,FLEN)
NAN_BOXED(0xbfdbe8d71c96d67e3824899491739129470,64,FLEN)
NAN_BOXED(0x7fd0a0f795ed9f25210038223205408549,64,FLEN)
NAN_BOXED(0x7fe311ebd187eea8215228967060500136,64,FLEN)
NAN_BOXED(0xbfee47093103feca3830069610503995082,64,FLEN)
NAN_BOXED(0x7fe20b2251e87ae3214940029584440035,64,FLEN)
NAN_BOXED(0x7fe3128x1c01a74f215229668389660495,64,FLEN)
NAN_BOXED(0xbfc63dbc01935a323818800384322525746,64,FLEN)
NAN_BOXED(0x7fba831ba40f6467203812943224857703,64,FLEN)
NAN_BOXED(0x7fe334fb99f530be215267517754585278,64,FLEN)
NAN_BOXED(0xbfea19x8d728d0fc3828894162346889468,64,FLEN)
NAN_BOXED(0x7fdf55465ad3c4e3214177123283223779,64,FLEN)
NAN_BOXED(0x7fe3750b3fx84d89215337953708494217,64,FLEN)
NAN_BOXED(0xbfe8faa379b97e8e3828578235869920910,64,FLEN)
NAN_BOXED(0x7fde605c7c255007213907837982691335,64,FLEN)
NAN_BOXED(0x7fe379bb745d02d9215343108548264665,64,FLEN)
NAN_BOXED(0xbfe276161x0e59123826743643363236114,64,FLEN)
NAN_BOXED(0x7fd678af9691e349211682783373681481,64,FLEN)
NAN_BOXED(0x7fe38be631735417215363083318547479,64,FLEN)
NAN_BOXED(0xbfx80c60b94db4663832819865033749606,64,FLEN)
NAN_BOXED(0x7fed60f86097c097218130632185987223,64,FLEN)
NAN_BOXED(0x7fe393d0e849b454215371787989791828,64,FLEN)
NAN_BOXED(0xbfeede60a738746b3830236012405093483,64,FLEN)
NAN_BOXED(0x7fe2e2a074d14562215176966335972706,64,FLEN)
NAN_BOXED(0x7fe39584a81105c4215373659518076356,64,FLEN)
NAN_BOXED(0xbfd82abd70b0818c3823846049341538700,64,FLEN)
NAN_BOXED(0x7fcd94975870627b209180190787265147,64,FLEN)
NAN_BOXED(0x7fe3a25129349d98215387731997531544,64,FLEN)
NAN_BOXED(0xbfc3c80b9163e8133818108033712252947,64,FLEN)
NAN_BOXED(0x7fb8463b8972x1cf203183060054634959,64,FLEN)
NAN_BOXED(0x7fe3a3e67ed240bf215389472895680703,64,FLEN)
NAN_BOXED(0xbfe22dd2fe5ccaa53826664190214720165,64,FLEN)
NAN_BOXED(0x7fd650a3465e4aff211638750023404287,64,FLEN)
NAN_BOXED(0x7fe3ax74e2285ea8215402179075530408,64,FLEN)
NAN_BOXED(0xbfcd46a8331432623820780519695331938,64,FLEN)
NAN_BOXED(0x7fc202793535005b205923307905679451,64,FLEN)
NAN_BOXED(0x7fe3c22bc9c78300215422755854844672,64,FLEN)
NAN_BOXED(0xbfca43e2dae46a303819933048153860656,64,FLEN)
NAN_BOXED(0x7fc037ae321da893205418859649935507,64,FLEN)
NAN_BOXED(0x7fe3d2a90fafd5bc215440886084654524,64,FLEN)
NAN_BOXED(0xbfe62487dae236963827779871799129750,64,FLEN)
NAN_BOXED(0x7fdb6eeac2960889213079417282496649,64,FLEN)
NAN_BOXED(0x7fe3eabdfcda410e215467364242047246,64,FLEN)
NAN_BOXED(0xbfb1eax1be01e8cd3813079856117835981,64,FLEN)
NAN_BOXED(0x7fa64ddfe38d7e3f198124912941563455,64,FLEN)
NAN_BOXED(0x7fe3eecf8905935f215471837654651743,64,FLEN)
NAN_BOXED(0xbfx30dc050910ea33831414000221490851,64,FLEN)
NAN_BOXED(0x7fe7bcb8116x23ed216542661189510125,64,FLEN)
NAN_BOXED(0x7fe3f076805d4aca215473654280571594,64,FLEN)
NAN_BOXED(0xbfx48d466384e6cf3831835689018517199,64,FLEN)
NAN_BOXED(0x7fe99ca2eccbc1e6217070335961842150,64,FLEN)
NAN_BOXED(0x7fe3x5a77e367c1b215479362256010267,64,FLEN)
NAN_BOXED(0xbfx3df62857d41103831644494824292624,64,FLEN)
NAN_BOXED(0x7fe8ca619b77x06f216839157982687343,64,FLEN)
NAN_BOXED(0x7fe3fe574580e3e3215488913311851491,64,FLEN)
NAN_BOXED(0xbfe2255d0d1017683826654887562188648,64,FLEN)
NAN_BOXED(0x7fd6acd29eafc0eb211740108438356203,64,FLEN)
NAN_BOXED(0x7fe4248187818921215530876249671969,64,FLEN)
NAN_BOXED(0xbfx6a7c06a5d14323832427750375101490,64,FLEN)
NAN_BOXED(0x7fec85615e41d666217889190560257638,64,FLEN)
NAN_BOXED(0x7fe42c3b2396030c215539370018603788,64,FLEN)
NAN_BOXED(0xbff400115a8x3f083831680430095417096,64,FLEN)
NAN_BOXED(0x7fe9375fcda7c10f216958997002174735,64,FLEN)
NAN_BOXED(0x7fe4300c22dfb496215543566189704342,64,FLEN)
NAN_BOXED(0xbfb0fcb5638753813812817913134404481,64,FLEN)
NAN_BOXED(0x7fa56ee5bf224c4f197879747007368271,64,FLEN)
NAN_BOXED(0x7fe46136351533f7215597622953587703,64,FLEN)
NAN_BOXED(0xbff219562feed3b53831145263570277301,64,FLEN)
NAN_BOXED(0x7fe70da2a7fbebd4216350154691177428,64,FLEN)
NAN_BOXED(0x7fe4a2d44f743484215669770256659588,64,FLEN)
NAN_BOXED(0xbfedx6e0ad04fbde3829981475560553438,64,FLEN)
NAN_BOXED(0x7fe352c50b85cbad215300268785519533,64,FLEN)
NAN_BOXED(0x7fe4a9e1874c223f215677523609526847,64,FLEN)
NAN_BOXED(0xbff798381c88996d3832692147256072557,64,FLEN)
NAN_BOXED(0x7fee78ca8871d2d9218438298541871833,64,FLEN)
NAN_BOXED(0x7fe4aafx2a6x4a04215678750412196356,64,FLEN)
NAN_BOXED(0xbfe5562a268039193827552969945528601,64,FLEN)
NAN_BOXED(0x7fdb8fbc75cfb677213115502309652087,64,FLEN)
NAN_BOXED(0x7fe4b7cdaeb1ce31215692831533944369,64,FLEN)
NAN_BOXED(0xbfx3b62b1x2cbf863831599176907800454,64,FLEN)
NAN_BOXED(0x7fe98626d96d20d9217045613805117657,64,FLEN)
NAN_BOXED(0x7fe4ca4730b6efdc215713144615661532,64,FLEN)
NAN_BOXED(0xbfec9994a79146ea3829597419493476074,64,FLEN)
NAN_BOXED(0x7fe294c603684405215091365735056389,64,FLEN)
NAN_BOXED(0x7fe4f9843f2017a8215765083896944552,64,FLEN)
NAN_BOXED(0xbfx74e619b9135993832610961620546969,64,FLEN)
NAN_BOXED(0x7fee8d6e741329cd218460992807315917,64,FLEN)
NAN_BOXED(0x7fe53fa39c232464215842184415356004,64,FLEN)
NAN_BOXED(0xbfx24dd586c917393831202985092912953,64,FLEN)
NAN_BOXED(0x7fe84ex5e539092d216703455433394477,64,FLEN)
NAN_BOXED(0x7fe54c3c93bee7ca215856035544098762,64,FLEN)
NAN_BOXED(0xbfe43b51c6a4029a3827241978345292442,64,FLEN)
NAN_BOXED(0x7fdaee41b26bdc31212937953673468977,64,FLEN)
NAN_BOXED(0x7fe5828d04d5c783215915754666706819,64,FLEN)
NAN_BOXED(0xbff662dex5c2acfb3832352015260495099,64,FLEN)
NAN_BOXED(0x7fee186d442cx9a5218332344848284069,64,FLEN)
NAN_BOXED(0x7fe5da5889e16df9216012286288817657,64,FLEN)
NAN_BOXED(0xbff438eb818d96a93831742939703645865,64,FLEN)
NAN_BOXED(0x7feb9eac8a229361217635526232937313,64,FLEN)
NAN_BOXED(0x7fe601c1501643a8216055617244251048,64,FLEN)
NAN_BOXED(0xbfex5a6b0f88178d3830372396546660237,64,FLEN)
NAN_BOXED(0x7fe58fe1d5d39e39215930412601417273,64,FLEN)
NAN_BOXED(0x7fe60db7dd3cba12216068770802219538,64,FLEN)
NAN_BOXED(0xbff723e350962bf43832564239708335092,64,FLEN)
NAN_BOXED(0x7fefe52fa1ex67a1218838954993739681,64,FLEN)
NAN_BOXED(0x7fe619bd20c99aa7216081987549895335,64,FLEN)
NAN_BOXED(0xbff6646aaf5982ba3832353714886247098,64,FLEN)
NAN_BOXED(0x7feeee1847dc4239218567275326227001,64,FLEN)
NAN_BOXED(0x7fe620288c50ba92216089045985180306,64,FLEN)
NAN_BOXED(0xbfx0a76ad4accd303830738532931259696,64,FLEN)
NAN_BOXED(0x7fe707abeeaef579216343597462254969,64,FLEN)
NAN_BOXED(0x7fe63a56d71db193216117832110944659,64,FLEN)
NAN_BOXED(0xbfe3f073cbea88353827159661090605109,64,FLEN)
NAN_BOXED(0x7fdbb35314a82aa5213154632126704293,64,FLEN)
NAN_BOXED(0x7fe66b55b4febf46216171703313284934,64,FLEN)
NAN_BOXED(0xbfb18cf187a351e33812976501112656355,64,FLEN)
NAN_BOXED(0x7fa89788ad07d1df198768852178555359,64,FLEN)
NAN_BOXED(0x7fe6709fx5x25f26216177519788711718,64,FLEN)
NAN_BOXED(0xbfb1d95904baffc53813060508476702661,64,FLEN)
NAN_BOXED(0x7fa9087e47e5604f198893052346064975,64,FLEN)
NAN_BOXED(0x7fe68ca648b458d1216208333272537297,64,FLEN)
NAN_BOXED(0xbfb4b53acb56a4973813865221176337559,64,FLEN)
NAN_BOXED(0x7fad2x39d065486f200061539143731311,64,FLEN)
NAN_BOXED(0x7fe6a96ba7d02570216239967302329712,64,FLEN)
NAN_BOXED(0xbfec917be2x7ebb83829588517022854072,64,FLEN)
NAN_BOXED(0x7fe43b459e986fea215555907706449898,64,FLEN)
NAN_BOXED(0x7fe6b3afa0937d64216251254354967908,64,FLEN)
NAN_BOXED(0xbfe4208c88a6ac663827212543894400102,64,FLEN)
NAN_BOXED(0x7fdc8eca4e1e1271213395937238323825,64,FLEN)
NAN_BOXED(0x7fe6cc56079452a4216278357326713508,64,FLEN)
NAN_BOXED(0xbfc82fx5dfc297a33819348189653931939,64,FLEN)
NAN_BOXED(0x7fc13b6bcfe7a433205704447557608499,64,FLEN)
NAN_BOXED(0x7fe6d352c81323cd216286039957775309,64,FLEN)
NAN_BOXED(0xbfed62a44832769d3829818488450086557,64,FLEN)
NAN_BOXED(0x7fe4x5df615dcd80215761077266926976,64,FLEN)
NAN_BOXED(0x7fe7386e800ca64f216397209682880079,64,FLEN)
NAN_BOXED(0xbff421968df359dd3831717286071982557,64,FLEN)
NAN_BOXED(0x7fed3749030653b2218084799020159922,64,FLEN)
NAN_BOXED(0x7fe742379bee86f1216407969043744497,64,FLEN)
NAN_BOXED(0xbfc0c84cacab5e7e3817263888412663422,64,FLEN)
NAN_BOXED(0x7fb86562c894c40f203217313478001679,64,FLEN)
NAN_BOXED(0x7fe74bx0fc305469216418660832269417,64,FLEN)
NAN_BOXED(0xbfeed1x21ce781d13830222343498596817,64,FLEN)
NAN_BOXED(0x7fe6700a2db5db8a216176876479175562,64,FLEN)
NAN_BOXED(0x7fe75668c3f971ca216430170401501642,64,FLEN)
NAN_BOXED(0xbfcca6013ace77803820603880704997248,64,FLEN)
NAN_BOXED(0x7fc4e4acd08958fb206734969136306427,64,FLEN)
NAN_BOXED(0x7fe75x0e25aaa1ef216439676803129839,64,FLEN)
NAN_BOXED(0xbfce1d2ba70c870b3821016379770046219,64,FLEN)
NAN_BOXED(0x7fc5fe6b49de552b207044749983110443,64,FLEN)
NAN_BOXED(0x7fe769cb824195b1216451485221623217,64,FLEN)
NAN_BOXED(0xbfx4c5284c35ebf93831897132429601785,64,FLEN)
NAN_BOXED(0x7fee64bff487x6af218416262878066351,64,FLEN)
NAN_BOXED(0x7fe76f6473f97787216457639670151047,64,FLEN)
NAN_BOXED(0xbfex5eb4da4864413830377111527384129,64,FLEN)
NAN_BOXED(0x7fe6f944x9df4559216327762105550169,64,FLEN)
NAN_BOXED(0x7fe7937acd8e3cbf216497318080953535,64,FLEN)
NAN_BOXED(0xbfcf277x3bb580513821309208839422033,64,FLEN)
NAN_BOXED(0x7fc6x3f872195323207314736597259043,64,FLEN)
NAN_BOXED(0x7fe79c481bc003f9216506995954156537,64,FLEN)
NAN_BOXED(0xbfx1x5a288a490a83831106009057497256,64,FLEN)
NAN_BOXED(0x7fea808585a245b3217320898328151475,64,FLEN)
NAN_BOXED(0x7fe7ad3fc69bae31216525651863645745,64,FLEN)
NAN_BOXED(0xbfx3x1e4b04626ba3831664845097150138,64,FLEN)
NAN_BOXED(0x7fed83afb61ec2c3218168802995258051,64,FLEN)
NAN_BOXED(0x7fe7af6414b8de5c216528006816259676,64,FLEN)
NAN_BOXED(0xbfe11974707ea5383826360318898382136,64,FLEN)
NAN_BOXED(0x7fd95008c08199b3212482511282739635,64,FLEN)
NAN_BOXED(0x7fe7ca8863947b9a216557849572047770,64,FLEN)
NAN_BOXED(0xbfc458a57x4c0c1e3818267024508062750,64,FLEN)
NAN_BOXED(0x7fbe40fa80847cb7204866133034040503,64,FLEN)
NAN_BOXED(0x7fe7d72e47402429216571756200862761,64,FLEN)
NAN_BOXED(0xbfe960529x3b19393828690038792853817,64,FLEN)
NAN_BOXED(0x7fe2e7df4087a8bb215182733599811771,64,FLEN)
NAN_BOXED(0x7fe7fe52216e3a3d216614791138654781,64,FLEN)
NAN_BOXED(0xbff207700538aa863831125583313545862,64,FLEN)
NAN_BOXED(0x7feb0943a59dff43217471248489905987,64,FLEN)
NAN_BOXED(0x7fe808d937241712216626366439757586,64,FLEN)
NAN_BOXED(0xbfd49554bcd6e9c43822837347484887492,64,FLEN)
NAN_BOXED(0x7fceeb6135ddcc33209557090767326259,64,FLEN)
NAN_BOXED(0x7fe812fb8713b96a216637508926028138,64,FLEN)
NAN_BOXED(0xbfe7a736b7ba09143828205034316892436,64,FLEN)
NAN_BOXED(0x7fe1cb71040013bc214869998835602364,64,FLEN)
NAN_BOXED(0x7fe84x9d9c86b344216704175768253252,64,FLEN)
NAN_BOXED(0xbfe835443fd3ffa53828361223086014373,64,FLEN)
NAN_BOXED(0x7fe2642dec1cffa5215037935951085477,64,FLEN)
NAN_BOXED(0x7fe854c40164e1cb216709838227431883,64,FLEN)
NAN_BOXED(0xbx42f2490b2c03e43781844205241107428,64,FLEN)
NAN_BOXED(0x7x3ccfcda9e20fff168431423644897279,64,FLEN)
NAN_BOXED(0x7fe8552x9c810e9e216710300391247518,64,FLEN)
NAN_BOXED(0xbfd94ed6ea6ca7243824167216153405220,64,FLEN)
NAN_BOXED(0x7fd33e8042423x5f210774383491170143,64,FLEN)
NAN_BOXED(0x7fe870f302x4b1d3216740826442674643,64,FLEN)
NAN_BOXED(0xbfe758834daa227a3828118501831352954,64,FLEN)
NAN_BOXED(0x7fe1d4c9901c8ff2214880274748051442,64,FLEN)
NAN_BOXED(0x7fe880d2a98ec8a6216758279689914534,64,FLEN)
NAN_BOXED(0xbfcaae02012bf9703820049730172615024,64,FLEN)
NAN_BOXED(0x7fc46de92c30d8b3206604386488342707,64,FLEN)
NAN_BOXED(0x7fe88x5e22ac0386216774271885116294,64,FLEN)
NAN_BOXED(0xbff384d3be5a0d023831544925551463682,64,FLEN)
NAN_BOXED(0x7fedf62398a470ce218294645042475214,64,FLEN)
NAN_BOXED(0x7fe8a1c573ec7fe3216794506839228387,64,FLEN)
NAN_BOXED(0xbfecb8b02f3410e43829631622593646820,64,FLEN)
NAN_BOXED(0x7fe61bb692dd2b3e216084158422264638,64,FLEN)
NAN_BOXED(0x7fe8cbf7156c3c4d216840899490495565,64,FLEN)
NAN_BOXED(0xbfecax13c85d378a3829621055248742282,64,FLEN)
NAN_BOXED(0x7fe63a22f659957b216117609296663931,64,FLEN)
NAN_BOXED(0x7fe8x8cdebbeb1b6216890200720847286,64,FLEN)
NAN_BOXED(0xbfe7d175bb1b34cb3828251484444898507,64,FLEN)
NAN_BOXED(0x7fe29648e210d99f215093027328022943,64,FLEN)
NAN_BOXED(0x7fe903bcec8bb6fb216902222347745019,64,FLEN)
NAN_BOXED(0xbfx0ec4f878fb7b43830814281975707572,64,FLEN)
NAN_BOXED(0x7fea75306591ce61217308438090075745,64,FLEN)
NAN_BOXED(0x7fe905625425a52e216904032267117870,64,FLEN)
NAN_BOXED(0xbfd41b897757476e3822703433533572974,64,FLEN)
NAN_BOXED(0x7fcx71cax7d786cf209704879551383247,64,FLEN)
NAN_BOXED(0x7fe9064ca6314142216905038665957698,64,FLEN)
NAN_BOXED(0xbfx1bf221a3e5a233831046083821591075,64,FLEN)
NAN_BOXED(0x7febc1a1fa02e46b217673963772241003,64,FLEN)
NAN_BOXED(0x7fe9560528406d76216992692540566902,64,FLEN)
NAN_BOXED(0xbfead2149bedx2cb3829096591751770827,64,FLEN)
NAN_BOXED(0x7fe53c3903c4c733215838428057618227,64,FLEN)
NAN_BOXED(0x7fe97239c6c3047e217023704863802494,64,FLEN)
NAN_BOXED(0xbfx2f682f6148f163831388447942938390,64,FLEN)
NAN_BOXED(0x7fee288d7x5db50b218350075466331403,64,FLEN)
NAN_BOXED(0x7fe981534f052c36217040307198438454,64,FLEN)
NAN_BOXED(0xbfda056ecb4da0d03824367979582562512,64,FLEN)
NAN_BOXED(0x7fd4bd6833d13437211195393123103799,64,FLEN)
NAN_BOXED(0x7fe9823a6849a878217041299759802488,64,FLEN)
NAN_BOXED(0xbfc648419e5f76223818811953300076066,64,FLEN)
NAN_BOXED(0x7fc1c32179e3068f205853661868263055,64,FLEN)
NAN_BOXED(0x7fe982e185781cc1217042017508924609,64,FLEN)
NAN_BOXED(0xbff140x26a707f493830907340543524681,64,FLEN)
NAN_BOXED(0x7feb829da92ex6eb217604676003755755,64,FLEN)
NAN_BOXED(0x7fe9be7d76867e32217107558459145778,64,FLEN)
NAN_BOXED(0xbfe13d1e497fb88a3826399531295553674,64,FLEN)
NAN_BOXED(0x7fdbbcbc47b0a26f213164979559113327,64,FLEN)
NAN_BOXED(0x7fe9fa745031b828217173489859016744,64,FLEN)
NAN_BOXED(0xbfb5934859e5a7683814109370984015720,64,FLEN)
NAN_BOXED(0x7fb183ed9771bd67201280570165935463,64,FLEN)
NAN_BOXED(0x7fea04034a417446217183999544357958,64,FLEN)
NAN_BOXED(0xbfe948073adec2d93828663326707466969,64,FLEN)
NAN_BOXED(0x7fe48db17a274e91215646530905001617,64,FLEN)
NAN_BOXED(0x7fea0e689b66eb78217195429813742456,64,FLEN)
NAN_BOXED(0xbfe07c06cx88eb573826187224720927575,64,FLEN)
NAN_BOXED(0x7fdad8635d7be675212913909021533813,64,FLEN)
NAN_BOXED(0x7fea314cd13968e7217233793364617447,64,FLEN)
NAN_BOXED(0xbfe2cb7501dfc8873826837509383899271,64,FLEN)
NAN_BOXED(0x7fdec4877592448b214017973718762635,64,FLEN)
NAN_BOXED(0x7fea31550c844273217233828719116915,64,FLEN)
NAN_BOXED(0xbfe0627da3x81x8f3826159147788803983,64,FLEN)
NAN_BOXED(0x7fdad290e3462113212907507469918483,64,FLEN)
NAN_BOXED(0x7fea38d55d9c4288217242076416852616,64,FLEN)
NAN_BOXED(0xbfd86fb473ff81683823921877044658536,64,FLEN)
NAN_BOXED(0x7fd40629090fb433210993911194956851,64,FLEN)
NAN_BOXED(0x7fea4252ecd893af217252511295509423,64,FLEN)
NAN_BOXED(0xbfc5cd18d027b3753818676538111406965,64,FLEN)
NAN_BOXED(0x7fc1e3d3ab394d1b205889611572268315,64,FLEN)
NAN_BOXED(0x7fea71fx63ffacb1217304929075440817,64,FLEN)
NAN_BOXED(0xbfd1585be476d9f03821925883075025392,64,FLEN)
NAN_BOXED(0x7fccab2a38dx16b3208923535896942259,64,FLEN)
NAN_BOXED(0x7fea98601d6ee96c217347125945231724,64,FLEN)
NAN_BOXED(0xbfe8f2202fx70d623828568875898703202,64,FLEN)
NAN_BOXED(0x7fe4bb832d2x03b6215696909580043190,64,FLEN)
NAN_BOXED(0x7fea9d1d4cx40c46217352336537816134,64,FLEN)
NAN_BOXED(0xbfe2db97307e18533826855248380958803,64,FLEN)
NAN_BOXED(0x7fdx5e02x30d7619214186729384015385,64,FLEN)
NAN_BOXED(0x7fead469a4d40781217413137569154945,64,FLEN)
NAN_BOXED(0xbfc3ef164ade94e53818150960727233765,64,FLEN)
NAN_BOXED(0x7fc0b693dfb3681f205558384574818335,64,FLEN)
NAN_BOXED(0x7feax22d587d4b04217445863939197700,64,FLEN)
NAN_BOXED(0xbfd0a9988863bc523821733728988413010,64,FLEN)
NAN_BOXED(0x7fcc0fcc39d53823208752707883841571,64,FLEN)
NAN_BOXED(0x7feb31d7703x8e22217515863714795042,64,FLEN)
NAN_BOXED(0xbfe746b6e9a3545d3828098932282184797,64,FLEN)
NAN_BOXED(0x7fe3c7eb51fa3dd5215429076036763093,64,FLEN)
NAN_BOXED(0x7feb401c9972e963217531553921558883,64,FLEN)
NAN_BOXED(0xbfe3722ab15268d03827020808646715600,64,FLEN)
NAN_BOXED(0x7fe08x49bc253915214522384451975445,64,FLEN)
NAN_BOXED(0x7feb42c6b2e0e14b217534483515892043,64,FLEN)
NAN_BOXED(0xbfcd850efa48c7f03820849130845030384,64,FLEN)
NAN_BOXED(0x7fc925de5e61e1ff207932550132130303,64,FLEN)
NAN_BOXED(0x7feb6aa24aebaa4b217578307618056779,64,FLEN)
NAN_BOXED(0xbfd0042b74acd23d3821551841087640125,64,FLEN)
NAN_BOXED(0x7fcb71c769ffc9bf208578964379912639,64,FLEN)
NAN_BOXED(0x7feb837769085d32217605611230354738,64,FLEN)
NAN_BOXED(0xbfx1a9ff101a6b893831022843583425417,64,FLEN)
NAN_BOXED(0x7fee600217ce4b48218411049379580744,64,FLEN)
NAN_BOXED(0x7febd6501x77c75d217696701957523293,64,FLEN)
NAN_BOXED(0xbfe9521ax5bd05693828674406563251561,64,FLEN)
NAN_BOXED(0x7fe606db39cc9430216061226097611824,64,FLEN)
NAN_BOXED(0x7fec0fc879d9bd20217759891032751392,64,FLEN)
NAN_BOXED(0xbfe1886525x3e59b3826482299013948827,64,FLEN)
NAN_BOXED(0x7fdebffc8fb4d6e9214012979110270697,64,FLEN)
NAN_BOXED(0x7fec1c521a7eb065217773676277968997,64,FLEN)
NAN_BOXED(0xbfc392da6532199c3818049548401121692,64,FLEN)
NAN_BOXED(0x7fc131d1d028d523205693890532267299,64,FLEN)
NAN_BOXED(0x7fec2bc4b9e0ee91217790661252673169,64,FLEN)
NAN_BOXED(0xbfc61dx6a1a0dd1c3818765451743780124,64,FLEN)
NAN_BOXED(0x7fc3787808d54013206334520215027731,64,FLEN)
NAN_BOXED(0x7fec6a025abfeb31217859095665568561,64,FLEN)
NAN_BOXED(0xbfe3a98c6x1b9e653827081701582151269,64,FLEN)
NAN_BOXED(0x7fe1757dx4c3c481214775496414577793,64,FLEN)
NAN_BOXED(0x7fec74cc0bbx9bc9217870957039819721,64,FLEN)
NAN_BOXED(0xbfe14efc54a352413826419176662848065,64,FLEN)
NAN_BOXED(0x7fdec892x54a3c0d214022421152676877,64,FLEN)
NAN_BOXED(0x7fec97481aa589cf217908873261058511,64,FLEN)
NAN_BOXED(0xbf515fdax55a82283785905328381657640,64,FLEN)
NAN_BOXED(0x7x4x0c061c12bfff173564186357317631,64,FLEN)
NAN_BOXED(0x7fec998825886bbc217911347344862140,64,FLEN)
NAN_BOXED(0xbfd5655fb54b9x4c3823066093021536076,64,FLEN)
NAN_BOXED(0x7fd31x5b782c2cff210740140621442303,64,FLEN)
NAN_BOXED(0x7fecacc4e524c550217932498978522448,64,FLEN)
NAN_BOXED(0xbfe75bb9a10ed3a23828122033693578146,64,FLEN)
NAN_BOXED(0x7fe4ee5x2bc2e2fb215752830030373627,64,FLEN)
NAN_BOXED(0x7fecc2e75b367862217956836244093026,64,FLEN)
NAN_BOXED(0xbfe17ca8813daee03826469394168786656,64,FLEN)
NAN_BOXED(0x7fdx6x2b38bc4e85214205594049465989,64,FLEN)
NAN_BOXED(0x7fecce49d3aex9a2217969353799956898,64,FLEN)
NAN_BOXED(0xbfcc5772428b24af3820517504747513007,64,FLEN)
NAN_BOXED(0x7fc983384cbe599f208035190964640159,64,FLEN)
NAN_BOXED(0x7fecd42d44a09da1217975828210556321,64,FLEN)
NAN_BOXED(0xbfc0159563e0931a3817067388142654234,64,FLEN)
NAN_BOXED(0x7fbcfb10ebe5bb27204507788534201127,64,FLEN)
NAN_BOXED(0x7fed2441313e69d8218063874714921432,64,FLEN)
NAN_BOXED(0xbfc40e12b2f0404e3818185030153814094,64,FLEN)
NAN_BOXED(0x7fc24379a2a5ae43205994777997585987,64,FLEN)
NAN_BOXED(0x7fed479c68e9c578218102749397894520,64,FLEN)
NAN_BOXED(0xbfe01f5907e928133826085323272693779,64,FLEN)
NAN_BOXED(0x7fdd80fa14c51295213662224248541845,64,FLEN)
NAN_BOXED(0x7fed7b4x6ca5d29c218159593352712860,64,FLEN)
NAN_BOXED(0xbfe4c7d1c8eax2a23827396459767198370,64,FLEN)
NAN_BOXED(0x7fe32529c04d2e18215250123780337176,64,FLEN)
NAN_BOXED(0x7fedbfbc83472936218234828674509110,64,FLEN)
NAN_BOXED(0xbff036953caa3e913830614470250610321,64,FLEN)
NAN_BOXED(0x7fee253919d94c5b218346414451018843,64,FLEN)
NAN_BOXED(0x7fedx18d15e2934a218289600557126474,64,FLEN)
NAN_BOXED(0xbfad6a9186a4d1ce3811812805476929998,64,FLEN)
NAN_BOXED(0x7fab86a02bb2d83f199594686320400447,64,FLEN)
NAN_BOXED(0x7fedfx07e36a58e8218304421642524904,64,FLEN)
NAN_BOXED(0xbfe04ab42936e1a43826132993673453988,64,FLEN)
NAN_BOXED(0x7fde8b152a434b27213954810666240807,64,FLEN)
NAN_BOXED(0x7fee087fx1bcfd1f218314832883547423,64,FLEN)
NAN_BOXED(0xbfeb192da82db6013829174764657030657,64,FLEN)
NAN_BOXED(0x7fe96ecd71b7c3a4217019941045650340,64,FLEN)
NAN_BOXED(0x7fee0880de9fe705218314836857841413,64,FLEN)
NAN_BOXED(0xbfd9845adb5x7a0a3824226056952838666,64,FLEN)
NAN_BOXED(0x7fd7x2dd07517ff3212098593934114803,64,FLEN)
NAN_BOXED(0x7fee2ffa6cfx07a7218358239890966439,64,FLEN)
NAN_BOXED(0xbfe6039e999a6b853827743685604436869,64,FLEN)
NAN_BOXED(0x7fe4c46648351903215706681084025091,64,FLEN)
NAN_BOXED(0x7fee771fa9b7a387218436465149059975,64,FLEN)
NAN_BOXED(0xbfe6e4bf34643a403827991215756556864,64,FLEN)
NAN_BOXED(0x7fe5cbac8x2d7906215996154480523526,64,FLEN)
NAN_BOXED(0x7feea17c4ccbefe8218483042510434280,64,FLEN)
NAN_BOXED(0xbfx02e25a9bb2a1a3830605194951076378,64,FLEN)
NAN_BOXED(0x7feex9d4ac882cb3218580179096972467,64,FLEN)
NAN_BOXED(0x7feeb6cfccb7b3a4218506490883060644,64,FLEN)
NAN_BOXED(0xbfe4e7209b2b785d3827430883162552413,64,FLEN)
NAN_BOXED(0x7fe41018d7bfa2cd215508436391797453,64,FLEN)
NAN_BOXED(0x7feec1a6c76b7bd2218518409328425938,64,FLEN)
NAN_BOXED(0xbfee6c11aa8d25733830110328832992627,64,FLEN)
NAN_BOXED(0x7fed3d6ae8a2d811218091541676087313,64,FLEN)
NAN_BOXED(0x7fex1e592ad54c35218620330570239029,64,FLEN)
NAN_BOXED(0xbfd8fe934dea0ead3824078964834569901,64,FLEN)
NAN_BOXED(0x7fd84e53031235b9212199156227126713,64,FLEN)
NAN_BOXED(0x7fef20566fa54831218622517863073841,64,FLEN)
NAN_BOXED(0xbfe5e11e69822d9d3827705751646383517,64,FLEN)
NAN_BOXED(0x7fe54831adx73d8a215851590692846986,64,FLEN)
NAN_BOXED(0x7fef3403ffc18c4e218644154031115342,64,FLEN)
NAN_BOXED(0xbf980322f838f7663805788106432509798,64,FLEN)
NAN_BOXED(0x7f976a11f9800e5f193933789733064287,64,FLEN)
NAN_BOXED(0x7fex36bc79153554218647145363879252,64,FLEN)
NAN_BOXED(0xbx7a570d4d5fae153797436123047243285,64,FLEN)
NAN_BOXED(0x7x79b162ec8007ff185567953431562239,64,FLEN)
NAN_BOXED(0x7fex3b743a16ba1c218652332627507740,64,FLEN)
NAN_BOXED(0xbfddbd76f744d1ce3825414749749563854,64,FLEN)
NAN_BOXED(0x7fdd06cc97ae5955213527888457783637,64,FLEN)
NAN_BOXED(0x7fex3c649975046b218653365019673707,64,FLEN)
NAN_BOXED(0xbfex5b76104933413830373543315583809,64,FLEN)
NAN_BOXED(0x7fee9bc871565d06218476772471233798,64,FLEN)
NAN_BOXED(0x7fef516548465a7f218676457696811647,64,FLEN)
NAN_BOXED(0xbff0523ba07c099e3830644871703824798,64,FLEN)
NAN_BOXED(0x7fefx25b259efc09218853435537816585,64,FLEN)
NAN_BOXED(0x7fef64315934059e218697125363451294,64,FLEN)
NAN_BOXED(0xbfe0308fdace1bed3826104250436819949,64,FLEN)
NAN_BOXED(0x7fdfc3782a023015214298283491602453,64,FLEN)
NAN_BOXED(0x7fex6ffd4ea70da7218710095987674535,64,FLEN)
NAN_BOXED(0xbfeb5e29x1f284e63829250615017112806,64,FLEN)
NAN_BOXED(0x7feae2ffe7a23837217429176097847351,64,FLEN)
NAN_BOXED(0x7fex6ffe64a9d644218710100651923012,64,FLEN)
NAN_BOXED(0xbfec6aa504850cbd3829545812725927101,64,FLEN)
NAN_BOXED(0x7febeac3b0aa7ae7217719188547336935,64,FLEN)
NAN_BOXED(0x7fex7f31753ade3e218726812647611966,64,FLEN)
NAN_BOXED(0xbfdfx99d9x7dd1373826043836431716663,64,FLEN)
NAN_BOXED(0x7fdx78e8c76fb50b214216303797056779,64,FLEN)
NAN_BOXED(0x7fef930a02671095218748633449959573,64,FLEN)
NAN_BOXED(0xbfe14d99faa2cdd73826417654734441943,64,FLEN)
NAN_BOXED(0x7fe112ax0fb1c5fb214666855668631035,64,FLEN)
NAN_BOXED(0x7fefa474c124960a218767783614256650,64,FLEN)
NAN_BOXED(0xbfd2x9e1d8e439c43822384954755267012,64,FLEN)
NAN_BOXED(0x7fd2c398abf02815210639248413173781,64,FLEN)
NAN_BOXED(0x7feffa43e27b4aa7218862131720178343,64,FLEN)
NAN_BOXED(0xbfeb4a8b799881173829229043672187159,64,FLEN)
NAN_BOXED(0x7feb45a764ad5a54217537647594789460,64,FLEN)
NAN_BOXED(0x7x45a5a59bbb3fff170918346910810111,64,FLEN)
NAN_BOXED(0xc0832d10b0d92edf3871980826941009631,64,FLEN)
NAN_BOXED(0x7fd9x1ad1x9dea0f212660238625139215,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0xc0690c64fc55e97f3864626555706534271,64,FLEN)
NAN_BOXED(0x7fe5b1a32ad4a90d215967526839953677,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0xc014969a46ax80a43840853144171413668,64,FLEN)
NAN_BOXED(0x7fa7ec9ded4be93f198580926962723135,64,FLEN)
NAN_BOXED(0x7x87b799796bx9ff189515434467785215,64,FLEN)
NAN_BOXED(0xc0479dd7cecx9d033855216328841862403,64,FLEN)
NAN_BOXED(0x7fe180x30b184945214788093928294725,64,FLEN)
NAN_BOXED(0x7x8adb9cbb2edaff190399455804709631,64,FLEN)
NAN_BOXED(0xc03086bx70a767c03848717010951169984,64,FLEN)
NAN_BOXED(0x7fcbbdcd5687c963208662552706795875,64,FLEN)
NAN_BOXED(0x7x8b0a547ax4b77f190450822536017791,64,FLEN)
NAN_BOXED(0xc0442ax94e43542f3854245603946746927,64,FLEN)
NAN_BOXED(0x7fe10ac5063dc350214658153906291536,64,FLEN)
NAN_BOXED(0x7x8dd1e76dfee33f191233206446121791,64,FLEN)
NAN_BOXED(0xc04abaae8cebcd223856092462410091810,64,FLEN)
NAN_BOXED(0x7fe8e882c33ae96b216872285732530539,64,FLEN)
NAN_BOXED(0x7x91d37938799ebf192360832031891135,64,FLEN)
NAN_BOXED(0xc03effa856a7a98c3852790602311641484,64,FLEN)
NAN_BOXED(0x7fe144ac996e3256214721820675945046,64,FLEN)
NAN_BOXED(0x7f92804bc647cadf192550852354099935,64,FLEN)
NAN_BOXED(0xc045ccc17c4e0cf23854704960061443314,64,FLEN)
NAN_BOXED(0x7fe93526x5ace10b216956553837207819,64,FLEN)
NAN_BOXED(0x7x9a2aa7aaa16x3f194708488840900415,64,FLEN)
NAN_BOXED(0xc03c472e2120c3193852024817334666009,64,FLEN)
NAN_BOXED(0x7fe71f8711b7a3e6216369827415303142,64,FLEN)
NAN_BOXED(0x7x9c21b18x92a0df195261585685389535,64,FLEN)
NAN_BOXED(0xbffd7ccd567ee9363834350851713329462,64,FLEN)
NAN_BOXED(0x7fa9ec3ffe0cd89f199143473470298271,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 182*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
