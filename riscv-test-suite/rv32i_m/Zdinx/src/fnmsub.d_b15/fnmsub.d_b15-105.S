
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_79872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000000003ffff; valaddr_reg:x3; val_offset:239616*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239616*0 + 3*0*FLEN/8, x4, x1, x2)

inst_79873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000000007ffff; valaddr_reg:x3; val_offset:239619*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239619*0 + 3*1*FLEN/8, x4, x1, x2)

inst_79874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900000000fffff; valaddr_reg:x3; val_offset:239622*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239622*0 + 3*2*FLEN/8, x4, x1, x2)

inst_79875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900000001fffff; valaddr_reg:x3; val_offset:239625*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239625*0 + 3*3*FLEN/8, x4, x1, x2)

inst_79876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900000003fffff; valaddr_reg:x3; val_offset:239628*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239628*0 + 3*4*FLEN/8, x4, x1, x2)

inst_79877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900000007fffff; valaddr_reg:x3; val_offset:239631*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239631*0 + 3*5*FLEN/8, x4, x1, x2)

inst_79878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000000ffffff; valaddr_reg:x3; val_offset:239634*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239634*0 + 3*6*FLEN/8, x4, x1, x2)

inst_79879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000001ffffff; valaddr_reg:x3; val_offset:239637*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239637*0 + 3*7*FLEN/8, x4, x1, x2)

inst_79880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000003ffffff; valaddr_reg:x3; val_offset:239640*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239640*0 + 3*8*FLEN/8, x4, x1, x2)

inst_79881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000007ffffff; valaddr_reg:x3; val_offset:239643*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239643*0 + 3*9*FLEN/8, x4, x1, x2)

inst_79882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000000fffffff; valaddr_reg:x3; val_offset:239646*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239646*0 + 3*10*FLEN/8, x4, x1, x2)

inst_79883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000001fffffff; valaddr_reg:x3; val_offset:239649*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239649*0 + 3*11*FLEN/8, x4, x1, x2)

inst_79884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000003fffffff; valaddr_reg:x3; val_offset:239652*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239652*0 + 3*12*FLEN/8, x4, x1, x2)

inst_79885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000007fffffff; valaddr_reg:x3; val_offset:239655*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239655*0 + 3*13*FLEN/8, x4, x1, x2)

inst_79886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900000ffffffff; valaddr_reg:x3; val_offset:239658*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239658*0 + 3*14*FLEN/8, x4, x1, x2)

inst_79887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900001ffffffff; valaddr_reg:x3; val_offset:239661*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239661*0 + 3*15*FLEN/8, x4, x1, x2)

inst_79888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900003ffffffff; valaddr_reg:x3; val_offset:239664*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239664*0 + 3*16*FLEN/8, x4, x1, x2)

inst_79889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900007ffffffff; valaddr_reg:x3; val_offset:239667*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239667*0 + 3*17*FLEN/8, x4, x1, x2)

inst_79890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000fffffffff; valaddr_reg:x3; val_offset:239670*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239670*0 + 3*18*FLEN/8, x4, x1, x2)

inst_79891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90001fffffffff; valaddr_reg:x3; val_offset:239673*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239673*0 + 3*19*FLEN/8, x4, x1, x2)

inst_79892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90003fffffffff; valaddr_reg:x3; val_offset:239676*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239676*0 + 3*20*FLEN/8, x4, x1, x2)

inst_79893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90007fffffffff; valaddr_reg:x3; val_offset:239679*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239679*0 + 3*21*FLEN/8, x4, x1, x2)

inst_79894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000ffffffffff; valaddr_reg:x3; val_offset:239682*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239682*0 + 3*22*FLEN/8, x4, x1, x2)

inst_79895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9001ffffffffff; valaddr_reg:x3; val_offset:239685*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239685*0 + 3*23*FLEN/8, x4, x1, x2)

inst_79896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9003ffffffffff; valaddr_reg:x3; val_offset:239688*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239688*0 + 3*24*FLEN/8, x4, x1, x2)

inst_79897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9007ffffffffff; valaddr_reg:x3; val_offset:239691*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239691*0 + 3*25*FLEN/8, x4, x1, x2)

inst_79898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900fffffffffff; valaddr_reg:x3; val_offset:239694*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239694*0 + 3*26*FLEN/8, x4, x1, x2)

inst_79899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e901fffffffffff; valaddr_reg:x3; val_offset:239697*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239697*0 + 3*27*FLEN/8, x4, x1, x2)

inst_79900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e903fffffffffff; valaddr_reg:x3; val_offset:239700*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239700*0 + 3*28*FLEN/8, x4, x1, x2)

inst_79901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e907fffffffffff; valaddr_reg:x3; val_offset:239703*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239703*0 + 3*29*FLEN/8, x4, x1, x2)

inst_79902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90ffffffffffff; valaddr_reg:x3; val_offset:239706*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239706*0 + 3*30*FLEN/8, x4, x1, x2)

inst_79903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e91ffffffffffff; valaddr_reg:x3; val_offset:239709*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239709*0 + 3*31*FLEN/8, x4, x1, x2)

inst_79904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e93ffffffffffff; valaddr_reg:x3; val_offset:239712*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239712*0 + 3*32*FLEN/8, x4, x1, x2)

inst_79905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e97ffffffffffff; valaddr_reg:x3; val_offset:239715*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239715*0 + 3*33*FLEN/8, x4, x1, x2)

inst_79906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e98000000000000; valaddr_reg:x3; val_offset:239718*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239718*0 + 3*34*FLEN/8, x4, x1, x2)

inst_79907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9c000000000000; valaddr_reg:x3; val_offset:239721*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239721*0 + 3*35*FLEN/8, x4, x1, x2)

inst_79908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9e000000000000; valaddr_reg:x3; val_offset:239724*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239724*0 + 3*36*FLEN/8, x4, x1, x2)

inst_79909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9f000000000000; valaddr_reg:x3; val_offset:239727*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239727*0 + 3*37*FLEN/8, x4, x1, x2)

inst_79910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9f800000000000; valaddr_reg:x3; val_offset:239730*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239730*0 + 3*38*FLEN/8, x4, x1, x2)

inst_79911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fc00000000000; valaddr_reg:x3; val_offset:239733*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239733*0 + 3*39*FLEN/8, x4, x1, x2)

inst_79912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fe00000000000; valaddr_reg:x3; val_offset:239736*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239736*0 + 3*40*FLEN/8, x4, x1, x2)

inst_79913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ff00000000000; valaddr_reg:x3; val_offset:239739*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239739*0 + 3*41*FLEN/8, x4, x1, x2)

inst_79914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ff80000000000; valaddr_reg:x3; val_offset:239742*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239742*0 + 3*42*FLEN/8, x4, x1, x2)

inst_79915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffc0000000000; valaddr_reg:x3; val_offset:239745*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239745*0 + 3*43*FLEN/8, x4, x1, x2)

inst_79916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffe0000000000; valaddr_reg:x3; val_offset:239748*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239748*0 + 3*44*FLEN/8, x4, x1, x2)

inst_79917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fff0000000000; valaddr_reg:x3; val_offset:239751*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239751*0 + 3*45*FLEN/8, x4, x1, x2)

inst_79918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fff8000000000; valaddr_reg:x3; val_offset:239754*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239754*0 + 3*46*FLEN/8, x4, x1, x2)

inst_79919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffc000000000; valaddr_reg:x3; val_offset:239757*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239757*0 + 3*47*FLEN/8, x4, x1, x2)

inst_79920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffe000000000; valaddr_reg:x3; val_offset:239760*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239760*0 + 3*48*FLEN/8, x4, x1, x2)

inst_79921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffff000000000; valaddr_reg:x3; val_offset:239763*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239763*0 + 3*49*FLEN/8, x4, x1, x2)

inst_79922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffff800000000; valaddr_reg:x3; val_offset:239766*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239766*0 + 3*50*FLEN/8, x4, x1, x2)

inst_79923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffc00000000; valaddr_reg:x3; val_offset:239769*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239769*0 + 3*51*FLEN/8, x4, x1, x2)

inst_79924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffe00000000; valaddr_reg:x3; val_offset:239772*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239772*0 + 3*52*FLEN/8, x4, x1, x2)

inst_79925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffff00000000; valaddr_reg:x3; val_offset:239775*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239775*0 + 3*53*FLEN/8, x4, x1, x2)

inst_79926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffff80000000; valaddr_reg:x3; val_offset:239778*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239778*0 + 3*54*FLEN/8, x4, x1, x2)

inst_79927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffc0000000; valaddr_reg:x3; val_offset:239781*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239781*0 + 3*55*FLEN/8, x4, x1, x2)

inst_79928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffe0000000; valaddr_reg:x3; val_offset:239784*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239784*0 + 3*56*FLEN/8, x4, x1, x2)

inst_79929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffff0000000; valaddr_reg:x3; val_offset:239787*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239787*0 + 3*57*FLEN/8, x4, x1, x2)

inst_79930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffff8000000; valaddr_reg:x3; val_offset:239790*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239790*0 + 3*58*FLEN/8, x4, x1, x2)

inst_79931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffc000000; valaddr_reg:x3; val_offset:239793*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239793*0 + 3*59*FLEN/8, x4, x1, x2)

inst_79932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffe000000; valaddr_reg:x3; val_offset:239796*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239796*0 + 3*60*FLEN/8, x4, x1, x2)

inst_79933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffff000000; valaddr_reg:x3; val_offset:239799*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239799*0 + 3*61*FLEN/8, x4, x1, x2)

inst_79934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffff800000; valaddr_reg:x3; val_offset:239802*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239802*0 + 3*62*FLEN/8, x4, x1, x2)

inst_79935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffffc00000; valaddr_reg:x3; val_offset:239805*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239805*0 + 3*63*FLEN/8, x4, x1, x2)

inst_79936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffffe00000; valaddr_reg:x3; val_offset:239808*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239808*0 + 3*64*FLEN/8, x4, x1, x2)

inst_79937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffff00000; valaddr_reg:x3; val_offset:239811*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239811*0 + 3*65*FLEN/8, x4, x1, x2)

inst_79938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffff80000; valaddr_reg:x3; val_offset:239814*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239814*0 + 3*66*FLEN/8, x4, x1, x2)

inst_79939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffffc0000; valaddr_reg:x3; val_offset:239817*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239817*0 + 3*67*FLEN/8, x4, x1, x2)

inst_79940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffffe0000; valaddr_reg:x3; val_offset:239820*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239820*0 + 3*68*FLEN/8, x4, x1, x2)

inst_79941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffffff0000; valaddr_reg:x3; val_offset:239823*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239823*0 + 3*69*FLEN/8, x4, x1, x2)

inst_79942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffffff8000; valaddr_reg:x3; val_offset:239826*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239826*0 + 3*70*FLEN/8, x4, x1, x2)

inst_79943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffffffc000; valaddr_reg:x3; val_offset:239829*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239829*0 + 3*71*FLEN/8, x4, x1, x2)

inst_79944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffffffe000; valaddr_reg:x3; val_offset:239832*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239832*0 + 3*72*FLEN/8, x4, x1, x2)

inst_79945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffffff000; valaddr_reg:x3; val_offset:239835*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239835*0 + 3*73*FLEN/8, x4, x1, x2)

inst_79946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffffff800; valaddr_reg:x3; val_offset:239838*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239838*0 + 3*74*FLEN/8, x4, x1, x2)

inst_79947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffffffc00; valaddr_reg:x3; val_offset:239841*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239841*0 + 3*75*FLEN/8, x4, x1, x2)

inst_79948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffffffe00; valaddr_reg:x3; val_offset:239844*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239844*0 + 3*76*FLEN/8, x4, x1, x2)

inst_79949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffffffx00; valaddr_reg:x3; val_offset:239847*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239847*0 + 3*77*FLEN/8, x4, x1, x2)

inst_79950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffffffx80; valaddr_reg:x3; val_offset:239850*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239850*0 + 3*78*FLEN/8, x4, x1, x2)

inst_79951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffffffffc0; valaddr_reg:x3; val_offset:239853*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239853*0 + 3*79*FLEN/8, x4, x1, x2)

inst_79952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffffffffe0; valaddr_reg:x3; val_offset:239856*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239856*0 + 3*80*FLEN/8, x4, x1, x2)

inst_79953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffffffffx0; valaddr_reg:x3; val_offset:239859*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239859*0 + 3*81*FLEN/8, x4, x1, x2)

inst_79954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffffffffx8; valaddr_reg:x3; val_offset:239862*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239862*0 + 3*82*FLEN/8, x4, x1, x2)

inst_79955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffffffffc; valaddr_reg:x3; val_offset:239865*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239865*0 + 3*83*FLEN/8, x4, x1, x2)

inst_79956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9ffffffffffffe; valaddr_reg:x3; val_offset:239868*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239868*0 + 3*84*FLEN/8, x4, x1, x2)

inst_79957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9fffffffffffff; valaddr_reg:x3; val_offset:239871*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239871*0 + 3*85*FLEN/8, x4, x1, x2)

inst_79958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:239874*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239874*0 + 3*86*FLEN/8, x4, x1, x2)

inst_79959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:239877*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239877*0 + 3*87*FLEN/8, x4, x1, x2)

inst_79960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:239880*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239880*0 + 3*88*FLEN/8, x4, x1, x2)

inst_79961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:239883*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239883*0 + 3*89*FLEN/8, x4, x1, x2)

inst_79962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:239886*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239886*0 + 3*90*FLEN/8, x4, x1, x2)

inst_79963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:239889*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239889*0 + 3*91*FLEN/8, x4, x1, x2)

inst_79964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:239892*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239892*0 + 3*92*FLEN/8, x4, x1, x2)

inst_79965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:239895*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239895*0 + 3*93*FLEN/8, x4, x1, x2)

inst_79966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:239898*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239898*0 + 3*94*FLEN/8, x4, x1, x2)

inst_79967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3fx6db6db6db6db6; valaddr_reg:x3; val_offset:239901*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239901*0 + 3*95*FLEN/8, x4, x1, x2)

inst_79968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:239904*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239904*0 + 3*96*FLEN/8, x4, x1, x2)

inst_79969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:239907*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239907*0 + 3*97*FLEN/8, x4, x1, x2)

inst_79970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:239910*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239910*0 + 3*98*FLEN/8, x4, x1, x2)

inst_79971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:239913*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239913*0 + 3*99*FLEN/8, x4, x1, x2)

inst_79972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:239916*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239916*0 + 3*100*FLEN/8, x4, x1, x2)

inst_79973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:239919*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239919*0 + 3*101*FLEN/8, x4, x1, x2)

inst_79974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:239922*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239922*0 + 3*102*FLEN/8, x4, x1, x2)

inst_79975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:239925*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239925*0 + 3*103*FLEN/8, x4, x1, x2)

inst_79976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3fffffffffffffx0; valaddr_reg:x3; val_offset:239928*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239928*0 + 3*104*FLEN/8, x4, x1, x2)

inst_79977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3fffffffffffffx8; valaddr_reg:x3; val_offset:239931*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239931*0 + 3*105*FLEN/8, x4, x1, x2)

inst_79978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:239934*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239934*0 + 3*106*FLEN/8, x4, x1, x2)

inst_79979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:239937*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239937*0 + 3*107*FLEN/8, x4, x1, x2)

inst_79980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:239940*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239940*0 + 3*108*FLEN/8, x4, x1, x2)

inst_79981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:239943*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239943*0 + 3*109*FLEN/8, x4, x1, x2)

inst_79982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:239946*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239946*0 + 3*110*FLEN/8, x4, x1, x2)

inst_79983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:239949*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239949*0 + 3*111*FLEN/8, x4, x1, x2)

inst_79984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:239952*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239952*0 + 3*112*FLEN/8, x4, x1, x2)

inst_79985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:239955*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239955*0 + 3*113*FLEN/8, x4, x1, x2)

inst_79986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:239958*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239958*0 + 3*114*FLEN/8, x4, x1, x2)

inst_79987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:239961*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239961*0 + 3*115*FLEN/8, x4, x1, x2)

inst_79988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:239964*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239964*0 + 3*116*FLEN/8, x4, x1, x2)

inst_79989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:239967*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239967*0 + 3*117*FLEN/8, x4, x1, x2)

inst_79990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:239970*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239970*0 + 3*118*FLEN/8, x4, x1, x2)

inst_79991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:239973*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239973*0 + 3*119*FLEN/8, x4, x1, x2)

inst_79992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:239976*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239976*0 + 3*120*FLEN/8, x4, x1, x2)

inst_79993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:239979*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239979*0 + 3*121*FLEN/8, x4, x1, x2)

inst_79994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:239982*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239982*0 + 3*122*FLEN/8, x4, x1, x2)

inst_79995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:239985*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239985*0 + 3*123*FLEN/8, x4, x1, x2)

inst_79996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:239988*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239988*0 + 3*124*FLEN/8, x4, x1, x2)

inst_79997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:239991*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239991*0 + 3*125*FLEN/8, x4, x1, x2)

inst_79998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0xfffffffffffx0; valaddr_reg:x3; val_offset:239994*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239994*0 + 3*126*FLEN/8, x4, x1, x2)

inst_79999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0xfffffffffffx8; valaddr_reg:x3; val_offset:239997*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 239997*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_80000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:240000*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240000*0 + 3*128*FLEN/8, x4, x1, x2)

inst_80001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:240003*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240003*0 + 3*129*FLEN/8, x4, x1, x2)

inst_80002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000000000000; valaddr_reg:x3; val_offset:240006*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240006*0 + 3*130*FLEN/8, x4, x1, x2)

inst_80003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000000000001; valaddr_reg:x3; val_offset:240009*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240009*0 + 3*131*FLEN/8, x4, x1, x2)

inst_80004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000000000003; valaddr_reg:x3; val_offset:240012*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240012*0 + 3*132*FLEN/8, x4, x1, x2)

inst_80005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000000000007; valaddr_reg:x3; val_offset:240015*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240015*0 + 3*133*FLEN/8, x4, x1, x2)

inst_80006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000000000000f; valaddr_reg:x3; val_offset:240018*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240018*0 + 3*134*FLEN/8, x4, x1, x2)

inst_80007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000000000001f; valaddr_reg:x3; val_offset:240021*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240021*0 + 3*135*FLEN/8, x4, x1, x2)

inst_80008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000000000003f; valaddr_reg:x3; val_offset:240024*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240024*0 + 3*136*FLEN/8, x4, x1, x2)

inst_80009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000000000007f; valaddr_reg:x3; val_offset:240027*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240027*0 + 3*137*FLEN/8, x4, x1, x2)

inst_80010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100000000000ff; valaddr_reg:x3; val_offset:240030*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240030*0 + 3*138*FLEN/8, x4, x1, x2)

inst_80011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100000000001ff; valaddr_reg:x3; val_offset:240033*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240033*0 + 3*139*FLEN/8, x4, x1, x2)

inst_80012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100000000003ff; valaddr_reg:x3; val_offset:240036*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240036*0 + 3*140*FLEN/8, x4, x1, x2)

inst_80013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100000000007ff; valaddr_reg:x3; val_offset:240039*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240039*0 + 3*141*FLEN/8, x4, x1, x2)

inst_80014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000000000fff; valaddr_reg:x3; val_offset:240042*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240042*0 + 3*142*FLEN/8, x4, x1, x2)

inst_80015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000000001fff; valaddr_reg:x3; val_offset:240045*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240045*0 + 3*143*FLEN/8, x4, x1, x2)

inst_80016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000000003fff; valaddr_reg:x3; val_offset:240048*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240048*0 + 3*144*FLEN/8, x4, x1, x2)

inst_80017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000000007fff; valaddr_reg:x3; val_offset:240051*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240051*0 + 3*145*FLEN/8, x4, x1, x2)

inst_80018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000000000ffff; valaddr_reg:x3; val_offset:240054*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240054*0 + 3*146*FLEN/8, x4, x1, x2)

inst_80019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000000001ffff; valaddr_reg:x3; val_offset:240057*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240057*0 + 3*147*FLEN/8, x4, x1, x2)

inst_80020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000000003ffff; valaddr_reg:x3; val_offset:240060*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240060*0 + 3*148*FLEN/8, x4, x1, x2)

inst_80021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000000007ffff; valaddr_reg:x3; val_offset:240063*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240063*0 + 3*149*FLEN/8, x4, x1, x2)

inst_80022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100000000fffff; valaddr_reg:x3; val_offset:240066*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240066*0 + 3*150*FLEN/8, x4, x1, x2)

inst_80023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100000001fffff; valaddr_reg:x3; val_offset:240069*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240069*0 + 3*151*FLEN/8, x4, x1, x2)

inst_80024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100000003fffff; valaddr_reg:x3; val_offset:240072*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240072*0 + 3*152*FLEN/8, x4, x1, x2)

inst_80025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100000007fffff; valaddr_reg:x3; val_offset:240075*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240075*0 + 3*153*FLEN/8, x4, x1, x2)

inst_80026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000000ffffff; valaddr_reg:x3; val_offset:240078*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240078*0 + 3*154*FLEN/8, x4, x1, x2)

inst_80027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000001ffffff; valaddr_reg:x3; val_offset:240081*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240081*0 + 3*155*FLEN/8, x4, x1, x2)

inst_80028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000003ffffff; valaddr_reg:x3; val_offset:240084*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240084*0 + 3*156*FLEN/8, x4, x1, x2)

inst_80029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000007ffffff; valaddr_reg:x3; val_offset:240087*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240087*0 + 3*157*FLEN/8, x4, x1, x2)

inst_80030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000000fffffff; valaddr_reg:x3; val_offset:240090*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240090*0 + 3*158*FLEN/8, x4, x1, x2)

inst_80031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000001fffffff; valaddr_reg:x3; val_offset:240093*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240093*0 + 3*159*FLEN/8, x4, x1, x2)

inst_80032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000003fffffff; valaddr_reg:x3; val_offset:240096*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240096*0 + 3*160*FLEN/8, x4, x1, x2)

inst_80033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000007fffffff; valaddr_reg:x3; val_offset:240099*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240099*0 + 3*161*FLEN/8, x4, x1, x2)

inst_80034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100000ffffffff; valaddr_reg:x3; val_offset:240102*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240102*0 + 3*162*FLEN/8, x4, x1, x2)

inst_80035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100001ffffffff; valaddr_reg:x3; val_offset:240105*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240105*0 + 3*163*FLEN/8, x4, x1, x2)

inst_80036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100003ffffffff; valaddr_reg:x3; val_offset:240108*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240108*0 + 3*164*FLEN/8, x4, x1, x2)

inst_80037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100007ffffffff; valaddr_reg:x3; val_offset:240111*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240111*0 + 3*165*FLEN/8, x4, x1, x2)

inst_80038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110000fffffffff; valaddr_reg:x3; val_offset:240114*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240114*0 + 3*166*FLEN/8, x4, x1, x2)

inst_80039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110001fffffffff; valaddr_reg:x3; val_offset:240117*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240117*0 + 3*167*FLEN/8, x4, x1, x2)

inst_80040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110003fffffffff; valaddr_reg:x3; val_offset:240120*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240120*0 + 3*168*FLEN/8, x4, x1, x2)

inst_80041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110007fffffffff; valaddr_reg:x3; val_offset:240123*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240123*0 + 3*169*FLEN/8, x4, x1, x2)

inst_80042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11000ffffffffff; valaddr_reg:x3; val_offset:240126*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240126*0 + 3*170*FLEN/8, x4, x1, x2)

inst_80043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11001ffffffffff; valaddr_reg:x3; val_offset:240129*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240129*0 + 3*171*FLEN/8, x4, x1, x2)

inst_80044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11003ffffffffff; valaddr_reg:x3; val_offset:240132*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240132*0 + 3*172*FLEN/8, x4, x1, x2)

inst_80045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11007ffffffffff; valaddr_reg:x3; val_offset:240135*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240135*0 + 3*173*FLEN/8, x4, x1, x2)

inst_80046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1100fffffffffff; valaddr_reg:x3; val_offset:240138*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240138*0 + 3*174*FLEN/8, x4, x1, x2)

inst_80047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1101fffffffffff; valaddr_reg:x3; val_offset:240141*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240141*0 + 3*175*FLEN/8, x4, x1, x2)

inst_80048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1103fffffffffff; valaddr_reg:x3; val_offset:240144*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240144*0 + 3*176*FLEN/8, x4, x1, x2)

inst_80049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x1107fffffffffff; valaddr_reg:x3; val_offset:240147*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240147*0 + 3*177*FLEN/8, x4, x1, x2)

inst_80050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x110ffffffffffff; valaddr_reg:x3; val_offset:240150*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240150*0 + 3*178*FLEN/8, x4, x1, x2)

inst_80051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x111ffffffffffff; valaddr_reg:x3; val_offset:240153*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240153*0 + 3*179*FLEN/8, x4, x1, x2)

inst_80052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x113ffffffffffff; valaddr_reg:x3; val_offset:240156*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240156*0 + 3*180*FLEN/8, x4, x1, x2)

inst_80053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x117ffffffffffff; valaddr_reg:x3; val_offset:240159*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240159*0 + 3*181*FLEN/8, x4, x1, x2)

inst_80054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x118000000000000; valaddr_reg:x3; val_offset:240162*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240162*0 + 3*182*FLEN/8, x4, x1, x2)

inst_80055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11c000000000000; valaddr_reg:x3; val_offset:240165*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240165*0 + 3*183*FLEN/8, x4, x1, x2)

inst_80056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11e000000000000; valaddr_reg:x3; val_offset:240168*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240168*0 + 3*184*FLEN/8, x4, x1, x2)

inst_80057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11f000000000000; valaddr_reg:x3; val_offset:240171*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240171*0 + 3*185*FLEN/8, x4, x1, x2)

inst_80058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11f800000000000; valaddr_reg:x3; val_offset:240174*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240174*0 + 3*186*FLEN/8, x4, x1, x2)

inst_80059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fc00000000000; valaddr_reg:x3; val_offset:240177*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240177*0 + 3*187*FLEN/8, x4, x1, x2)

inst_80060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fe00000000000; valaddr_reg:x3; val_offset:240180*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240180*0 + 3*188*FLEN/8, x4, x1, x2)

inst_80061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ff00000000000; valaddr_reg:x3; val_offset:240183*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240183*0 + 3*189*FLEN/8, x4, x1, x2)

inst_80062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ff80000000000; valaddr_reg:x3; val_offset:240186*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240186*0 + 3*190*FLEN/8, x4, x1, x2)

inst_80063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffc0000000000; valaddr_reg:x3; val_offset:240189*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240189*0 + 3*191*FLEN/8, x4, x1, x2)

inst_80064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffe0000000000; valaddr_reg:x3; val_offset:240192*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240192*0 + 3*192*FLEN/8, x4, x1, x2)

inst_80065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fff0000000000; valaddr_reg:x3; val_offset:240195*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240195*0 + 3*193*FLEN/8, x4, x1, x2)

inst_80066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fff8000000000; valaddr_reg:x3; val_offset:240198*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240198*0 + 3*194*FLEN/8, x4, x1, x2)

inst_80067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffc000000000; valaddr_reg:x3; val_offset:240201*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240201*0 + 3*195*FLEN/8, x4, x1, x2)

inst_80068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffe000000000; valaddr_reg:x3; val_offset:240204*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240204*0 + 3*196*FLEN/8, x4, x1, x2)

inst_80069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffff000000000; valaddr_reg:x3; val_offset:240207*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240207*0 + 3*197*FLEN/8, x4, x1, x2)

inst_80070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffff800000000; valaddr_reg:x3; val_offset:240210*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240210*0 + 3*198*FLEN/8, x4, x1, x2)

inst_80071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffc00000000; valaddr_reg:x3; val_offset:240213*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240213*0 + 3*199*FLEN/8, x4, x1, x2)

inst_80072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffe00000000; valaddr_reg:x3; val_offset:240216*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240216*0 + 3*200*FLEN/8, x4, x1, x2)

inst_80073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffff00000000; valaddr_reg:x3; val_offset:240219*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240219*0 + 3*201*FLEN/8, x4, x1, x2)

inst_80074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffff80000000; valaddr_reg:x3; val_offset:240222*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240222*0 + 3*202*FLEN/8, x4, x1, x2)

inst_80075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffc0000000; valaddr_reg:x3; val_offset:240225*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240225*0 + 3*203*FLEN/8, x4, x1, x2)

inst_80076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffe0000000; valaddr_reg:x3; val_offset:240228*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240228*0 + 3*204*FLEN/8, x4, x1, x2)

inst_80077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffff0000000; valaddr_reg:x3; val_offset:240231*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240231*0 + 3*205*FLEN/8, x4, x1, x2)

inst_80078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffff8000000; valaddr_reg:x3; val_offset:240234*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240234*0 + 3*206*FLEN/8, x4, x1, x2)

inst_80079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffc000000; valaddr_reg:x3; val_offset:240237*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240237*0 + 3*207*FLEN/8, x4, x1, x2)

inst_80080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffe000000; valaddr_reg:x3; val_offset:240240*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240240*0 + 3*208*FLEN/8, x4, x1, x2)

inst_80081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffff000000; valaddr_reg:x3; val_offset:240243*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240243*0 + 3*209*FLEN/8, x4, x1, x2)

inst_80082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffff800000; valaddr_reg:x3; val_offset:240246*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240246*0 + 3*210*FLEN/8, x4, x1, x2)

inst_80083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffffc00000; valaddr_reg:x3; val_offset:240249*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240249*0 + 3*211*FLEN/8, x4, x1, x2)

inst_80084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffffe00000; valaddr_reg:x3; val_offset:240252*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240252*0 + 3*212*FLEN/8, x4, x1, x2)

inst_80085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffff00000; valaddr_reg:x3; val_offset:240255*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240255*0 + 3*213*FLEN/8, x4, x1, x2)

inst_80086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffff80000; valaddr_reg:x3; val_offset:240258*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240258*0 + 3*214*FLEN/8, x4, x1, x2)

inst_80087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffffc0000; valaddr_reg:x3; val_offset:240261*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240261*0 + 3*215*FLEN/8, x4, x1, x2)

inst_80088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffffe0000; valaddr_reg:x3; val_offset:240264*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240264*0 + 3*216*FLEN/8, x4, x1, x2)

inst_80089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffffff0000; valaddr_reg:x3; val_offset:240267*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240267*0 + 3*217*FLEN/8, x4, x1, x2)

inst_80090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffffff8000; valaddr_reg:x3; val_offset:240270*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240270*0 + 3*218*FLEN/8, x4, x1, x2)

inst_80091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffffffc000; valaddr_reg:x3; val_offset:240273*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240273*0 + 3*219*FLEN/8, x4, x1, x2)

inst_80092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffffffe000; valaddr_reg:x3; val_offset:240276*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240276*0 + 3*220*FLEN/8, x4, x1, x2)

inst_80093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffffff000; valaddr_reg:x3; val_offset:240279*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240279*0 + 3*221*FLEN/8, x4, x1, x2)

inst_80094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffffff800; valaddr_reg:x3; val_offset:240282*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240282*0 + 3*222*FLEN/8, x4, x1, x2)

inst_80095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffffffc00; valaddr_reg:x3; val_offset:240285*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240285*0 + 3*223*FLEN/8, x4, x1, x2)

inst_80096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffffffe00; valaddr_reg:x3; val_offset:240288*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240288*0 + 3*224*FLEN/8, x4, x1, x2)

inst_80097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffffffx00; valaddr_reg:x3; val_offset:240291*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240291*0 + 3*225*FLEN/8, x4, x1, x2)

inst_80098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffffffx80; valaddr_reg:x3; val_offset:240294*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240294*0 + 3*226*FLEN/8, x4, x1, x2)

inst_80099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffffffffc0; valaddr_reg:x3; val_offset:240297*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240297*0 + 3*227*FLEN/8, x4, x1, x2)

inst_80100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffffffffe0; valaddr_reg:x3; val_offset:240300*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240300*0 + 3*228*FLEN/8, x4, x1, x2)

inst_80101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffffffffx0; valaddr_reg:x3; val_offset:240303*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240303*0 + 3*229*FLEN/8, x4, x1, x2)

inst_80102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffffffffx8; valaddr_reg:x3; val_offset:240306*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240306*0 + 3*230*FLEN/8, x4, x1, x2)

inst_80103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffffffffc; valaddr_reg:x3; val_offset:240309*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240309*0 + 3*231*FLEN/8, x4, x1, x2)

inst_80104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11ffffffffffffe; valaddr_reg:x3; val_offset:240312*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240312*0 + 3*232*FLEN/8, x4, x1, x2)

inst_80105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cfa4a3b53921 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x011 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8cfa4a3b53921; op2val:0x0;
op3val:0x11fffffffffffff; valaddr_reg:x3; val_offset:240315*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240315*0 + 3*233*FLEN/8, x4, x1, x2)

inst_80106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:240318*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240318*0 + 3*234*FLEN/8, x4, x1, x2)

inst_80107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:240321*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240321*0 + 3*235*FLEN/8, x4, x1, x2)

inst_80108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:240324*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240324*0 + 3*236*FLEN/8, x4, x1, x2)

inst_80109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:240327*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240327*0 + 3*237*FLEN/8, x4, x1, x2)

inst_80110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:240330*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240330*0 + 3*238*FLEN/8, x4, x1, x2)

inst_80111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:240333*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240333*0 + 3*239*FLEN/8, x4, x1, x2)

inst_80112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:240336*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240336*0 + 3*240*FLEN/8, x4, x1, x2)

inst_80113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:240339*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240339*0 + 3*241*FLEN/8, x4, x1, x2)

inst_80114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:240342*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240342*0 + 3*242*FLEN/8, x4, x1, x2)

inst_80115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:240345*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240345*0 + 3*243*FLEN/8, x4, x1, x2)

inst_80116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:240348*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240348*0 + 3*244*FLEN/8, x4, x1, x2)

inst_80117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:240351*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240351*0 + 3*245*FLEN/8, x4, x1, x2)

inst_80118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:240354*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240354*0 + 3*246*FLEN/8, x4, x1, x2)

inst_80119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:240357*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240357*0 + 3*247*FLEN/8, x4, x1, x2)

inst_80120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:240360*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240360*0 + 3*248*FLEN/8, x4, x1, x2)

inst_80121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:240363*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240363*0 + 3*249*FLEN/8, x4, x1, x2)

inst_80122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:240366*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240366*0 + 3*250*FLEN/8, x4, x1, x2)

inst_80123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:240369*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240369*0 + 3*251*FLEN/8, x4, x1, x2)

inst_80124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0xfffffffffffx0; valaddr_reg:x3; val_offset:240372*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240372*0 + 3*252*FLEN/8, x4, x1, x2)

inst_80125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0xfffffffffffx8; valaddr_reg:x3; val_offset:240375*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240375*0 + 3*253*FLEN/8, x4, x1, x2)

inst_80126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:240378*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240378*0 + 3*254*FLEN/8, x4, x1, x2)

inst_80127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:240381*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240381*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_80128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000000000000; valaddr_reg:x3; val_offset:240384*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240384*0 + 3*256*FLEN/8, x4, x1, x2)

inst_80129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000000000001; valaddr_reg:x3; val_offset:240387*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240387*0 + 3*257*FLEN/8, x4, x1, x2)

inst_80130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000000000003; valaddr_reg:x3; val_offset:240390*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240390*0 + 3*258*FLEN/8, x4, x1, x2)

inst_80131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000000000007; valaddr_reg:x3; val_offset:240393*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240393*0 + 3*259*FLEN/8, x4, x1, x2)

inst_80132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000000000000f; valaddr_reg:x3; val_offset:240396*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240396*0 + 3*260*FLEN/8, x4, x1, x2)

inst_80133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000000000001f; valaddr_reg:x3; val_offset:240399*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240399*0 + 3*261*FLEN/8, x4, x1, x2)

inst_80134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000000000003f; valaddr_reg:x3; val_offset:240402*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240402*0 + 3*262*FLEN/8, x4, x1, x2)

inst_80135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000000000007f; valaddr_reg:x3; val_offset:240405*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240405*0 + 3*263*FLEN/8, x4, x1, x2)

inst_80136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200000000000ff; valaddr_reg:x3; val_offset:240408*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240408*0 + 3*264*FLEN/8, x4, x1, x2)

inst_80137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200000000001ff; valaddr_reg:x3; val_offset:240411*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240411*0 + 3*265*FLEN/8, x4, x1, x2)

inst_80138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200000000003ff; valaddr_reg:x3; val_offset:240414*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240414*0 + 3*266*FLEN/8, x4, x1, x2)

inst_80139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200000000007ff; valaddr_reg:x3; val_offset:240417*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240417*0 + 3*267*FLEN/8, x4, x1, x2)

inst_80140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000000000fff; valaddr_reg:x3; val_offset:240420*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240420*0 + 3*268*FLEN/8, x4, x1, x2)

inst_80141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000000001fff; valaddr_reg:x3; val_offset:240423*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240423*0 + 3*269*FLEN/8, x4, x1, x2)

inst_80142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000000003fff; valaddr_reg:x3; val_offset:240426*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240426*0 + 3*270*FLEN/8, x4, x1, x2)

inst_80143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000000007fff; valaddr_reg:x3; val_offset:240429*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240429*0 + 3*271*FLEN/8, x4, x1, x2)

inst_80144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000000000ffff; valaddr_reg:x3; val_offset:240432*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240432*0 + 3*272*FLEN/8, x4, x1, x2)

inst_80145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000000001ffff; valaddr_reg:x3; val_offset:240435*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240435*0 + 3*273*FLEN/8, x4, x1, x2)

inst_80146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000000003ffff; valaddr_reg:x3; val_offset:240438*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240438*0 + 3*274*FLEN/8, x4, x1, x2)

inst_80147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000000007ffff; valaddr_reg:x3; val_offset:240441*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240441*0 + 3*275*FLEN/8, x4, x1, x2)

inst_80148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200000000fffff; valaddr_reg:x3; val_offset:240444*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240444*0 + 3*276*FLEN/8, x4, x1, x2)

inst_80149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200000001fffff; valaddr_reg:x3; val_offset:240447*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240447*0 + 3*277*FLEN/8, x4, x1, x2)

inst_80150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200000003fffff; valaddr_reg:x3; val_offset:240450*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240450*0 + 3*278*FLEN/8, x4, x1, x2)

inst_80151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200000007fffff; valaddr_reg:x3; val_offset:240453*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240453*0 + 3*279*FLEN/8, x4, x1, x2)

inst_80152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000000ffffff; valaddr_reg:x3; val_offset:240456*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240456*0 + 3*280*FLEN/8, x4, x1, x2)

inst_80153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000001ffffff; valaddr_reg:x3; val_offset:240459*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240459*0 + 3*281*FLEN/8, x4, x1, x2)

inst_80154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000003ffffff; valaddr_reg:x3; val_offset:240462*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240462*0 + 3*282*FLEN/8, x4, x1, x2)

inst_80155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000007ffffff; valaddr_reg:x3; val_offset:240465*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240465*0 + 3*283*FLEN/8, x4, x1, x2)

inst_80156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000000fffffff; valaddr_reg:x3; val_offset:240468*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240468*0 + 3*284*FLEN/8, x4, x1, x2)

inst_80157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000001fffffff; valaddr_reg:x3; val_offset:240471*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240471*0 + 3*285*FLEN/8, x4, x1, x2)

inst_80158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000003fffffff; valaddr_reg:x3; val_offset:240474*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240474*0 + 3*286*FLEN/8, x4, x1, x2)

inst_80159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000007fffffff; valaddr_reg:x3; val_offset:240477*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240477*0 + 3*287*FLEN/8, x4, x1, x2)

inst_80160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200000ffffffff; valaddr_reg:x3; val_offset:240480*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240480*0 + 3*288*FLEN/8, x4, x1, x2)

inst_80161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200001ffffffff; valaddr_reg:x3; val_offset:240483*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240483*0 + 3*289*FLEN/8, x4, x1, x2)

inst_80162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200003ffffffff; valaddr_reg:x3; val_offset:240486*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240486*0 + 3*290*FLEN/8, x4, x1, x2)

inst_80163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200007ffffffff; valaddr_reg:x3; val_offset:240489*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240489*0 + 3*291*FLEN/8, x4, x1, x2)

inst_80164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120000fffffffff; valaddr_reg:x3; val_offset:240492*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240492*0 + 3*292*FLEN/8, x4, x1, x2)

inst_80165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120001fffffffff; valaddr_reg:x3; val_offset:240495*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240495*0 + 3*293*FLEN/8, x4, x1, x2)

inst_80166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120003fffffffff; valaddr_reg:x3; val_offset:240498*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240498*0 + 3*294*FLEN/8, x4, x1, x2)

inst_80167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120007fffffffff; valaddr_reg:x3; val_offset:240501*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240501*0 + 3*295*FLEN/8, x4, x1, x2)

inst_80168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12000ffffffffff; valaddr_reg:x3; val_offset:240504*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240504*0 + 3*296*FLEN/8, x4, x1, x2)

inst_80169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12001ffffffffff; valaddr_reg:x3; val_offset:240507*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240507*0 + 3*297*FLEN/8, x4, x1, x2)

inst_80170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12003ffffffffff; valaddr_reg:x3; val_offset:240510*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240510*0 + 3*298*FLEN/8, x4, x1, x2)

inst_80171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12007ffffffffff; valaddr_reg:x3; val_offset:240513*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240513*0 + 3*299*FLEN/8, x4, x1, x2)

inst_80172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1200fffffffffff; valaddr_reg:x3; val_offset:240516*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240516*0 + 3*300*FLEN/8, x4, x1, x2)

inst_80173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1201fffffffffff; valaddr_reg:x3; val_offset:240519*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240519*0 + 3*301*FLEN/8, x4, x1, x2)

inst_80174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1203fffffffffff; valaddr_reg:x3; val_offset:240522*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240522*0 + 3*302*FLEN/8, x4, x1, x2)

inst_80175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x1207fffffffffff; valaddr_reg:x3; val_offset:240525*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240525*0 + 3*303*FLEN/8, x4, x1, x2)

inst_80176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x120ffffffffffff; valaddr_reg:x3; val_offset:240528*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240528*0 + 3*304*FLEN/8, x4, x1, x2)

inst_80177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x121ffffffffffff; valaddr_reg:x3; val_offset:240531*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240531*0 + 3*305*FLEN/8, x4, x1, x2)

inst_80178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x123ffffffffffff; valaddr_reg:x3; val_offset:240534*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240534*0 + 3*306*FLEN/8, x4, x1, x2)

inst_80179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x127ffffffffffff; valaddr_reg:x3; val_offset:240537*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240537*0 + 3*307*FLEN/8, x4, x1, x2)

inst_80180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x128000000000000; valaddr_reg:x3; val_offset:240540*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240540*0 + 3*308*FLEN/8, x4, x1, x2)

inst_80181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12c000000000000; valaddr_reg:x3; val_offset:240543*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240543*0 + 3*309*FLEN/8, x4, x1, x2)

inst_80182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12e000000000000; valaddr_reg:x3; val_offset:240546*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240546*0 + 3*310*FLEN/8, x4, x1, x2)

inst_80183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12f000000000000; valaddr_reg:x3; val_offset:240549*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240549*0 + 3*311*FLEN/8, x4, x1, x2)

inst_80184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12f800000000000; valaddr_reg:x3; val_offset:240552*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240552*0 + 3*312*FLEN/8, x4, x1, x2)

inst_80185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fc00000000000; valaddr_reg:x3; val_offset:240555*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240555*0 + 3*313*FLEN/8, x4, x1, x2)

inst_80186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fe00000000000; valaddr_reg:x3; val_offset:240558*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240558*0 + 3*314*FLEN/8, x4, x1, x2)

inst_80187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ff00000000000; valaddr_reg:x3; val_offset:240561*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240561*0 + 3*315*FLEN/8, x4, x1, x2)

inst_80188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ff80000000000; valaddr_reg:x3; val_offset:240564*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240564*0 + 3*316*FLEN/8, x4, x1, x2)

inst_80189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffc0000000000; valaddr_reg:x3; val_offset:240567*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240567*0 + 3*317*FLEN/8, x4, x1, x2)

inst_80190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffe0000000000; valaddr_reg:x3; val_offset:240570*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240570*0 + 3*318*FLEN/8, x4, x1, x2)

inst_80191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fff0000000000; valaddr_reg:x3; val_offset:240573*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240573*0 + 3*319*FLEN/8, x4, x1, x2)

inst_80192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fff8000000000; valaddr_reg:x3; val_offset:240576*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240576*0 + 3*320*FLEN/8, x4, x1, x2)

inst_80193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffc000000000; valaddr_reg:x3; val_offset:240579*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240579*0 + 3*321*FLEN/8, x4, x1, x2)

inst_80194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffe000000000; valaddr_reg:x3; val_offset:240582*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240582*0 + 3*322*FLEN/8, x4, x1, x2)

inst_80195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffff000000000; valaddr_reg:x3; val_offset:240585*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240585*0 + 3*323*FLEN/8, x4, x1, x2)

inst_80196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffff800000000; valaddr_reg:x3; val_offset:240588*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240588*0 + 3*324*FLEN/8, x4, x1, x2)

inst_80197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffc00000000; valaddr_reg:x3; val_offset:240591*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240591*0 + 3*325*FLEN/8, x4, x1, x2)

inst_80198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffe00000000; valaddr_reg:x3; val_offset:240594*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240594*0 + 3*326*FLEN/8, x4, x1, x2)

inst_80199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffff00000000; valaddr_reg:x3; val_offset:240597*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240597*0 + 3*327*FLEN/8, x4, x1, x2)

inst_80200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffff80000000; valaddr_reg:x3; val_offset:240600*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240600*0 + 3*328*FLEN/8, x4, x1, x2)

inst_80201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffc0000000; valaddr_reg:x3; val_offset:240603*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240603*0 + 3*329*FLEN/8, x4, x1, x2)

inst_80202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffe0000000; valaddr_reg:x3; val_offset:240606*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240606*0 + 3*330*FLEN/8, x4, x1, x2)

inst_80203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffff0000000; valaddr_reg:x3; val_offset:240609*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240609*0 + 3*331*FLEN/8, x4, x1, x2)

inst_80204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffff8000000; valaddr_reg:x3; val_offset:240612*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240612*0 + 3*332*FLEN/8, x4, x1, x2)

inst_80205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffc000000; valaddr_reg:x3; val_offset:240615*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240615*0 + 3*333*FLEN/8, x4, x1, x2)

inst_80206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffe000000; valaddr_reg:x3; val_offset:240618*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240618*0 + 3*334*FLEN/8, x4, x1, x2)

inst_80207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffff000000; valaddr_reg:x3; val_offset:240621*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240621*0 + 3*335*FLEN/8, x4, x1, x2)

inst_80208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffff800000; valaddr_reg:x3; val_offset:240624*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240624*0 + 3*336*FLEN/8, x4, x1, x2)

inst_80209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffffc00000; valaddr_reg:x3; val_offset:240627*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240627*0 + 3*337*FLEN/8, x4, x1, x2)

inst_80210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffffe00000; valaddr_reg:x3; val_offset:240630*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240630*0 + 3*338*FLEN/8, x4, x1, x2)

inst_80211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffff00000; valaddr_reg:x3; val_offset:240633*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240633*0 + 3*339*FLEN/8, x4, x1, x2)

inst_80212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffff80000; valaddr_reg:x3; val_offset:240636*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240636*0 + 3*340*FLEN/8, x4, x1, x2)

inst_80213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffffc0000; valaddr_reg:x3; val_offset:240639*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240639*0 + 3*341*FLEN/8, x4, x1, x2)

inst_80214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffffe0000; valaddr_reg:x3; val_offset:240642*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240642*0 + 3*342*FLEN/8, x4, x1, x2)

inst_80215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffffff0000; valaddr_reg:x3; val_offset:240645*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240645*0 + 3*343*FLEN/8, x4, x1, x2)

inst_80216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffffff8000; valaddr_reg:x3; val_offset:240648*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240648*0 + 3*344*FLEN/8, x4, x1, x2)

inst_80217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffffffc000; valaddr_reg:x3; val_offset:240651*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240651*0 + 3*345*FLEN/8, x4, x1, x2)

inst_80218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffffffe000; valaddr_reg:x3; val_offset:240654*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240654*0 + 3*346*FLEN/8, x4, x1, x2)

inst_80219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffffff000; valaddr_reg:x3; val_offset:240657*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240657*0 + 3*347*FLEN/8, x4, x1, x2)

inst_80220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffffff800; valaddr_reg:x3; val_offset:240660*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240660*0 + 3*348*FLEN/8, x4, x1, x2)

inst_80221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffffffc00; valaddr_reg:x3; val_offset:240663*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240663*0 + 3*349*FLEN/8, x4, x1, x2)

inst_80222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffffffe00; valaddr_reg:x3; val_offset:240666*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240666*0 + 3*350*FLEN/8, x4, x1, x2)

inst_80223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffffffx00; valaddr_reg:x3; val_offset:240669*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240669*0 + 3*351*FLEN/8, x4, x1, x2)

inst_80224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffffffx80; valaddr_reg:x3; val_offset:240672*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240672*0 + 3*352*FLEN/8, x4, x1, x2)

inst_80225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffffffffc0; valaddr_reg:x3; val_offset:240675*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240675*0 + 3*353*FLEN/8, x4, x1, x2)

inst_80226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffffffffe0; valaddr_reg:x3; val_offset:240678*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240678*0 + 3*354*FLEN/8, x4, x1, x2)

inst_80227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffffffffx0; valaddr_reg:x3; val_offset:240681*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240681*0 + 3*355*FLEN/8, x4, x1, x2)

inst_80228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffffffffx8; valaddr_reg:x3; val_offset:240684*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240684*0 + 3*356*FLEN/8, x4, x1, x2)

inst_80229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffffffffc; valaddr_reg:x3; val_offset:240687*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240687*0 + 3*357*FLEN/8, x4, x1, x2)

inst_80230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12ffffffffffffe; valaddr_reg:x3; val_offset:240690*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240690*0 + 3*358*FLEN/8, x4, x1, x2)

inst_80231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8dx1b44419174 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8dx1b44419174; op2val:0x0;
op3val:0x12fffffffffffff; valaddr_reg:x3; val_offset:240693*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240693*0 + 3*359*FLEN/8, x4, x1, x2)

inst_80232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:240696*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240696*0 + 3*360*FLEN/8, x4, x1, x2)

inst_80233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:240699*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240699*0 + 3*361*FLEN/8, x4, x1, x2)

inst_80234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:240702*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240702*0 + 3*362*FLEN/8, x4, x1, x2)

inst_80235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:240705*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240705*0 + 3*363*FLEN/8, x4, x1, x2)

inst_80236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:240708*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240708*0 + 3*364*FLEN/8, x4, x1, x2)

inst_80237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:240711*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240711*0 + 3*365*FLEN/8, x4, x1, x2)

inst_80238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:240714*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240714*0 + 3*366*FLEN/8, x4, x1, x2)

inst_80239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:240717*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240717*0 + 3*367*FLEN/8, x4, x1, x2)

inst_80240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:240720*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240720*0 + 3*368*FLEN/8, x4, x1, x2)

inst_80241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:240723*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240723*0 + 3*369*FLEN/8, x4, x1, x2)

inst_80242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:240726*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240726*0 + 3*370*FLEN/8, x4, x1, x2)

inst_80243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:240729*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240729*0 + 3*371*FLEN/8, x4, x1, x2)

inst_80244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:240732*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240732*0 + 3*372*FLEN/8, x4, x1, x2)

inst_80245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:240735*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240735*0 + 3*373*FLEN/8, x4, x1, x2)

inst_80246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:240738*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240738*0 + 3*374*FLEN/8, x4, x1, x2)

inst_80247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:240741*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240741*0 + 3*375*FLEN/8, x4, x1, x2)

inst_80248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:240744*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240744*0 + 3*376*FLEN/8, x4, x1, x2)

inst_80249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:240747*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240747*0 + 3*377*FLEN/8, x4, x1, x2)

inst_80250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x1fffffffffffx0; valaddr_reg:x3; val_offset:240750*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240750*0 + 3*378*FLEN/8, x4, x1, x2)

inst_80251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x1fffffffffffx8; valaddr_reg:x3; val_offset:240753*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240753*0 + 3*379*FLEN/8, x4, x1, x2)

inst_80252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:240756*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240756*0 + 3*380*FLEN/8, x4, x1, x2)

inst_80253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:240759*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240759*0 + 3*381*FLEN/8, x4, x1, x2)

inst_80254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000000000000; valaddr_reg:x3; val_offset:240762*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240762*0 + 3*382*FLEN/8, x4, x1, x2)

inst_80255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000000000001; valaddr_reg:x3; val_offset:240765*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240765*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_80256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000000000003; valaddr_reg:x3; val_offset:240768*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240768*0 + 3*384*FLEN/8, x4, x1, x2)

inst_80257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000000000007; valaddr_reg:x3; val_offset:240771*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240771*0 + 3*385*FLEN/8, x4, x1, x2)

inst_80258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000000000000f; valaddr_reg:x3; val_offset:240774*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240774*0 + 3*386*FLEN/8, x4, x1, x2)

inst_80259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000000000001f; valaddr_reg:x3; val_offset:240777*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240777*0 + 3*387*FLEN/8, x4, x1, x2)

inst_80260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000000000003f; valaddr_reg:x3; val_offset:240780*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240780*0 + 3*388*FLEN/8, x4, x1, x2)

inst_80261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000000000007f; valaddr_reg:x3; val_offset:240783*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240783*0 + 3*389*FLEN/8, x4, x1, x2)

inst_80262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100000000000ff; valaddr_reg:x3; val_offset:240786*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240786*0 + 3*390*FLEN/8, x4, x1, x2)

inst_80263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100000000001ff; valaddr_reg:x3; val_offset:240789*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240789*0 + 3*391*FLEN/8, x4, x1, x2)

inst_80264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100000000003ff; valaddr_reg:x3; val_offset:240792*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240792*0 + 3*392*FLEN/8, x4, x1, x2)

inst_80265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100000000007ff; valaddr_reg:x3; val_offset:240795*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240795*0 + 3*393*FLEN/8, x4, x1, x2)

inst_80266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000000000fff; valaddr_reg:x3; val_offset:240798*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240798*0 + 3*394*FLEN/8, x4, x1, x2)

inst_80267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000000001fff; valaddr_reg:x3; val_offset:240801*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240801*0 + 3*395*FLEN/8, x4, x1, x2)

inst_80268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000000003fff; valaddr_reg:x3; val_offset:240804*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240804*0 + 3*396*FLEN/8, x4, x1, x2)

inst_80269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000000007fff; valaddr_reg:x3; val_offset:240807*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240807*0 + 3*397*FLEN/8, x4, x1, x2)

inst_80270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000000000ffff; valaddr_reg:x3; val_offset:240810*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240810*0 + 3*398*FLEN/8, x4, x1, x2)

inst_80271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000000001ffff; valaddr_reg:x3; val_offset:240813*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240813*0 + 3*399*FLEN/8, x4, x1, x2)

inst_80272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000000003ffff; valaddr_reg:x3; val_offset:240816*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240816*0 + 3*400*FLEN/8, x4, x1, x2)

inst_80273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000000007ffff; valaddr_reg:x3; val_offset:240819*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240819*0 + 3*401*FLEN/8, x4, x1, x2)

inst_80274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100000000fffff; valaddr_reg:x3; val_offset:240822*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240822*0 + 3*402*FLEN/8, x4, x1, x2)

inst_80275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100000001fffff; valaddr_reg:x3; val_offset:240825*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240825*0 + 3*403*FLEN/8, x4, x1, x2)

inst_80276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100000003fffff; valaddr_reg:x3; val_offset:240828*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240828*0 + 3*404*FLEN/8, x4, x1, x2)

inst_80277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100000007fffff; valaddr_reg:x3; val_offset:240831*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240831*0 + 3*405*FLEN/8, x4, x1, x2)

inst_80278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000000ffffff; valaddr_reg:x3; val_offset:240834*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240834*0 + 3*406*FLEN/8, x4, x1, x2)

inst_80279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000001ffffff; valaddr_reg:x3; val_offset:240837*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240837*0 + 3*407*FLEN/8, x4, x1, x2)

inst_80280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000003ffffff; valaddr_reg:x3; val_offset:240840*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240840*0 + 3*408*FLEN/8, x4, x1, x2)

inst_80281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000007ffffff; valaddr_reg:x3; val_offset:240843*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240843*0 + 3*409*FLEN/8, x4, x1, x2)

inst_80282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000000fffffff; valaddr_reg:x3; val_offset:240846*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240846*0 + 3*410*FLEN/8, x4, x1, x2)

inst_80283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000001fffffff; valaddr_reg:x3; val_offset:240849*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240849*0 + 3*411*FLEN/8, x4, x1, x2)

inst_80284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000003fffffff; valaddr_reg:x3; val_offset:240852*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240852*0 + 3*412*FLEN/8, x4, x1, x2)

inst_80285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000007fffffff; valaddr_reg:x3; val_offset:240855*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240855*0 + 3*413*FLEN/8, x4, x1, x2)

inst_80286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100000ffffffff; valaddr_reg:x3; val_offset:240858*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240858*0 + 3*414*FLEN/8, x4, x1, x2)

inst_80287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100001ffffffff; valaddr_reg:x3; val_offset:240861*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240861*0 + 3*415*FLEN/8, x4, x1, x2)

inst_80288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100003ffffffff; valaddr_reg:x3; val_offset:240864*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240864*0 + 3*416*FLEN/8, x4, x1, x2)

inst_80289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100007ffffffff; valaddr_reg:x3; val_offset:240867*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240867*0 + 3*417*FLEN/8, x4, x1, x2)

inst_80290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410000fffffffff; valaddr_reg:x3; val_offset:240870*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240870*0 + 3*418*FLEN/8, x4, x1, x2)

inst_80291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410001fffffffff; valaddr_reg:x3; val_offset:240873*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240873*0 + 3*419*FLEN/8, x4, x1, x2)

inst_80292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410003fffffffff; valaddr_reg:x3; val_offset:240876*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240876*0 + 3*420*FLEN/8, x4, x1, x2)

inst_80293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410007fffffffff; valaddr_reg:x3; val_offset:240879*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240879*0 + 3*421*FLEN/8, x4, x1, x2)

inst_80294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41000ffffffffff; valaddr_reg:x3; val_offset:240882*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240882*0 + 3*422*FLEN/8, x4, x1, x2)

inst_80295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41001ffffffffff; valaddr_reg:x3; val_offset:240885*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240885*0 + 3*423*FLEN/8, x4, x1, x2)

inst_80296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41003ffffffffff; valaddr_reg:x3; val_offset:240888*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240888*0 + 3*424*FLEN/8, x4, x1, x2)

inst_80297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41007ffffffffff; valaddr_reg:x3; val_offset:240891*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240891*0 + 3*425*FLEN/8, x4, x1, x2)

inst_80298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4100fffffffffff; valaddr_reg:x3; val_offset:240894*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240894*0 + 3*426*FLEN/8, x4, x1, x2)

inst_80299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4101fffffffffff; valaddr_reg:x3; val_offset:240897*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240897*0 + 3*427*FLEN/8, x4, x1, x2)

inst_80300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4103fffffffffff; valaddr_reg:x3; val_offset:240900*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240900*0 + 3*428*FLEN/8, x4, x1, x2)

inst_80301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x4107fffffffffff; valaddr_reg:x3; val_offset:240903*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240903*0 + 3*429*FLEN/8, x4, x1, x2)

inst_80302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x410ffffffffffff; valaddr_reg:x3; val_offset:240906*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240906*0 + 3*430*FLEN/8, x4, x1, x2)

inst_80303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x411ffffffffffff; valaddr_reg:x3; val_offset:240909*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240909*0 + 3*431*FLEN/8, x4, x1, x2)

inst_80304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x413ffffffffffff; valaddr_reg:x3; val_offset:240912*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240912*0 + 3*432*FLEN/8, x4, x1, x2)

inst_80305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x417ffffffffffff; valaddr_reg:x3; val_offset:240915*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240915*0 + 3*433*FLEN/8, x4, x1, x2)

inst_80306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x418000000000000; valaddr_reg:x3; val_offset:240918*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240918*0 + 3*434*FLEN/8, x4, x1, x2)

inst_80307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41c000000000000; valaddr_reg:x3; val_offset:240921*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240921*0 + 3*435*FLEN/8, x4, x1, x2)

inst_80308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41e000000000000; valaddr_reg:x3; val_offset:240924*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240924*0 + 3*436*FLEN/8, x4, x1, x2)

inst_80309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41f000000000000; valaddr_reg:x3; val_offset:240927*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240927*0 + 3*437*FLEN/8, x4, x1, x2)

inst_80310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41f800000000000; valaddr_reg:x3; val_offset:240930*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240930*0 + 3*438*FLEN/8, x4, x1, x2)

inst_80311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fc00000000000; valaddr_reg:x3; val_offset:240933*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240933*0 + 3*439*FLEN/8, x4, x1, x2)

inst_80312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fe00000000000; valaddr_reg:x3; val_offset:240936*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240936*0 + 3*440*FLEN/8, x4, x1, x2)

inst_80313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ff00000000000; valaddr_reg:x3; val_offset:240939*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240939*0 + 3*441*FLEN/8, x4, x1, x2)

inst_80314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ff80000000000; valaddr_reg:x3; val_offset:240942*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240942*0 + 3*442*FLEN/8, x4, x1, x2)

inst_80315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffc0000000000; valaddr_reg:x3; val_offset:240945*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240945*0 + 3*443*FLEN/8, x4, x1, x2)

inst_80316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffe0000000000; valaddr_reg:x3; val_offset:240948*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240948*0 + 3*444*FLEN/8, x4, x1, x2)

inst_80317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fff0000000000; valaddr_reg:x3; val_offset:240951*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240951*0 + 3*445*FLEN/8, x4, x1, x2)

inst_80318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fff8000000000; valaddr_reg:x3; val_offset:240954*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240954*0 + 3*446*FLEN/8, x4, x1, x2)

inst_80319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffc000000000; valaddr_reg:x3; val_offset:240957*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240957*0 + 3*447*FLEN/8, x4, x1, x2)

inst_80320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffe000000000; valaddr_reg:x3; val_offset:240960*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240960*0 + 3*448*FLEN/8, x4, x1, x2)

inst_80321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffff000000000; valaddr_reg:x3; val_offset:240963*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240963*0 + 3*449*FLEN/8, x4, x1, x2)

inst_80322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffff800000000; valaddr_reg:x3; val_offset:240966*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240966*0 + 3*450*FLEN/8, x4, x1, x2)

inst_80323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffc00000000; valaddr_reg:x3; val_offset:240969*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240969*0 + 3*451*FLEN/8, x4, x1, x2)

inst_80324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffe00000000; valaddr_reg:x3; val_offset:240972*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240972*0 + 3*452*FLEN/8, x4, x1, x2)

inst_80325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffff00000000; valaddr_reg:x3; val_offset:240975*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240975*0 + 3*453*FLEN/8, x4, x1, x2)

inst_80326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffff80000000; valaddr_reg:x3; val_offset:240978*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240978*0 + 3*454*FLEN/8, x4, x1, x2)

inst_80327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffc0000000; valaddr_reg:x3; val_offset:240981*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240981*0 + 3*455*FLEN/8, x4, x1, x2)

inst_80328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffe0000000; valaddr_reg:x3; val_offset:240984*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240984*0 + 3*456*FLEN/8, x4, x1, x2)

inst_80329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffff0000000; valaddr_reg:x3; val_offset:240987*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240987*0 + 3*457*FLEN/8, x4, x1, x2)

inst_80330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffff8000000; valaddr_reg:x3; val_offset:240990*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240990*0 + 3*458*FLEN/8, x4, x1, x2)

inst_80331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffc000000; valaddr_reg:x3; val_offset:240993*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240993*0 + 3*459*FLEN/8, x4, x1, x2)

inst_80332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffe000000; valaddr_reg:x3; val_offset:240996*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240996*0 + 3*460*FLEN/8, x4, x1, x2)

inst_80333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffff000000; valaddr_reg:x3; val_offset:240999*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240999*0 + 3*461*FLEN/8, x4, x1, x2)

inst_80334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffff800000; valaddr_reg:x3; val_offset:241002*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241002*0 + 3*462*FLEN/8, x4, x1, x2)

inst_80335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffffc00000; valaddr_reg:x3; val_offset:241005*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241005*0 + 3*463*FLEN/8, x4, x1, x2)

inst_80336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffffe00000; valaddr_reg:x3; val_offset:241008*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241008*0 + 3*464*FLEN/8, x4, x1, x2)

inst_80337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffff00000; valaddr_reg:x3; val_offset:241011*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241011*0 + 3*465*FLEN/8, x4, x1, x2)

inst_80338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffff80000; valaddr_reg:x3; val_offset:241014*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241014*0 + 3*466*FLEN/8, x4, x1, x2)

inst_80339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffffc0000; valaddr_reg:x3; val_offset:241017*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241017*0 + 3*467*FLEN/8, x4, x1, x2)

inst_80340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffffe0000; valaddr_reg:x3; val_offset:241020*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241020*0 + 3*468*FLEN/8, x4, x1, x2)

inst_80341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffffff0000; valaddr_reg:x3; val_offset:241023*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241023*0 + 3*469*FLEN/8, x4, x1, x2)

inst_80342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffffff8000; valaddr_reg:x3; val_offset:241026*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241026*0 + 3*470*FLEN/8, x4, x1, x2)

inst_80343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffffffc000; valaddr_reg:x3; val_offset:241029*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241029*0 + 3*471*FLEN/8, x4, x1, x2)

inst_80344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffffffe000; valaddr_reg:x3; val_offset:241032*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241032*0 + 3*472*FLEN/8, x4, x1, x2)

inst_80345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffffff000; valaddr_reg:x3; val_offset:241035*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241035*0 + 3*473*FLEN/8, x4, x1, x2)

inst_80346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffffff800; valaddr_reg:x3; val_offset:241038*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241038*0 + 3*474*FLEN/8, x4, x1, x2)

inst_80347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffffffc00; valaddr_reg:x3; val_offset:241041*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241041*0 + 3*475*FLEN/8, x4, x1, x2)

inst_80348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffffffe00; valaddr_reg:x3; val_offset:241044*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241044*0 + 3*476*FLEN/8, x4, x1, x2)

inst_80349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffffffx00; valaddr_reg:x3; val_offset:241047*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241047*0 + 3*477*FLEN/8, x4, x1, x2)

inst_80350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffffffx80; valaddr_reg:x3; val_offset:241050*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241050*0 + 3*478*FLEN/8, x4, x1, x2)

inst_80351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffffffffc0; valaddr_reg:x3; val_offset:241053*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241053*0 + 3*479*FLEN/8, x4, x1, x2)

inst_80352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffffffffe0; valaddr_reg:x3; val_offset:241056*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241056*0 + 3*480*FLEN/8, x4, x1, x2)

inst_80353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffffffffx0; valaddr_reg:x3; val_offset:241059*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241059*0 + 3*481*FLEN/8, x4, x1, x2)

inst_80354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffffffffx8; valaddr_reg:x3; val_offset:241062*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241062*0 + 3*482*FLEN/8, x4, x1, x2)

inst_80355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffffffffc; valaddr_reg:x3; val_offset:241065*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241065*0 + 3*483*FLEN/8, x4, x1, x2)

inst_80356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41ffffffffffffe; valaddr_reg:x3; val_offset:241068*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241068*0 + 3*484*FLEN/8, x4, x1, x2)

inst_80357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8e3d27c719b6b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x041 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8e3d27c719b6b; op2val:0x0;
op3val:0x41fffffffffffff; valaddr_reg:x3; val_offset:241071*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241071*0 + 3*485*FLEN/8, x4, x1, x2)

inst_80358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:241074*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241074*0 + 3*486*FLEN/8, x4, x1, x2)

inst_80359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:241077*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241077*0 + 3*487*FLEN/8, x4, x1, x2)

inst_80360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:241080*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241080*0 + 3*488*FLEN/8, x4, x1, x2)

inst_80361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:241083*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241083*0 + 3*489*FLEN/8, x4, x1, x2)

inst_80362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:241086*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241086*0 + 3*490*FLEN/8, x4, x1, x2)

inst_80363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:241089*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241089*0 + 3*491*FLEN/8, x4, x1, x2)

inst_80364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:241092*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241092*0 + 3*492*FLEN/8, x4, x1, x2)

inst_80365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:241095*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241095*0 + 3*493*FLEN/8, x4, x1, x2)

inst_80366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:241098*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241098*0 + 3*494*FLEN/8, x4, x1, x2)

inst_80367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:241101*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241101*0 + 3*495*FLEN/8, x4, x1, x2)

inst_80368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:241104*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241104*0 + 3*496*FLEN/8, x4, x1, x2)

inst_80369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:241107*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241107*0 + 3*497*FLEN/8, x4, x1, x2)

inst_80370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:241110*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241110*0 + 3*498*FLEN/8, x4, x1, x2)

inst_80371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:241113*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241113*0 + 3*499*FLEN/8, x4, x1, x2)

inst_80372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:241116*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241116*0 + 3*500*FLEN/8, x4, x1, x2)

inst_80373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:241119*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241119*0 + 3*501*FLEN/8, x4, x1, x2)

inst_80374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:241122*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241122*0 + 3*502*FLEN/8, x4, x1, x2)

inst_80375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:241125*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241125*0 + 3*503*FLEN/8, x4, x1, x2)

inst_80376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0xfffffffffffx0; valaddr_reg:x3; val_offset:241128*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241128*0 + 3*504*FLEN/8, x4, x1, x2)

inst_80377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0xfffffffffffx8; valaddr_reg:x3; val_offset:241131*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241131*0 + 3*505*FLEN/8, x4, x1, x2)

inst_80378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:241134*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241134*0 + 3*506*FLEN/8, x4, x1, x2)

inst_80379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:241137*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241137*0 + 3*507*FLEN/8, x4, x1, x2)

inst_80380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000000000000; valaddr_reg:x3; val_offset:241140*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241140*0 + 3*508*FLEN/8, x4, x1, x2)

inst_80381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000000000001; valaddr_reg:x3; val_offset:241143*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241143*0 + 3*509*FLEN/8, x4, x1, x2)

inst_80382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000000000003; valaddr_reg:x3; val_offset:241146*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241146*0 + 3*510*FLEN/8, x4, x1, x2)

inst_80383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000000000007; valaddr_reg:x3; val_offset:241149*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241149*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_80384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000000000000f; valaddr_reg:x3; val_offset:241152*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241152*0 + 3*512*FLEN/8, x4, x1, x2)

inst_80385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000000000001f; valaddr_reg:x3; val_offset:241155*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241155*0 + 3*513*FLEN/8, x4, x1, x2)

inst_80386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000000000003f; valaddr_reg:x3; val_offset:241158*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241158*0 + 3*514*FLEN/8, x4, x1, x2)

inst_80387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000000000007f; valaddr_reg:x3; val_offset:241161*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241161*0 + 3*515*FLEN/8, x4, x1, x2)

inst_80388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700000000000ff; valaddr_reg:x3; val_offset:241164*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241164*0 + 3*516*FLEN/8, x4, x1, x2)

inst_80389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700000000001ff; valaddr_reg:x3; val_offset:241167*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241167*0 + 3*517*FLEN/8, x4, x1, x2)

inst_80390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700000000003ff; valaddr_reg:x3; val_offset:241170*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241170*0 + 3*518*FLEN/8, x4, x1, x2)

inst_80391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700000000007ff; valaddr_reg:x3; val_offset:241173*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241173*0 + 3*519*FLEN/8, x4, x1, x2)

inst_80392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000000000fff; valaddr_reg:x3; val_offset:241176*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241176*0 + 3*520*FLEN/8, x4, x1, x2)

inst_80393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000000001fff; valaddr_reg:x3; val_offset:241179*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241179*0 + 3*521*FLEN/8, x4, x1, x2)

inst_80394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000000003fff; valaddr_reg:x3; val_offset:241182*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241182*0 + 3*522*FLEN/8, x4, x1, x2)

inst_80395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000000007fff; valaddr_reg:x3; val_offset:241185*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241185*0 + 3*523*FLEN/8, x4, x1, x2)

inst_80396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000000000ffff; valaddr_reg:x3; val_offset:241188*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241188*0 + 3*524*FLEN/8, x4, x1, x2)

inst_80397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000000001ffff; valaddr_reg:x3; val_offset:241191*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241191*0 + 3*525*FLEN/8, x4, x1, x2)

inst_80398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000000003ffff; valaddr_reg:x3; val_offset:241194*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241194*0 + 3*526*FLEN/8, x4, x1, x2)

inst_80399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000000007ffff; valaddr_reg:x3; val_offset:241197*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241197*0 + 3*527*FLEN/8, x4, x1, x2)

inst_80400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700000000fffff; valaddr_reg:x3; val_offset:241200*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241200*0 + 3*528*FLEN/8, x4, x1, x2)

inst_80401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700000001fffff; valaddr_reg:x3; val_offset:241203*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241203*0 + 3*529*FLEN/8, x4, x1, x2)

inst_80402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700000003fffff; valaddr_reg:x3; val_offset:241206*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241206*0 + 3*530*FLEN/8, x4, x1, x2)

inst_80403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700000007fffff; valaddr_reg:x3; val_offset:241209*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241209*0 + 3*531*FLEN/8, x4, x1, x2)

inst_80404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000000ffffff; valaddr_reg:x3; val_offset:241212*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241212*0 + 3*532*FLEN/8, x4, x1, x2)

inst_80405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000001ffffff; valaddr_reg:x3; val_offset:241215*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241215*0 + 3*533*FLEN/8, x4, x1, x2)

inst_80406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000003ffffff; valaddr_reg:x3; val_offset:241218*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241218*0 + 3*534*FLEN/8, x4, x1, x2)

inst_80407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000007ffffff; valaddr_reg:x3; val_offset:241221*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241221*0 + 3*535*FLEN/8, x4, x1, x2)

inst_80408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000000fffffff; valaddr_reg:x3; val_offset:241224*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241224*0 + 3*536*FLEN/8, x4, x1, x2)

inst_80409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000001fffffff; valaddr_reg:x3; val_offset:241227*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241227*0 + 3*537*FLEN/8, x4, x1, x2)

inst_80410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000003fffffff; valaddr_reg:x3; val_offset:241230*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241230*0 + 3*538*FLEN/8, x4, x1, x2)

inst_80411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000007fffffff; valaddr_reg:x3; val_offset:241233*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241233*0 + 3*539*FLEN/8, x4, x1, x2)

inst_80412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700000ffffffff; valaddr_reg:x3; val_offset:241236*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241236*0 + 3*540*FLEN/8, x4, x1, x2)

inst_80413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700001ffffffff; valaddr_reg:x3; val_offset:241239*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241239*0 + 3*541*FLEN/8, x4, x1, x2)

inst_80414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700003ffffffff; valaddr_reg:x3; val_offset:241242*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241242*0 + 3*542*FLEN/8, x4, x1, x2)

inst_80415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700007ffffffff; valaddr_reg:x3; val_offset:241245*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241245*0 + 3*543*FLEN/8, x4, x1, x2)

inst_80416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270000fffffffff; valaddr_reg:x3; val_offset:241248*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241248*0 + 3*544*FLEN/8, x4, x1, x2)

inst_80417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270001fffffffff; valaddr_reg:x3; val_offset:241251*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241251*0 + 3*545*FLEN/8, x4, x1, x2)

inst_80418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270003fffffffff; valaddr_reg:x3; val_offset:241254*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241254*0 + 3*546*FLEN/8, x4, x1, x2)

inst_80419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270007fffffffff; valaddr_reg:x3; val_offset:241257*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241257*0 + 3*547*FLEN/8, x4, x1, x2)

inst_80420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27000ffffffffff; valaddr_reg:x3; val_offset:241260*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241260*0 + 3*548*FLEN/8, x4, x1, x2)

inst_80421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27001ffffffffff; valaddr_reg:x3; val_offset:241263*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241263*0 + 3*549*FLEN/8, x4, x1, x2)

inst_80422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27003ffffffffff; valaddr_reg:x3; val_offset:241266*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241266*0 + 3*550*FLEN/8, x4, x1, x2)

inst_80423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27007ffffffffff; valaddr_reg:x3; val_offset:241269*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241269*0 + 3*551*FLEN/8, x4, x1, x2)

inst_80424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2700fffffffffff; valaddr_reg:x3; val_offset:241272*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241272*0 + 3*552*FLEN/8, x4, x1, x2)

inst_80425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2701fffffffffff; valaddr_reg:x3; val_offset:241275*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241275*0 + 3*553*FLEN/8, x4, x1, x2)

inst_80426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2703fffffffffff; valaddr_reg:x3; val_offset:241278*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241278*0 + 3*554*FLEN/8, x4, x1, x2)

inst_80427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x2707fffffffffff; valaddr_reg:x3; val_offset:241281*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241281*0 + 3*555*FLEN/8, x4, x1, x2)

inst_80428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x270ffffffffffff; valaddr_reg:x3; val_offset:241284*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241284*0 + 3*556*FLEN/8, x4, x1, x2)

inst_80429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x271ffffffffffff; valaddr_reg:x3; val_offset:241287*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241287*0 + 3*557*FLEN/8, x4, x1, x2)

inst_80430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x273ffffffffffff; valaddr_reg:x3; val_offset:241290*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241290*0 + 3*558*FLEN/8, x4, x1, x2)

inst_80431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x277ffffffffffff; valaddr_reg:x3; val_offset:241293*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241293*0 + 3*559*FLEN/8, x4, x1, x2)

inst_80432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x278000000000000; valaddr_reg:x3; val_offset:241296*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241296*0 + 3*560*FLEN/8, x4, x1, x2)

inst_80433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27c000000000000; valaddr_reg:x3; val_offset:241299*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241299*0 + 3*561*FLEN/8, x4, x1, x2)

inst_80434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27e000000000000; valaddr_reg:x3; val_offset:241302*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241302*0 + 3*562*FLEN/8, x4, x1, x2)

inst_80435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27f000000000000; valaddr_reg:x3; val_offset:241305*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241305*0 + 3*563*FLEN/8, x4, x1, x2)

inst_80436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27f800000000000; valaddr_reg:x3; val_offset:241308*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241308*0 + 3*564*FLEN/8, x4, x1, x2)

inst_80437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fc00000000000; valaddr_reg:x3; val_offset:241311*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241311*0 + 3*565*FLEN/8, x4, x1, x2)

inst_80438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fe00000000000; valaddr_reg:x3; val_offset:241314*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241314*0 + 3*566*FLEN/8, x4, x1, x2)

inst_80439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ff00000000000; valaddr_reg:x3; val_offset:241317*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241317*0 + 3*567*FLEN/8, x4, x1, x2)

inst_80440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ff80000000000; valaddr_reg:x3; val_offset:241320*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241320*0 + 3*568*FLEN/8, x4, x1, x2)

inst_80441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffc0000000000; valaddr_reg:x3; val_offset:241323*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241323*0 + 3*569*FLEN/8, x4, x1, x2)

inst_80442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffe0000000000; valaddr_reg:x3; val_offset:241326*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241326*0 + 3*570*FLEN/8, x4, x1, x2)

inst_80443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fff0000000000; valaddr_reg:x3; val_offset:241329*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241329*0 + 3*571*FLEN/8, x4, x1, x2)

inst_80444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fff8000000000; valaddr_reg:x3; val_offset:241332*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241332*0 + 3*572*FLEN/8, x4, x1, x2)

inst_80445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffc000000000; valaddr_reg:x3; val_offset:241335*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241335*0 + 3*573*FLEN/8, x4, x1, x2)

inst_80446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffe000000000; valaddr_reg:x3; val_offset:241338*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241338*0 + 3*574*FLEN/8, x4, x1, x2)

inst_80447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffff000000000; valaddr_reg:x3; val_offset:241341*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241341*0 + 3*575*FLEN/8, x4, x1, x2)

inst_80448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffff800000000; valaddr_reg:x3; val_offset:241344*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241344*0 + 3*576*FLEN/8, x4, x1, x2)

inst_80449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffc00000000; valaddr_reg:x3; val_offset:241347*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241347*0 + 3*577*FLEN/8, x4, x1, x2)

inst_80450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffe00000000; valaddr_reg:x3; val_offset:241350*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241350*0 + 3*578*FLEN/8, x4, x1, x2)

inst_80451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffff00000000; valaddr_reg:x3; val_offset:241353*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241353*0 + 3*579*FLEN/8, x4, x1, x2)

inst_80452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffff80000000; valaddr_reg:x3; val_offset:241356*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241356*0 + 3*580*FLEN/8, x4, x1, x2)

inst_80453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffc0000000; valaddr_reg:x3; val_offset:241359*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241359*0 + 3*581*FLEN/8, x4, x1, x2)

inst_80454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffe0000000; valaddr_reg:x3; val_offset:241362*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241362*0 + 3*582*FLEN/8, x4, x1, x2)

inst_80455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffff0000000; valaddr_reg:x3; val_offset:241365*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241365*0 + 3*583*FLEN/8, x4, x1, x2)

inst_80456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffff8000000; valaddr_reg:x3; val_offset:241368*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241368*0 + 3*584*FLEN/8, x4, x1, x2)

inst_80457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffc000000; valaddr_reg:x3; val_offset:241371*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241371*0 + 3*585*FLEN/8, x4, x1, x2)

inst_80458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffe000000; valaddr_reg:x3; val_offset:241374*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241374*0 + 3*586*FLEN/8, x4, x1, x2)

inst_80459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffff000000; valaddr_reg:x3; val_offset:241377*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241377*0 + 3*587*FLEN/8, x4, x1, x2)

inst_80460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffff800000; valaddr_reg:x3; val_offset:241380*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241380*0 + 3*588*FLEN/8, x4, x1, x2)

inst_80461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffffc00000; valaddr_reg:x3; val_offset:241383*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241383*0 + 3*589*FLEN/8, x4, x1, x2)

inst_80462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffffe00000; valaddr_reg:x3; val_offset:241386*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241386*0 + 3*590*FLEN/8, x4, x1, x2)

inst_80463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffff00000; valaddr_reg:x3; val_offset:241389*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241389*0 + 3*591*FLEN/8, x4, x1, x2)

inst_80464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffff80000; valaddr_reg:x3; val_offset:241392*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241392*0 + 3*592*FLEN/8, x4, x1, x2)

inst_80465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffffc0000; valaddr_reg:x3; val_offset:241395*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241395*0 + 3*593*FLEN/8, x4, x1, x2)

inst_80466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffffe0000; valaddr_reg:x3; val_offset:241398*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241398*0 + 3*594*FLEN/8, x4, x1, x2)

inst_80467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffffff0000; valaddr_reg:x3; val_offset:241401*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241401*0 + 3*595*FLEN/8, x4, x1, x2)

inst_80468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffffff8000; valaddr_reg:x3; val_offset:241404*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241404*0 + 3*596*FLEN/8, x4, x1, x2)

inst_80469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffffffc000; valaddr_reg:x3; val_offset:241407*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241407*0 + 3*597*FLEN/8, x4, x1, x2)

inst_80470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffffffe000; valaddr_reg:x3; val_offset:241410*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241410*0 + 3*598*FLEN/8, x4, x1, x2)

inst_80471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffffff000; valaddr_reg:x3; val_offset:241413*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241413*0 + 3*599*FLEN/8, x4, x1, x2)

inst_80472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffffff800; valaddr_reg:x3; val_offset:241416*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241416*0 + 3*600*FLEN/8, x4, x1, x2)

inst_80473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffffffc00; valaddr_reg:x3; val_offset:241419*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241419*0 + 3*601*FLEN/8, x4, x1, x2)

inst_80474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffffffe00; valaddr_reg:x3; val_offset:241422*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241422*0 + 3*602*FLEN/8, x4, x1, x2)

inst_80475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffffffx00; valaddr_reg:x3; val_offset:241425*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241425*0 + 3*603*FLEN/8, x4, x1, x2)

inst_80476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffffffx80; valaddr_reg:x3; val_offset:241428*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241428*0 + 3*604*FLEN/8, x4, x1, x2)

inst_80477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffffffffc0; valaddr_reg:x3; val_offset:241431*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241431*0 + 3*605*FLEN/8, x4, x1, x2)

inst_80478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffffffffe0; valaddr_reg:x3; val_offset:241434*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241434*0 + 3*606*FLEN/8, x4, x1, x2)

inst_80479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffffffffx0; valaddr_reg:x3; val_offset:241437*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241437*0 + 3*607*FLEN/8, x4, x1, x2)

inst_80480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffffffffx8; valaddr_reg:x3; val_offset:241440*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241440*0 + 3*608*FLEN/8, x4, x1, x2)

inst_80481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffffffffc; valaddr_reg:x3; val_offset:241443*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241443*0 + 3*609*FLEN/8, x4, x1, x2)

inst_80482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27ffffffffffffe; valaddr_reg:x3; val_offset:241446*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241446*0 + 3*610*FLEN/8, x4, x1, x2)

inst_80483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed57ea81b015 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x027 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed57ea81b015; op2val:0x0;
op3val:0x27fffffffffffff; valaddr_reg:x3; val_offset:241449*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241449*0 + 3*611*FLEN/8, x4, x1, x2)

inst_80484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:241452*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241452*0 + 3*612*FLEN/8, x4, x1, x2)

inst_80485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:241455*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241455*0 + 3*613*FLEN/8, x4, x1, x2)

inst_80486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:241458*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241458*0 + 3*614*FLEN/8, x4, x1, x2)

inst_80487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:241461*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241461*0 + 3*615*FLEN/8, x4, x1, x2)

inst_80488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:241464*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241464*0 + 3*616*FLEN/8, x4, x1, x2)

inst_80489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:241467*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241467*0 + 3*617*FLEN/8, x4, x1, x2)

inst_80490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:241470*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241470*0 + 3*618*FLEN/8, x4, x1, x2)

inst_80491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:241473*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241473*0 + 3*619*FLEN/8, x4, x1, x2)

inst_80492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:241476*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241476*0 + 3*620*FLEN/8, x4, x1, x2)

inst_80493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:241479*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241479*0 + 3*621*FLEN/8, x4, x1, x2)

inst_80494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:241482*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241482*0 + 3*622*FLEN/8, x4, x1, x2)

inst_80495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:241485*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241485*0 + 3*623*FLEN/8, x4, x1, x2)

inst_80496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:241488*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241488*0 + 3*624*FLEN/8, x4, x1, x2)

inst_80497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:241491*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241491*0 + 3*625*FLEN/8, x4, x1, x2)

inst_80498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:241494*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241494*0 + 3*626*FLEN/8, x4, x1, x2)

inst_80499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:241497*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241497*0 + 3*627*FLEN/8, x4, x1, x2)

inst_80500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:241500*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241500*0 + 3*628*FLEN/8, x4, x1, x2)

inst_80501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:241503*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241503*0 + 3*629*FLEN/8, x4, x1, x2)

inst_80502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x800fffffffffffx0; valaddr_reg:x3; val_offset:241506*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241506*0 + 3*630*FLEN/8, x4, x1, x2)

inst_80503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x800fffffffffffx8; valaddr_reg:x3; val_offset:241509*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241509*0 + 3*631*FLEN/8, x4, x1, x2)

inst_80504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:241512*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241512*0 + 3*632*FLEN/8, x4, x1, x2)

inst_80505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:241515*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241515*0 + 3*633*FLEN/8, x4, x1, x2)

inst_80506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000000000000; valaddr_reg:x3; val_offset:241518*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241518*0 + 3*634*FLEN/8, x4, x1, x2)

inst_80507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000000000001; valaddr_reg:x3; val_offset:241521*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241521*0 + 3*635*FLEN/8, x4, x1, x2)

inst_80508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000000000003; valaddr_reg:x3; val_offset:241524*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241524*0 + 3*636*FLEN/8, x4, x1, x2)

inst_80509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000000000007; valaddr_reg:x3; val_offset:241527*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241527*0 + 3*637*FLEN/8, x4, x1, x2)

inst_80510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000000000000f; valaddr_reg:x3; val_offset:241530*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241530*0 + 3*638*FLEN/8, x4, x1, x2)

inst_80511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000000000001f; valaddr_reg:x3; val_offset:241533*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241533*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_80512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000000000003f; valaddr_reg:x3; val_offset:241536*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241536*0 + 3*640*FLEN/8, x4, x1, x2)

inst_80513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000000000007f; valaddr_reg:x3; val_offset:241539*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241539*0 + 3*641*FLEN/8, x4, x1, x2)

inst_80514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700000000000ff; valaddr_reg:x3; val_offset:241542*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241542*0 + 3*642*FLEN/8, x4, x1, x2)

inst_80515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700000000001ff; valaddr_reg:x3; val_offset:241545*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241545*0 + 3*643*FLEN/8, x4, x1, x2)

inst_80516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700000000003ff; valaddr_reg:x3; val_offset:241548*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241548*0 + 3*644*FLEN/8, x4, x1, x2)

inst_80517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700000000007ff; valaddr_reg:x3; val_offset:241551*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241551*0 + 3*645*FLEN/8, x4, x1, x2)

inst_80518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000000000fff; valaddr_reg:x3; val_offset:241554*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241554*0 + 3*646*FLEN/8, x4, x1, x2)

inst_80519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000000001fff; valaddr_reg:x3; val_offset:241557*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241557*0 + 3*647*FLEN/8, x4, x1, x2)

inst_80520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000000003fff; valaddr_reg:x3; val_offset:241560*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241560*0 + 3*648*FLEN/8, x4, x1, x2)

inst_80521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000000007fff; valaddr_reg:x3; val_offset:241563*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241563*0 + 3*649*FLEN/8, x4, x1, x2)

inst_80522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000000000ffff; valaddr_reg:x3; val_offset:241566*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241566*0 + 3*650*FLEN/8, x4, x1, x2)

inst_80523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000000001ffff; valaddr_reg:x3; val_offset:241569*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241569*0 + 3*651*FLEN/8, x4, x1, x2)

inst_80524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000000003ffff; valaddr_reg:x3; val_offset:241572*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241572*0 + 3*652*FLEN/8, x4, x1, x2)

inst_80525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000000007ffff; valaddr_reg:x3; val_offset:241575*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241575*0 + 3*653*FLEN/8, x4, x1, x2)

inst_80526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700000000fffff; valaddr_reg:x3; val_offset:241578*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241578*0 + 3*654*FLEN/8, x4, x1, x2)

inst_80527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700000001fffff; valaddr_reg:x3; val_offset:241581*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241581*0 + 3*655*FLEN/8, x4, x1, x2)

inst_80528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700000003fffff; valaddr_reg:x3; val_offset:241584*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241584*0 + 3*656*FLEN/8, x4, x1, x2)

inst_80529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700000007fffff; valaddr_reg:x3; val_offset:241587*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241587*0 + 3*657*FLEN/8, x4, x1, x2)

inst_80530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000000ffffff; valaddr_reg:x3; val_offset:241590*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241590*0 + 3*658*FLEN/8, x4, x1, x2)

inst_80531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000001ffffff; valaddr_reg:x3; val_offset:241593*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241593*0 + 3*659*FLEN/8, x4, x1, x2)

inst_80532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000003ffffff; valaddr_reg:x3; val_offset:241596*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241596*0 + 3*660*FLEN/8, x4, x1, x2)

inst_80533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000007ffffff; valaddr_reg:x3; val_offset:241599*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241599*0 + 3*661*FLEN/8, x4, x1, x2)

inst_80534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000000fffffff; valaddr_reg:x3; val_offset:241602*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241602*0 + 3*662*FLEN/8, x4, x1, x2)

inst_80535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000001fffffff; valaddr_reg:x3; val_offset:241605*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241605*0 + 3*663*FLEN/8, x4, x1, x2)

inst_80536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000003fffffff; valaddr_reg:x3; val_offset:241608*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241608*0 + 3*664*FLEN/8, x4, x1, x2)

inst_80537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000007fffffff; valaddr_reg:x3; val_offset:241611*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241611*0 + 3*665*FLEN/8, x4, x1, x2)

inst_80538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700000ffffffff; valaddr_reg:x3; val_offset:241614*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241614*0 + 3*666*FLEN/8, x4, x1, x2)

inst_80539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700001ffffffff; valaddr_reg:x3; val_offset:241617*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241617*0 + 3*667*FLEN/8, x4, x1, x2)

inst_80540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700003ffffffff; valaddr_reg:x3; val_offset:241620*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241620*0 + 3*668*FLEN/8, x4, x1, x2)

inst_80541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700007ffffffff; valaddr_reg:x3; val_offset:241623*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241623*0 + 3*669*FLEN/8, x4, x1, x2)

inst_80542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170000fffffffff; valaddr_reg:x3; val_offset:241626*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241626*0 + 3*670*FLEN/8, x4, x1, x2)

inst_80543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170001fffffffff; valaddr_reg:x3; val_offset:241629*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241629*0 + 3*671*FLEN/8, x4, x1, x2)

inst_80544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170003fffffffff; valaddr_reg:x3; val_offset:241632*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241632*0 + 3*672*FLEN/8, x4, x1, x2)

inst_80545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170007fffffffff; valaddr_reg:x3; val_offset:241635*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241635*0 + 3*673*FLEN/8, x4, x1, x2)

inst_80546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817000ffffffffff; valaddr_reg:x3; val_offset:241638*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241638*0 + 3*674*FLEN/8, x4, x1, x2)

inst_80547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817001ffffffffff; valaddr_reg:x3; val_offset:241641*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241641*0 + 3*675*FLEN/8, x4, x1, x2)

inst_80548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817003ffffffffff; valaddr_reg:x3; val_offset:241644*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241644*0 + 3*676*FLEN/8, x4, x1, x2)

inst_80549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817007ffffffffff; valaddr_reg:x3; val_offset:241647*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241647*0 + 3*677*FLEN/8, x4, x1, x2)

inst_80550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81700fffffffffff; valaddr_reg:x3; val_offset:241650*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241650*0 + 3*678*FLEN/8, x4, x1, x2)

inst_80551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81701fffffffffff; valaddr_reg:x3; val_offset:241653*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241653*0 + 3*679*FLEN/8, x4, x1, x2)

inst_80552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81703fffffffffff; valaddr_reg:x3; val_offset:241656*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241656*0 + 3*680*FLEN/8, x4, x1, x2)

inst_80553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x81707fffffffffff; valaddr_reg:x3; val_offset:241659*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241659*0 + 3*681*FLEN/8, x4, x1, x2)

inst_80554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8170ffffffffffff; valaddr_reg:x3; val_offset:241662*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241662*0 + 3*682*FLEN/8, x4, x1, x2)

inst_80555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8171ffffffffffff; valaddr_reg:x3; val_offset:241665*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241665*0 + 3*683*FLEN/8, x4, x1, x2)

inst_80556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8173ffffffffffff; valaddr_reg:x3; val_offset:241668*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241668*0 + 3*684*FLEN/8, x4, x1, x2)

inst_80557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8177ffffffffffff; valaddr_reg:x3; val_offset:241671*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241671*0 + 3*685*FLEN/8, x4, x1, x2)

inst_80558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x8178000000000000; valaddr_reg:x3; val_offset:241674*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241674*0 + 3*686*FLEN/8, x4, x1, x2)

inst_80559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817c000000000000; valaddr_reg:x3; val_offset:241677*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241677*0 + 3*687*FLEN/8, x4, x1, x2)

inst_80560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817e000000000000; valaddr_reg:x3; val_offset:241680*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241680*0 + 3*688*FLEN/8, x4, x1, x2)

inst_80561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817f000000000000; valaddr_reg:x3; val_offset:241683*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241683*0 + 3*689*FLEN/8, x4, x1, x2)

inst_80562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817f800000000000; valaddr_reg:x3; val_offset:241686*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241686*0 + 3*690*FLEN/8, x4, x1, x2)

inst_80563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fc00000000000; valaddr_reg:x3; val_offset:241689*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241689*0 + 3*691*FLEN/8, x4, x1, x2)

inst_80564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fe00000000000; valaddr_reg:x3; val_offset:241692*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241692*0 + 3*692*FLEN/8, x4, x1, x2)

inst_80565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ff00000000000; valaddr_reg:x3; val_offset:241695*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241695*0 + 3*693*FLEN/8, x4, x1, x2)

inst_80566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ff80000000000; valaddr_reg:x3; val_offset:241698*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241698*0 + 3*694*FLEN/8, x4, x1, x2)

inst_80567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffc0000000000; valaddr_reg:x3; val_offset:241701*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241701*0 + 3*695*FLEN/8, x4, x1, x2)

inst_80568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffe0000000000; valaddr_reg:x3; val_offset:241704*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241704*0 + 3*696*FLEN/8, x4, x1, x2)

inst_80569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fff0000000000; valaddr_reg:x3; val_offset:241707*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241707*0 + 3*697*FLEN/8, x4, x1, x2)

inst_80570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fff8000000000; valaddr_reg:x3; val_offset:241710*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241710*0 + 3*698*FLEN/8, x4, x1, x2)

inst_80571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffc000000000; valaddr_reg:x3; val_offset:241713*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241713*0 + 3*699*FLEN/8, x4, x1, x2)

inst_80572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffe000000000; valaddr_reg:x3; val_offset:241716*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241716*0 + 3*700*FLEN/8, x4, x1, x2)

inst_80573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffff000000000; valaddr_reg:x3; val_offset:241719*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241719*0 + 3*701*FLEN/8, x4, x1, x2)

inst_80574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffff800000000; valaddr_reg:x3; val_offset:241722*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241722*0 + 3*702*FLEN/8, x4, x1, x2)

inst_80575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffc00000000; valaddr_reg:x3; val_offset:241725*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241725*0 + 3*703*FLEN/8, x4, x1, x2)

inst_80576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffe00000000; valaddr_reg:x3; val_offset:241728*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241728*0 + 3*704*FLEN/8, x4, x1, x2)

inst_80577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffff00000000; valaddr_reg:x3; val_offset:241731*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241731*0 + 3*705*FLEN/8, x4, x1, x2)

inst_80578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffff80000000; valaddr_reg:x3; val_offset:241734*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241734*0 + 3*706*FLEN/8, x4, x1, x2)

inst_80579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffc0000000; valaddr_reg:x3; val_offset:241737*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241737*0 + 3*707*FLEN/8, x4, x1, x2)

inst_80580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffe0000000; valaddr_reg:x3; val_offset:241740*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241740*0 + 3*708*FLEN/8, x4, x1, x2)

inst_80581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffff0000000; valaddr_reg:x3; val_offset:241743*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241743*0 + 3*709*FLEN/8, x4, x1, x2)

inst_80582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffff8000000; valaddr_reg:x3; val_offset:241746*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241746*0 + 3*710*FLEN/8, x4, x1, x2)

inst_80583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffc000000; valaddr_reg:x3; val_offset:241749*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241749*0 + 3*711*FLEN/8, x4, x1, x2)

inst_80584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffe000000; valaddr_reg:x3; val_offset:241752*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241752*0 + 3*712*FLEN/8, x4, x1, x2)

inst_80585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffff000000; valaddr_reg:x3; val_offset:241755*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241755*0 + 3*713*FLEN/8, x4, x1, x2)

inst_80586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffff800000; valaddr_reg:x3; val_offset:241758*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241758*0 + 3*714*FLEN/8, x4, x1, x2)

inst_80587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffffc00000; valaddr_reg:x3; val_offset:241761*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241761*0 + 3*715*FLEN/8, x4, x1, x2)

inst_80588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffffe00000; valaddr_reg:x3; val_offset:241764*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241764*0 + 3*716*FLEN/8, x4, x1, x2)

inst_80589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffff00000; valaddr_reg:x3; val_offset:241767*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241767*0 + 3*717*FLEN/8, x4, x1, x2)

inst_80590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffff80000; valaddr_reg:x3; val_offset:241770*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241770*0 + 3*718*FLEN/8, x4, x1, x2)

inst_80591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffffc0000; valaddr_reg:x3; val_offset:241773*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241773*0 + 3*719*FLEN/8, x4, x1, x2)

inst_80592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffffe0000; valaddr_reg:x3; val_offset:241776*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241776*0 + 3*720*FLEN/8, x4, x1, x2)

inst_80593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffffff0000; valaddr_reg:x3; val_offset:241779*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241779*0 + 3*721*FLEN/8, x4, x1, x2)

inst_80594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffffff8000; valaddr_reg:x3; val_offset:241782*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241782*0 + 3*722*FLEN/8, x4, x1, x2)

inst_80595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffffffc000; valaddr_reg:x3; val_offset:241785*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241785*0 + 3*723*FLEN/8, x4, x1, x2)

inst_80596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffffffe000; valaddr_reg:x3; val_offset:241788*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241788*0 + 3*724*FLEN/8, x4, x1, x2)

inst_80597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffffff000; valaddr_reg:x3; val_offset:241791*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241791*0 + 3*725*FLEN/8, x4, x1, x2)

inst_80598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffffff800; valaddr_reg:x3; val_offset:241794*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241794*0 + 3*726*FLEN/8, x4, x1, x2)

inst_80599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffffffc00; valaddr_reg:x3; val_offset:241797*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241797*0 + 3*727*FLEN/8, x4, x1, x2)

inst_80600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffffffe00; valaddr_reg:x3; val_offset:241800*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241800*0 + 3*728*FLEN/8, x4, x1, x2)

inst_80601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffffffx00; valaddr_reg:x3; val_offset:241803*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241803*0 + 3*729*FLEN/8, x4, x1, x2)

inst_80602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffffffx80; valaddr_reg:x3; val_offset:241806*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241806*0 + 3*730*FLEN/8, x4, x1, x2)

inst_80603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffffffffc0; valaddr_reg:x3; val_offset:241809*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241809*0 + 3*731*FLEN/8, x4, x1, x2)

inst_80604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffffffffe0; valaddr_reg:x3; val_offset:241812*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241812*0 + 3*732*FLEN/8, x4, x1, x2)

inst_80605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffffffffx0; valaddr_reg:x3; val_offset:241815*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241815*0 + 3*733*FLEN/8, x4, x1, x2)

inst_80606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffffffffx8; valaddr_reg:x3; val_offset:241818*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241818*0 + 3*734*FLEN/8, x4, x1, x2)

inst_80607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffffffffc; valaddr_reg:x3; val_offset:241821*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241821*0 + 3*735*FLEN/8, x4, x1, x2)

inst_80608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817ffffffffffffe; valaddr_reg:x3; val_offset:241824*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241824*0 + 3*736*FLEN/8, x4, x1, x2)

inst_80609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8ed6de3a3c8fa and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x017 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8ed6de3a3c8fa; op2val:0x8000;
op3val:0x817fffffffffffff; valaddr_reg:x3; val_offset:241827*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241827*0 + 3*737*FLEN/8, x4, x1, x2)

inst_80610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:241830*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241830*0 + 3*738*FLEN/8, x4, x1, x2)

inst_80611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:241833*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241833*0 + 3*739*FLEN/8, x4, x1, x2)

inst_80612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:241836*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241836*0 + 3*740*FLEN/8, x4, x1, x2)

inst_80613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:241839*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241839*0 + 3*741*FLEN/8, x4, x1, x2)

inst_80614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:241842*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241842*0 + 3*742*FLEN/8, x4, x1, x2)

inst_80615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:241845*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241845*0 + 3*743*FLEN/8, x4, x1, x2)

inst_80616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:241848*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241848*0 + 3*744*FLEN/8, x4, x1, x2)

inst_80617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:241851*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241851*0 + 3*745*FLEN/8, x4, x1, x2)

inst_80618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:241854*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241854*0 + 3*746*FLEN/8, x4, x1, x2)

inst_80619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:241857*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241857*0 + 3*747*FLEN/8, x4, x1, x2)

inst_80620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:241860*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241860*0 + 3*748*FLEN/8, x4, x1, x2)

inst_80621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:241863*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241863*0 + 3*749*FLEN/8, x4, x1, x2)

inst_80622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:241866*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241866*0 + 3*750*FLEN/8, x4, x1, x2)

inst_80623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:241869*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241869*0 + 3*751*FLEN/8, x4, x1, x2)

inst_80624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:241872*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241872*0 + 3*752*FLEN/8, x4, x1, x2)

inst_80625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:241875*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241875*0 + 3*753*FLEN/8, x4, x1, x2)

inst_80626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:241878*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241878*0 + 3*754*FLEN/8, x4, x1, x2)

inst_80627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:241881*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241881*0 + 3*755*FLEN/8, x4, x1, x2)

inst_80628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x800fffffffffffx0; valaddr_reg:x3; val_offset:241884*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241884*0 + 3*756*FLEN/8, x4, x1, x2)

inst_80629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x800fffffffffffx8; valaddr_reg:x3; val_offset:241887*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241887*0 + 3*757*FLEN/8, x4, x1, x2)

inst_80630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:241890*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241890*0 + 3*758*FLEN/8, x4, x1, x2)

inst_80631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:241893*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241893*0 + 3*759*FLEN/8, x4, x1, x2)

inst_80632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8400000000000000; valaddr_reg:x3; val_offset:241896*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241896*0 + 3*760*FLEN/8, x4, x1, x2)

inst_80633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8400000000000001; valaddr_reg:x3; val_offset:241899*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241899*0 + 3*761*FLEN/8, x4, x1, x2)

inst_80634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8400000000000003; valaddr_reg:x3; val_offset:241902*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241902*0 + 3*762*FLEN/8, x4, x1, x2)

inst_80635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x8400000000000007; valaddr_reg:x3; val_offset:241905*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241905*0 + 3*763*FLEN/8, x4, x1, x2)

inst_80636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x840000000000000f; valaddr_reg:x3; val_offset:241908*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241908*0 + 3*764*FLEN/8, x4, x1, x2)

inst_80637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x840000000000001f; valaddr_reg:x3; val_offset:241911*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241911*0 + 3*765*FLEN/8, x4, x1, x2)

inst_80638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x840000000000003f; valaddr_reg:x3; val_offset:241914*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241914*0 + 3*766*FLEN/8, x4, x1, x2)

inst_80639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8f160eecx9acb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x040 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8f160eecx9acb; op2val:0x8000;
op3val:0x840000000000007f; valaddr_reg:x3; val_offset:241917*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 241917*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9000000003ffff508103226998128639,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9000000007ffff508103226998390783,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e900000000fffff508103226998915071,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e900000001fffff508103226999963647,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e900000003fffff508103227002060799,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e900000007fffff508103227006255103,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e90000000ffffff508103227014643711,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e90000001ffffff508103227031420927,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e90000003ffffff508103227064975359,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e90000007ffffff508103227132084223,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9000000fffffff508103227266301951,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9000001fffffff508103227534737407,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9000003fffffff508103228071608319,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9000007fffffff508103229145350143,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e900000ffffffff508103231292833791,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e900001ffffffff508103235587801087,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e900003ffffffff508103244177735679,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e900007ffffffff508103261357604863,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e90000fffffffff508103295717343231,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e90001fffffffff508103364436819967,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e90003fffffffff508103501875773439,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e90007fffffffff508103776753680383,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9000ffffffffff508104326509494271,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9001ffffffffff508105426021122047,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9003ffffffffff508107625044377599,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9007ffffffffff508112023090888703,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e900fffffffffff508120819183910911,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e901fffffffffff508138411369955327,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e903fffffffffff508173595742044159,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e907fffffffffff508243964486221823,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e90ffffffffffff508384701974577151,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e91ffffffffffff508666176951287807,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e93ffffffffffff509229126904709119,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e97ffffffffffff510355026811551743,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e98000000000000510355026811551744,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9c000000000000511480926718394368,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9e000000000000512043876671815680,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9f000000000000512325351648526336,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9f800000000000512466089136881664,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fc00000000000512536457881059328,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fe00000000000512571642253148160,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ff00000000000512589234439192576,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ff80000000000512598030532214784,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffc0000000000512602428578725888,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffe0000000000512604627601981440,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fff0000000000512605727113609216,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fff8000000000512606276869423104,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffc000000000512606551747330048,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffe000000000512606689186283520,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffff000000000512606757905760256,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffff800000000512606792265498624,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffc00000000512606809445367808,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffe00000000512606818035302400,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffff00000000512606822330269696,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffff80000000512606824477753344,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffc0000000512606825551495168,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffe0000000512606826088366080,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffff0000000512606826356801536,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffff8000000512606826491019264,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffc000000512606826558128128,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffe000000512606826591682560,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffff000000512606826608459776,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffff800000512606826616848384,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffffc00000512606826621042688,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffffe00000512606826623139840,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffff00000512606826624188416,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffff80000512606826624712704,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffffc0000512606826624974848,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffffe0000512606826625105920,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffffff0000512606826625171456,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffffff8000512606826625204224,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffffffc000512606826625220608,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffffffe000512606826625228800,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffffff000512606826625232896,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffffff800512606826625234944,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffffffc00512606826625235968,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffffffe00512606826625236480,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffffffff00512606826625236736,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffffffff80512606826625236864,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffffffffc0512606826625236928,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffffffffe0512606826625236960,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffffffff0512606826625236976,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffffffff8512606826625236984,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffffffffc512606826625236988,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9ffffffffffffe512606826625236990,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3e9fffffffffffff512606826625236991,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ff0000000000001607182418800017409,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ff0000000000003607182418800017411,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ff0000000000007607182418800017415,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ff000000000000f607182418800017423,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ff000000000001f607182418800017439,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ff000000000003f607182418800017471,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ff3333333333333608083138725491507,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ff4924924924924608469161550694692,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ff6666666666666608983858650965606,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3fx6db6db6db6db6609112532926033334,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ff7777777777777609284098626123639,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ff8888888888888609584338601281672,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ff9999999999999609884578576439705,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ffb6db6db6db6db610399275676710619,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ffccccccccccccc610785298501913804,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ffdb6db6db6db6d611042647052049261,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3fffffffffffffc0611686018427387840,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3fffffffffffffe0611686018427387872,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ffffffffffffff0611686018427387888,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ffffffffffffff8611686018427387896,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ffffffffffffffc611686018427387900,64,FLEN)
NAN_BOXED(0x5fa8cecfb081e872892986621105399922,64,FLEN)
NAN_BOXED(0x2034a37ccc48e2a0320659464401248928,64,FLEN)
NAN_BOXED(0x3ffffffffffffffe611686018427387902,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xx5,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1x1,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x3,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x333333333333300719925474099,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4924924924924286742750677284,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6666666666666801439850948198,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6db6db6db6db6930114126015926,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7777777777777101679826106231,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8888888888888401919801264264,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x9999999999999702159776422297,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb6db6db6db6db216856876693211,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xccccccccccccc602879701896396,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xdb6db6db6db6d860228252031853,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffc0503599627370432,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffe0503599627370464,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff0503599627370480,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff8503599627370488,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffc503599627370492,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffe503599627370494,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000000000006561193665298432,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000000000016561193665298433,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000000000036561193665298435,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000000000076561193665298439,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000000000000f6561193665298447,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000000000001f6561193665298463,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000000000003f6561193665298495,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000000000007f6561193665298559,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000000000ff6561193665298687,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000000001ff6561193665298943,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000000003ff6561193665299455,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000000007ff6561193665300479,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110000000000fff6561193665302527,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110000000001fff6561193665306623,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110000000003fff6561193665314815,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110000000007fff6561193665331199,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000000000ffff6561193665363967,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000000001ffff6561193665429503,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000000003ffff6561193665560575,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000000007ffff6561193665822719,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000000fffff6561193666347007,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000001fffff6561193667395583,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000003fffff6561193669492735,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000007fffff6561193673687039,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110000000ffffff6561193682075647,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110000001ffffff6561193698852863,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110000003ffffff6561193732407295,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110000007ffffff6561193799516159,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000000fffffff6561193933733887,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000001fffffff6561194202169343,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000003fffffff6561194739040255,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000007fffffff6561195812782079,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100000ffffffff6561197960265727,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100001ffffffff6561202255233023,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100003ffffffff6561210845167615,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100007ffffffff6561228025036799,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110000fffffffff6561262384775167,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110001fffffffff6561331104251903,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110003fffffffff6561468543205375,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110007fffffffff6561743421112319,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11000ffffffffff6562293176926207,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11001ffffffffff6563392688553983,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11003ffffffffff6565591711809535,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11007ffffffffff6569989758320639,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1100fffffffffff6578785851342847,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1101fffffffffff6596378037387263,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1103fffffffffff6631562409476095,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1107fffffffffff6701931153653759,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x110ffffffffffff6842668642009087,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x111ffffffffffff7124143618719743,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x113ffffffffffff7687093572141055,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x117ffffffffffff8812993478983679,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1180000000000008812993478983680,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11c0000000000009938893385826304,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11e0000000000000501843339247616,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11f0000000000000783318315958272,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11f8000000000000924055804313600,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fc000000000000994424548491264,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fe000000000001029608920580096,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ff000000000001047201106624512,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ff800000000001055997199646720,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffc00000000001060395246157824,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffe00000000001062594269413376,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fff00000000001063693781041152,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fff80000000001064243536855040,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffc0000000001064518414761984,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffe0000000001064655853715456,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffff0000000001064724573192192,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffff8000000001064758932930560,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffc000000001064776112799744,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffe000000001064784702734336,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffff000000001064788997701632,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffff800000001064791145185280,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffc00000001064792218927104,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffe00000001064792755798016,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffff00000001064793024233472,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffff80000001064793158451200,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffc0000001064793225560064,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffe0000001064793259114496,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffff0000001064793275891712,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffff8000001064793284280320,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffffc000001064793288474624,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffffe000001064793290571776,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffff000001064793291620352,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffff800001064793292144640,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffffc00001064793292406784,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffffe00001064793292537856,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffffff00001064793292603392,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffffff80001064793292636160,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffffffc0001064793292652544,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffffffe0001064793292660736,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffffff0001064793292664832,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffffff8001064793292666880,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffffffc001064793292667904,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffffffe001064793292668416,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffffffff001064793292668672,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffffffff801064793292668800,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffffffffc01064793292668864,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffffffffe01064793292668896,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffffffff01064793292668912,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffffffff81064793292668920,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffffffffc1064793292668924,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11ffffffffffffe1064793292668926,64,FLEN)
NAN_BOXED(0x5fa8cfa4a3b53921892987535718693153,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x11fffffffffffff1064793292668927,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xx5,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1x1,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x3,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x333333333333300719925474099,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4924924924924286742750677284,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6666666666666801439850948198,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6db6db6db6db6930114126015926,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7777777777777101679826106231,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8888888888888401919801264264,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x9999999999999702159776422297,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb6db6db6db6db216856876693211,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xccccccccccccc602879701896396,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xdb6db6db6db6d860228252031853,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffc0503599627370432,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffe0503599627370464,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff0503599627370480,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff8503599627370488,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffc503599627370492,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffe503599627370494,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000001064793292668928,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000011064793292668929,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000031064793292668931,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000071064793292668935,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000000f1064793292668943,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000001f1064793292668959,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000003f1064793292668991,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000007f1064793292669055,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000ff1064793292669183,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000001ff1064793292669439,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000003ff1064793292669951,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000007ff1064793292670975,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000000fff1064793292673023,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000001fff1064793292677119,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000003fff1064793292685311,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000007fff1064793292701695,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000ffff1064793292734463,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000001ffff1064793292799999,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000003ffff1064793292931071,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000007ffff1064793293193215,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000fffff1064793293717503,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000001fffff1064793294766079,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000003fffff1064793296863231,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000007fffff1064793301057535,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000ffffff1064793309446143,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000001ffffff1064793326223359,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000003ffffff1064793359777791,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000007ffffff1064793426886655,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000fffffff1064793561104383,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000001fffffff1064793829539839,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000003fffffff1064794366410751,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000007fffffff1064795440152575,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000ffffffff1064797587636223,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200001ffffffff1064801882603519,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200003ffffffff1064810472538111,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200007ffffffff1064827652407295,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000fffffffff1064862012145663,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120001fffffffff1064930731622399,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120003fffffffff1065068170575871,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120007fffffffff1065343048482815,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000ffffffffff1065892804296703,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12001ffffffffff1066992315924479,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12003ffffffffff1069191339180031,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12007ffffffffff1073589385691135,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200fffffffffff1082385478713343,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1201fffffffffff1099977664757759,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1203fffffffffff1135162036846591,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1207fffffffffff1205530781024255,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120ffffffffffff1346268269379583,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x121ffffffffffff1627743246090239,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x123ffffffffffff2190693199511551,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x127ffffffffffff3316593106354175,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1280000000000003316593106354176,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12c0000000000004442493013196800,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12e0000000000005005442966618112,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12f0000000000005286917943328768,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12f8000000000005427655431684096,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fc000000000005498024175861760,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fe000000000005533208547950592,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ff000000000005550800733995008,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ff800000000005559596827017216,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffc00000000005563994873528320,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffe00000000005566193896783872,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fff00000000005567293408411648,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fff80000000005567843164225536,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffc0000000005568118042132480,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffe0000000005568255481085952,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffff0000000005568324200562688,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffff8000000005568358560301056,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffc000000005568375740170240,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffe000000005568384330104832,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffff000000005568388625072128,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffff800000005568390772555776,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffc00000005568391846297600,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffe00000005568392383168512,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffff00000005568392651603968,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffff80000005568392785821696,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffc0000005568392852930560,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffe0000005568392886484992,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffff0000005568392903262208,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffff8000005568392911650816,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffc000005568392915845120,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffe000005568392917942272,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffff000005568392918990848,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffff800005568392919515136,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffc00005568392919777280,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffe00005568392919908352,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffff00005568392919973888,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffff80005568392920006656,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffc0005568392920023040,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffe0005568392920031232,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffff0005568392920035328,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffff8005568392920037376,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffffc005568392920038400,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffffe005568392920038912,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffff005568392920039168,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffff805568392920039296,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffffc05568392920039360,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffffe05568392920039392,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffffff05568392920039408,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffffff85568392920039416,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffffffc5568392920039420,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffffffe5568392920039422,64,FLEN)
NAN_BOXED(0x5fa8dx1b44419174893004537892802932,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffffff5568392920039423,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x10000000000001503599627370497,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x10000000000003503599627370499,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x10000000000007503599627370503,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1000000000000f503599627370511,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1000000000001f503599627370527,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1000000000003f503599627370559,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x13333333333333404319552844595,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x14924924924924790342378047780,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x16666666666666305039478318694,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x16db6db6db6db6433713753386422,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x17777777777777605279453476727,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x18888888888888905519428634760,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x19999999999999205759403792793,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1b6db6db6db6db720456504063707,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ccccccccccccc106479329266892,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1db6db6db6db6d363827879402349,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1fffffffffffc0007199254740928,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1fffffffffffe0007199254740960,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ffffffffffff0007199254740976,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ffffffffffff8007199254740984,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ffffffffffffc007199254740988,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ffffffffffffe007199254740990,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000000000092733975779082240,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000000000192733975779082241,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000000000392733975779082243,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000000000792733975779082247,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000000000f92733975779082255,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000000001f92733975779082271,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000000003f92733975779082303,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000000007f92733975779082367,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100000000000ff92733975779082495,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100000000001ff92733975779082751,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100000000003ff92733975779083263,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100000000007ff92733975779084287,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410000000000fff92733975779086335,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410000000001fff92733975779090431,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410000000003fff92733975779098623,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410000000007fff92733975779115007,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000000ffff92733975779147775,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000001ffff92733975779213311,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000003ffff92733975779344383,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000007ffff92733975779606527,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100000000fffff92733975780130815,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100000001fffff92733975781179391,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100000003fffff92733975783276543,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100000007fffff92733975787470847,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410000000ffffff92733975795859455,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410000001ffffff92733975812636671,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410000003ffffff92733975846191103,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410000007ffffff92733975913299967,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000000fffffff92733976047517695,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000001fffffff92733976315953151,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000003fffffff92733976852824063,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000007fffffff92733977926565887,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100000ffffffff92733980074049535,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100001ffffffff92733984369016831,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100003ffffffff92733992958951423,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100007ffffffff92734010138820607,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410000fffffffff92734044498558975,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410001fffffffff92734113218035711,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410003fffffffff92734250656989183,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410007fffffffff92734525534896127,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41000ffffffffff92735075290710015,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41001ffffffffff92736174802337791,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41003ffffffffff92738373825593343,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41007ffffffffff92742771872104447,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4100fffffffffff92751567965126655,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4101fffffffffff92769160151171071,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4103fffffffffff92804344523259903,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4107fffffffffff92874713267437567,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x410ffffffffffff93015450755792895,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x411ffffffffffff93296925732503551,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x413ffffffffffff93859875685924863,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x417ffffffffffff94985775592767487,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41800000000000094985775592767488,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41c00000000000096111675499610112,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41e00000000000096674625453031424,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41f00000000000096956100429742080,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41f80000000000097096837918097408,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fc0000000000097167206662275072,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fe0000000000097202391034363904,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ff0000000000097219983220408320,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ff8000000000097228779313430528,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffc000000000097233177359941632,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffe000000000097235376383197184,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fff000000000097236475894824960,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fff800000000097237025650638848,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffc00000000097237300528545792,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffe00000000097237437967499264,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffff00000000097237506686976000,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffff80000000097237541046714368,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffc0000000097237558226583552,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffe0000000097237566816518144,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffff0000000097237571111485440,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffff8000000097237573258969088,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffc000000097237574332710912,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffe000000097237574869581824,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffff000000097237575138017280,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffff800000097237575272235008,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffc00000097237575339343872,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffe00000097237575372898304,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffff00000097237575389675520,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffff80000097237575398064128,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffffc0000097237575402258432,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffffe0000097237575404355584,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffff0000097237575405404160,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffff8000097237575405928448,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffffc000097237575406190592,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffffe000097237575406321664,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffffff000097237575406387200,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffffff800097237575406419968,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffffffc00097237575406436352,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffffffe00097237575406444544,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffffff00097237575406448640,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffffff80097237575406450688,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffffffc0097237575406451712,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffffffe0097237575406452224,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffffffff0097237575406452480,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffffffff8097237575406452608,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffffffffc097237575406452672,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffffffffe097237575406452704,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffffffff097237575406452720,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffffffff897237575406452728,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffffffffc97237575406452732,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41ffffffffffffe97237575406452734,64,FLEN)
NAN_BOXED(0x5fa8e3d27c719b6b893009722861001579,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x41fffffffffffff97237575406452735,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xx5,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1x1,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3x3,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x333333333333300719925474099,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4924924924924286742750677284,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6666666666666801439850948198,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6db6db6db6db6930114126015926,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7777777777777101679826106231,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8888888888888401919801264264,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x9999999999999702159776422297,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb6db6db6db6db216856876693211,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xccccccccccccc602879701896396,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xdb6db6db6db6d860228252031853,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffc0503599627370432,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffe0503599627370464,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff0503599627370480,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff8503599627370488,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffc503599627370492,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffe503599627370494,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000000000075640385467449344,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000000000175640385467449345,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000000000375640385467449347,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000000000775640385467449351,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000000000f75640385467449359,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000000001f75640385467449375,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000000003f75640385467449407,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000000007f75640385467449471,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700000000000ff75640385467449599,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700000000001ff75640385467449855,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700000000003ff75640385467450367,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700000000007ff75640385467451391,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270000000000fff75640385467453439,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270000000001fff75640385467457535,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270000000003fff75640385467465727,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270000000007fff75640385467482111,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000000ffff75640385467514879,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000001ffff75640385467580415,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000003ffff75640385467711487,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000007ffff75640385467973631,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700000000fffff75640385468497919,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700000001fffff75640385469546495,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700000003fffff75640385471643647,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700000007fffff75640385475837951,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270000000ffffff75640385484226559,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270000001ffffff75640385501003775,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270000003ffffff75640385534558207,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270000007ffffff75640385601667071,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000000fffffff75640385735884799,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000001fffffff75640386004320255,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000003fffffff75640386541191167,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000007fffffff75640387614932991,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700000ffffffff75640389762416639,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700001ffffffff75640394057383935,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700003ffffffff75640402647318527,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700007ffffffff75640419827187711,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270000fffffffff75640454186926079,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270001fffffffff75640522906402815,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270003fffffffff75640660345356287,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270007fffffffff75640935223263231,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27000ffffffffff75641484979077119,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27001ffffffffff75642584490704895,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27003ffffffffff75644783513960447,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27007ffffffffff75649181560471551,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2700fffffffffff75657977653493759,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2701fffffffffff75675569839538175,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2703fffffffffff75710754211627007,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2707fffffffffff75781122955804671,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x270ffffffffffff75921860444159999,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x271ffffffffffff76203335420870655,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x273ffffffffffff76766285374291967,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x277ffffffffffff77892185281134591,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27800000000000077892185281134592,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27c00000000000079018085187977216,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27e00000000000079581035141398528,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27f00000000000079862510118109184,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27f80000000000080003247606464512,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fc0000000000080073616350642176,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fe0000000000080108800722731008,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ff0000000000080126392908775424,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ff8000000000080135189001797632,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffc000000000080139587048308736,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffe000000000080141786071564288,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fff000000000080142885583192064,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fff800000000080143435339005952,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffc00000000080143710216912896,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffe00000000080143847655866368,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffff00000000080143916375343104,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffff80000000080143950735081472,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffc0000000080143967914950656,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffe0000000080143976504885248,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffff0000000080143980799852544,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffff8000000080143982947336192,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffc000000080143984021078016,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffe000000080143984557948928,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffff000000080143984826384384,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffff800000080143984960602112,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffc00000080143985027710976,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffe00000080143985061265408,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffff00000080143985078042624,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffff80000080143985086431232,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffffc0000080143985090625536,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffffe0000080143985092722688,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffff0000080143985093771264,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffff8000080143985094295552,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffffc000080143985094557696,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffffe000080143985094688768,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffffff000080143985094754304,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffffff800080143985094787072,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffffffc00080143985094803456,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffffffe00080143985094811648,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffffff00080143985094815744,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffffff80080143985094817792,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffffffc0080143985094818816,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffffffe0080143985094819328,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffffffff0080143985094819584,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffffffff8080143985094819712,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffffffffc080143985094819776,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffffffffe080143985094819808,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffffffff080143985094819824,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffffffff880143985094819832,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffffffffc80143985094819836,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27ffffffffffffe80143985094819838,64,FLEN)
NAN_BOXED(0x5fa8ed57ea81b015893020191542849557,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x27fffffffffffff80143985094819839,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000001223372036854775809,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000003223372036854775811,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000007223372036854775815,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000000f223372036854775823,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000001f223372036854775839,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000003f223372036854775871,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8003333333333333224272756780249907,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8004924924924924224658779605453092,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8006666666666666225173476705724006,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8006db6db6db6db6225302150980791734,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8007777777777777225473716680882039,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8008888888888888225773956656040072,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8009999999999999226074196631198105,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800b6db6db6db6db226588893731469019,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ccccccccccccc226974916556672204,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800db6db6db6db6d227232265106807661,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800fffffffffffc0227875636482146240,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800fffffffffffe0227875636482146272,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffff0227875636482146288,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffff8227875636482146296,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffffc227875636482146300,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffffe227875636482146302,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000000000000326954828284297216,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000000000001326954828284297217,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000000000003326954828284297219,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000000000007326954828284297223,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000000000000f326954828284297231,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000000000001f326954828284297247,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000000000003f326954828284297279,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000000000007f326954828284297343,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700000000000ff326954828284297471,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700000000001ff326954828284297727,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700000000003ff326954828284298239,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700000000007ff326954828284299263,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000000000fff326954828284301311,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000000001fff326954828284305407,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000000003fff326954828284313599,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000000007fff326954828284329983,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000000000ffff326954828284362751,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000000001ffff326954828284428287,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000000003ffff326954828284559359,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000000007ffff326954828284821503,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700000000fffff326954828285345791,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700000001fffff326954828286394367,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700000003fffff326954828288491519,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700000007fffff326954828292685823,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000000ffffff326954828301074431,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000001ffffff326954828317851647,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000003ffffff326954828351406079,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000007ffffff326954828418514943,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000000fffffff326954828552732671,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000001fffffff326954828821168127,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000003fffffff326954829358039039,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000007fffffff326954830431780863,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700000ffffffff326954832579264511,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700001ffffffff326954836874231807,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700003ffffffff326954845464166399,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700007ffffffff326954862644035583,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170000fffffffff326954897003773951,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170001fffffffff326954965723250687,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170003fffffffff326955103162204159,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170007fffffffff326955378040111103,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817000ffffffffff326955927795924991,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817001ffffffffff326957027307552767,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817003ffffffffff326959226330808319,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817007ffffffffff326963624377319423,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81700fffffffffff326972420470341631,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81701fffffffffff326990012656386047,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81703fffffffffff327025197028474879,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81707fffffffffff327095565772652543,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8170ffffffffffff327236303261007871,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8171ffffffffffff327517778237718527,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8173ffffffffffff328080728191139839,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8177ffffffffffff329206628097982463,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8178000000000000329206628097982464,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817c000000000000330332528004825088,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817e000000000000330895477958246400,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817f000000000000331176952934957056,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817f800000000000331317690423312384,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fc00000000000331388059167490048,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fe00000000000331423243539578880,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ff00000000000331440835725623296,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ff80000000000331449631818645504,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffc0000000000331454029865156608,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffe0000000000331456228888412160,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fff0000000000331457328400039936,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fff8000000000331457878155853824,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffc000000000331458153033760768,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffe000000000331458290472714240,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffff000000000331458359192190976,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffff800000000331458393551929344,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffc00000000331458410731798528,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffe00000000331458419321733120,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffff00000000331458423616700416,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffff80000000331458425764184064,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffc0000000331458426837925888,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffe0000000331458427374796800,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffff0000000331458427643232256,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffff8000000331458427777449984,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffc000000331458427844558848,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffe000000331458427878113280,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffff000000331458427894890496,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffff800000331458427903279104,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffffc00000331458427907473408,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffffe00000331458427909570560,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffff00000331458427910619136,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffff80000331458427911143424,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffffc0000331458427911405568,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffffe0000331458427911536640,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffffff0000331458427911602176,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffffff8000331458427911634944,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffffffc000331458427911651328,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffffffe000331458427911659520,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffffff000331458427911663616,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffffff800331458427911665664,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffffffc00331458427911666688,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffffffe00331458427911667200,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffffffff00331458427911667456,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffffffff80331458427911667584,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffffffffc0331458427911667648,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffffffffe0331458427911667680,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffffffff0331458427911667696,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffffffff8331458427911667704,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffffffffc331458427911667708,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817ffffffffffffe331458427911667710,64,FLEN)
NAN_BOXED(0x5fa8ed6de3a3c8fa893020285916924154,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x817fffffffffffff331458427911667711,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000001223372036854775809,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000003223372036854775811,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000007223372036854775815,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000000f223372036854775823,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000001f223372036854775839,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000003f223372036854775871,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8003333333333333224272756780249907,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8004924924924924224658779605453092,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8006666666666666225173476705724006,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8006db6db6db6db6225302150980791734,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8007777777777777225473716680882039,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8008888888888888225773956656040072,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8009999999999999226074196631198105,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800b6db6db6db6db226588893731469019,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ccccccccccccc226974916556672204,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800db6db6db6db6d227232265106807661,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800fffffffffffc0227875636482146240,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800fffffffffffe0227875636482146272,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffff0227875636482146288,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffff8227875636482146296,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffffc227875636482146300,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffffe227875636482146302,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8400000000000000511602413006487552,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8400000000000001511602413006487553,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8400000000000003511602413006487555,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8400000000000007511602413006487559,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x840000000000000f511602413006487567,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x840000000000001f511602413006487583,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x840000000000003f511602413006487615,64,FLEN)
NAN_BOXED(0x5fa8f160eecx9acb893024628316281547,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x840000000000007f511602413006487679,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
