
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_24576:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x3fffffff; valaddr_reg:x3; val_offset:73728*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73728*0 + 3*0*FLEN/8, x4, x1, x2)

inst_24577:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x7fffffff; valaddr_reg:x3; val_offset:73731*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73731*0 + 3*1*FLEN/8, x4, x1, x2)

inst_24578:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffff; valaddr_reg:x3; val_offset:73734*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73734*0 + 3*2*FLEN/8, x4, x1, x2)

inst_24579:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x1ffffffff; valaddr_reg:x3; val_offset:73737*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73737*0 + 3*3*FLEN/8, x4, x1, x2)

inst_24580:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x3ffffffff; valaddr_reg:x3; val_offset:73740*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73740*0 + 3*4*FLEN/8, x4, x1, x2)

inst_24581:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x7ffffffff; valaddr_reg:x3; val_offset:73743*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73743*0 + 3*5*FLEN/8, x4, x1, x2)

inst_24582:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffff; valaddr_reg:x3; val_offset:73746*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73746*0 + 3*6*FLEN/8, x4, x1, x2)

inst_24583:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x1fffffffff; valaddr_reg:x3; val_offset:73749*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73749*0 + 3*7*FLEN/8, x4, x1, x2)

inst_24584:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x3fffffffff; valaddr_reg:x3; val_offset:73752*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73752*0 + 3*8*FLEN/8, x4, x1, x2)

inst_24585:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x7fffffffff; valaddr_reg:x3; val_offset:73755*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73755*0 + 3*9*FLEN/8, x4, x1, x2)

inst_24586:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffffff; valaddr_reg:x3; val_offset:73758*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73758*0 + 3*10*FLEN/8, x4, x1, x2)

inst_24587:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x1ffffffffff; valaddr_reg:x3; val_offset:73761*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73761*0 + 3*11*FLEN/8, x4, x1, x2)

inst_24588:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x3ffffffffff; valaddr_reg:x3; val_offset:73764*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73764*0 + 3*12*FLEN/8, x4, x1, x2)

inst_24589:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x7ffffffffff; valaddr_reg:x3; val_offset:73767*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73767*0 + 3*13*FLEN/8, x4, x1, x2)

inst_24590:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffffff; valaddr_reg:x3; val_offset:73770*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73770*0 + 3*14*FLEN/8, x4, x1, x2)

inst_24591:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x1fffffffffff; valaddr_reg:x3; val_offset:73773*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73773*0 + 3*15*FLEN/8, x4, x1, x2)

inst_24592:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x3fffffffffff; valaddr_reg:x3; val_offset:73776*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73776*0 + 3*16*FLEN/8, x4, x1, x2)

inst_24593:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x7fffffffffff; valaddr_reg:x3; val_offset:73779*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73779*0 + 3*17*FLEN/8, x4, x1, x2)

inst_24594:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffffffff; valaddr_reg:x3; val_offset:73782*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73782*0 + 3*18*FLEN/8, x4, x1, x2)

inst_24595:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x1ffffffffffff; valaddr_reg:x3; val_offset:73785*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73785*0 + 3*19*FLEN/8, x4, x1, x2)

inst_24596:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:73788*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73788*0 + 3*20*FLEN/8, x4, x1, x2)

inst_24597:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x3ffffffffffff; valaddr_reg:x3; val_offset:73791*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73791*0 + 3*21*FLEN/8, x4, x1, x2)

inst_24598:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:73794*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73794*0 + 3*22*FLEN/8, x4, x1, x2)

inst_24599:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:73797*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73797*0 + 3*23*FLEN/8, x4, x1, x2)

inst_24600:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:73800*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73800*0 + 3*24*FLEN/8, x4, x1, x2)

inst_24601:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:73803*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73803*0 + 3*25*FLEN/8, x4, x1, x2)

inst_24602:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x7ffffffffffff; valaddr_reg:x3; val_offset:73806*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73806*0 + 3*26*FLEN/8, x4, x1, x2)

inst_24603:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x8000000000000; valaddr_reg:x3; val_offset:73809*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73809*0 + 3*27*FLEN/8, x4, x1, x2)

inst_24604:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:73812*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73812*0 + 3*28*FLEN/8, x4, x1, x2)

inst_24605:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:73815*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73815*0 + 3*29*FLEN/8, x4, x1, x2)

inst_24606:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:73818*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73818*0 + 3*30*FLEN/8, x4, x1, x2)

inst_24607:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xc000000000000; valaddr_reg:x3; val_offset:73821*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73821*0 + 3*31*FLEN/8, x4, x1, x2)

inst_24608:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:73824*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73824*0 + 3*32*FLEN/8, x4, x1, x2)

inst_24609:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:73827*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73827*0 + 3*33*FLEN/8, x4, x1, x2)

inst_24610:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xe000000000000; valaddr_reg:x3; val_offset:73830*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73830*0 + 3*34*FLEN/8, x4, x1, x2)

inst_24611:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xf000000000000; valaddr_reg:x3; val_offset:73833*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73833*0 + 3*35*FLEN/8, x4, x1, x2)

inst_24612:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xf800000000000; valaddr_reg:x3; val_offset:73836*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73836*0 + 3*36*FLEN/8, x4, x1, x2)

inst_24613:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfc00000000000; valaddr_reg:x3; val_offset:73839*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73839*0 + 3*37*FLEN/8, x4, x1, x2)

inst_24614:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfe00000000000; valaddr_reg:x3; val_offset:73842*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73842*0 + 3*38*FLEN/8, x4, x1, x2)

inst_24615:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xff00000000000; valaddr_reg:x3; val_offset:73845*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73845*0 + 3*39*FLEN/8, x4, x1, x2)

inst_24616:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xff80000000000; valaddr_reg:x3; val_offset:73848*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73848*0 + 3*40*FLEN/8, x4, x1, x2)

inst_24617:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffc0000000000; valaddr_reg:x3; val_offset:73851*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73851*0 + 3*41*FLEN/8, x4, x1, x2)

inst_24618:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffe0000000000; valaddr_reg:x3; val_offset:73854*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73854*0 + 3*42*FLEN/8, x4, x1, x2)

inst_24619:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfff0000000000; valaddr_reg:x3; val_offset:73857*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73857*0 + 3*43*FLEN/8, x4, x1, x2)

inst_24620:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfff8000000000; valaddr_reg:x3; val_offset:73860*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73860*0 + 3*44*FLEN/8, x4, x1, x2)

inst_24621:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffc000000000; valaddr_reg:x3; val_offset:73863*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73863*0 + 3*45*FLEN/8, x4, x1, x2)

inst_24622:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffe000000000; valaddr_reg:x3; val_offset:73866*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73866*0 + 3*46*FLEN/8, x4, x1, x2)

inst_24623:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffff000000000; valaddr_reg:x3; val_offset:73869*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73869*0 + 3*47*FLEN/8, x4, x1, x2)

inst_24624:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffff800000000; valaddr_reg:x3; val_offset:73872*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73872*0 + 3*48*FLEN/8, x4, x1, x2)

inst_24625:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffc00000000; valaddr_reg:x3; val_offset:73875*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73875*0 + 3*49*FLEN/8, x4, x1, x2)

inst_24626:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffe00000000; valaddr_reg:x3; val_offset:73878*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73878*0 + 3*50*FLEN/8, x4, x1, x2)

inst_24627:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffff00000000; valaddr_reg:x3; val_offset:73881*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73881*0 + 3*51*FLEN/8, x4, x1, x2)

inst_24628:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffff80000000; valaddr_reg:x3; val_offset:73884*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73884*0 + 3*52*FLEN/8, x4, x1, x2)

inst_24629:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffc0000000; valaddr_reg:x3; val_offset:73887*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73887*0 + 3*53*FLEN/8, x4, x1, x2)

inst_24630:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffe0000000; valaddr_reg:x3; val_offset:73890*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73890*0 + 3*54*FLEN/8, x4, x1, x2)

inst_24631:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffff0000000; valaddr_reg:x3; val_offset:73893*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73893*0 + 3*55*FLEN/8, x4, x1, x2)

inst_24632:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffff8000000; valaddr_reg:x3; val_offset:73896*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73896*0 + 3*56*FLEN/8, x4, x1, x2)

inst_24633:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffc000000; valaddr_reg:x3; val_offset:73899*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73899*0 + 3*57*FLEN/8, x4, x1, x2)

inst_24634:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffe000000; valaddr_reg:x3; val_offset:73902*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73902*0 + 3*58*FLEN/8, x4, x1, x2)

inst_24635:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffff000000; valaddr_reg:x3; val_offset:73905*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73905*0 + 3*59*FLEN/8, x4, x1, x2)

inst_24636:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffff800000; valaddr_reg:x3; val_offset:73908*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73908*0 + 3*60*FLEN/8, x4, x1, x2)

inst_24637:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffc00000; valaddr_reg:x3; val_offset:73911*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73911*0 + 3*61*FLEN/8, x4, x1, x2)

inst_24638:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffe00000; valaddr_reg:x3; val_offset:73914*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73914*0 + 3*62*FLEN/8, x4, x1, x2)

inst_24639:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffff00000; valaddr_reg:x3; val_offset:73917*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73917*0 + 3*63*FLEN/8, x4, x1, x2)

inst_24640:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffff80000; valaddr_reg:x3; val_offset:73920*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73920*0 + 3*64*FLEN/8, x4, x1, x2)

inst_24641:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffffc0000; valaddr_reg:x3; val_offset:73923*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73923*0 + 3*65*FLEN/8, x4, x1, x2)

inst_24642:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffffe0000; valaddr_reg:x3; val_offset:73926*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73926*0 + 3*66*FLEN/8, x4, x1, x2)

inst_24643:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffff0000; valaddr_reg:x3; val_offset:73929*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73929*0 + 3*67*FLEN/8, x4, x1, x2)

inst_24644:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffff8000; valaddr_reg:x3; val_offset:73932*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73932*0 + 3*68*FLEN/8, x4, x1, x2)

inst_24645:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffffc000; valaddr_reg:x3; val_offset:73935*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73935*0 + 3*69*FLEN/8, x4, x1, x2)

inst_24646:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffffe000; valaddr_reg:x3; val_offset:73938*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73938*0 + 3*70*FLEN/8, x4, x1, x2)

inst_24647:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffffff000; valaddr_reg:x3; val_offset:73941*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73941*0 + 3*71*FLEN/8, x4, x1, x2)

inst_24648:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffffff800; valaddr_reg:x3; val_offset:73944*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73944*0 + 3*72*FLEN/8, x4, x1, x2)

inst_24649:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffffffc00; valaddr_reg:x3; val_offset:73947*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73947*0 + 3*73*FLEN/8, x4, x1, x2)

inst_24650:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffffffe00; valaddr_reg:x3; val_offset:73950*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73950*0 + 3*74*FLEN/8, x4, x1, x2)

inst_24651:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffffffx00; valaddr_reg:x3; val_offset:73953*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73953*0 + 3*75*FLEN/8, x4, x1, x2)

inst_24652:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffffffx80; valaddr_reg:x3; val_offset:73956*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73956*0 + 3*76*FLEN/8, x4, x1, x2)

inst_24653:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:73959*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73959*0 + 3*77*FLEN/8, x4, x1, x2)

inst_24654:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:73962*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73962*0 + 3*78*FLEN/8, x4, x1, x2)

inst_24655:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffffffx0; valaddr_reg:x3; val_offset:73965*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73965*0 + 3*79*FLEN/8, x4, x1, x2)

inst_24656:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffffffx8; valaddr_reg:x3; val_offset:73968*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73968*0 + 3*80*FLEN/8, x4, x1, x2)

inst_24657:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:73971*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73971*0 + 3*81*FLEN/8, x4, x1, x2)

inst_24658:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:73974*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73974*0 + 3*82*FLEN/8, x4, x1, x2)

inst_24659:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe759fx97b7507 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e759fx97b7507; op2val:0x0;
op3val:0xfffffffffffff; valaddr_reg:x3; val_offset:73977*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73977*0 + 3*83*FLEN/8, x4, x1, x2)

inst_24660:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000000000000; valaddr_reg:x3; val_offset:73980*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73980*0 + 3*84*FLEN/8, x4, x1, x2)

inst_24661:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000000000001; valaddr_reg:x3; val_offset:73983*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73983*0 + 3*85*FLEN/8, x4, x1, x2)

inst_24662:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000000000003; valaddr_reg:x3; val_offset:73986*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73986*0 + 3*86*FLEN/8, x4, x1, x2)

inst_24663:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000000000007; valaddr_reg:x3; val_offset:73989*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73989*0 + 3*87*FLEN/8, x4, x1, x2)

inst_24664:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000000000000f; valaddr_reg:x3; val_offset:73992*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73992*0 + 3*88*FLEN/8, x4, x1, x2)

inst_24665:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000000000001f; valaddr_reg:x3; val_offset:73995*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73995*0 + 3*89*FLEN/8, x4, x1, x2)

inst_24666:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000000000003f; valaddr_reg:x3; val_offset:73998*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 73998*0 + 3*90*FLEN/8, x4, x1, x2)

inst_24667:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000000000007f; valaddr_reg:x3; val_offset:74001*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74001*0 + 3*91*FLEN/8, x4, x1, x2)

inst_24668:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00000000000ff; valaddr_reg:x3; val_offset:74004*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74004*0 + 3*92*FLEN/8, x4, x1, x2)

inst_24669:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00000000001ff; valaddr_reg:x3; val_offset:74007*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74007*0 + 3*93*FLEN/8, x4, x1, x2)

inst_24670:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00000000003ff; valaddr_reg:x3; val_offset:74010*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74010*0 + 3*94*FLEN/8, x4, x1, x2)

inst_24671:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00000000007ff; valaddr_reg:x3; val_offset:74013*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74013*0 + 3*95*FLEN/8, x4, x1, x2)

inst_24672:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000000000fff; valaddr_reg:x3; val_offset:74016*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74016*0 + 3*96*FLEN/8, x4, x1, x2)

inst_24673:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000000001fff; valaddr_reg:x3; val_offset:74019*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74019*0 + 3*97*FLEN/8, x4, x1, x2)

inst_24674:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000000003fff; valaddr_reg:x3; val_offset:74022*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74022*0 + 3*98*FLEN/8, x4, x1, x2)

inst_24675:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000000007fff; valaddr_reg:x3; val_offset:74025*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74025*0 + 3*99*FLEN/8, x4, x1, x2)

inst_24676:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000000000ffff; valaddr_reg:x3; val_offset:74028*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74028*0 + 3*100*FLEN/8, x4, x1, x2)

inst_24677:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000000001ffff; valaddr_reg:x3; val_offset:74031*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74031*0 + 3*101*FLEN/8, x4, x1, x2)

inst_24678:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000000003ffff; valaddr_reg:x3; val_offset:74034*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74034*0 + 3*102*FLEN/8, x4, x1, x2)

inst_24679:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000000007ffff; valaddr_reg:x3; val_offset:74037*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74037*0 + 3*103*FLEN/8, x4, x1, x2)

inst_24680:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00000000fffff; valaddr_reg:x3; val_offset:74040*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74040*0 + 3*104*FLEN/8, x4, x1, x2)

inst_24681:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00000001fffff; valaddr_reg:x3; val_offset:74043*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74043*0 + 3*105*FLEN/8, x4, x1, x2)

inst_24682:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00000003fffff; valaddr_reg:x3; val_offset:74046*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74046*0 + 3*106*FLEN/8, x4, x1, x2)

inst_24683:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00000007fffff; valaddr_reg:x3; val_offset:74049*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74049*0 + 3*107*FLEN/8, x4, x1, x2)

inst_24684:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000000ffffff; valaddr_reg:x3; val_offset:74052*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74052*0 + 3*108*FLEN/8, x4, x1, x2)

inst_24685:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000001ffffff; valaddr_reg:x3; val_offset:74055*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74055*0 + 3*109*FLEN/8, x4, x1, x2)

inst_24686:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000003ffffff; valaddr_reg:x3; val_offset:74058*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74058*0 + 3*110*FLEN/8, x4, x1, x2)

inst_24687:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000007ffffff; valaddr_reg:x3; val_offset:74061*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74061*0 + 3*111*FLEN/8, x4, x1, x2)

inst_24688:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000000fffffff; valaddr_reg:x3; val_offset:74064*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74064*0 + 3*112*FLEN/8, x4, x1, x2)

inst_24689:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000001fffffff; valaddr_reg:x3; val_offset:74067*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74067*0 + 3*113*FLEN/8, x4, x1, x2)

inst_24690:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000003fffffff; valaddr_reg:x3; val_offset:74070*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74070*0 + 3*114*FLEN/8, x4, x1, x2)

inst_24691:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000007fffffff; valaddr_reg:x3; val_offset:74073*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74073*0 + 3*115*FLEN/8, x4, x1, x2)

inst_24692:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00000ffffffff; valaddr_reg:x3; val_offset:74076*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74076*0 + 3*116*FLEN/8, x4, x1, x2)

inst_24693:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00001ffffffff; valaddr_reg:x3; val_offset:74079*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74079*0 + 3*117*FLEN/8, x4, x1, x2)

inst_24694:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00003ffffffff; valaddr_reg:x3; val_offset:74082*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74082*0 + 3*118*FLEN/8, x4, x1, x2)

inst_24695:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00007ffffffff; valaddr_reg:x3; val_offset:74085*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74085*0 + 3*119*FLEN/8, x4, x1, x2)

inst_24696:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0000fffffffff; valaddr_reg:x3; val_offset:74088*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74088*0 + 3*120*FLEN/8, x4, x1, x2)

inst_24697:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0001fffffffff; valaddr_reg:x3; val_offset:74091*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74091*0 + 3*121*FLEN/8, x4, x1, x2)

inst_24698:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0003fffffffff; valaddr_reg:x3; val_offset:74094*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74094*0 + 3*122*FLEN/8, x4, x1, x2)

inst_24699:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0007fffffffff; valaddr_reg:x3; val_offset:74097*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74097*0 + 3*123*FLEN/8, x4, x1, x2)

inst_24700:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca000ffffffffff; valaddr_reg:x3; val_offset:74100*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74100*0 + 3*124*FLEN/8, x4, x1, x2)

inst_24701:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca001ffffffffff; valaddr_reg:x3; val_offset:74103*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74103*0 + 3*125*FLEN/8, x4, x1, x2)

inst_24702:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca003ffffffffff; valaddr_reg:x3; val_offset:74106*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74106*0 + 3*126*FLEN/8, x4, x1, x2)

inst_24703:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca007ffffffffff; valaddr_reg:x3; val_offset:74109*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74109*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_24704:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca00fffffffffff; valaddr_reg:x3; val_offset:74112*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74112*0 + 3*128*FLEN/8, x4, x1, x2)

inst_24705:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca01fffffffffff; valaddr_reg:x3; val_offset:74115*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74115*0 + 3*129*FLEN/8, x4, x1, x2)

inst_24706:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca03fffffffffff; valaddr_reg:x3; val_offset:74118*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74118*0 + 3*130*FLEN/8, x4, x1, x2)

inst_24707:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca07fffffffffff; valaddr_reg:x3; val_offset:74121*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74121*0 + 3*131*FLEN/8, x4, x1, x2)

inst_24708:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca0ffffffffffff; valaddr_reg:x3; val_offset:74124*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74124*0 + 3*132*FLEN/8, x4, x1, x2)

inst_24709:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca1ffffffffffff; valaddr_reg:x3; val_offset:74127*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74127*0 + 3*133*FLEN/8, x4, x1, x2)

inst_24710:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca3ffffffffffff; valaddr_reg:x3; val_offset:74130*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74130*0 + 3*134*FLEN/8, x4, x1, x2)

inst_24711:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca7ffffffffffff; valaddr_reg:x3; val_offset:74133*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74133*0 + 3*135*FLEN/8, x4, x1, x2)

inst_24712:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ca8000000000000; valaddr_reg:x3; val_offset:74136*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74136*0 + 3*136*FLEN/8, x4, x1, x2)

inst_24713:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cac000000000000; valaddr_reg:x3; val_offset:74139*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74139*0 + 3*137*FLEN/8, x4, x1, x2)

inst_24714:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cae000000000000; valaddr_reg:x3; val_offset:74142*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74142*0 + 3*138*FLEN/8, x4, x1, x2)

inst_24715:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caf000000000000; valaddr_reg:x3; val_offset:74145*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74145*0 + 3*139*FLEN/8, x4, x1, x2)

inst_24716:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caf800000000000; valaddr_reg:x3; val_offset:74148*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74148*0 + 3*140*FLEN/8, x4, x1, x2)

inst_24717:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafc00000000000; valaddr_reg:x3; val_offset:74151*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74151*0 + 3*141*FLEN/8, x4, x1, x2)

inst_24718:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafe00000000000; valaddr_reg:x3; val_offset:74154*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74154*0 + 3*142*FLEN/8, x4, x1, x2)

inst_24719:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caff00000000000; valaddr_reg:x3; val_offset:74157*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74157*0 + 3*143*FLEN/8, x4, x1, x2)

inst_24720:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caff80000000000; valaddr_reg:x3; val_offset:74160*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74160*0 + 3*144*FLEN/8, x4, x1, x2)

inst_24721:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffc0000000000; valaddr_reg:x3; val_offset:74163*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74163*0 + 3*145*FLEN/8, x4, x1, x2)

inst_24722:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffe0000000000; valaddr_reg:x3; val_offset:74166*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74166*0 + 3*146*FLEN/8, x4, x1, x2)

inst_24723:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafff0000000000; valaddr_reg:x3; val_offset:74169*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74169*0 + 3*147*FLEN/8, x4, x1, x2)

inst_24724:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafff8000000000; valaddr_reg:x3; val_offset:74172*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74172*0 + 3*148*FLEN/8, x4, x1, x2)

inst_24725:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffc000000000; valaddr_reg:x3; val_offset:74175*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74175*0 + 3*149*FLEN/8, x4, x1, x2)

inst_24726:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffe000000000; valaddr_reg:x3; val_offset:74178*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74178*0 + 3*150*FLEN/8, x4, x1, x2)

inst_24727:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffff000000000; valaddr_reg:x3; val_offset:74181*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74181*0 + 3*151*FLEN/8, x4, x1, x2)

inst_24728:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffff800000000; valaddr_reg:x3; val_offset:74184*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74184*0 + 3*152*FLEN/8, x4, x1, x2)

inst_24729:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffc00000000; valaddr_reg:x3; val_offset:74187*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74187*0 + 3*153*FLEN/8, x4, x1, x2)

inst_24730:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffe00000000; valaddr_reg:x3; val_offset:74190*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74190*0 + 3*154*FLEN/8, x4, x1, x2)

inst_24731:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffff00000000; valaddr_reg:x3; val_offset:74193*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74193*0 + 3*155*FLEN/8, x4, x1, x2)

inst_24732:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffff80000000; valaddr_reg:x3; val_offset:74196*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74196*0 + 3*156*FLEN/8, x4, x1, x2)

inst_24733:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffc0000000; valaddr_reg:x3; val_offset:74199*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74199*0 + 3*157*FLEN/8, x4, x1, x2)

inst_24734:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffe0000000; valaddr_reg:x3; val_offset:74202*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74202*0 + 3*158*FLEN/8, x4, x1, x2)

inst_24735:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffff0000000; valaddr_reg:x3; val_offset:74205*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74205*0 + 3*159*FLEN/8, x4, x1, x2)

inst_24736:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffff8000000; valaddr_reg:x3; val_offset:74208*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74208*0 + 3*160*FLEN/8, x4, x1, x2)

inst_24737:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffc000000; valaddr_reg:x3; val_offset:74211*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74211*0 + 3*161*FLEN/8, x4, x1, x2)

inst_24738:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffe000000; valaddr_reg:x3; val_offset:74214*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74214*0 + 3*162*FLEN/8, x4, x1, x2)

inst_24739:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffff000000; valaddr_reg:x3; val_offset:74217*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74217*0 + 3*163*FLEN/8, x4, x1, x2)

inst_24740:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffff800000; valaddr_reg:x3; val_offset:74220*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74220*0 + 3*164*FLEN/8, x4, x1, x2)

inst_24741:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffffc00000; valaddr_reg:x3; val_offset:74223*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74223*0 + 3*165*FLEN/8, x4, x1, x2)

inst_24742:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffffe00000; valaddr_reg:x3; val_offset:74226*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74226*0 + 3*166*FLEN/8, x4, x1, x2)

inst_24743:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffff00000; valaddr_reg:x3; val_offset:74229*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74229*0 + 3*167*FLEN/8, x4, x1, x2)

inst_24744:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffff80000; valaddr_reg:x3; val_offset:74232*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74232*0 + 3*168*FLEN/8, x4, x1, x2)

inst_24745:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffffc0000; valaddr_reg:x3; val_offset:74235*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74235*0 + 3*169*FLEN/8, x4, x1, x2)

inst_24746:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffffe0000; valaddr_reg:x3; val_offset:74238*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74238*0 + 3*170*FLEN/8, x4, x1, x2)

inst_24747:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffffff0000; valaddr_reg:x3; val_offset:74241*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74241*0 + 3*171*FLEN/8, x4, x1, x2)

inst_24748:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffffff8000; valaddr_reg:x3; val_offset:74244*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74244*0 + 3*172*FLEN/8, x4, x1, x2)

inst_24749:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffffffc000; valaddr_reg:x3; val_offset:74247*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74247*0 + 3*173*FLEN/8, x4, x1, x2)

inst_24750:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffffffe000; valaddr_reg:x3; val_offset:74250*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74250*0 + 3*174*FLEN/8, x4, x1, x2)

inst_24751:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffffff000; valaddr_reg:x3; val_offset:74253*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74253*0 + 3*175*FLEN/8, x4, x1, x2)

inst_24752:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffffff800; valaddr_reg:x3; val_offset:74256*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74256*0 + 3*176*FLEN/8, x4, x1, x2)

inst_24753:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffffffc00; valaddr_reg:x3; val_offset:74259*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74259*0 + 3*177*FLEN/8, x4, x1, x2)

inst_24754:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffffffe00; valaddr_reg:x3; val_offset:74262*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74262*0 + 3*178*FLEN/8, x4, x1, x2)

inst_24755:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffffffx00; valaddr_reg:x3; val_offset:74265*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74265*0 + 3*179*FLEN/8, x4, x1, x2)

inst_24756:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffffffx80; valaddr_reg:x3; val_offset:74268*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74268*0 + 3*180*FLEN/8, x4, x1, x2)

inst_24757:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffffffffc0; valaddr_reg:x3; val_offset:74271*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74271*0 + 3*181*FLEN/8, x4, x1, x2)

inst_24758:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffffffffe0; valaddr_reg:x3; val_offset:74274*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74274*0 + 3*182*FLEN/8, x4, x1, x2)

inst_24759:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffffffffx0; valaddr_reg:x3; val_offset:74277*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74277*0 + 3*183*FLEN/8, x4, x1, x2)

inst_24760:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffffffffx8; valaddr_reg:x3; val_offset:74280*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74280*0 + 3*184*FLEN/8, x4, x1, x2)

inst_24761:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffffffffc; valaddr_reg:x3; val_offset:74283*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74283*0 + 3*185*FLEN/8, x4, x1, x2)

inst_24762:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3caffffffffffffe; valaddr_reg:x3; val_offset:74286*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74286*0 + 3*186*FLEN/8, x4, x1, x2)

inst_24763:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ca and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3cafffffffffffff; valaddr_reg:x3; val_offset:74289*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74289*0 + 3*187*FLEN/8, x4, x1, x2)

inst_24764:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:74292*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74292*0 + 3*188*FLEN/8, x4, x1, x2)

inst_24765:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:74295*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74295*0 + 3*189*FLEN/8, x4, x1, x2)

inst_24766:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:74298*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74298*0 + 3*190*FLEN/8, x4, x1, x2)

inst_24767:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:74301*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74301*0 + 3*191*FLEN/8, x4, x1, x2)

inst_24768:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:74304*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74304*0 + 3*192*FLEN/8, x4, x1, x2)

inst_24769:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:74307*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74307*0 + 3*193*FLEN/8, x4, x1, x2)

inst_24770:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:74310*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74310*0 + 3*194*FLEN/8, x4, x1, x2)

inst_24771:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:74313*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74313*0 + 3*195*FLEN/8, x4, x1, x2)

inst_24772:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:74316*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74316*0 + 3*196*FLEN/8, x4, x1, x2)

inst_24773:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3fx6db6db6db6db6; valaddr_reg:x3; val_offset:74319*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74319*0 + 3*197*FLEN/8, x4, x1, x2)

inst_24774:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:74322*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74322*0 + 3*198*FLEN/8, x4, x1, x2)

inst_24775:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:74325*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74325*0 + 3*199*FLEN/8, x4, x1, x2)

inst_24776:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:74328*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74328*0 + 3*200*FLEN/8, x4, x1, x2)

inst_24777:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:74331*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74331*0 + 3*201*FLEN/8, x4, x1, x2)

inst_24778:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:74334*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74334*0 + 3*202*FLEN/8, x4, x1, x2)

inst_24779:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:74337*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74337*0 + 3*203*FLEN/8, x4, x1, x2)

inst_24780:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:74340*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74340*0 + 3*204*FLEN/8, x4, x1, x2)

inst_24781:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:74343*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74343*0 + 3*205*FLEN/8, x4, x1, x2)

inst_24782:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3fffffffffffffx0; valaddr_reg:x3; val_offset:74346*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74346*0 + 3*206*FLEN/8, x4, x1, x2)

inst_24783:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3fffffffffffffx8; valaddr_reg:x3; val_offset:74349*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74349*0 + 3*207*FLEN/8, x4, x1, x2)

inst_24784:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:74352*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74352*0 + 3*208*FLEN/8, x4, x1, x2)

inst_24785:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe9910ea9b38ef and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0bbb0cx0cc80e and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e9910ea9b38ef; op2val:0x2050bbb0cx0cc80e;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:74355*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74355*0 + 3*209*FLEN/8, x4, x1, x2)

inst_24786:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000000000000; valaddr_reg:x3; val_offset:74358*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74358*0 + 3*210*FLEN/8, x4, x1, x2)

inst_24787:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000000000001; valaddr_reg:x3; val_offset:74361*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74361*0 + 3*211*FLEN/8, x4, x1, x2)

inst_24788:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000000000003; valaddr_reg:x3; val_offset:74364*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74364*0 + 3*212*FLEN/8, x4, x1, x2)

inst_24789:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000000000007; valaddr_reg:x3; val_offset:74367*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74367*0 + 3*213*FLEN/8, x4, x1, x2)

inst_24790:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000000000000f; valaddr_reg:x3; val_offset:74370*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74370*0 + 3*214*FLEN/8, x4, x1, x2)

inst_24791:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000000000001f; valaddr_reg:x3; val_offset:74373*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74373*0 + 3*215*FLEN/8, x4, x1, x2)

inst_24792:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000000000003f; valaddr_reg:x3; val_offset:74376*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74376*0 + 3*216*FLEN/8, x4, x1, x2)

inst_24793:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000000000007f; valaddr_reg:x3; val_offset:74379*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74379*0 + 3*217*FLEN/8, x4, x1, x2)

inst_24794:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900000000000ff; valaddr_reg:x3; val_offset:74382*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74382*0 + 3*218*FLEN/8, x4, x1, x2)

inst_24795:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900000000001ff; valaddr_reg:x3; val_offset:74385*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74385*0 + 3*219*FLEN/8, x4, x1, x2)

inst_24796:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900000000003ff; valaddr_reg:x3; val_offset:74388*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74388*0 + 3*220*FLEN/8, x4, x1, x2)

inst_24797:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900000000007ff; valaddr_reg:x3; val_offset:74391*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74391*0 + 3*221*FLEN/8, x4, x1, x2)

inst_24798:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000000000fff; valaddr_reg:x3; val_offset:74394*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74394*0 + 3*222*FLEN/8, x4, x1, x2)

inst_24799:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000000001fff; valaddr_reg:x3; val_offset:74397*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74397*0 + 3*223*FLEN/8, x4, x1, x2)

inst_24800:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000000003fff; valaddr_reg:x3; val_offset:74400*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74400*0 + 3*224*FLEN/8, x4, x1, x2)

inst_24801:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000000007fff; valaddr_reg:x3; val_offset:74403*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74403*0 + 3*225*FLEN/8, x4, x1, x2)

inst_24802:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000000000ffff; valaddr_reg:x3; val_offset:74406*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74406*0 + 3*226*FLEN/8, x4, x1, x2)

inst_24803:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000000001ffff; valaddr_reg:x3; val_offset:74409*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74409*0 + 3*227*FLEN/8, x4, x1, x2)

inst_24804:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000000003ffff; valaddr_reg:x3; val_offset:74412*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74412*0 + 3*228*FLEN/8, x4, x1, x2)

inst_24805:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000000007ffff; valaddr_reg:x3; val_offset:74415*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74415*0 + 3*229*FLEN/8, x4, x1, x2)

inst_24806:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900000000fffff; valaddr_reg:x3; val_offset:74418*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74418*0 + 3*230*FLEN/8, x4, x1, x2)

inst_24807:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900000001fffff; valaddr_reg:x3; val_offset:74421*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74421*0 + 3*231*FLEN/8, x4, x1, x2)

inst_24808:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900000003fffff; valaddr_reg:x3; val_offset:74424*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74424*0 + 3*232*FLEN/8, x4, x1, x2)

inst_24809:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900000007fffff; valaddr_reg:x3; val_offset:74427*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74427*0 + 3*233*FLEN/8, x4, x1, x2)

inst_24810:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000000ffffff; valaddr_reg:x3; val_offset:74430*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74430*0 + 3*234*FLEN/8, x4, x1, x2)

inst_24811:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000001ffffff; valaddr_reg:x3; val_offset:74433*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74433*0 + 3*235*FLEN/8, x4, x1, x2)

inst_24812:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000003ffffff; valaddr_reg:x3; val_offset:74436*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74436*0 + 3*236*FLEN/8, x4, x1, x2)

inst_24813:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000007ffffff; valaddr_reg:x3; val_offset:74439*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74439*0 + 3*237*FLEN/8, x4, x1, x2)

inst_24814:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000000fffffff; valaddr_reg:x3; val_offset:74442*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74442*0 + 3*238*FLEN/8, x4, x1, x2)

inst_24815:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000001fffffff; valaddr_reg:x3; val_offset:74445*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74445*0 + 3*239*FLEN/8, x4, x1, x2)

inst_24816:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000003fffffff; valaddr_reg:x3; val_offset:74448*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74448*0 + 3*240*FLEN/8, x4, x1, x2)

inst_24817:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000007fffffff; valaddr_reg:x3; val_offset:74451*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74451*0 + 3*241*FLEN/8, x4, x1, x2)

inst_24818:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900000ffffffff; valaddr_reg:x3; val_offset:74454*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74454*0 + 3*242*FLEN/8, x4, x1, x2)

inst_24819:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900001ffffffff; valaddr_reg:x3; val_offset:74457*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74457*0 + 3*243*FLEN/8, x4, x1, x2)

inst_24820:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900003ffffffff; valaddr_reg:x3; val_offset:74460*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74460*0 + 3*244*FLEN/8, x4, x1, x2)

inst_24821:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900007ffffffff; valaddr_reg:x3; val_offset:74463*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74463*0 + 3*245*FLEN/8, x4, x1, x2)

inst_24822:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90000fffffffff; valaddr_reg:x3; val_offset:74466*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74466*0 + 3*246*FLEN/8, x4, x1, x2)

inst_24823:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90001fffffffff; valaddr_reg:x3; val_offset:74469*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74469*0 + 3*247*FLEN/8, x4, x1, x2)

inst_24824:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90003fffffffff; valaddr_reg:x3; val_offset:74472*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74472*0 + 3*248*FLEN/8, x4, x1, x2)

inst_24825:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90007fffffffff; valaddr_reg:x3; val_offset:74475*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74475*0 + 3*249*FLEN/8, x4, x1, x2)

inst_24826:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9000ffffffffff; valaddr_reg:x3; val_offset:74478*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74478*0 + 3*250*FLEN/8, x4, x1, x2)

inst_24827:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9001ffffffffff; valaddr_reg:x3; val_offset:74481*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74481*0 + 3*251*FLEN/8, x4, x1, x2)

inst_24828:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9003ffffffffff; valaddr_reg:x3; val_offset:74484*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74484*0 + 3*252*FLEN/8, x4, x1, x2)

inst_24829:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9007ffffffffff; valaddr_reg:x3; val_offset:74487*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74487*0 + 3*253*FLEN/8, x4, x1, x2)

inst_24830:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d900fffffffffff; valaddr_reg:x3; val_offset:74490*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74490*0 + 3*254*FLEN/8, x4, x1, x2)

inst_24831:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d901fffffffffff; valaddr_reg:x3; val_offset:74493*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74493*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_24832:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d903fffffffffff; valaddr_reg:x3; val_offset:74496*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74496*0 + 3*256*FLEN/8, x4, x1, x2)

inst_24833:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d907fffffffffff; valaddr_reg:x3; val_offset:74499*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74499*0 + 3*257*FLEN/8, x4, x1, x2)

inst_24834:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d90ffffffffffff; valaddr_reg:x3; val_offset:74502*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74502*0 + 3*258*FLEN/8, x4, x1, x2)

inst_24835:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d91ffffffffffff; valaddr_reg:x3; val_offset:74505*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74505*0 + 3*259*FLEN/8, x4, x1, x2)

inst_24836:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d93ffffffffffff; valaddr_reg:x3; val_offset:74508*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74508*0 + 3*260*FLEN/8, x4, x1, x2)

inst_24837:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d97ffffffffffff; valaddr_reg:x3; val_offset:74511*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74511*0 + 3*261*FLEN/8, x4, x1, x2)

inst_24838:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d98000000000000; valaddr_reg:x3; val_offset:74514*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74514*0 + 3*262*FLEN/8, x4, x1, x2)

inst_24839:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9c000000000000; valaddr_reg:x3; val_offset:74517*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74517*0 + 3*263*FLEN/8, x4, x1, x2)

inst_24840:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9e000000000000; valaddr_reg:x3; val_offset:74520*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74520*0 + 3*264*FLEN/8, x4, x1, x2)

inst_24841:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9f000000000000; valaddr_reg:x3; val_offset:74523*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74523*0 + 3*265*FLEN/8, x4, x1, x2)

inst_24842:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9f800000000000; valaddr_reg:x3; val_offset:74526*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74526*0 + 3*266*FLEN/8, x4, x1, x2)

inst_24843:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fc00000000000; valaddr_reg:x3; val_offset:74529*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74529*0 + 3*267*FLEN/8, x4, x1, x2)

inst_24844:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fe00000000000; valaddr_reg:x3; val_offset:74532*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74532*0 + 3*268*FLEN/8, x4, x1, x2)

inst_24845:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ff00000000000; valaddr_reg:x3; val_offset:74535*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74535*0 + 3*269*FLEN/8, x4, x1, x2)

inst_24846:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ff80000000000; valaddr_reg:x3; val_offset:74538*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74538*0 + 3*270*FLEN/8, x4, x1, x2)

inst_24847:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffc0000000000; valaddr_reg:x3; val_offset:74541*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74541*0 + 3*271*FLEN/8, x4, x1, x2)

inst_24848:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffe0000000000; valaddr_reg:x3; val_offset:74544*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74544*0 + 3*272*FLEN/8, x4, x1, x2)

inst_24849:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fff0000000000; valaddr_reg:x3; val_offset:74547*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74547*0 + 3*273*FLEN/8, x4, x1, x2)

inst_24850:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fff8000000000; valaddr_reg:x3; val_offset:74550*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74550*0 + 3*274*FLEN/8, x4, x1, x2)

inst_24851:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffc000000000; valaddr_reg:x3; val_offset:74553*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74553*0 + 3*275*FLEN/8, x4, x1, x2)

inst_24852:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffe000000000; valaddr_reg:x3; val_offset:74556*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74556*0 + 3*276*FLEN/8, x4, x1, x2)

inst_24853:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffff000000000; valaddr_reg:x3; val_offset:74559*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74559*0 + 3*277*FLEN/8, x4, x1, x2)

inst_24854:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffff800000000; valaddr_reg:x3; val_offset:74562*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74562*0 + 3*278*FLEN/8, x4, x1, x2)

inst_24855:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffc00000000; valaddr_reg:x3; val_offset:74565*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74565*0 + 3*279*FLEN/8, x4, x1, x2)

inst_24856:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffe00000000; valaddr_reg:x3; val_offset:74568*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74568*0 + 3*280*FLEN/8, x4, x1, x2)

inst_24857:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffff00000000; valaddr_reg:x3; val_offset:74571*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74571*0 + 3*281*FLEN/8, x4, x1, x2)

inst_24858:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffff80000000; valaddr_reg:x3; val_offset:74574*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74574*0 + 3*282*FLEN/8, x4, x1, x2)

inst_24859:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffc0000000; valaddr_reg:x3; val_offset:74577*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74577*0 + 3*283*FLEN/8, x4, x1, x2)

inst_24860:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffe0000000; valaddr_reg:x3; val_offset:74580*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74580*0 + 3*284*FLEN/8, x4, x1, x2)

inst_24861:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffff0000000; valaddr_reg:x3; val_offset:74583*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74583*0 + 3*285*FLEN/8, x4, x1, x2)

inst_24862:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffff8000000; valaddr_reg:x3; val_offset:74586*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74586*0 + 3*286*FLEN/8, x4, x1, x2)

inst_24863:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffc000000; valaddr_reg:x3; val_offset:74589*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74589*0 + 3*287*FLEN/8, x4, x1, x2)

inst_24864:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffe000000; valaddr_reg:x3; val_offset:74592*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74592*0 + 3*288*FLEN/8, x4, x1, x2)

inst_24865:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffff000000; valaddr_reg:x3; val_offset:74595*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74595*0 + 3*289*FLEN/8, x4, x1, x2)

inst_24866:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffff800000; valaddr_reg:x3; val_offset:74598*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74598*0 + 3*290*FLEN/8, x4, x1, x2)

inst_24867:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffffc00000; valaddr_reg:x3; val_offset:74601*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74601*0 + 3*291*FLEN/8, x4, x1, x2)

inst_24868:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffffe00000; valaddr_reg:x3; val_offset:74604*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74604*0 + 3*292*FLEN/8, x4, x1, x2)

inst_24869:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffff00000; valaddr_reg:x3; val_offset:74607*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74607*0 + 3*293*FLEN/8, x4, x1, x2)

inst_24870:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffff80000; valaddr_reg:x3; val_offset:74610*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74610*0 + 3*294*FLEN/8, x4, x1, x2)

inst_24871:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffffc0000; valaddr_reg:x3; val_offset:74613*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74613*0 + 3*295*FLEN/8, x4, x1, x2)

inst_24872:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffffe0000; valaddr_reg:x3; val_offset:74616*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74616*0 + 3*296*FLEN/8, x4, x1, x2)

inst_24873:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffffff0000; valaddr_reg:x3; val_offset:74619*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74619*0 + 3*297*FLEN/8, x4, x1, x2)

inst_24874:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffffff8000; valaddr_reg:x3; val_offset:74622*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74622*0 + 3*298*FLEN/8, x4, x1, x2)

inst_24875:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffffffc000; valaddr_reg:x3; val_offset:74625*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74625*0 + 3*299*FLEN/8, x4, x1, x2)

inst_24876:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffffffe000; valaddr_reg:x3; val_offset:74628*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74628*0 + 3*300*FLEN/8, x4, x1, x2)

inst_24877:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffffff000; valaddr_reg:x3; val_offset:74631*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74631*0 + 3*301*FLEN/8, x4, x1, x2)

inst_24878:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffffff800; valaddr_reg:x3; val_offset:74634*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74634*0 + 3*302*FLEN/8, x4, x1, x2)

inst_24879:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffffffc00; valaddr_reg:x3; val_offset:74637*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74637*0 + 3*303*FLEN/8, x4, x1, x2)

inst_24880:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffffffe00; valaddr_reg:x3; val_offset:74640*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74640*0 + 3*304*FLEN/8, x4, x1, x2)

inst_24881:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffffffx00; valaddr_reg:x3; val_offset:74643*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74643*0 + 3*305*FLEN/8, x4, x1, x2)

inst_24882:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffffffx80; valaddr_reg:x3; val_offset:74646*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74646*0 + 3*306*FLEN/8, x4, x1, x2)

inst_24883:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffffffffc0; valaddr_reg:x3; val_offset:74649*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74649*0 + 3*307*FLEN/8, x4, x1, x2)

inst_24884:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffffffffe0; valaddr_reg:x3; val_offset:74652*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74652*0 + 3*308*FLEN/8, x4, x1, x2)

inst_24885:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffffffffx0; valaddr_reg:x3; val_offset:74655*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74655*0 + 3*309*FLEN/8, x4, x1, x2)

inst_24886:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffffffffx8; valaddr_reg:x3; val_offset:74658*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74658*0 + 3*310*FLEN/8, x4, x1, x2)

inst_24887:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffffffffc; valaddr_reg:x3; val_offset:74661*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74661*0 + 3*311*FLEN/8, x4, x1, x2)

inst_24888:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9ffffffffffffe; valaddr_reg:x3; val_offset:74664*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74664*0 + 3*312*FLEN/8, x4, x1, x2)

inst_24889:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3d9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3d9fffffffffffff; valaddr_reg:x3; val_offset:74667*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74667*0 + 3*313*FLEN/8, x4, x1, x2)

inst_24890:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:74670*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74670*0 + 3*314*FLEN/8, x4, x1, x2)

inst_24891:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:74673*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74673*0 + 3*315*FLEN/8, x4, x1, x2)

inst_24892:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:74676*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74676*0 + 3*316*FLEN/8, x4, x1, x2)

inst_24893:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:74679*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74679*0 + 3*317*FLEN/8, x4, x1, x2)

inst_24894:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:74682*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74682*0 + 3*318*FLEN/8, x4, x1, x2)

inst_24895:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:74685*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74685*0 + 3*319*FLEN/8, x4, x1, x2)

inst_24896:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:74688*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74688*0 + 3*320*FLEN/8, x4, x1, x2)

inst_24897:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:74691*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74691*0 + 3*321*FLEN/8, x4, x1, x2)

inst_24898:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:74694*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74694*0 + 3*322*FLEN/8, x4, x1, x2)

inst_24899:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3fx6db6db6db6db6; valaddr_reg:x3; val_offset:74697*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74697*0 + 3*323*FLEN/8, x4, x1, x2)

inst_24900:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:74700*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74700*0 + 3*324*FLEN/8, x4, x1, x2)

inst_24901:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:74703*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74703*0 + 3*325*FLEN/8, x4, x1, x2)

inst_24902:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:74706*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74706*0 + 3*326*FLEN/8, x4, x1, x2)

inst_24903:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:74709*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74709*0 + 3*327*FLEN/8, x4, x1, x2)

inst_24904:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:74712*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74712*0 + 3*328*FLEN/8, x4, x1, x2)

inst_24905:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:74715*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74715*0 + 3*329*FLEN/8, x4, x1, x2)

inst_24906:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:74718*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74718*0 + 3*330*FLEN/8, x4, x1, x2)

inst_24907:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:74721*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74721*0 + 3*331*FLEN/8, x4, x1, x2)

inst_24908:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3fffffffffffffx0; valaddr_reg:x3; val_offset:74724*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74724*0 + 3*332*FLEN/8, x4, x1, x2)

inst_24909:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3fffffffffffffx8; valaddr_reg:x3; val_offset:74727*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74727*0 + 3*333*FLEN/8, x4, x1, x2)

inst_24910:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:74730*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74730*0 + 3*334*FLEN/8, x4, x1, x2)

inst_24911:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xea6838caab02b and fs2 == 0 and fe2 == 0x205 and fm2 == 0x0b4595a657e5a and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ea6838caab02b; op2val:0x2050b4595a657e5a;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:74733*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74733*0 + 3*335*FLEN/8, x4, x1, x2)

inst_24912:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:74736*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74736*0 + 3*336*FLEN/8, x4, x1, x2)

inst_24913:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:74739*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74739*0 + 3*337*FLEN/8, x4, x1, x2)

inst_24914:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:74742*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74742*0 + 3*338*FLEN/8, x4, x1, x2)

inst_24915:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:74745*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74745*0 + 3*339*FLEN/8, x4, x1, x2)

inst_24916:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:74748*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74748*0 + 3*340*FLEN/8, x4, x1, x2)

inst_24917:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:74751*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74751*0 + 3*341*FLEN/8, x4, x1, x2)

inst_24918:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:74754*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74754*0 + 3*342*FLEN/8, x4, x1, x2)

inst_24919:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:74757*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74757*0 + 3*343*FLEN/8, x4, x1, x2)

inst_24920:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:74760*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74760*0 + 3*344*FLEN/8, x4, x1, x2)

inst_24921:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbx86db6db6db6db6; valaddr_reg:x3; val_offset:74763*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74763*0 + 3*345*FLEN/8, x4, x1, x2)

inst_24922:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:74766*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74766*0 + 3*346*FLEN/8, x4, x1, x2)

inst_24923:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:74769*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74769*0 + 3*347*FLEN/8, x4, x1, x2)

inst_24924:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:74772*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74772*0 + 3*348*FLEN/8, x4, x1, x2)

inst_24925:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbx8b6db6db6db6db; valaddr_reg:x3; val_offset:74775*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74775*0 + 3*349*FLEN/8, x4, x1, x2)

inst_24926:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbx8ccccccccccccc; valaddr_reg:x3; val_offset:74778*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74778*0 + 3*350*FLEN/8, x4, x1, x2)

inst_24927:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbx8db6db6db6db6d; valaddr_reg:x3; val_offset:74781*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74781*0 + 3*351*FLEN/8, x4, x1, x2)

inst_24928:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbx8fffffffffffc0; valaddr_reg:x3; val_offset:74784*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74784*0 + 3*352*FLEN/8, x4, x1, x2)

inst_24929:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbx8fffffffffffe0; valaddr_reg:x3; val_offset:74787*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74787*0 + 3*353*FLEN/8, x4, x1, x2)

inst_24930:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbx8fffffffffffx0; valaddr_reg:x3; val_offset:74790*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74790*0 + 3*354*FLEN/8, x4, x1, x2)

inst_24931:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbx8fffffffffffx8; valaddr_reg:x3; val_offset:74793*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74793*0 + 3*355*FLEN/8, x4, x1, x2)

inst_24932:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbx8ffffffffffffc; valaddr_reg:x3; val_offset:74796*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74796*0 + 3*356*FLEN/8, x4, x1, x2)

inst_24933:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbx8ffffffffffffe; valaddr_reg:x3; val_offset:74799*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74799*0 + 3*357*FLEN/8, x4, x1, x2)

inst_24934:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000000000000; valaddr_reg:x3; val_offset:74802*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74802*0 + 3*358*FLEN/8, x4, x1, x2)

inst_24935:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000000000001; valaddr_reg:x3; val_offset:74805*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74805*0 + 3*359*FLEN/8, x4, x1, x2)

inst_24936:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000000000003; valaddr_reg:x3; val_offset:74808*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74808*0 + 3*360*FLEN/8, x4, x1, x2)

inst_24937:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000000000007; valaddr_reg:x3; val_offset:74811*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74811*0 + 3*361*FLEN/8, x4, x1, x2)

inst_24938:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000000000000f; valaddr_reg:x3; val_offset:74814*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74814*0 + 3*362*FLEN/8, x4, x1, x2)

inst_24939:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000000000001f; valaddr_reg:x3; val_offset:74817*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74817*0 + 3*363*FLEN/8, x4, x1, x2)

inst_24940:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000000000003f; valaddr_reg:x3; val_offset:74820*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74820*0 + 3*364*FLEN/8, x4, x1, x2)

inst_24941:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000000000007f; valaddr_reg:x3; val_offset:74823*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74823*0 + 3*365*FLEN/8, x4, x1, x2)

inst_24942:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00000000000ff; valaddr_reg:x3; val_offset:74826*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74826*0 + 3*366*FLEN/8, x4, x1, x2)

inst_24943:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00000000001ff; valaddr_reg:x3; val_offset:74829*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74829*0 + 3*367*FLEN/8, x4, x1, x2)

inst_24944:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00000000003ff; valaddr_reg:x3; val_offset:74832*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74832*0 + 3*368*FLEN/8, x4, x1, x2)

inst_24945:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00000000007ff; valaddr_reg:x3; val_offset:74835*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74835*0 + 3*369*FLEN/8, x4, x1, x2)

inst_24946:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000000000fff; valaddr_reg:x3; val_offset:74838*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74838*0 + 3*370*FLEN/8, x4, x1, x2)

inst_24947:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000000001fff; valaddr_reg:x3; val_offset:74841*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74841*0 + 3*371*FLEN/8, x4, x1, x2)

inst_24948:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000000003fff; valaddr_reg:x3; val_offset:74844*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74844*0 + 3*372*FLEN/8, x4, x1, x2)

inst_24949:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000000007fff; valaddr_reg:x3; val_offset:74847*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74847*0 + 3*373*FLEN/8, x4, x1, x2)

inst_24950:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000000000ffff; valaddr_reg:x3; val_offset:74850*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74850*0 + 3*374*FLEN/8, x4, x1, x2)

inst_24951:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000000001ffff; valaddr_reg:x3; val_offset:74853*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74853*0 + 3*375*FLEN/8, x4, x1, x2)

inst_24952:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000000003ffff; valaddr_reg:x3; val_offset:74856*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74856*0 + 3*376*FLEN/8, x4, x1, x2)

inst_24953:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000000007ffff; valaddr_reg:x3; val_offset:74859*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74859*0 + 3*377*FLEN/8, x4, x1, x2)

inst_24954:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00000000fffff; valaddr_reg:x3; val_offset:74862*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74862*0 + 3*378*FLEN/8, x4, x1, x2)

inst_24955:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00000001fffff; valaddr_reg:x3; val_offset:74865*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74865*0 + 3*379*FLEN/8, x4, x1, x2)

inst_24956:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00000003fffff; valaddr_reg:x3; val_offset:74868*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74868*0 + 3*380*FLEN/8, x4, x1, x2)

inst_24957:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00000007fffff; valaddr_reg:x3; val_offset:74871*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74871*0 + 3*381*FLEN/8, x4, x1, x2)

inst_24958:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000000ffffff; valaddr_reg:x3; val_offset:74874*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74874*0 + 3*382*FLEN/8, x4, x1, x2)

inst_24959:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000001ffffff; valaddr_reg:x3; val_offset:74877*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74877*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_24960:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000003ffffff; valaddr_reg:x3; val_offset:74880*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74880*0 + 3*384*FLEN/8, x4, x1, x2)

inst_24961:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000007ffffff; valaddr_reg:x3; val_offset:74883*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74883*0 + 3*385*FLEN/8, x4, x1, x2)

inst_24962:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000000fffffff; valaddr_reg:x3; val_offset:74886*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74886*0 + 3*386*FLEN/8, x4, x1, x2)

inst_24963:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000001fffffff; valaddr_reg:x3; val_offset:74889*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74889*0 + 3*387*FLEN/8, x4, x1, x2)

inst_24964:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000003fffffff; valaddr_reg:x3; val_offset:74892*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74892*0 + 3*388*FLEN/8, x4, x1, x2)

inst_24965:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000007fffffff; valaddr_reg:x3; val_offset:74895*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74895*0 + 3*389*FLEN/8, x4, x1, x2)

inst_24966:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00000ffffffff; valaddr_reg:x3; val_offset:74898*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74898*0 + 3*390*FLEN/8, x4, x1, x2)

inst_24967:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00001ffffffff; valaddr_reg:x3; val_offset:74901*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74901*0 + 3*391*FLEN/8, x4, x1, x2)

inst_24968:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00003ffffffff; valaddr_reg:x3; val_offset:74904*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74904*0 + 3*392*FLEN/8, x4, x1, x2)

inst_24969:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00007ffffffff; valaddr_reg:x3; val_offset:74907*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74907*0 + 3*393*FLEN/8, x4, x1, x2)

inst_24970:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0000fffffffff; valaddr_reg:x3; val_offset:74910*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74910*0 + 3*394*FLEN/8, x4, x1, x2)

inst_24971:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0001fffffffff; valaddr_reg:x3; val_offset:74913*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74913*0 + 3*395*FLEN/8, x4, x1, x2)

inst_24972:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0003fffffffff; valaddr_reg:x3; val_offset:74916*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74916*0 + 3*396*FLEN/8, x4, x1, x2)

inst_24973:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0007fffffffff; valaddr_reg:x3; val_offset:74919*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74919*0 + 3*397*FLEN/8, x4, x1, x2)

inst_24974:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd000ffffffffff; valaddr_reg:x3; val_offset:74922*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74922*0 + 3*398*FLEN/8, x4, x1, x2)

inst_24975:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd001ffffffffff; valaddr_reg:x3; val_offset:74925*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74925*0 + 3*399*FLEN/8, x4, x1, x2)

inst_24976:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd003ffffffffff; valaddr_reg:x3; val_offset:74928*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74928*0 + 3*400*FLEN/8, x4, x1, x2)

inst_24977:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd007ffffffffff; valaddr_reg:x3; val_offset:74931*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74931*0 + 3*401*FLEN/8, x4, x1, x2)

inst_24978:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd00fffffffffff; valaddr_reg:x3; val_offset:74934*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74934*0 + 3*402*FLEN/8, x4, x1, x2)

inst_24979:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd01fffffffffff; valaddr_reg:x3; val_offset:74937*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74937*0 + 3*403*FLEN/8, x4, x1, x2)

inst_24980:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd03fffffffffff; valaddr_reg:x3; val_offset:74940*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74940*0 + 3*404*FLEN/8, x4, x1, x2)

inst_24981:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd07fffffffffff; valaddr_reg:x3; val_offset:74943*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74943*0 + 3*405*FLEN/8, x4, x1, x2)

inst_24982:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd0ffffffffffff; valaddr_reg:x3; val_offset:74946*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74946*0 + 3*406*FLEN/8, x4, x1, x2)

inst_24983:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd1ffffffffffff; valaddr_reg:x3; val_offset:74949*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74949*0 + 3*407*FLEN/8, x4, x1, x2)

inst_24984:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd3ffffffffffff; valaddr_reg:x3; val_offset:74952*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74952*0 + 3*408*FLEN/8, x4, x1, x2)

inst_24985:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd7ffffffffffff; valaddr_reg:x3; val_offset:74955*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74955*0 + 3*409*FLEN/8, x4, x1, x2)

inst_24986:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfd8000000000000; valaddr_reg:x3; val_offset:74958*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74958*0 + 3*410*FLEN/8, x4, x1, x2)

inst_24987:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdc000000000000; valaddr_reg:x3; val_offset:74961*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74961*0 + 3*411*FLEN/8, x4, x1, x2)

inst_24988:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfde000000000000; valaddr_reg:x3; val_offset:74964*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74964*0 + 3*412*FLEN/8, x4, x1, x2)

inst_24989:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdf000000000000; valaddr_reg:x3; val_offset:74967*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74967*0 + 3*413*FLEN/8, x4, x1, x2)

inst_24990:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdf800000000000; valaddr_reg:x3; val_offset:74970*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74970*0 + 3*414*FLEN/8, x4, x1, x2)

inst_24991:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfc00000000000; valaddr_reg:x3; val_offset:74973*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74973*0 + 3*415*FLEN/8, x4, x1, x2)

inst_24992:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfe00000000000; valaddr_reg:x3; val_offset:74976*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74976*0 + 3*416*FLEN/8, x4, x1, x2)

inst_24993:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdff00000000000; valaddr_reg:x3; val_offset:74979*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74979*0 + 3*417*FLEN/8, x4, x1, x2)

inst_24994:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdff80000000000; valaddr_reg:x3; val_offset:74982*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74982*0 + 3*418*FLEN/8, x4, x1, x2)

inst_24995:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffc0000000000; valaddr_reg:x3; val_offset:74985*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74985*0 + 3*419*FLEN/8, x4, x1, x2)

inst_24996:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffe0000000000; valaddr_reg:x3; val_offset:74988*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74988*0 + 3*420*FLEN/8, x4, x1, x2)

inst_24997:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfff0000000000; valaddr_reg:x3; val_offset:74991*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74991*0 + 3*421*FLEN/8, x4, x1, x2)

inst_24998:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfff8000000000; valaddr_reg:x3; val_offset:74994*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74994*0 + 3*422*FLEN/8, x4, x1, x2)

inst_24999:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffc000000000; valaddr_reg:x3; val_offset:74997*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 74997*0 + 3*423*FLEN/8, x4, x1, x2)

inst_25000:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffe000000000; valaddr_reg:x3; val_offset:75000*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75000*0 + 3*424*FLEN/8, x4, x1, x2)

inst_25001:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffff000000000; valaddr_reg:x3; val_offset:75003*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75003*0 + 3*425*FLEN/8, x4, x1, x2)

inst_25002:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffff800000000; valaddr_reg:x3; val_offset:75006*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75006*0 + 3*426*FLEN/8, x4, x1, x2)

inst_25003:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffc00000000; valaddr_reg:x3; val_offset:75009*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75009*0 + 3*427*FLEN/8, x4, x1, x2)

inst_25004:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffe00000000; valaddr_reg:x3; val_offset:75012*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75012*0 + 3*428*FLEN/8, x4, x1, x2)

inst_25005:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffff00000000; valaddr_reg:x3; val_offset:75015*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75015*0 + 3*429*FLEN/8, x4, x1, x2)

inst_25006:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffff80000000; valaddr_reg:x3; val_offset:75018*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75018*0 + 3*430*FLEN/8, x4, x1, x2)

inst_25007:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffc0000000; valaddr_reg:x3; val_offset:75021*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75021*0 + 3*431*FLEN/8, x4, x1, x2)

inst_25008:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffe0000000; valaddr_reg:x3; val_offset:75024*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75024*0 + 3*432*FLEN/8, x4, x1, x2)

inst_25009:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffff0000000; valaddr_reg:x3; val_offset:75027*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75027*0 + 3*433*FLEN/8, x4, x1, x2)

inst_25010:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffff8000000; valaddr_reg:x3; val_offset:75030*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75030*0 + 3*434*FLEN/8, x4, x1, x2)

inst_25011:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffc000000; valaddr_reg:x3; val_offset:75033*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75033*0 + 3*435*FLEN/8, x4, x1, x2)

inst_25012:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffe000000; valaddr_reg:x3; val_offset:75036*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75036*0 + 3*436*FLEN/8, x4, x1, x2)

inst_25013:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffff000000; valaddr_reg:x3; val_offset:75039*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75039*0 + 3*437*FLEN/8, x4, x1, x2)

inst_25014:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffff800000; valaddr_reg:x3; val_offset:75042*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75042*0 + 3*438*FLEN/8, x4, x1, x2)

inst_25015:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffffc00000; valaddr_reg:x3; val_offset:75045*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75045*0 + 3*439*FLEN/8, x4, x1, x2)

inst_25016:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffffe00000; valaddr_reg:x3; val_offset:75048*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75048*0 + 3*440*FLEN/8, x4, x1, x2)

inst_25017:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffff00000; valaddr_reg:x3; val_offset:75051*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75051*0 + 3*441*FLEN/8, x4, x1, x2)

inst_25018:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffff80000; valaddr_reg:x3; val_offset:75054*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75054*0 + 3*442*FLEN/8, x4, x1, x2)

inst_25019:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffffc0000; valaddr_reg:x3; val_offset:75057*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75057*0 + 3*443*FLEN/8, x4, x1, x2)

inst_25020:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffffe0000; valaddr_reg:x3; val_offset:75060*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75060*0 + 3*444*FLEN/8, x4, x1, x2)

inst_25021:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffffff0000; valaddr_reg:x3; val_offset:75063*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75063*0 + 3*445*FLEN/8, x4, x1, x2)

inst_25022:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffffff8000; valaddr_reg:x3; val_offset:75066*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75066*0 + 3*446*FLEN/8, x4, x1, x2)

inst_25023:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffffffc000; valaddr_reg:x3; val_offset:75069*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75069*0 + 3*447*FLEN/8, x4, x1, x2)

inst_25024:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffffffe000; valaddr_reg:x3; val_offset:75072*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75072*0 + 3*448*FLEN/8, x4, x1, x2)

inst_25025:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffffff000; valaddr_reg:x3; val_offset:75075*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75075*0 + 3*449*FLEN/8, x4, x1, x2)

inst_25026:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffffff800; valaddr_reg:x3; val_offset:75078*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75078*0 + 3*450*FLEN/8, x4, x1, x2)

inst_25027:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffffffc00; valaddr_reg:x3; val_offset:75081*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75081*0 + 3*451*FLEN/8, x4, x1, x2)

inst_25028:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffffffe00; valaddr_reg:x3; val_offset:75084*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75084*0 + 3*452*FLEN/8, x4, x1, x2)

inst_25029:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffffffx00; valaddr_reg:x3; val_offset:75087*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75087*0 + 3*453*FLEN/8, x4, x1, x2)

inst_25030:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffffffx80; valaddr_reg:x3; val_offset:75090*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75090*0 + 3*454*FLEN/8, x4, x1, x2)

inst_25031:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffffffffc0; valaddr_reg:x3; val_offset:75093*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75093*0 + 3*455*FLEN/8, x4, x1, x2)

inst_25032:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffffffffe0; valaddr_reg:x3; val_offset:75096*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75096*0 + 3*456*FLEN/8, x4, x1, x2)

inst_25033:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffffffffx0; valaddr_reg:x3; val_offset:75099*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75099*0 + 3*457*FLEN/8, x4, x1, x2)

inst_25034:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffffffffx8; valaddr_reg:x3; val_offset:75102*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75102*0 + 3*458*FLEN/8, x4, x1, x2)

inst_25035:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffffffffc; valaddr_reg:x3; val_offset:75105*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75105*0 + 3*459*FLEN/8, x4, x1, x2)

inst_25036:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdffffffffffffe; valaddr_reg:x3; val_offset:75108*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75108*0 + 3*460*FLEN/8, x4, x1, x2)

inst_25037:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefcdd3e3e2557 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x085cce48ea926 and fs3 == 1 and fe3 == 0x3fd and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efcdd3e3e2557; op2val:0x9fe085cce48ea926;
op3val:0xbfdfffffffffffff; valaddr_reg:x3; val_offset:75111*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75111*0 + 3*461*FLEN/8, x4, x1, x2)

inst_25038:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000000000000; valaddr_reg:x3; val_offset:75114*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75114*0 + 3*462*FLEN/8, x4, x1, x2)

inst_25039:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000000000001; valaddr_reg:x3; val_offset:75117*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75117*0 + 3*463*FLEN/8, x4, x1, x2)

inst_25040:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000000000003; valaddr_reg:x3; val_offset:75120*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75120*0 + 3*464*FLEN/8, x4, x1, x2)

inst_25041:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000000000007; valaddr_reg:x3; val_offset:75123*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75123*0 + 3*465*FLEN/8, x4, x1, x2)

inst_25042:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000000000000f; valaddr_reg:x3; val_offset:75126*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75126*0 + 3*466*FLEN/8, x4, x1, x2)

inst_25043:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000000000001f; valaddr_reg:x3; val_offset:75129*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75129*0 + 3*467*FLEN/8, x4, x1, x2)

inst_25044:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000000000003f; valaddr_reg:x3; val_offset:75132*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75132*0 + 3*468*FLEN/8, x4, x1, x2)

inst_25045:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000000000007f; valaddr_reg:x3; val_offset:75135*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75135*0 + 3*469*FLEN/8, x4, x1, x2)

inst_25046:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400000000000ff; valaddr_reg:x3; val_offset:75138*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75138*0 + 3*470*FLEN/8, x4, x1, x2)

inst_25047:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400000000001ff; valaddr_reg:x3; val_offset:75141*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75141*0 + 3*471*FLEN/8, x4, x1, x2)

inst_25048:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400000000003ff; valaddr_reg:x3; val_offset:75144*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75144*0 + 3*472*FLEN/8, x4, x1, x2)

inst_25049:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400000000007ff; valaddr_reg:x3; val_offset:75147*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75147*0 + 3*473*FLEN/8, x4, x1, x2)

inst_25050:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000000000fff; valaddr_reg:x3; val_offset:75150*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75150*0 + 3*474*FLEN/8, x4, x1, x2)

inst_25051:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000000001fff; valaddr_reg:x3; val_offset:75153*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75153*0 + 3*475*FLEN/8, x4, x1, x2)

inst_25052:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000000003fff; valaddr_reg:x3; val_offset:75156*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75156*0 + 3*476*FLEN/8, x4, x1, x2)

inst_25053:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000000007fff; valaddr_reg:x3; val_offset:75159*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75159*0 + 3*477*FLEN/8, x4, x1, x2)

inst_25054:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000000000ffff; valaddr_reg:x3; val_offset:75162*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75162*0 + 3*478*FLEN/8, x4, x1, x2)

inst_25055:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000000001ffff; valaddr_reg:x3; val_offset:75165*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75165*0 + 3*479*FLEN/8, x4, x1, x2)

inst_25056:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000000003ffff; valaddr_reg:x3; val_offset:75168*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75168*0 + 3*480*FLEN/8, x4, x1, x2)

inst_25057:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000000007ffff; valaddr_reg:x3; val_offset:75171*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75171*0 + 3*481*FLEN/8, x4, x1, x2)

inst_25058:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400000000fffff; valaddr_reg:x3; val_offset:75174*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75174*0 + 3*482*FLEN/8, x4, x1, x2)

inst_25059:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400000001fffff; valaddr_reg:x3; val_offset:75177*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75177*0 + 3*483*FLEN/8, x4, x1, x2)

inst_25060:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400000003fffff; valaddr_reg:x3; val_offset:75180*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75180*0 + 3*484*FLEN/8, x4, x1, x2)

inst_25061:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400000007fffff; valaddr_reg:x3; val_offset:75183*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75183*0 + 3*485*FLEN/8, x4, x1, x2)

inst_25062:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000000ffffff; valaddr_reg:x3; val_offset:75186*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75186*0 + 3*486*FLEN/8, x4, x1, x2)

inst_25063:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000001ffffff; valaddr_reg:x3; val_offset:75189*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75189*0 + 3*487*FLEN/8, x4, x1, x2)

inst_25064:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000003ffffff; valaddr_reg:x3; val_offset:75192*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75192*0 + 3*488*FLEN/8, x4, x1, x2)

inst_25065:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000007ffffff; valaddr_reg:x3; val_offset:75195*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75195*0 + 3*489*FLEN/8, x4, x1, x2)

inst_25066:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000000fffffff; valaddr_reg:x3; val_offset:75198*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75198*0 + 3*490*FLEN/8, x4, x1, x2)

inst_25067:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000001fffffff; valaddr_reg:x3; val_offset:75201*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75201*0 + 3*491*FLEN/8, x4, x1, x2)

inst_25068:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000003fffffff; valaddr_reg:x3; val_offset:75204*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75204*0 + 3*492*FLEN/8, x4, x1, x2)

inst_25069:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000007fffffff; valaddr_reg:x3; val_offset:75207*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75207*0 + 3*493*FLEN/8, x4, x1, x2)

inst_25070:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400000ffffffff; valaddr_reg:x3; val_offset:75210*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75210*0 + 3*494*FLEN/8, x4, x1, x2)

inst_25071:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400001ffffffff; valaddr_reg:x3; val_offset:75213*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75213*0 + 3*495*FLEN/8, x4, x1, x2)

inst_25072:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400003ffffffff; valaddr_reg:x3; val_offset:75216*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75216*0 + 3*496*FLEN/8, x4, x1, x2)

inst_25073:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400007ffffffff; valaddr_reg:x3; val_offset:75219*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75219*0 + 3*497*FLEN/8, x4, x1, x2)

inst_25074:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40000fffffffff; valaddr_reg:x3; val_offset:75222*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75222*0 + 3*498*FLEN/8, x4, x1, x2)

inst_25075:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40001fffffffff; valaddr_reg:x3; val_offset:75225*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75225*0 + 3*499*FLEN/8, x4, x1, x2)

inst_25076:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40003fffffffff; valaddr_reg:x3; val_offset:75228*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75228*0 + 3*500*FLEN/8, x4, x1, x2)

inst_25077:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40007fffffffff; valaddr_reg:x3; val_offset:75231*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75231*0 + 3*501*FLEN/8, x4, x1, x2)

inst_25078:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4000ffffffffff; valaddr_reg:x3; val_offset:75234*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75234*0 + 3*502*FLEN/8, x4, x1, x2)

inst_25079:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4001ffffffffff; valaddr_reg:x3; val_offset:75237*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75237*0 + 3*503*FLEN/8, x4, x1, x2)

inst_25080:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4003ffffffffff; valaddr_reg:x3; val_offset:75240*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75240*0 + 3*504*FLEN/8, x4, x1, x2)

inst_25081:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4007ffffffffff; valaddr_reg:x3; val_offset:75243*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75243*0 + 3*505*FLEN/8, x4, x1, x2)

inst_25082:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb400fffffffffff; valaddr_reg:x3; val_offset:75246*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75246*0 + 3*506*FLEN/8, x4, x1, x2)

inst_25083:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb401fffffffffff; valaddr_reg:x3; val_offset:75249*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75249*0 + 3*507*FLEN/8, x4, x1, x2)

inst_25084:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb403fffffffffff; valaddr_reg:x3; val_offset:75252*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75252*0 + 3*508*FLEN/8, x4, x1, x2)

inst_25085:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb407fffffffffff; valaddr_reg:x3; val_offset:75255*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75255*0 + 3*509*FLEN/8, x4, x1, x2)

inst_25086:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb40ffffffffffff; valaddr_reg:x3; val_offset:75258*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75258*0 + 3*510*FLEN/8, x4, x1, x2)

inst_25087:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb41ffffffffffff; valaddr_reg:x3; val_offset:75261*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75261*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_25088:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb43ffffffffffff; valaddr_reg:x3; val_offset:75264*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75264*0 + 3*512*FLEN/8, x4, x1, x2)

inst_25089:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb47ffffffffffff; valaddr_reg:x3; val_offset:75267*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75267*0 + 3*513*FLEN/8, x4, x1, x2)

inst_25090:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb48000000000000; valaddr_reg:x3; val_offset:75270*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75270*0 + 3*514*FLEN/8, x4, x1, x2)

inst_25091:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4c000000000000; valaddr_reg:x3; val_offset:75273*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75273*0 + 3*515*FLEN/8, x4, x1, x2)

inst_25092:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4e000000000000; valaddr_reg:x3; val_offset:75276*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75276*0 + 3*516*FLEN/8, x4, x1, x2)

inst_25093:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4f000000000000; valaddr_reg:x3; val_offset:75279*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75279*0 + 3*517*FLEN/8, x4, x1, x2)

inst_25094:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4f800000000000; valaddr_reg:x3; val_offset:75282*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75282*0 + 3*518*FLEN/8, x4, x1, x2)

inst_25095:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fc00000000000; valaddr_reg:x3; val_offset:75285*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75285*0 + 3*519*FLEN/8, x4, x1, x2)

inst_25096:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fe00000000000; valaddr_reg:x3; val_offset:75288*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75288*0 + 3*520*FLEN/8, x4, x1, x2)

inst_25097:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ff00000000000; valaddr_reg:x3; val_offset:75291*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75291*0 + 3*521*FLEN/8, x4, x1, x2)

inst_25098:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ff80000000000; valaddr_reg:x3; val_offset:75294*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75294*0 + 3*522*FLEN/8, x4, x1, x2)

inst_25099:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffc0000000000; valaddr_reg:x3; val_offset:75297*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75297*0 + 3*523*FLEN/8, x4, x1, x2)

inst_25100:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffe0000000000; valaddr_reg:x3; val_offset:75300*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75300*0 + 3*524*FLEN/8, x4, x1, x2)

inst_25101:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fff0000000000; valaddr_reg:x3; val_offset:75303*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75303*0 + 3*525*FLEN/8, x4, x1, x2)

inst_25102:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fff8000000000; valaddr_reg:x3; val_offset:75306*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75306*0 + 3*526*FLEN/8, x4, x1, x2)

inst_25103:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffc000000000; valaddr_reg:x3; val_offset:75309*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75309*0 + 3*527*FLEN/8, x4, x1, x2)

inst_25104:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffe000000000; valaddr_reg:x3; val_offset:75312*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75312*0 + 3*528*FLEN/8, x4, x1, x2)

inst_25105:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffff000000000; valaddr_reg:x3; val_offset:75315*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75315*0 + 3*529*FLEN/8, x4, x1, x2)

inst_25106:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffff800000000; valaddr_reg:x3; val_offset:75318*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75318*0 + 3*530*FLEN/8, x4, x1, x2)

inst_25107:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffc00000000; valaddr_reg:x3; val_offset:75321*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75321*0 + 3*531*FLEN/8, x4, x1, x2)

inst_25108:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffe00000000; valaddr_reg:x3; val_offset:75324*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75324*0 + 3*532*FLEN/8, x4, x1, x2)

inst_25109:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffff00000000; valaddr_reg:x3; val_offset:75327*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75327*0 + 3*533*FLEN/8, x4, x1, x2)

inst_25110:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffff80000000; valaddr_reg:x3; val_offset:75330*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75330*0 + 3*534*FLEN/8, x4, x1, x2)

inst_25111:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffc0000000; valaddr_reg:x3; val_offset:75333*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75333*0 + 3*535*FLEN/8, x4, x1, x2)

inst_25112:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffe0000000; valaddr_reg:x3; val_offset:75336*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75336*0 + 3*536*FLEN/8, x4, x1, x2)

inst_25113:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffff0000000; valaddr_reg:x3; val_offset:75339*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75339*0 + 3*537*FLEN/8, x4, x1, x2)

inst_25114:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffff8000000; valaddr_reg:x3; val_offset:75342*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75342*0 + 3*538*FLEN/8, x4, x1, x2)

inst_25115:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffc000000; valaddr_reg:x3; val_offset:75345*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75345*0 + 3*539*FLEN/8, x4, x1, x2)

inst_25116:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffe000000; valaddr_reg:x3; val_offset:75348*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75348*0 + 3*540*FLEN/8, x4, x1, x2)

inst_25117:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffff000000; valaddr_reg:x3; val_offset:75351*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75351*0 + 3*541*FLEN/8, x4, x1, x2)

inst_25118:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffff800000; valaddr_reg:x3; val_offset:75354*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75354*0 + 3*542*FLEN/8, x4, x1, x2)

inst_25119:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffffc00000; valaddr_reg:x3; val_offset:75357*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75357*0 + 3*543*FLEN/8, x4, x1, x2)

inst_25120:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffffe00000; valaddr_reg:x3; val_offset:75360*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75360*0 + 3*544*FLEN/8, x4, x1, x2)

inst_25121:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffff00000; valaddr_reg:x3; val_offset:75363*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75363*0 + 3*545*FLEN/8, x4, x1, x2)

inst_25122:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffff80000; valaddr_reg:x3; val_offset:75366*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75366*0 + 3*546*FLEN/8, x4, x1, x2)

inst_25123:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffffc0000; valaddr_reg:x3; val_offset:75369*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75369*0 + 3*547*FLEN/8, x4, x1, x2)

inst_25124:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffffe0000; valaddr_reg:x3; val_offset:75372*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75372*0 + 3*548*FLEN/8, x4, x1, x2)

inst_25125:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffffff0000; valaddr_reg:x3; val_offset:75375*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75375*0 + 3*549*FLEN/8, x4, x1, x2)

inst_25126:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffffff8000; valaddr_reg:x3; val_offset:75378*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75378*0 + 3*550*FLEN/8, x4, x1, x2)

inst_25127:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffffffc000; valaddr_reg:x3; val_offset:75381*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75381*0 + 3*551*FLEN/8, x4, x1, x2)

inst_25128:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffffffe000; valaddr_reg:x3; val_offset:75384*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75384*0 + 3*552*FLEN/8, x4, x1, x2)

inst_25129:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffffff000; valaddr_reg:x3; val_offset:75387*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75387*0 + 3*553*FLEN/8, x4, x1, x2)

inst_25130:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffffff800; valaddr_reg:x3; val_offset:75390*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75390*0 + 3*554*FLEN/8, x4, x1, x2)

inst_25131:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffffffc00; valaddr_reg:x3; val_offset:75393*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75393*0 + 3*555*FLEN/8, x4, x1, x2)

inst_25132:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffffffe00; valaddr_reg:x3; val_offset:75396*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75396*0 + 3*556*FLEN/8, x4, x1, x2)

inst_25133:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffffffx00; valaddr_reg:x3; val_offset:75399*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75399*0 + 3*557*FLEN/8, x4, x1, x2)

inst_25134:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffffffx80; valaddr_reg:x3; val_offset:75402*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75402*0 + 3*558*FLEN/8, x4, x1, x2)

inst_25135:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffffffffc0; valaddr_reg:x3; val_offset:75405*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75405*0 + 3*559*FLEN/8, x4, x1, x2)

inst_25136:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffffffffe0; valaddr_reg:x3; val_offset:75408*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75408*0 + 3*560*FLEN/8, x4, x1, x2)

inst_25137:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffffffffx0; valaddr_reg:x3; val_offset:75411*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75411*0 + 3*561*FLEN/8, x4, x1, x2)

inst_25138:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffffffffx8; valaddr_reg:x3; val_offset:75414*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75414*0 + 3*562*FLEN/8, x4, x1, x2)

inst_25139:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffffffffc; valaddr_reg:x3; val_offset:75417*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75417*0 + 3*563*FLEN/8, x4, x1, x2)

inst_25140:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4ffffffffffffe; valaddr_reg:x3; val_offset:75420*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75420*0 + 3*564*FLEN/8, x4, x1, x2)

inst_25141:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3b4 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbb4fffffffffffff; valaddr_reg:x3; val_offset:75423*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75423*0 + 3*565*FLEN/8, x4, x1, x2)

inst_25142:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:75426*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75426*0 + 3*566*FLEN/8, x4, x1, x2)

inst_25143:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:75429*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75429*0 + 3*567*FLEN/8, x4, x1, x2)

inst_25144:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:75432*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75432*0 + 3*568*FLEN/8, x4, x1, x2)

inst_25145:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:75435*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75435*0 + 3*569*FLEN/8, x4, x1, x2)

inst_25146:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:75438*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75438*0 + 3*570*FLEN/8, x4, x1, x2)

inst_25147:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:75441*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75441*0 + 3*571*FLEN/8, x4, x1, x2)

inst_25148:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:75444*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75444*0 + 3*572*FLEN/8, x4, x1, x2)

inst_25149:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:75447*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75447*0 + 3*573*FLEN/8, x4, x1, x2)

inst_25150:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:75450*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75450*0 + 3*574*FLEN/8, x4, x1, x2)

inst_25151:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbx86db6db6db6db6; valaddr_reg:x3; val_offset:75453*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75453*0 + 3*575*FLEN/8, x4, x1, x2)

inst_25152:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:75456*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75456*0 + 3*576*FLEN/8, x4, x1, x2)

inst_25153:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:75459*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75459*0 + 3*577*FLEN/8, x4, x1, x2)

inst_25154:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:75462*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75462*0 + 3*578*FLEN/8, x4, x1, x2)

inst_25155:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbx8b6db6db6db6db; valaddr_reg:x3; val_offset:75465*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75465*0 + 3*579*FLEN/8, x4, x1, x2)

inst_25156:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbx8ccccccccccccc; valaddr_reg:x3; val_offset:75468*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75468*0 + 3*580*FLEN/8, x4, x1, x2)

inst_25157:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbx8db6db6db6db6d; valaddr_reg:x3; val_offset:75471*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75471*0 + 3*581*FLEN/8, x4, x1, x2)

inst_25158:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbx8fffffffffffc0; valaddr_reg:x3; val_offset:75474*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75474*0 + 3*582*FLEN/8, x4, x1, x2)

inst_25159:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbx8fffffffffffe0; valaddr_reg:x3; val_offset:75477*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75477*0 + 3*583*FLEN/8, x4, x1, x2)

inst_25160:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbx8fffffffffffx0; valaddr_reg:x3; val_offset:75480*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75480*0 + 3*584*FLEN/8, x4, x1, x2)

inst_25161:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbx8fffffffffffx8; valaddr_reg:x3; val_offset:75483*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75483*0 + 3*585*FLEN/8, x4, x1, x2)

inst_25162:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbx8ffffffffffffc; valaddr_reg:x3; val_offset:75486*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75486*0 + 3*586*FLEN/8, x4, x1, x2)

inst_25163:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xefdfc9fx93d7f and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x08533aec0e400 and fs3 == 1 and fe3 == 0x3x8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8efdfc9fx93d7f; op2val:0x9fe08533aec0e400;
op3val:0xbx8ffffffffffffe; valaddr_reg:x3; val_offset:75489*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75489*0 + 3*587*FLEN/8, x4, x1, x2)

inst_25164:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000000000000; valaddr_reg:x3; val_offset:75492*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75492*0 + 3*588*FLEN/8, x4, x1, x2)

inst_25165:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000000000001; valaddr_reg:x3; val_offset:75495*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75495*0 + 3*589*FLEN/8, x4, x1, x2)

inst_25166:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000000000003; valaddr_reg:x3; val_offset:75498*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75498*0 + 3*590*FLEN/8, x4, x1, x2)

inst_25167:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000000000007; valaddr_reg:x3; val_offset:75501*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75501*0 + 3*591*FLEN/8, x4, x1, x2)

inst_25168:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000000000000f; valaddr_reg:x3; val_offset:75504*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75504*0 + 3*592*FLEN/8, x4, x1, x2)

inst_25169:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000000000001f; valaddr_reg:x3; val_offset:75507*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75507*0 + 3*593*FLEN/8, x4, x1, x2)

inst_25170:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000000000003f; valaddr_reg:x3; val_offset:75510*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75510*0 + 3*594*FLEN/8, x4, x1, x2)

inst_25171:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000000000007f; valaddr_reg:x3; val_offset:75513*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75513*0 + 3*595*FLEN/8, x4, x1, x2)

inst_25172:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf00000000000ff; valaddr_reg:x3; val_offset:75516*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75516*0 + 3*596*FLEN/8, x4, x1, x2)

inst_25173:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf00000000001ff; valaddr_reg:x3; val_offset:75519*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75519*0 + 3*597*FLEN/8, x4, x1, x2)

inst_25174:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf00000000003ff; valaddr_reg:x3; val_offset:75522*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75522*0 + 3*598*FLEN/8, x4, x1, x2)

inst_25175:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf00000000007ff; valaddr_reg:x3; val_offset:75525*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75525*0 + 3*599*FLEN/8, x4, x1, x2)

inst_25176:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000000000fff; valaddr_reg:x3; val_offset:75528*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75528*0 + 3*600*FLEN/8, x4, x1, x2)

inst_25177:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000000001fff; valaddr_reg:x3; val_offset:75531*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75531*0 + 3*601*FLEN/8, x4, x1, x2)

inst_25178:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000000003fff; valaddr_reg:x3; val_offset:75534*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75534*0 + 3*602*FLEN/8, x4, x1, x2)

inst_25179:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000000007fff; valaddr_reg:x3; val_offset:75537*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75537*0 + 3*603*FLEN/8, x4, x1, x2)

inst_25180:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000000000ffff; valaddr_reg:x3; val_offset:75540*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75540*0 + 3*604*FLEN/8, x4, x1, x2)

inst_25181:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000000001ffff; valaddr_reg:x3; val_offset:75543*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75543*0 + 3*605*FLEN/8, x4, x1, x2)

inst_25182:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000000003ffff; valaddr_reg:x3; val_offset:75546*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75546*0 + 3*606*FLEN/8, x4, x1, x2)

inst_25183:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000000007ffff; valaddr_reg:x3; val_offset:75549*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75549*0 + 3*607*FLEN/8, x4, x1, x2)

inst_25184:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf00000000fffff; valaddr_reg:x3; val_offset:75552*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75552*0 + 3*608*FLEN/8, x4, x1, x2)

inst_25185:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf00000001fffff; valaddr_reg:x3; val_offset:75555*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75555*0 + 3*609*FLEN/8, x4, x1, x2)

inst_25186:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf00000003fffff; valaddr_reg:x3; val_offset:75558*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75558*0 + 3*610*FLEN/8, x4, x1, x2)

inst_25187:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf00000007fffff; valaddr_reg:x3; val_offset:75561*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75561*0 + 3*611*FLEN/8, x4, x1, x2)

inst_25188:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000000ffffff; valaddr_reg:x3; val_offset:75564*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75564*0 + 3*612*FLEN/8, x4, x1, x2)

inst_25189:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000001ffffff; valaddr_reg:x3; val_offset:75567*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75567*0 + 3*613*FLEN/8, x4, x1, x2)

inst_25190:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000003ffffff; valaddr_reg:x3; val_offset:75570*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75570*0 + 3*614*FLEN/8, x4, x1, x2)

inst_25191:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000007ffffff; valaddr_reg:x3; val_offset:75573*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75573*0 + 3*615*FLEN/8, x4, x1, x2)

inst_25192:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000000fffffff; valaddr_reg:x3; val_offset:75576*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75576*0 + 3*616*FLEN/8, x4, x1, x2)

inst_25193:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000001fffffff; valaddr_reg:x3; val_offset:75579*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75579*0 + 3*617*FLEN/8, x4, x1, x2)

inst_25194:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000003fffffff; valaddr_reg:x3; val_offset:75582*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75582*0 + 3*618*FLEN/8, x4, x1, x2)

inst_25195:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000007fffffff; valaddr_reg:x3; val_offset:75585*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75585*0 + 3*619*FLEN/8, x4, x1, x2)

inst_25196:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf00000ffffffff; valaddr_reg:x3; val_offset:75588*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75588*0 + 3*620*FLEN/8, x4, x1, x2)

inst_25197:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf00001ffffffff; valaddr_reg:x3; val_offset:75591*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75591*0 + 3*621*FLEN/8, x4, x1, x2)

inst_25198:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf00003ffffffff; valaddr_reg:x3; val_offset:75594*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75594*0 + 3*622*FLEN/8, x4, x1, x2)

inst_25199:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf00007ffffffff; valaddr_reg:x3; val_offset:75597*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75597*0 + 3*623*FLEN/8, x4, x1, x2)

inst_25200:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0000fffffffff; valaddr_reg:x3; val_offset:75600*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75600*0 + 3*624*FLEN/8, x4, x1, x2)

inst_25201:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0001fffffffff; valaddr_reg:x3; val_offset:75603*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75603*0 + 3*625*FLEN/8, x4, x1, x2)

inst_25202:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0003fffffffff; valaddr_reg:x3; val_offset:75606*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75606*0 + 3*626*FLEN/8, x4, x1, x2)

inst_25203:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf0007fffffffff; valaddr_reg:x3; val_offset:75609*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75609*0 + 3*627*FLEN/8, x4, x1, x2)

inst_25204:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf000ffffffffff; valaddr_reg:x3; val_offset:75612*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75612*0 + 3*628*FLEN/8, x4, x1, x2)

inst_25205:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf001ffffffffff; valaddr_reg:x3; val_offset:75615*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75615*0 + 3*629*FLEN/8, x4, x1, x2)

inst_25206:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf003ffffffffff; valaddr_reg:x3; val_offset:75618*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75618*0 + 3*630*FLEN/8, x4, x1, x2)

inst_25207:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf007ffffffffff; valaddr_reg:x3; val_offset:75621*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75621*0 + 3*631*FLEN/8, x4, x1, x2)

inst_25208:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bx00fffffffffff; valaddr_reg:x3; val_offset:75624*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75624*0 + 3*632*FLEN/8, x4, x1, x2)

inst_25209:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bx01fffffffffff; valaddr_reg:x3; val_offset:75627*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75627*0 + 3*633*FLEN/8, x4, x1, x2)

inst_25210:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bx03fffffffffff; valaddr_reg:x3; val_offset:75630*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75630*0 + 3*634*FLEN/8, x4, x1, x2)

inst_25211:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bx07fffffffffff; valaddr_reg:x3; val_offset:75633*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75633*0 + 3*635*FLEN/8, x4, x1, x2)

inst_25212:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bx0ffffffffffff; valaddr_reg:x3; val_offset:75636*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75636*0 + 3*636*FLEN/8, x4, x1, x2)

inst_25213:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bx1ffffffffffff; valaddr_reg:x3; val_offset:75639*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75639*0 + 3*637*FLEN/8, x4, x1, x2)

inst_25214:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bx3ffffffffffff; valaddr_reg:x3; val_offset:75642*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75642*0 + 3*638*FLEN/8, x4, x1, x2)

inst_25215:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bx7ffffffffffff; valaddr_reg:x3; val_offset:75645*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75645*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_25216:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bf8000000000000; valaddr_reg:x3; val_offset:75648*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75648*0 + 3*640*FLEN/8, x4, x1, x2)

inst_25217:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfc000000000000; valaddr_reg:x3; val_offset:75651*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75651*0 + 3*641*FLEN/8, x4, x1, x2)

inst_25218:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfe000000000000; valaddr_reg:x3; val_offset:75654*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75654*0 + 3*642*FLEN/8, x4, x1, x2)

inst_25219:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bff000000000000; valaddr_reg:x3; val_offset:75657*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75657*0 + 3*643*FLEN/8, x4, x1, x2)

inst_25220:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bff800000000000; valaddr_reg:x3; val_offset:75660*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75660*0 + 3*644*FLEN/8, x4, x1, x2)

inst_25221:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffc00000000000; valaddr_reg:x3; val_offset:75663*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75663*0 + 3*645*FLEN/8, x4, x1, x2)

inst_25222:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffe00000000000; valaddr_reg:x3; val_offset:75666*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75666*0 + 3*646*FLEN/8, x4, x1, x2)

inst_25223:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfff00000000000; valaddr_reg:x3; val_offset:75669*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75669*0 + 3*647*FLEN/8, x4, x1, x2)

inst_25224:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfff80000000000; valaddr_reg:x3; val_offset:75672*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75672*0 + 3*648*FLEN/8, x4, x1, x2)

inst_25225:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffc0000000000; valaddr_reg:x3; val_offset:75675*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75675*0 + 3*649*FLEN/8, x4, x1, x2)

inst_25226:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffe0000000000; valaddr_reg:x3; val_offset:75678*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75678*0 + 3*650*FLEN/8, x4, x1, x2)

inst_25227:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffff0000000000; valaddr_reg:x3; val_offset:75681*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75681*0 + 3*651*FLEN/8, x4, x1, x2)

inst_25228:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffff8000000000; valaddr_reg:x3; val_offset:75684*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75684*0 + 3*652*FLEN/8, x4, x1, x2)

inst_25229:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffc000000000; valaddr_reg:x3; val_offset:75687*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75687*0 + 3*653*FLEN/8, x4, x1, x2)

inst_25230:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffe000000000; valaddr_reg:x3; val_offset:75690*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75690*0 + 3*654*FLEN/8, x4, x1, x2)

inst_25231:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffff000000000; valaddr_reg:x3; val_offset:75693*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75693*0 + 3*655*FLEN/8, x4, x1, x2)

inst_25232:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffff800000000; valaddr_reg:x3; val_offset:75696*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75696*0 + 3*656*FLEN/8, x4, x1, x2)

inst_25233:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffc00000000; valaddr_reg:x3; val_offset:75699*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75699*0 + 3*657*FLEN/8, x4, x1, x2)

inst_25234:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffe00000000; valaddr_reg:x3; val_offset:75702*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75702*0 + 3*658*FLEN/8, x4, x1, x2)

inst_25235:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffff00000000; valaddr_reg:x3; val_offset:75705*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75705*0 + 3*659*FLEN/8, x4, x1, x2)

inst_25236:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffff80000000; valaddr_reg:x3; val_offset:75708*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75708*0 + 3*660*FLEN/8, x4, x1, x2)

inst_25237:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffc0000000; valaddr_reg:x3; val_offset:75711*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75711*0 + 3*661*FLEN/8, x4, x1, x2)

inst_25238:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffe0000000; valaddr_reg:x3; val_offset:75714*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75714*0 + 3*662*FLEN/8, x4, x1, x2)

inst_25239:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffff0000000; valaddr_reg:x3; val_offset:75717*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75717*0 + 3*663*FLEN/8, x4, x1, x2)

inst_25240:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffff8000000; valaddr_reg:x3; val_offset:75720*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75720*0 + 3*664*FLEN/8, x4, x1, x2)

inst_25241:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffc000000; valaddr_reg:x3; val_offset:75723*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75723*0 + 3*665*FLEN/8, x4, x1, x2)

inst_25242:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffe000000; valaddr_reg:x3; val_offset:75726*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75726*0 + 3*666*FLEN/8, x4, x1, x2)

inst_25243:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffff000000; valaddr_reg:x3; val_offset:75729*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75729*0 + 3*667*FLEN/8, x4, x1, x2)

inst_25244:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffff800000; valaddr_reg:x3; val_offset:75732*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75732*0 + 3*668*FLEN/8, x4, x1, x2)

inst_25245:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffffc00000; valaddr_reg:x3; val_offset:75735*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75735*0 + 3*669*FLEN/8, x4, x1, x2)

inst_25246:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffffe00000; valaddr_reg:x3; val_offset:75738*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75738*0 + 3*670*FLEN/8, x4, x1, x2)

inst_25247:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffff00000; valaddr_reg:x3; val_offset:75741*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75741*0 + 3*671*FLEN/8, x4, x1, x2)

inst_25248:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffff80000; valaddr_reg:x3; val_offset:75744*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75744*0 + 3*672*FLEN/8, x4, x1, x2)

inst_25249:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffffc0000; valaddr_reg:x3; val_offset:75747*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75747*0 + 3*673*FLEN/8, x4, x1, x2)

inst_25250:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffffe0000; valaddr_reg:x3; val_offset:75750*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75750*0 + 3*674*FLEN/8, x4, x1, x2)

inst_25251:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffffff0000; valaddr_reg:x3; val_offset:75753*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75753*0 + 3*675*FLEN/8, x4, x1, x2)

inst_25252:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffffff8000; valaddr_reg:x3; val_offset:75756*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75756*0 + 3*676*FLEN/8, x4, x1, x2)

inst_25253:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffffffc000; valaddr_reg:x3; val_offset:75759*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75759*0 + 3*677*FLEN/8, x4, x1, x2)

inst_25254:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffffffe000; valaddr_reg:x3; val_offset:75762*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75762*0 + 3*678*FLEN/8, x4, x1, x2)

inst_25255:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffffff000; valaddr_reg:x3; val_offset:75765*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75765*0 + 3*679*FLEN/8, x4, x1, x2)

inst_25256:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffffff800; valaddr_reg:x3; val_offset:75768*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75768*0 + 3*680*FLEN/8, x4, x1, x2)

inst_25257:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffffffc00; valaddr_reg:x3; val_offset:75771*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75771*0 + 3*681*FLEN/8, x4, x1, x2)

inst_25258:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffffffe00; valaddr_reg:x3; val_offset:75774*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75774*0 + 3*682*FLEN/8, x4, x1, x2)

inst_25259:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffffffx00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffffffx00; valaddr_reg:x3; val_offset:75777*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75777*0 + 3*683*FLEN/8, x4, x1, x2)

inst_25260:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffffffx80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffffffx80; valaddr_reg:x3; val_offset:75780*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75780*0 + 3*684*FLEN/8, x4, x1, x2)

inst_25261:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffffffffc0; valaddr_reg:x3; val_offset:75783*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75783*0 + 3*685*FLEN/8, x4, x1, x2)

inst_25262:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffffffffe0; valaddr_reg:x3; val_offset:75786*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75786*0 + 3*686*FLEN/8, x4, x1, x2)

inst_25263:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffffffffx0; valaddr_reg:x3; val_offset:75789*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75789*0 + 3*687*FLEN/8, x4, x1, x2)

inst_25264:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffffffffx8; valaddr_reg:x3; val_offset:75792*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75792*0 + 3*688*FLEN/8, x4, x1, x2)

inst_25265:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffffffffc; valaddr_reg:x3; val_offset:75795*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75795*0 + 3*689*FLEN/8, x4, x1, x2)

inst_25266:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bfffffffffffffe; valaddr_reg:x3; val_offset:75798*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75798*0 + 3*690*FLEN/8, x4, x1, x2)

inst_25267:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3bf and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3bffffffffffffff; valaddr_reg:x3; val_offset:75801*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75801*0 + 3*691*FLEN/8, x4, x1, x2)

inst_25268:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:75804*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75804*0 + 3*692*FLEN/8, x4, x1, x2)

inst_25269:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:75807*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75807*0 + 3*693*FLEN/8, x4, x1, x2)

inst_25270:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:75810*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75810*0 + 3*694*FLEN/8, x4, x1, x2)

inst_25271:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:75813*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75813*0 + 3*695*FLEN/8, x4, x1, x2)

inst_25272:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:75816*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75816*0 + 3*696*FLEN/8, x4, x1, x2)

inst_25273:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:75819*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75819*0 + 3*697*FLEN/8, x4, x1, x2)

inst_25274:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:75822*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75822*0 + 3*698*FLEN/8, x4, x1, x2)

inst_25275:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:75825*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75825*0 + 3*699*FLEN/8, x4, x1, x2)

inst_25276:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:75828*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75828*0 + 3*700*FLEN/8, x4, x1, x2)

inst_25277:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3fx6db6db6db6db6; valaddr_reg:x3; val_offset:75831*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75831*0 + 3*701*FLEN/8, x4, x1, x2)

inst_25278:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:75834*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75834*0 + 3*702*FLEN/8, x4, x1, x2)

inst_25279:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:75837*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75837*0 + 3*703*FLEN/8, x4, x1, x2)

inst_25280:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:75840*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75840*0 + 3*704*FLEN/8, x4, x1, x2)

inst_25281:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:75843*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75843*0 + 3*705*FLEN/8, x4, x1, x2)

inst_25282:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:75846*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75846*0 + 3*706*FLEN/8, x4, x1, x2)

inst_25283:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:75849*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75849*0 + 3*707*FLEN/8, x4, x1, x2)

inst_25284:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:75852*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75852*0 + 3*708*FLEN/8, x4, x1, x2)

inst_25285:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:75855*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75855*0 + 3*709*FLEN/8, x4, x1, x2)

inst_25286:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffx0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3fffffffffffffx0; valaddr_reg:x3; val_offset:75858*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75858*0 + 3*710*FLEN/8, x4, x1, x2)

inst_25287:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffx8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3fffffffffffffx8; valaddr_reg:x3; val_offset:75861*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75861*0 + 3*711*FLEN/8, x4, x1, x2)

inst_25288:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:75864*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75864*0 + 3*712*FLEN/8, x4, x1, x2)

inst_25289:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx4ce360b8a273 and fs2 == 0 and fe2 == 0x205 and fm2 == 0x05b8ec83852a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x4ce360b8a273; op2val:0x20505b8ec83852a9;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:75867*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75867*0 + 3*713*FLEN/8, x4, x1, x2)

inst_25290:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000000000000; valaddr_reg:x3; val_offset:75870*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75870*0 + 3*714*FLEN/8, x4, x1, x2)

inst_25291:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000000000001; valaddr_reg:x3; val_offset:75873*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75873*0 + 3*715*FLEN/8, x4, x1, x2)

inst_25292:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000000000003; valaddr_reg:x3; val_offset:75876*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75876*0 + 3*716*FLEN/8, x4, x1, x2)

inst_25293:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000000000007; valaddr_reg:x3; val_offset:75879*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75879*0 + 3*717*FLEN/8, x4, x1, x2)

inst_25294:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000000000000f; valaddr_reg:x3; val_offset:75882*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75882*0 + 3*718*FLEN/8, x4, x1, x2)

inst_25295:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000000000001f; valaddr_reg:x3; val_offset:75885*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75885*0 + 3*719*FLEN/8, x4, x1, x2)

inst_25296:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000000000003f; valaddr_reg:x3; val_offset:75888*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75888*0 + 3*720*FLEN/8, x4, x1, x2)

inst_25297:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000000000007f; valaddr_reg:x3; val_offset:75891*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75891*0 + 3*721*FLEN/8, x4, x1, x2)

inst_25298:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100000000000ff; valaddr_reg:x3; val_offset:75894*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75894*0 + 3*722*FLEN/8, x4, x1, x2)

inst_25299:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100000000001ff; valaddr_reg:x3; val_offset:75897*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75897*0 + 3*723*FLEN/8, x4, x1, x2)

inst_25300:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100000000003ff; valaddr_reg:x3; val_offset:75900*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75900*0 + 3*724*FLEN/8, x4, x1, x2)

inst_25301:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100000000007ff; valaddr_reg:x3; val_offset:75903*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75903*0 + 3*725*FLEN/8, x4, x1, x2)

inst_25302:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000000000fff; valaddr_reg:x3; val_offset:75906*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75906*0 + 3*726*FLEN/8, x4, x1, x2)

inst_25303:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000000001fff; valaddr_reg:x3; val_offset:75909*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75909*0 + 3*727*FLEN/8, x4, x1, x2)

inst_25304:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000000003fff; valaddr_reg:x3; val_offset:75912*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75912*0 + 3*728*FLEN/8, x4, x1, x2)

inst_25305:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000000007fff; valaddr_reg:x3; val_offset:75915*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75915*0 + 3*729*FLEN/8, x4, x1, x2)

inst_25306:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000000000ffff; valaddr_reg:x3; val_offset:75918*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75918*0 + 3*730*FLEN/8, x4, x1, x2)

inst_25307:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000000001ffff; valaddr_reg:x3; val_offset:75921*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75921*0 + 3*731*FLEN/8, x4, x1, x2)

inst_25308:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000000003ffff; valaddr_reg:x3; val_offset:75924*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75924*0 + 3*732*FLEN/8, x4, x1, x2)

inst_25309:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000000007ffff; valaddr_reg:x3; val_offset:75927*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75927*0 + 3*733*FLEN/8, x4, x1, x2)

inst_25310:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100000000fffff; valaddr_reg:x3; val_offset:75930*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75930*0 + 3*734*FLEN/8, x4, x1, x2)

inst_25311:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100000001fffff; valaddr_reg:x3; val_offset:75933*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75933*0 + 3*735*FLEN/8, x4, x1, x2)

inst_25312:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100000003fffff; valaddr_reg:x3; val_offset:75936*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75936*0 + 3*736*FLEN/8, x4, x1, x2)

inst_25313:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100000007fffff; valaddr_reg:x3; val_offset:75939*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75939*0 + 3*737*FLEN/8, x4, x1, x2)

inst_25314:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000000ffffff; valaddr_reg:x3; val_offset:75942*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75942*0 + 3*738*FLEN/8, x4, x1, x2)

inst_25315:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000001ffffff; valaddr_reg:x3; val_offset:75945*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75945*0 + 3*739*FLEN/8, x4, x1, x2)

inst_25316:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000003ffffff; valaddr_reg:x3; val_offset:75948*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75948*0 + 3*740*FLEN/8, x4, x1, x2)

inst_25317:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000007ffffff; valaddr_reg:x3; val_offset:75951*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75951*0 + 3*741*FLEN/8, x4, x1, x2)

inst_25318:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000000fffffff; valaddr_reg:x3; val_offset:75954*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75954*0 + 3*742*FLEN/8, x4, x1, x2)

inst_25319:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000001fffffff; valaddr_reg:x3; val_offset:75957*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75957*0 + 3*743*FLEN/8, x4, x1, x2)

inst_25320:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000003fffffff; valaddr_reg:x3; val_offset:75960*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75960*0 + 3*744*FLEN/8, x4, x1, x2)

inst_25321:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000007fffffff; valaddr_reg:x3; val_offset:75963*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75963*0 + 3*745*FLEN/8, x4, x1, x2)

inst_25322:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100000ffffffff; valaddr_reg:x3; val_offset:75966*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75966*0 + 3*746*FLEN/8, x4, x1, x2)

inst_25323:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100001ffffffff; valaddr_reg:x3; val_offset:75969*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75969*0 + 3*747*FLEN/8, x4, x1, x2)

inst_25324:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100003ffffffff; valaddr_reg:x3; val_offset:75972*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75972*0 + 3*748*FLEN/8, x4, x1, x2)

inst_25325:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100007ffffffff; valaddr_reg:x3; val_offset:75975*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75975*0 + 3*749*FLEN/8, x4, x1, x2)

inst_25326:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810000fffffffff; valaddr_reg:x3; val_offset:75978*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75978*0 + 3*750*FLEN/8, x4, x1, x2)

inst_25327:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810001fffffffff; valaddr_reg:x3; val_offset:75981*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75981*0 + 3*751*FLEN/8, x4, x1, x2)

inst_25328:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810003fffffffff; valaddr_reg:x3; val_offset:75984*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75984*0 + 3*752*FLEN/8, x4, x1, x2)

inst_25329:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810007fffffffff; valaddr_reg:x3; val_offset:75987*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75987*0 + 3*753*FLEN/8, x4, x1, x2)

inst_25330:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81000ffffffffff; valaddr_reg:x3; val_offset:75990*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75990*0 + 3*754*FLEN/8, x4, x1, x2)

inst_25331:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81001ffffffffff; valaddr_reg:x3; val_offset:75993*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75993*0 + 3*755*FLEN/8, x4, x1, x2)

inst_25332:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81003ffffffffff; valaddr_reg:x3; val_offset:75996*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75996*0 + 3*756*FLEN/8, x4, x1, x2)

inst_25333:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81007ffffffffff; valaddr_reg:x3; val_offset:75999*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 75999*0 + 3*757*FLEN/8, x4, x1, x2)

inst_25334:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8100fffffffffff; valaddr_reg:x3; val_offset:76002*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 76002*0 + 3*758*FLEN/8, x4, x1, x2)

inst_25335:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8101fffffffffff; valaddr_reg:x3; val_offset:76005*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 76005*0 + 3*759*FLEN/8, x4, x1, x2)

inst_25336:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8103fffffffffff; valaddr_reg:x3; val_offset:76008*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 76008*0 + 3*760*FLEN/8, x4, x1, x2)

inst_25337:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb8107fffffffffff; valaddr_reg:x3; val_offset:76011*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 76011*0 + 3*761*FLEN/8, x4, x1, x2)

inst_25338:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb810ffffffffffff; valaddr_reg:x3; val_offset:76014*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 76014*0 + 3*762*FLEN/8, x4, x1, x2)

inst_25339:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb811ffffffffffff; valaddr_reg:x3; val_offset:76017*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 76017*0 + 3*763*FLEN/8, x4, x1, x2)

inst_25340:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb813ffffffffffff; valaddr_reg:x3; val_offset:76020*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 76020*0 + 3*764*FLEN/8, x4, x1, x2)

inst_25341:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb817ffffffffffff; valaddr_reg:x3; val_offset:76023*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 76023*0 + 3*765*FLEN/8, x4, x1, x2)

inst_25342:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb818000000000000; valaddr_reg:x3; val_offset:76026*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 76026*0 + 3*766*FLEN/8, x4, x1, x2)

inst_25343:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx5ee3b37f961b and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x0522bdb93c67b and fs3 == 1 and fe3 == 0x381 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x5ee3b37f961b; op2val:0x9fe0522bdb93c67b;
op3val:0xb81c000000000000; valaddr_reg:x3; val_offset:76029*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 76029*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffff073741823,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7fffffff147483647,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffff294967295,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ffffffff589934591,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffff7179869183,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7ffffffff4359738367,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffff8719476735,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1fffffffff37438953471,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffff74877906943,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7fffffffff49755813887,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffff099511627775,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ffffffffff199023255551,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffff398046511103,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7ffffffffff796093022207,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffff7592186044415,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1fffffffffff5184372088831,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3fffffffffff0368744177663,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7fffffffffff40737488355327,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff81474976710655,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ffffffffffff62949953421311,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x333333333333300719925474099,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3ffffffffffff125899906842623,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4924924924924286742750677284,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6666666666666801439850948198,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6db6db6db6db6930114126015926,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7777777777777101679826106231,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7ffffffffffff251799813685247,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000000000000251799813685248,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8888888888888401919801264264,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x9999999999999702159776422297,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb6db6db6db6db216856876693211,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xc000000000000377699720527872,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xccccccccccccc602879701896396,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xdb6db6db6db6d860228252031853,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xe000000000000940649673949184,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xf000000000000222124650659840,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xf800000000000362862139015168,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfc00000000000433230883192832,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfe00000000000468415255281664,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xff00000000000486007441326080,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xff80000000000494803534348288,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffc0000000000499201580859392,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffe0000000000501400604114944,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfff0000000000502500115742720,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfff8000000000503049871556608,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffc000000000503324749463552,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffe000000000503462188417024,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffff000000000503530907893760,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffff800000000503565267632128,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffc00000000503582447501312,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffe00000000503591037435904,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffff00000000503595332403200,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffff80000000503597479886848,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffc0000000503598553628672,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffe0000000503599090499584,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffff0000000503599358935040,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffff8000000503599493152768,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffc000000503599560261632,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffe000000503599593816064,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffff000000503599610593280,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffff800000503599618981888,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffc00000503599623176192,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffe00000503599625273344,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffff00000503599626321920,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffff80000503599626846208,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffc0000503599627108352,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffe0000503599627239424,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffff0000503599627304960,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffff8000503599627337728,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffc000503599627354112,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffe000503599627362304,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffff000503599627366400,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffff800503599627368448,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffc00503599627369472,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffe00503599627369984,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffff00503599627370240,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffff80503599627370368,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffc0503599627370432,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffe0503599627370464,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff0503599627370480,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff8503599627370488,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffc503599627370492,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffe503599627370494,64,FLEN)
NAN_BOXED(0x5x8e759fx97b7507885570210241934599,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffff503599627370495,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000000000000368491638549381120,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000000000001368491638549381121,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000000000003368491638549381123,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000000000007368491638549381127,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000000000000f368491638549381135,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000000000001f368491638549381151,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000000000003f368491638549381183,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000000000007f368491638549381247,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00000000000ff368491638549381375,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00000000001ff368491638549381631,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00000000003ff368491638549382143,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00000000007ff368491638549383167,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000000000fff368491638549385215,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000000001fff368491638549389311,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000000003fff368491638549397503,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000000007fff368491638549413887,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000000000ffff368491638549446655,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000000001ffff368491638549512191,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000000003ffff368491638549643263,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000000007ffff368491638549905407,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00000000fffff368491638550429695,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00000001fffff368491638551478271,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00000003fffff368491638553575423,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00000007fffff368491638557769727,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000000ffffff368491638566158335,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000001ffffff368491638582935551,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000003ffffff368491638616489983,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000007ffffff368491638683598847,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000000fffffff368491638817816575,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000001fffffff368491639086252031,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000003fffffff368491639623122943,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000007fffffff368491640696864767,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00000ffffffff368491642844348415,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00001ffffffff368491647139315711,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00003ffffffff368491655729250303,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00007ffffffff368491672909119487,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0000fffffffff368491707268857855,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0001fffffffff368491775988334591,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0003fffffffff368491913427288063,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0007fffffffff368492188305195007,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca000ffffffffff368492738061008895,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca001ffffffffff368493837572636671,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca003ffffffffff368496036595892223,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca007ffffffffff368500434642403327,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca00fffffffffff368509230735425535,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca01fffffffffff368526822921469951,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca03fffffffffff368562007293558783,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca07fffffffffff368632376037736447,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca0ffffffffffff368773113526091775,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca1ffffffffffff369054588502802431,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca3ffffffffffff369617538456223743,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca7ffffffffffff370743438363066367,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ca8000000000000370743438363066368,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cac000000000000371869338269908992,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cae000000000000372432288223330304,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caf000000000000372713763200040960,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caf800000000000372854500688396288,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafc00000000000372924869432573952,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafe00000000000372960053804662784,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caff00000000000372977645990707200,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caff80000000000372986442083729408,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffc0000000000372990840130240512,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffe0000000000372993039153496064,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafff0000000000372994138665123840,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafff8000000000372994688420937728,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffc000000000372994963298844672,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffe000000000372995100737798144,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffff000000000372995169457274880,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffff800000000372995203817013248,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffc00000000372995220996882432,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffe00000000372995229586817024,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffff00000000372995233881784320,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffff80000000372995236029267968,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffc0000000372995237103009792,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffe0000000372995237639880704,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffff0000000372995237908316160,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffff8000000372995238042533888,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffc000000372995238109642752,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffe000000372995238143197184,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffff000000372995238159974400,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffff800000372995238168363008,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffffc00000372995238172557312,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffffe00000372995238174654464,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffff00000372995238175703040,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffff80000372995238176227328,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffffc0000372995238176489472,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffffe0000372995238176620544,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffffff0000372995238176686080,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffffff8000372995238176718848,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffffffc000372995238176735232,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffffffe000372995238176743424,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffffff000372995238176747520,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffffff800372995238176749568,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffffffc00372995238176750592,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffffffe00372995238176751104,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffffffff00372995238176751360,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffffffff80372995238176751488,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffffffffc0372995238176751552,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffffffffe0372995238176751584,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffffffff0372995238176751600,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffffffff8372995238176751608,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffffffffc372995238176751612,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3caffffffffffffe372995238176751614,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3cafffffffffffff372995238176751615,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ff0000000000001607182418800017409,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ff0000000000003607182418800017411,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ff0000000000007607182418800017415,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ff000000000000f607182418800017423,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ff000000000001f607182418800017439,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ff000000000003f607182418800017471,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ff3333333333333608083138725491507,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ff4924924924924608469161550694692,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ff6666666666666608983858650965606,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3fx6db6db6db6db6609112532926033334,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ff7777777777777609284098626123639,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ff8888888888888609584338601281672,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ff9999999999999609884578576439705,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ffb6db6db6db6db610399275676710619,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ffccccccccccccc610785298501913804,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ffdb6db6db6db6d611042647052049261,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3fffffffffffffc0611686018427387840,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3fffffffffffffe0611686018427387872,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ffffffffffffff0611686018427387888,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ffffffffffffff8611686018427387896,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ffffffffffffffc611686018427387900,64,FLEN)
NAN_BOXED(0x5x8e9910ea9b38ef885609178230634735,64,FLEN)
NAN_BOXED(0x2050bbb0cx0cc80e328567375412905998,64,FLEN)
NAN_BOXED(0x3ffffffffffffffe611686018427387902,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000000000000436045632959938560,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000000000001436045632959938561,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000000000003436045632959938563,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000000000007436045632959938567,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000000000000f436045632959938575,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000000000001f436045632959938591,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000000000003f436045632959938623,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000000000007f436045632959938687,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900000000000ff436045632959938815,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900000000001ff436045632959939071,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900000000003ff436045632959939583,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900000000007ff436045632959940607,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000000000fff436045632959942655,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000000001fff436045632959946751,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000000003fff436045632959954943,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000000007fff436045632959971327,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000000000ffff436045632960004095,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000000001ffff436045632960069631,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000000003ffff436045632960200703,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000000007ffff436045632960462847,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900000000fffff436045632960987135,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900000001fffff436045632962035711,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900000003fffff436045632964132863,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900000007fffff436045632968327167,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000000ffffff436045632976715775,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000001ffffff436045632993492991,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000003ffffff436045633027047423,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000007ffffff436045633094156287,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000000fffffff436045633228374015,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000001fffffff436045633496809471,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000003fffffff436045634033680383,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000007fffffff436045635107422207,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900000ffffffff436045637254905855,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900001ffffffff436045641549873151,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900003ffffffff436045650139807743,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900007ffffffff436045667319676927,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90000fffffffff436045701679415295,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90001fffffffff436045770398892031,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90003fffffffff436045907837845503,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90007fffffffff436046182715752447,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9000ffffffffff436046732471566335,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9001ffffffffff436047831983194111,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9003ffffffffff436050031006449663,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9007ffffffffff436054429052960767,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d900fffffffffff436063225145982975,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d901fffffffffff436080817332027391,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d903fffffffffff436116001704116223,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d907fffffffffff436186370448293887,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d90ffffffffffff436327107936649215,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d91ffffffffffff436608582913359871,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d93ffffffffffff437171532866781183,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d97ffffffffffff438297432773623807,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d98000000000000438297432773623808,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9c000000000000439423332680466432,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9e000000000000439986282633887744,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9f000000000000440267757610598400,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9f800000000000440408495098953728,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fc00000000000440478863843131392,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fe00000000000440514048215220224,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ff00000000000440531640401264640,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ff80000000000440540436494286848,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffc0000000000440544834540797952,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffe0000000000440547033564053504,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fff0000000000440548133075681280,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fff8000000000440548682831495168,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffc000000000440548957709402112,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffe000000000440549095148355584,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffff000000000440549163867832320,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffff800000000440549198227570688,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffc00000000440549215407439872,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffe00000000440549223997374464,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffff00000000440549228292341760,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffff80000000440549230439825408,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffc0000000440549231513567232,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffe0000000440549232050438144,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffff0000000440549232318873600,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffff8000000440549232453091328,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffc000000440549232520200192,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffe000000440549232553754624,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffff000000440549232570531840,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffff800000440549232578920448,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffffc00000440549232583114752,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffffe00000440549232585211904,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffff00000440549232586260480,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffff80000440549232586784768,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffffc0000440549232587046912,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffffe0000440549232587177984,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffffff0000440549232587243520,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffffff8000440549232587276288,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffffffc000440549232587292672,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffffffe000440549232587300864,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffffff000440549232587304960,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffffff800440549232587307008,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffffffc00440549232587308032,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffffffe00440549232587308544,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffffffff00440549232587308800,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffffffff80440549232587308928,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffffffffc0440549232587308992,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffffffffe0440549232587309024,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffffffff0440549232587309040,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffffffff8440549232587309048,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffffffffc440549232587309052,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9ffffffffffffe440549232587309054,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3d9fffffffffffff440549232587309055,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ff0000000000001607182418800017409,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ff0000000000003607182418800017411,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ff0000000000007607182418800017415,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ff000000000000f607182418800017423,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ff000000000001f607182418800017439,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ff000000000003f607182418800017471,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ff3333333333333608083138725491507,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ff4924924924924608469161550694692,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ff6666666666666608983858650965606,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3fx6db6db6db6db6609112532926033334,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ff7777777777777609284098626123639,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ff8888888888888609584338601281672,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ff9999999999999609884578576439705,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ffb6db6db6db6db610399275676710619,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ffccccccccccccc610785298501913804,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ffdb6db6db6db6d611042647052049261,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3fffffffffffffc0611686018427387840,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3fffffffffffffe0611686018427387872,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ffffffffffffff0611686018427387888,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ffffffffffffff8611686018427387896,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ffffffffffffffc611686018427387900,64,FLEN)
NAN_BOXED(0x5x8ea6838caab02b885623964226990123,64,FLEN)
NAN_BOXED(0x2050b4595a657e5a328559303212236378,64,FLEN)
NAN_BOXED(0x3ffffffffffffffe611686018427387902,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbf800000000000013799029258263199745,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbf800000000000033799029258263199747,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbf800000000000073799029258263199751,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbf8000000000000f3799029258263199759,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbf8000000000001f3799029258263199775,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbf8000000000003f3799029258263199807,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbf833333333333333799929978188673843,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbf849249249249243800316001013877028,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbf866666666666663800830698114147942,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbx86db6db6db6db63800959372389215670,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbf877777777777773801130938089305975,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbf888888888888883801431178064464008,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbf899999999999993801731418039622041,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbx8b6db6db6db6db3802246115139892955,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbx8ccccccccccccc3802632137965096140,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbx8db6db6db6db6d3802889486515231597,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbx8fffffffffffc03803532857890570176,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbx8fffffffffffe03803532857890570208,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbx8ffffffffffff03803532857890570224,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbx8ffffffffffff83803532857890570232,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbx8ffffffffffffc3803532857890570236,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbx8ffffffffffffe3803532857890570238,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000000000003821547256400052224,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000000000013821547256400052225,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000000000033821547256400052227,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000000000073821547256400052231,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000000000000f3821547256400052239,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000000000001f3821547256400052255,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000000000003f3821547256400052287,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000000000007f3821547256400052351,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000000000ff3821547256400052479,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000000001ff3821547256400052735,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000000003ff3821547256400053247,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000000007ff3821547256400054271,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0000000000fff3821547256400056319,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0000000001fff3821547256400060415,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0000000003fff3821547256400068607,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0000000007fff3821547256400084991,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000000000ffff3821547256400117759,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000000001ffff3821547256400183295,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000000003ffff3821547256400314367,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000000007ffff3821547256400576511,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000000fffff3821547256401100799,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000001fffff3821547256402149375,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000003fffff3821547256404246527,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000007fffff3821547256408440831,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0000000ffffff3821547256416829439,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0000001ffffff3821547256433606655,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0000003ffffff3821547256467161087,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0000007ffffff3821547256534269951,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000000fffffff3821547256668487679,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000001fffffff3821547256936923135,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000003fffffff3821547257473794047,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000007fffffff3821547258547535871,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00000ffffffff3821547260695019519,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00001ffffffff3821547264989986815,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00003ffffffff3821547273579921407,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00007ffffffff3821547290759790591,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0000fffffffff3821547325119528959,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0001fffffffff3821547393839005695,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0003fffffffff3821547531277959167,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0007fffffffff3821547806155866111,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd000ffffffffff3821548355911679999,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd001ffffffffff3821549455423307775,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd003ffffffffff3821551654446563327,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd007ffffffffff3821556052493074431,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd00fffffffffff3821564848586096639,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd01fffffffffff3821582440772141055,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd03fffffffffff3821617625144229887,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd07fffffffffff3821687993888407551,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd0ffffffffffff3821828731376762879,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd1ffffffffffff3822110206353473535,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd3ffffffffffff3822673156306894847,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd7ffffffffffff3823799056213737471,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfd80000000000003823799056213737472,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdc0000000000003824924956120580096,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfde0000000000003825487906074001408,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdf0000000000003825769381050712064,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdf8000000000003825910118539067392,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfc000000000003825980487283245056,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfe000000000003826015671655333888,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdff000000000003826033263841378304,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdff800000000003826042059934400512,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffc00000000003826046457980911616,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffe00000000003826048657004167168,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfff00000000003826049756515794944,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfff80000000003826050306271608832,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffc0000000003826050581149515776,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffe0000000003826050718588469248,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffff0000000003826050787307945984,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffff8000000003826050821667684352,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffc000000003826050838847553536,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffe000000003826050847437488128,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffff000000003826050851732455424,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffff800000003826050853879939072,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffc00000003826050854953680896,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffe00000003826050855490551808,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffff00000003826050855758987264,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffff80000003826050855893204992,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffc0000003826050855960313856,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffe0000003826050855993868288,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffff0000003826050856010645504,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffff8000003826050856019034112,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffffc000003826050856023228416,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffffe000003826050856025325568,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffff000003826050856026374144,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffff800003826050856026898432,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffffc00003826050856027160576,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffffe00003826050856027291648,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffffff00003826050856027357184,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffffff80003826050856027389952,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffffffc0003826050856027406336,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffffffe0003826050856027414528,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffffff0003826050856027418624,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffffff8003826050856027420672,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffffffc003826050856027421696,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffffffe003826050856027422208,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffffffff003826050856027422464,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffffffff803826050856027422592,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffffffffc03826050856027422656,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffffffffe03826050856027422688,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffffffff03826050856027422704,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffffffff83826050856027422712,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffffffffc3826050856027422716,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdffffffffffffe3826050856027422718,64,FLEN)
NAN_BOXED(0x5x8efcdd3e3e2557885718907458299223,64,FLEN)
NAN_BOXED(0x9fe085cce48ea9261520354961868106022,64,FLEN)
NAN_BOXED(0xbfdfffffffffffff3826050856027422719,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000000000003492784483602006016,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000000000013492784483602006017,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000000000033492784483602006019,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000000000073492784483602006023,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000000000000f3492784483602006031,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000000000001f3492784483602006047,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000000000003f3492784483602006079,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000000000007f3492784483602006143,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000000000ff3492784483602006271,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000000001ff3492784483602006527,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000000003ff3492784483602007039,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000000007ff3492784483602008063,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40000000000fff3492784483602010111,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40000000001fff3492784483602014207,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40000000003fff3492784483602022399,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40000000007fff3492784483602038783,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000000000ffff3492784483602071551,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000000001ffff3492784483602137087,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000000003ffff3492784483602268159,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000000007ffff3492784483602530303,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000000fffff3492784483603054591,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000001fffff3492784483604103167,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000003fffff3492784483606200319,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000007fffff3492784483610394623,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40000000ffffff3492784483618783231,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40000001ffffff3492784483635560447,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40000003ffffff3492784483669114879,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40000007ffffff3492784483736223743,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000000fffffff3492784483870441471,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000001fffffff3492784484138876927,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000003fffffff3492784484675747839,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000007fffffff3492784485749489663,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400000ffffffff3492784487896973311,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400001ffffffff3492784492191940607,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400003ffffffff3492784500781875199,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400007ffffffff3492784517961744383,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40000fffffffff3492784552321482751,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40001fffffffff3492784621040959487,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40003fffffffff3492784758479912959,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40007fffffffff3492785033357819903,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4000ffffffffff3492785583113633791,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4001ffffffffff3492786682625261567,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4003ffffffffff3492788881648517119,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4007ffffffffff3492793279695028223,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb400fffffffffff3492802075788050431,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb401fffffffffff3492819667974094847,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb403fffffffffff3492854852346183679,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb407fffffffffff3492925221090361343,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb40ffffffffffff3493065958578716671,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb41ffffffffffff3493347433555427327,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb43ffffffffffff3493910383508848639,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb47ffffffffffff3495036283415691263,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb480000000000003495036283415691264,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4c0000000000003496162183322533888,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4e0000000000003496725133275955200,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4f0000000000003497006608252665856,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4f8000000000003497147345741021184,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fc000000000003497217714485198848,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fe000000000003497252898857287680,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ff000000000003497270491043332096,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ff800000000003497279287136354304,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffc00000000003497283685182865408,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffe00000000003497285884206120960,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fff00000000003497286983717748736,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fff80000000003497287533473562624,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffc0000000003497287808351469568,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffe0000000003497287945790423040,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffff0000000003497288014509899776,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffff8000000003497288048869638144,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffc000000003497288066049507328,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffe000000003497288074639441920,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffff000000003497288078934409216,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffff800000003497288081081892864,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffc00000003497288082155634688,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffe00000003497288082692505600,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffff00000003497288082960941056,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffff80000003497288083095158784,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffc0000003497288083162267648,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffe0000003497288083195822080,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffff0000003497288083212599296,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffff8000003497288083220987904,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffffc000003497288083225182208,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffffe000003497288083227279360,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffff000003497288083228327936,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffff800003497288083228852224,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffffc00003497288083229114368,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffffe00003497288083229245440,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffffff00003497288083229310976,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffffff80003497288083229343744,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffffffc0003497288083229360128,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffffffe0003497288083229368320,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffffff0003497288083229372416,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffffff8003497288083229374464,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffffffc003497288083229375488,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffffffe003497288083229376000,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffffffff003497288083229376256,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffffffff803497288083229376384,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffffffffc03497288083229376448,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffffffffe03497288083229376480,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffffffff03497288083229376496,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffffffff83497288083229376504,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffffffffc3497288083229376508,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4ffffffffffffe3497288083229376510,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbb4fffffffffffff3497288083229376511,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbf800000000000013799029258263199745,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbf800000000000033799029258263199747,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbf800000000000073799029258263199751,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbf8000000000000f3799029258263199759,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbf8000000000001f3799029258263199775,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbf8000000000003f3799029258263199807,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbf833333333333333799929978188673843,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbf849249249249243800316001013877028,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbf866666666666663800830698114147942,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbx86db6db6db6db63800959372389215670,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbf877777777777773801130938089305975,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbf888888888888883801431178064464008,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbf899999999999993801731418039622041,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbx8b6db6db6db6db3802246115139892955,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbx8ccccccccccccc3802632137965096140,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbx8db6db6db6db6d3802889486515231597,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbx8fffffffffffc03803532857890570176,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbx8fffffffffffe03803532857890570208,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbx8ffffffffffff03803532857890570224,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbx8ffffffffffff83803532857890570232,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbx8ffffffffffffc3803532857890570236,64,FLEN)
NAN_BOXED(0x5x8efdfc9fx93d7f885720141753564543,64,FLEN)
NAN_BOXED(0x9fe08533aec0e4001520354303835431936,64,FLEN)
NAN_BOXED(0xbx8ffffffffffffe3803532857890570238,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000000000000318952042648305664,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000000000001318952042648305665,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000000000003318952042648305667,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000000000007318952042648305671,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000000000000f318952042648305679,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000000000001f318952042648305695,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000000000003f318952042648305727,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000000000007f318952042648305791,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf00000000000ff318952042648305919,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf00000000001ff318952042648306175,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf00000000003ff318952042648306687,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf00000000007ff318952042648307711,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000000000fff318952042648309759,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000000001fff318952042648313855,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000000003fff318952042648322047,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000000007fff318952042648338431,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000000000ffff318952042648371199,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000000001ffff318952042648436735,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000000003ffff318952042648567807,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000000007ffff318952042648829951,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf00000000fffff318952042649354239,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf00000001fffff318952042650402815,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf00000003fffff318952042652499967,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf00000007fffff318952042656694271,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000000ffffff318952042665082879,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000001ffffff318952042681860095,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000003ffffff318952042715414527,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000007ffffff318952042782523391,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000000fffffff318952042916741119,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000001fffffff318952043185176575,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000003fffffff318952043722047487,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000007fffffff318952044795789311,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf00000ffffffff318952046943272959,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf00001ffffffff318952051238240255,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf00003ffffffff318952059828174847,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf00007ffffffff318952077008044031,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0000fffffffff318952111367782399,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0001fffffffff318952180087259135,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0003fffffffff318952317526212607,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf0007fffffffff318952592404119551,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf000ffffffffff318953142159933439,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf001ffffffffff318954241671561215,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf003ffffffffff318956440694816767,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf007ffffffffff318960838741327871,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bx00fffffffffff318969634834350079,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bx01fffffffffff318987227020394495,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bx03fffffffffff319022411392483327,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bx07fffffffffff319092780136660991,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bx0ffffffffffff319233517625016319,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bx1ffffffffffff319514992601726975,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bx3ffffffffffff320077942555148287,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bx7ffffffffffff321203842461990911,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bf8000000000000321203842461990912,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfc000000000000322329742368833536,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfe000000000000322892692322254848,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bff000000000000323174167298965504,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bff800000000000323314904787320832,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffc00000000000323385273531498496,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffe00000000000323420457903587328,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfff00000000000323438050089631744,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfff80000000000323446846182653952,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffc0000000000323451244229165056,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffe0000000000323453443252420608,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffff0000000000323454542764048384,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffff8000000000323455092519862272,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffc000000000323455367397769216,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffe000000000323455504836722688,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffff000000000323455573556199424,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffff800000000323455607915937792,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffc00000000323455625095806976,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffe00000000323455633685741568,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffff00000000323455637980708864,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffff80000000323455640128192512,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffc0000000323455641201934336,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffe0000000323455641738805248,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffff0000000323455642007240704,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffff8000000323455642141458432,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffc000000323455642208567296,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffe000000323455642242121728,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffff000000323455642258898944,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffff800000323455642267287552,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffffc00000323455642271481856,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffffe00000323455642273579008,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffff00000323455642274627584,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffff80000323455642275151872,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffffc0000323455642275414016,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffffe0000323455642275545088,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffffff0000323455642275610624,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffffff8000323455642275643392,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffffffc000323455642275659776,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffffffe000323455642275667968,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffffff000323455642275672064,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffffff800323455642275674112,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffffffc00323455642275675136,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffffffe00323455642275675648,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffffffff00323455642275675904,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffffffff80323455642275676032,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffffffffc0323455642275676096,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffffffffe0323455642275676128,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffffffff0323455642275676144,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffffffff8323455642275676152,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffffffffc323455642275676156,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bfffffffffffffe323455642275676158,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3bffffffffffffff323455642275676159,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ff0000000000001607182418800017409,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ff0000000000003607182418800017411,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ff0000000000007607182418800017415,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ff000000000000f607182418800017423,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ff000000000001f607182418800017439,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ff000000000003f607182418800017471,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ff3333333333333608083138725491507,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ff4924924924924608469161550694692,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ff6666666666666608983858650965606,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3fx6db6db6db6db6609112532926033334,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ff7777777777777609284098626123639,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ff8888888888888609584338601281672,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ff9999999999999609884578576439705,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ffb6db6db6db6db610399275676710619,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ffccccccccccccc610785298501913804,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ffdb6db6db6db6d611042647052049261,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3fffffffffffffc0611686018427387840,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3fffffffffffffe0611686018427387872,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ffffffffffffff0611686018427387888,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ffffffffffffff8611686018427387896,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ffffffffffffffc611686018427387900,64,FLEN)
NAN_BOXED(0x5x8x4ce360b8a273885806894736777843,64,FLEN)
NAN_BOXED(0x20505b8ec83852a9328461676153164457,64,FLEN)
NAN_BOXED(0x3ffffffffffffffe611686018427387902,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000000000003263100902606110720,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000000000013263100902606110721,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000000000033263100902606110723,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000000000073263100902606110727,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000000000000f3263100902606110735,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000000000001f3263100902606110751,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000000000003f3263100902606110783,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000000000007f3263100902606110847,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000000000ff3263100902606110975,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000000001ff3263100902606111231,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000000003ff3263100902606111743,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000000007ff3263100902606112767,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810000000000fff3263100902606114815,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810000000001fff3263100902606118911,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810000000003fff3263100902606127103,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810000000007fff3263100902606143487,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000000000ffff3263100902606176255,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000000001ffff3263100902606241791,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000000003ffff3263100902606372863,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000000007ffff3263100902606635007,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000000fffff3263100902607159295,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000001fffff3263100902608207871,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000003fffff3263100902610305023,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000007fffff3263100902614499327,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810000000ffffff3263100902622887935,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810000001ffffff3263100902639665151,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810000003ffffff3263100902673219583,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810000007ffffff3263100902740328447,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000000fffffff3263100902874546175,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000001fffffff3263100903142981631,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000003fffffff3263100903679852543,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000007fffffff3263100904753594367,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100000ffffffff3263100906901078015,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100001ffffffff3263100911196045311,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100003ffffffff3263100919785979903,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100007ffffffff3263100936965849087,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810000fffffffff3263100971325587455,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810001fffffffff3263101040045064191,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810003fffffffff3263101177484017663,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810007fffffffff3263101452361924607,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81000ffffffffff3263102002117738495,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81001ffffffffff3263103101629366271,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81003ffffffffff3263105300652621823,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81007ffffffffff3263109698699132927,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8100fffffffffff3263118494792155135,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8101fffffffffff3263136086978199551,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8103fffffffffff3263171271350288383,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8107fffffffffff3263241640094466047,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb810ffffffffffff3263382377582821375,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb811ffffffffffff3263663852559532031,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb813ffffffffffff3264226802512953343,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb817ffffffffffff3265352702419795967,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb8180000000000003265352702419795968,64,FLEN)
NAN_BOXED(0x5x8x5ee3b37f961b885826687334848027,64,FLEN)
NAN_BOXED(0x9fe0522bdb93c67b1520298195134695035,64,FLEN)
NAN_BOXED(0xb81c0000000000003266478602326638592,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
