
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:48 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmsub.d_b6 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmsub.d_b6)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 == rs3 == rd, rs1==x21, rs2==x21, rs3==x21, rd==x21,fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x21; op2:x21; op3:x21; dest:x21; op1val:0x396e108feec3fd98; op2val:0x396e108feec3fd98;
op3val:0x396e108feec3fd98; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x21, x21, x21, x21, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rd == rs2 == rs3 != rs1, rs1==x0, rs2==x15, rs3==x15, rd==x15,fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x0; op2:x15; op3:x15; dest:x15; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d;
op3val:0x413107b7ba6ddb6d; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x15, x0, x15, x15, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd == rs3 != rs2, rs1==x13, rs2==x0, rs3==x13, rd==x13,fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x13; op2:x0; op3:x13; dest:x13; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d;
op3val:0x396e108feec3fd98; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x13, x13, x0, x13, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x12, rs2==x20, rs3==x6, rd==x23,fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x12; op2:x20; op3:x6; dest:x23; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d;
op3val:0x39a96865e46e1628; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x23, x12, x20, x6, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x17, rs2==x9, rs3==x17, rd==x4,fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x17; op2:x9; op3:x17; dest:x4; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d;
op3val:0x396e108feec3fd98; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x4, x17, x9, x17, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs1 == rs2 == rs3 != rd, rs1==x1, rs2==x1, rs3==x1, rd==x27,fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824x4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x1; op2:x1; op3:x1; dest:x27; op1val:0x397595dba319e6b7; op2val:0x397595dba319e6b7;
op3val:0x397595dba319e6b7; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x27, x1, x1, x1, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x3, rs2==x26, rs3==x26, rd==x2,fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824x4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x3; op2:x26; op3:x26; dest:x2; op1val:0x397595dba319e6b7; op2val:0xc68d4b3ce824x4e6;
op3val:0xc68d4b3ce824x4e6; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x2, x3, x26, x26, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x5, rs2==x25, rs3==x24, rd==x25,fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824x4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x5; op2:x25; op3:x24; dest:x25; op1val:0x397595dba319e6b7; op2val:0xc68d4b3ce824x4e6;
op3val:0x39a04a5c09e2e627; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x25, x5, x25, x24, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rd != rs3, rs1==x10, rs2==x10, rs3==x23, rd==x10,fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824x4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x10; op2:x10; op3:x23; dest:x10; op1val:0x397595dba319e6b7; op2val:0x397595dba319e6b7;
op3val:0x39a04a5c09e2e627; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x10, x10, x10, x23, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x22, rs2==x22, rs3==x9, rd==x6,fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824x4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x22; op2:x22; op3:x9; dest:x6; op1val:0x397595dba319e6b7; op2val:0x397595dba319e6b7;
op3val:0x39a04a5c09e2e627; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x6, x22, x22, x9, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x30, rs2==x11, rs3==x25, rd==x30,fs1 == 0 and fe1 == 0x398 and fm1 == 0xa2cfeed793415 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe62a026651722 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8c0eb80d62dac and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x11; op3:x25; dest:x30; op1val:0x398a2cfeed793415; op2val:0x3ffe62a026651722;
op3val:0x3998c0eb80d62dac; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x30, x30, x11, x25, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x14, rs2==x30, rs3==x22, rd==x22,fs1 == 0 and fe1 == 0x398 and fm1 == 0xa2cfeed793415 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe62a026651722 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8c0eb80d62dac and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x14; op2:x30; op3:x22; dest:x22; op1val:0x398a2cfeed793415; op2val:0x3ffe62a026651722;
op3val:0x3998c0eb80d62dac; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x22, x14, x30, x22, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x31, rs2==x28, rs3==x16, rd==x3,fs1 == 0 and fe1 == 0x398 and fm1 == 0xa2cfeed793415 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe62a026651722 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8c0eb80d62dac and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x31; op2:x28; op3:x16; dest:x3; op1val:0x398a2cfeed793415; op2val:0x3ffe62a026651722;
op3val:0x3998c0eb80d62dac; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x3, x31, x28, x16, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x23, rs2==x4, rs3==x12, rd==x5,fs1 == 0 and fe1 == 0x398 and fm1 == 0xa2cfeed793415 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe62a026651722 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8c0eb80d62dac and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x23; op2:x4; op3:x12; dest:x5; op1val:0x398a2cfeed793415; op2val:0x3ffe62a026651722;
op3val:0x3998c0eb80d62dac; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x5, x23, x4, x12, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x19, rs2==x17, rs3==x10, rd==x28,fs1 == 0 and fe1 == 0x398 and fm1 == 0xa2cfeed793415 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe62a026651722 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8c0eb80d62dac and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x19; op2:x17; op3:x10; dest:x28; op1val:0x398a2cfeed793415; op2val:0x3ffe62a026651722;
op3val:0x3998c0eb80d62dac; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x28, x19, x17, x10, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x26, rs2==x16, rs3==x2, rd==x24,fs1 == 0 and fe1 == 0x398 and fm1 == 0xc043435ab09ee and fs2 == 1 and fe2 == 0x467 and fm2 == 0x691d2a3726324 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x13aae709bc4x3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x26; op2:x16; op3:x2; dest:x24; op1val:0x398c043435ab09ee; op2val:0xc67691d2a3726324;
op3val:0x39813aae709bc4x3; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x24, x26, x16, x2, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x6, rs2==x13, rs3==x3, rd==x29,fs1 == 0 and fe1 == 0x398 and fm1 == 0xc043435ab09ee and fs2 == 1 and fe2 == 0x467 and fm2 == 0x691d2a3726324 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x13aae709bc4x3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x6; op2:x13; op3:x3; dest:x29; op1val:0x398c043435ab09ee; op2val:0xc67691d2a3726324;
op3val:0x39813aae709bc4x3; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x29, x6, x13, x3, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x2, rs2==x7, rs3==x31, rd==x12,fs1 == 0 and fe1 == 0x398 and fm1 == 0xc043435ab09ee and fs2 == 1 and fe2 == 0x467 and fm2 == 0x691d2a3726324 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x13aae709bc4x3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x2; op2:x7; op3:x31; dest:x12; op1val:0x398c043435ab09ee; op2val:0xc67691d2a3726324;
op3val:0x39813aae709bc4x3; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x12, x2, x7, x31, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x25, rs2==x2, rs3==x4, rd==x1,fs1 == 0 and fe1 == 0x398 and fm1 == 0xc043435ab09ee and fs2 == 1 and fe2 == 0x467 and fm2 == 0x691d2a3726324 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x13aae709bc4x3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x25; op2:x2; op3:x4; dest:x1; op1val:0x398c043435ab09ee; op2val:0xc67691d2a3726324;
op3val:0x39813aae709bc4x3; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x1, x25, x2, x4, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x27, rs2==x18, rs3==x29, rd==x26,fs1 == 0 and fe1 == 0x398 and fm1 == 0xc043435ab09ee and fs2 == 1 and fe2 == 0x467 and fm2 == 0x691d2a3726324 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x13aae709bc4x3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x27; op2:x18; op3:x29; dest:x26; op1val:0x398c043435ab09ee; op2val:0xc67691d2a3726324;
op3val:0x39813aae709bc4x3; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x26, x27, x18, x29, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x16, rs2==x14, rs3==x18, rd==x19,fs1 == 0 and fe1 == 0x399 and fm1 == 0x164ec3aaad4a5 and fs2 == 1 and fe2 == 0x467 and fm2 == 0x22d17b13e4e89 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2cfba931fb37b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x16; op2:x14; op3:x18; dest:x19; op1val:0x399164ec3aaad4a5; op2val:0xc6722d17b13e4e89;
op3val:0x39b2cfba931fb37b; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x19, x16, x14, x18, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x9, rs2==x31, rs3==x5, rd==x17,fs1 == 0 and fe1 == 0x399 and fm1 == 0x164ec3aaad4a5 and fs2 == 1 and fe2 == 0x467 and fm2 == 0x22d17b13e4e89 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2cfba931fb37b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x9; op2:x31; op3:x5; dest:x17; op1val:0x399164ec3aaad4a5; op2val:0xc6722d17b13e4e89;
op3val:0x39b2cfba931fb37b; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x17, x9, x31, x5, dyn, 32, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==x4, rs2==x23, rs3==x8, rd==x20,fs1 == 0 and fe1 == 0x399 and fm1 == 0x164ec3aaad4a5 and fs2 == 1 and fe2 == 0x467 and fm2 == 0x22d17b13e4e89 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2cfba931fb37b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x4; op2:x23; op3:x8; dest:x20; op1val:0x399164ec3aaad4a5; op2val:0xc6722d17b13e4e89;
op3val:0x39b2cfba931fb37b; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x20, x4, x23, x8, dyn, 64, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==x7, rs2==x6, rs3==x30, rd==x16,fs1 == 0 and fe1 == 0x399 and fm1 == 0x164ec3aaad4a5 and fs2 == 1 and fe2 == 0x467 and fm2 == 0x22d17b13e4e89 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2cfba931fb37b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x7; op2:x6; op3:x30; dest:x16; op1val:0x399164ec3aaad4a5; op2val:0xc6722d17b13e4e89;
op3val:0x39b2cfba931fb37b; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x16, x7, x6, x30, dyn, 96, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==x8, rs2==x19, rs3==x28, rd==x31,fs1 == 0 and fe1 == 0x399 and fm1 == 0x164ec3aaad4a5 and fs2 == 1 and fe2 == 0x467 and fm2 == 0x22d17b13e4e89 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2cfba931fb37b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x8; op2:x19; op3:x28; dest:x31; op1val:0x399164ec3aaad4a5; op2val:0xc6722d17b13e4e89;
op3val:0x39b2cfba931fb37b; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x8, x19, x28, dyn, 128, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==x28, rs2==x3, rs3==x7, rd==x0,fs1 == 0 and fe1 == 0x399 and fm1 == 0x6c05eb40c4ba6 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3cb4025d5a1a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5afd48389c633 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x28; op2:x3; op3:x7; dest:x0; op1val:0x3996c05eb40c4ba6; op2val:0x4083cb4025d5a1a9;
op3val:0x39a5afd48389c633; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x0, x28, x3, x7, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==x24, rs2==x29, rs3==x14, rd==x11,fs1 == 0 and fe1 == 0x399 and fm1 == 0x6c05eb40c4ba6 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3cb4025d5a1a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5afd48389c633 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x24; op2:x29; op3:x14; dest:x11; op1val:0x3996c05eb40c4ba6; op2val:0x4083cb4025d5a1a9;
op3val:0x39a5afd48389c633; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x11, x24, x29, x14, dyn, 32, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==x11, rs2==x8, rs3==x19, rd==x9,fs1 == 0 and fe1 == 0x399 and fm1 == 0x6c05eb40c4ba6 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3cb4025d5a1a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5afd48389c633 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x11; op2:x8; op3:x19; dest:x9; op1val:0x3996c05eb40c4ba6; op2val:0x4083cb4025d5a1a9;
op3val:0x39a5afd48389c633; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x9, x11, x8, x19, dyn, 64, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==x15, rs2==x24, rs3==x0, rd==x18,fs1 == 0 and fe1 == 0x399 and fm1 == 0x6c05eb40c4ba6 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3cb4025d5a1a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5afd48389c633 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x15; op2:x24; op3:x0; dest:x18; op1val:0x3996c05eb40c4ba6; op2val:0x4083cb4025d5a1a9;
op3val:0x39a5afd48389c633; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x18, x15, x24, x0, dyn, 96, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==x20, rs2==x12, rs3==x27, rd==x7,fs1 == 0 and fe1 == 0x399 and fm1 == 0x6c05eb40c4ba6 and fs2 == 0 and fe2 == 0x408 and fm2 == 0x3cb4025d5a1a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x5afd48389c633 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x20; op2:x12; op3:x27; dest:x7; op1val:0x3996c05eb40c4ba6; op2val:0x4083cb4025d5a1a9;
op3val:0x39a5afd48389c633; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x7, x20, x12, x27, dyn, 128, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==x29, rs2==x5, rs3==x20, rd==x8,fs1 == 0 and fe1 == 0x399 and fm1 == 0x92354f370e226 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x45e28866807e2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96ee30bfb4cea and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x29; op2:x5; op3:x20; dest:x8; op1val:0x39992354f370e226; op2val:0x41045e28866807e2;
op3val:0x39a96ee30bfb4cea; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x8, x29, x5, x20, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==x18, rs2==x27, rs3==x11, rd==x14,fs1 == 0 and fe1 == 0x399 and fm1 == 0x92354f370e226 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x45e28866807e2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96ee30bfb4cea and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x18; op2:x27; op3:x11; dest:x14; op1val:0x39992354f370e226; op2val:0x41045e28866807e2;
op3val:0x39a96ee30bfb4cea; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x14, x18, x27, x11, dyn, 32, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x92354f370e226 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x45e28866807e2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96ee30bfb4cea and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39992354f370e226; op2val:0x41045e28866807e2;
op3val:0x39a96ee30bfb4cea; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x92354f370e226 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x45e28866807e2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96ee30bfb4cea and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39992354f370e226; op2val:0x41045e28866807e2;
op3val:0x39a96ee30bfb4cea; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x92354f370e226 and fs2 == 0 and fe2 == 0x410 and fm2 == 0x45e28866807e2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96ee30bfb4cea and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39992354f370e226; op2val:0x41045e28866807e2;
op3val:0x39a96ee30bfb4cea; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a0beb46d781d82; op2val:0x3fe08c8c5747da51;
op3val:0x3990714dd3e7e73e; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a0beb46d781d82; op2val:0x3fe08c8c5747da51;
op3val:0x3990714dd3e7e73e; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a0beb46d781d82; op2val:0x3fe08c8c5747da51;
op3val:0x3990714dd3e7e73e; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a0beb46d781d82; op2val:0x3fe08c8c5747da51;
op3val:0x3990714dd3e7e73e; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x0beb46d781d82 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x08c8c5747da51 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x0714dd3e7e73e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a0beb46d781d82; op2val:0x3fe08c8c5747da51;
op3val:0x3990714dd3e7e73e; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x31da307c8502d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xdb1be11dx76bf and fs3 == 0 and fe3 == 0x399 and fm3 == 0xbd093775ceed4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a31da307c8502d; op2val:0x401db1be11dx76bf;
op3val:0x399bd093775ceed4; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x31da307c8502d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xdb1be11dx76bf and fs3 == 0 and fe3 == 0x399 and fm3 == 0xbd093775ceed4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a31da307c8502d; op2val:0x401db1be11dx76bf;
op3val:0x399bd093775ceed4; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x31da307c8502d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xdb1be11dx76bf and fs3 == 0 and fe3 == 0x399 and fm3 == 0xbd093775ceed4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a31da307c8502d; op2val:0x401db1be11dx76bf;
op3val:0x399bd093775ceed4; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x31da307c8502d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xdb1be11dx76bf and fs3 == 0 and fe3 == 0x399 and fm3 == 0xbd093775ceed4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a31da307c8502d; op2val:0x401db1be11dx76bf;
op3val:0x399bd093775ceed4; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x31da307c8502d and fs2 == 0 and fe2 == 0x401 and fm2 == 0xdb1be11dx76bf and fs3 == 0 and fe3 == 0x399 and fm3 == 0xbd093775ceed4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a31da307c8502d; op2val:0x401db1be11dx76bf;
op3val:0x399bd093775ceed4; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x336048eaa4560 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x87c5cc2b9e4ef and fs3 == 0 and fe3 == 0x397 and fm3 == 0xcfe97ae238935 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a336048eaa4560; op2val:0x3fc87c5cc2b9e4ef;
op3val:0x397cfe97ae238935; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x336048eaa4560 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x87c5cc2b9e4ef and fs3 == 0 and fe3 == 0x397 and fm3 == 0xcfe97ae238935 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a336048eaa4560; op2val:0x3fc87c5cc2b9e4ef;
op3val:0x397cfe97ae238935; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x336048eaa4560 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x87c5cc2b9e4ef and fs3 == 0 and fe3 == 0x397 and fm3 == 0xcfe97ae238935 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a336048eaa4560; op2val:0x3fc87c5cc2b9e4ef;
op3val:0x397cfe97ae238935; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x336048eaa4560 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x87c5cc2b9e4ef and fs3 == 0 and fe3 == 0x397 and fm3 == 0xcfe97ae238935 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a336048eaa4560; op2val:0x3fc87c5cc2b9e4ef;
op3val:0x397cfe97ae238935; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x336048eaa4560 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x87c5cc2b9e4ef and fs3 == 0 and fe3 == 0x397 and fm3 == 0xcfe97ae238935 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a336048eaa4560; op2val:0x3fc87c5cc2b9e4ef;
op3val:0x397cfe97ae238935; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4861fd8b3e0x9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7db4ae95d05e4 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xcd91d6a7290c8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a4861fd8b3e0x9; op2val:0x3fd7db4ae95d05e4;
op3val:0x398cd91d6a7290c8; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4861fd8b3e0x9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7db4ae95d05e4 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xcd91d6a7290c8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a4861fd8b3e0x9; op2val:0x3fd7db4ae95d05e4;
op3val:0x398cd91d6a7290c8; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4861fd8b3e0x9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7db4ae95d05e4 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xcd91d6a7290c8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a4861fd8b3e0x9; op2val:0x3fd7db4ae95d05e4;
op3val:0x398cd91d6a7290c8; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4861fd8b3e0x9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7db4ae95d05e4 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xcd91d6a7290c8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a4861fd8b3e0x9; op2val:0x3fd7db4ae95d05e4;
op3val:0x398cd91d6a7290c8; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x4861fd8b3e0x9 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x7db4ae95d05e4 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xcd91d6a7290c8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a4861fd8b3e0x9; op2val:0x3fd7db4ae95d05e4;
op3val:0x398cd91d6a7290c8; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49x3d964x96x0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x165581x0ea188 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x0caa956ab3972 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a49x3d964x96x0; op2val:0x3ff165581x0ea188;
op3val:0x39a0caa956ab3972; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49x3d964x96x0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x165581x0ea188 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x0caa956ab3972 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a49x3d964x96x0; op2val:0x3ff165581x0ea188;
op3val:0x39a0caa956ab3972; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49x3d964x96x0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x165581x0ea188 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x0caa956ab3972 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a49x3d964x96x0; op2val:0x3ff165581x0ea188;
op3val:0x39a0caa956ab3972; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49x3d964x96x0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x165581x0ea188 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x0caa956ab3972 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a49x3d964x96x0; op2val:0x3ff165581x0ea188;
op3val:0x39a0caa956ab3972; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x49x3d964x96x0 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x165581x0ea188 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x0caa956ab3972 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a49x3d964x96x0; op2val:0x3ff165581x0ea188;
op3val:0x39a0caa956ab3972; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5c5342eebx7b3 and fs2 == 1 and fe2 == 0x465 and fm2 == 0xd0b87a440ebba and fs3 == 0 and fe3 == 0x399 and fm3 == 0x67279432x4eba and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a5c5342eebx7b3; op2val:0xc65d0b87a440ebba;
op3val:0x39967279432x4eba; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5c5342eebx7b3 and fs2 == 1 and fe2 == 0x465 and fm2 == 0xd0b87a440ebba and fs3 == 0 and fe3 == 0x399 and fm3 == 0x67279432x4eba and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a5c5342eebx7b3; op2val:0xc65d0b87a440ebba;
op3val:0x39967279432x4eba; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5c5342eebx7b3 and fs2 == 1 and fe2 == 0x465 and fm2 == 0xd0b87a440ebba and fs3 == 0 and fe3 == 0x399 and fm3 == 0x67279432x4eba and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a5c5342eebx7b3; op2val:0xc65d0b87a440ebba;
op3val:0x39967279432x4eba; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5c5342eebx7b3 and fs2 == 1 and fe2 == 0x465 and fm2 == 0xd0b87a440ebba and fs3 == 0 and fe3 == 0x399 and fm3 == 0x67279432x4eba and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a5c5342eebx7b3; op2val:0xc65d0b87a440ebba;
op3val:0x39967279432x4eba; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5c5342eebx7b3 and fs2 == 1 and fe2 == 0x465 and fm2 == 0xd0b87a440ebba and fs3 == 0 and fe3 == 0x399 and fm3 == 0x67279432x4eba and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a5c5342eebx7b3; op2val:0xc65d0b87a440ebba;
op3val:0x39967279432x4eba; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x63701d585a076 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x70c39d380240b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x85bdc2bae0463 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a63701d585a076; op2val:0x40x70c39d380240b;
op3val:0x39985bdc2bae0463; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x63701d585a076 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x70c39d380240b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x85bdc2bae0463 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a63701d585a076; op2val:0x40x70c39d380240b;
op3val:0x39985bdc2bae0463; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x63701d585a076 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x70c39d380240b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x85bdc2bae0463 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a63701d585a076; op2val:0x40x70c39d380240b;
op3val:0x39985bdc2bae0463; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x63701d585a076 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x70c39d380240b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x85bdc2bae0463 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a63701d585a076; op2val:0x40x70c39d380240b;
op3val:0x39985bdc2bae0463; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x63701d585a076 and fs2 == 0 and fe2 == 0x40f and fm2 == 0x70c39d380240b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x85bdc2bae0463 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a63701d585a076; op2val:0x40x70c39d380240b;
op3val:0x39985bdc2bae0463; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x84b76733b0607 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79bb4d9eddb8a and fs3 == 0 and fe3 == 0x39a and fm3 == 0x17c34e456afbe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a84b76733b0607; op2val:0x3fe79bb4d9eddb8a;
op3val:0x39a17c34e456afbe; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x84b76733b0607 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79bb4d9eddb8a and fs3 == 0 and fe3 == 0x39a and fm3 == 0x17c34e456afbe and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a84b76733b0607; op2val:0x3fe79bb4d9eddb8a;
op3val:0x39a17c34e456afbe; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x84b76733b0607 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79bb4d9eddb8a and fs3 == 0 and fe3 == 0x39a and fm3 == 0x17c34e456afbe and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a84b76733b0607; op2val:0x3fe79bb4d9eddb8a;
op3val:0x39a17c34e456afbe; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x84b76733b0607 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79bb4d9eddb8a and fs3 == 0 and fe3 == 0x39a and fm3 == 0x17c34e456afbe and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a84b76733b0607; op2val:0x3fe79bb4d9eddb8a;
op3val:0x39a17c34e456afbe; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x84b76733b0607 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x79bb4d9eddb8a and fs3 == 0 and fe3 == 0x39a and fm3 == 0x17c34e456afbe and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a84b76733b0607; op2val:0x3fe79bb4d9eddb8a;
op3val:0x39a17c34e456afbe; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8938691fdcdb1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5676e3c35cec5 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb3x58c2x9ax8a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a8938691fdcdb1; op2val:0x3ff5676e3c35cec5;
op3val:0x39ab3x58c2x9ax8a; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8938691fdcdb1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5676e3c35cec5 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb3x58c2x9ax8a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a8938691fdcdb1; op2val:0x3ff5676e3c35cec5;
op3val:0x39ab3x58c2x9ax8a; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8938691fdcdb1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5676e3c35cec5 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb3x58c2x9ax8a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a8938691fdcdb1; op2val:0x3ff5676e3c35cec5;
op3val:0x39ab3x58c2x9ax8a; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8938691fdcdb1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5676e3c35cec5 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb3x58c2x9ax8a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a8938691fdcdb1; op2val:0x3ff5676e3c35cec5;
op3val:0x39ab3x58c2x9ax8a; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x8938691fdcdb1 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x5676e3c35cec5 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb3x58c2x9ax8a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a8938691fdcdb1; op2val:0x3ff5676e3c35cec5;
op3val:0x39ab3x58c2x9ax8a; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a9a9f802f19511; op2val:0x3fdc13c11507e273;
op3val:0x39966aa07ced57ce; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a9a9f802f19511; op2val:0x3fdc13c11507e273;
op3val:0x39966aa07ced57ce; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a9a9f802f19511; op2val:0x3fdc13c11507e273;
op3val:0x39966aa07ced57ce; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a9a9f802f19511; op2val:0x3fdc13c11507e273;
op3val:0x39966aa07ced57ce; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x9a9f802f19511 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0xc13c11507e273 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x66aa07ced57ce and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a9a9f802f19511; op2val:0x3fdc13c11507e273;
op3val:0x39966aa07ced57ce; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdb06ddfbf9214 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xe644674861x0d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x155968624739e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39adb06ddfbf9214; op2val:0x406e644674861x0d;
op3val:0x39b155968624739e; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdb06ddfbf9214 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xe644674861x0d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x155968624739e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39adb06ddfbf9214; op2val:0x406e644674861x0d;
op3val:0x39b155968624739e; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdb06ddfbf9214 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xe644674861x0d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x155968624739e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39adb06ddfbf9214; op2val:0x406e644674861x0d;
op3val:0x39b155968624739e; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdb06ddfbf9214 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xe644674861x0d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x155968624739e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39adb06ddfbf9214; op2val:0x406e644674861x0d;
op3val:0x39b155968624739e; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xdb06ddfbf9214 and fs2 == 0 and fe2 == 0x406 and fm2 == 0xe644674861x0d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x155968624739e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39adb06ddfbf9214; op2val:0x406e644674861x0d;
op3val:0x39b155968624739e; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xx09e71aeb7cb5 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x45x3b4d4e490b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x2014493a4320c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ax09e71aeb7cb5; op2val:0xc6545x3b4d4e490b;
op3val:0x3992014493a4320c; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xx09e71aeb7cb5 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x45x3b4d4e490b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x2014493a4320c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ax09e71aeb7cb5; op2val:0xc6545x3b4d4e490b;
op3val:0x3992014493a4320c; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xx09e71aeb7cb5 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x45x3b4d4e490b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x2014493a4320c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ax09e71aeb7cb5; op2val:0xc6545x3b4d4e490b;
op3val:0x3992014493a4320c; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xx09e71aeb7cb5 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x45x3b4d4e490b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x2014493a4320c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ax09e71aeb7cb5; op2val:0xc6545x3b4d4e490b;
op3val:0x3992014493a4320c; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xx09e71aeb7cb5 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x45x3b4d4e490b and fs3 == 0 and fe3 == 0x399 and fm3 == 0x2014493a4320c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ax09e71aeb7cb5; op2val:0xc6545x3b4d4e490b;
op3val:0x3992014493a4320c; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x03c29ad189d45 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf896a8b45c45f and fs3 == 0 and fe3 == 0x398 and fm3 == 0xf63004f923ax8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b03c29ad189d45; op2val:0x41cf896a8b45c45f;
op3val:0x398f63004f923ax8; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x03c29ad189d45 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf896a8b45c45f and fs3 == 0 and fe3 == 0x398 and fm3 == 0xf63004f923ax8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b03c29ad189d45; op2val:0x41cf896a8b45c45f;
op3val:0x398f63004f923ax8; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x03c29ad189d45 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf896a8b45c45f and fs3 == 0 and fe3 == 0x398 and fm3 == 0xf63004f923ax8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b03c29ad189d45; op2val:0x41cf896a8b45c45f;
op3val:0x398f63004f923ax8; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x03c29ad189d45 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf896a8b45c45f and fs3 == 0 and fe3 == 0x398 and fm3 == 0xf63004f923ax8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b03c29ad189d45; op2val:0x41cf896a8b45c45f;
op3val:0x398f63004f923ax8; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x03c29ad189d45 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xf896a8b45c45f and fs3 == 0 and fe3 == 0x398 and fm3 == 0xf63004f923ax8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b03c29ad189d45; op2val:0x41cf896a8b45c45f;
op3val:0x398f63004f923ax8; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x07b387586d9e2 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xx10c191255dx5 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xc103913225855 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b07b387586d9e2; op2val:0x41cx10c191255dx5;
op3val:0x396c103913225855; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x07b387586d9e2 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xx10c191255dx5 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xc103913225855 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b07b387586d9e2; op2val:0x41cx10c191255dx5;
op3val:0x396c103913225855; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x07b387586d9e2 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xx10c191255dx5 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xc103913225855 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b07b387586d9e2; op2val:0x41cx10c191255dx5;
op3val:0x396c103913225855; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x07b387586d9e2 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xx10c191255dx5 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xc103913225855 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b07b387586d9e2; op2val:0x41cx10c191255dx5;
op3val:0x396c103913225855; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x07b387586d9e2 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xx10c191255dx5 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xc103913225855 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b07b387586d9e2; op2val:0x41cx10c191255dx5;
op3val:0x396c103913225855; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0cfffbc2fc11c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x2ce186e43520e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x05c60e1d1754d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b0cfffbc2fc11c; op2val:0xc652ce186e43520e;
op3val:0x39b05c60e1d1754d; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0cfffbc2fc11c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x2ce186e43520e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x05c60e1d1754d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b0cfffbc2fc11c; op2val:0xc652ce186e43520e;
op3val:0x39b05c60e1d1754d; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0cfffbc2fc11c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x2ce186e43520e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x05c60e1d1754d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b0cfffbc2fc11c; op2val:0xc652ce186e43520e;
op3val:0x39b05c60e1d1754d; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0cfffbc2fc11c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x2ce186e43520e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x05c60e1d1754d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b0cfffbc2fc11c; op2val:0xc652ce186e43520e;
op3val:0x39b05c60e1d1754d; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x0cfffbc2fc11c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x2ce186e43520e and fs3 == 0 and fe3 == 0x39b and fm3 == 0x05c60e1d1754d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b0cfffbc2fc11c; op2val:0xc652ce186e43520e;
op3val:0x39b05c60e1d1754d; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1d97c18af0989 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd78x5b3aa2195 and fs3 == 0 and fe3 == 0x397 and fm3 == 0xc24454430932e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b1d97c18af0989; op2val:0x400d78x5b3aa2195;
op3val:0x397c24454430932e; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1d97c18af0989 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd78x5b3aa2195 and fs3 == 0 and fe3 == 0x397 and fm3 == 0xc24454430932e and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b1d97c18af0989; op2val:0x400d78x5b3aa2195;
op3val:0x397c24454430932e; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1d97c18af0989 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd78x5b3aa2195 and fs3 == 0 and fe3 == 0x397 and fm3 == 0xc24454430932e and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b1d97c18af0989; op2val:0x400d78x5b3aa2195;
op3val:0x397c24454430932e; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1d97c18af0989 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd78x5b3aa2195 and fs3 == 0 and fe3 == 0x397 and fm3 == 0xc24454430932e and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b1d97c18af0989; op2val:0x400d78x5b3aa2195;
op3val:0x397c24454430932e; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1d97c18af0989 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xd78x5b3aa2195 and fs3 == 0 and fe3 == 0x397 and fm3 == 0xc24454430932e and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b1d97c18af0989; op2val:0x400d78x5b3aa2195;
op3val:0x397c24454430932e; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e540c6c2d7b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2265e7285040b and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1334bf1981380 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b1e540c6c2d7b8; op2val:0x4012265e7285040b;
op3val:0x39b1334bf1981380; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e540c6c2d7b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2265e7285040b and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1334bf1981380 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b1e540c6c2d7b8; op2val:0x4012265e7285040b;
op3val:0x39b1334bf1981380; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e540c6c2d7b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2265e7285040b and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1334bf1981380 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b1e540c6c2d7b8; op2val:0x4012265e7285040b;
op3val:0x39b1334bf1981380; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e540c6c2d7b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2265e7285040b and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1334bf1981380 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b1e540c6c2d7b8; op2val:0x4012265e7285040b;
op3val:0x39b1334bf1981380; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x1e540c6c2d7b8 and fs2 == 0 and fe2 == 0x401 and fm2 == 0x2265e7285040b and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1334bf1981380 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b1e540c6c2d7b8; op2val:0x4012265e7285040b;
op3val:0x39b1334bf1981380; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26x1fd54e5fb5 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x86x5bb59x2eb2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x737cbx40c9dx3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b26x1fd54e5fb5; op2val:0x40686x5bb59x2eb2;
op3val:0x39a737cbx40c9dx3; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26x1fd54e5fb5 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x86x5bb59x2eb2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x737cbx40c9dx3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b26x1fd54e5fb5; op2val:0x40686x5bb59x2eb2;
op3val:0x39a737cbx40c9dx3; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26x1fd54e5fb5 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x86x5bb59x2eb2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x737cbx40c9dx3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b26x1fd54e5fb5; op2val:0x40686x5bb59x2eb2;
op3val:0x39a737cbx40c9dx3; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26x1fd54e5fb5 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x86x5bb59x2eb2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x737cbx40c9dx3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b26x1fd54e5fb5; op2val:0x40686x5bb59x2eb2;
op3val:0x39a737cbx40c9dx3; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x26x1fd54e5fb5 and fs2 == 0 and fe2 == 0x406 and fm2 == 0x86x5bb59x2eb2 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x737cbx40c9dx3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b26x1fd54e5fb5; op2val:0x40686x5bb59x2eb2;
op3val:0x39a737cbx40c9dx3; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x29e4b8ac9x56c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x0fb29bbeb8d75 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x03c2facc640b3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b29e4b8ac9x56c; op2val:0xc650fb29bbeb8d75;
op3val:0x39b03c2facc640b3; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x29e4b8ac9x56c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x0fb29bbeb8d75 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x03c2facc640b3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b29e4b8ac9x56c; op2val:0xc650fb29bbeb8d75;
op3val:0x39b03c2facc640b3; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x29e4b8ac9x56c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x0fb29bbeb8d75 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x03c2facc640b3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b29e4b8ac9x56c; op2val:0xc650fb29bbeb8d75;
op3val:0x39b03c2facc640b3; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x29e4b8ac9x56c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x0fb29bbeb8d75 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x03c2facc640b3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b29e4b8ac9x56c; op2val:0xc650fb29bbeb8d75;
op3val:0x39b03c2facc640b3; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x29e4b8ac9x56c and fs2 == 1 and fe2 == 0x465 and fm2 == 0x0fb29bbeb8d75 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x03c2facc640b3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b29e4b8ac9x56c; op2val:0xc650fb29bbeb8d75;
op3val:0x39b03c2facc640b3; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2x4a904908b78 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xb02a59bddd2aa and fs3 == 0 and fe3 == 0x39b and fm3 == 0x18dd9c9f69342 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b2x4a904908b78; op2val:0x41cb02a59bddd2aa;
op3val:0x39b18dd9c9f69342; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2x4a904908b78 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xb02a59bddd2aa and fs3 == 0 and fe3 == 0x39b and fm3 == 0x18dd9c9f69342 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b2x4a904908b78; op2val:0x41cb02a59bddd2aa;
op3val:0x39b18dd9c9f69342; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2x4a904908b78 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xb02a59bddd2aa and fs3 == 0 and fe3 == 0x39b and fm3 == 0x18dd9c9f69342 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b2x4a904908b78; op2val:0x41cb02a59bddd2aa;
op3val:0x39b18dd9c9f69342; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2x4a904908b78 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xb02a59bddd2aa and fs3 == 0 and fe3 == 0x39b and fm3 == 0x18dd9c9f69342 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b2x4a904908b78; op2val:0x41cb02a59bddd2aa;
op3val:0x39b18dd9c9f69342; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2x4a904908b78 and fs2 == 0 and fe2 == 0x41c and fm2 == 0xb02a59bddd2aa and fs3 == 0 and fe3 == 0x39b and fm3 == 0x18dd9c9f69342 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b2x4a904908b78; op2val:0x41cb02a59bddd2aa;
op3val:0x39b18dd9c9f69342; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x43a2affc895c3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x574x5bd5cx21d and fs3 == 0 and fe3 == 0x398 and fm3 == 0xfbbce1c784c51 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b43a2affc895c3; op2val:0x3fd574x5bd5cx21d;
op3val:0x398fbbce1c784c51; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x43a2affc895c3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x574x5bd5cx21d and fs3 == 0 and fe3 == 0x398 and fm3 == 0xfbbce1c784c51 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b43a2affc895c3; op2val:0x3fd574x5bd5cx21d;
op3val:0x398fbbce1c784c51; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x43a2affc895c3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x574x5bd5cx21d and fs3 == 0 and fe3 == 0x398 and fm3 == 0xfbbce1c784c51 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b43a2affc895c3; op2val:0x3fd574x5bd5cx21d;
op3val:0x398fbbce1c784c51; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x43a2affc895c3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x574x5bd5cx21d and fs3 == 0 and fe3 == 0x398 and fm3 == 0xfbbce1c784c51 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b43a2affc895c3; op2val:0x3fd574x5bd5cx21d;
op3val:0x398fbbce1c784c51; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x43a2affc895c3 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x574x5bd5cx21d and fs3 == 0 and fe3 == 0x398 and fm3 == 0xfbbce1c784c51 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b43a2affc895c3; op2val:0x3fd574x5bd5cx21d;
op3val:0x398fbbce1c784c51; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d;
op3val:0x39a96865e46e1628; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d;
op3val:0x39a96865e46e1628; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d;
op3val:0x39a96865e46e1628; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x396 and fm1 == 0xe108feec3fd98 and fs2 == 0 and fe2 == 0x413 and fm2 == 0x107b7ba6ddb6d and fs3 == 0 and fe3 == 0x39a and fm3 == 0x96865e46e1628 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x396e108feec3fd98; op2val:0x413107b7ba6ddb6d;
op3val:0x39a96865e46e1628; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824x4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x397595dba319e6b7; op2val:0xc68d4b3ce824x4e6;
op3val:0x39a04a5c09e2e627; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824x4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x397595dba319e6b7; op2val:0xc68d4b3ce824x4e6;
op3val:0x39a04a5c09e2e627; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824x4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x397595dba319e6b7; op2val:0xc68d4b3ce824x4e6;
op3val:0x39a04a5c09e2e627; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824x4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x397595dba319e6b7; op2val:0xc68d4b3ce824x4e6;
op3val:0x39a04a5c09e2e627; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x397 and fm1 == 0x595dba319e6b7 and fs2 == 1 and fe2 == 0x468 and fm2 == 0xd4b3ce824x4e6 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x04a5c09e2e627 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x397595dba319e6b7; op2val:0xc68d4b3ce824x4e6;
op3val:0x39a04a5c09e2e627; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0xa2cfeed793415 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe62a026651722 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8c0eb80d62dac and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x398a2cfeed793415; op2val:0x3ffe62a026651722;
op3val:0x3998c0eb80d62dac; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x398 and fm1 == 0xa2cfeed793415 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0xe62a026651722 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x8c0eb80d62dac and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x398a2cfeed793415; op2val:0x3ffe62a026651722;
op3val:0x3998c0eb80d62dac; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 450*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x413107b7ba6ddb6d697544372012309357,64,FLEN)
NAN_BOXED(0x413107b7ba6ddb6d697544372012309357,64,FLEN)
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x413107b7ba6ddb6d697544372012309357,64,FLEN)
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x413107b7ba6ddb6d697544372012309357,64,FLEN)
NAN_BOXED(0x39a96865e46e1628154966918059398696,64,FLEN)
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x413107b7ba6ddb6d697544372012309357,64,FLEN)
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0xc68d4b3ce824x4e64307174316190790886,64,FLEN)
NAN_BOXED(0xc68d4b3ce824x4e64307174316190790886,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0xc68d4b3ce824x4e64307174316190790886,64,FLEN)
NAN_BOXED(0x39a04a5c09e2e627152400615598908967,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0x39a04a5c09e2e627152400615598908967,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0x39a04a5c09e2e627152400615598908967,64,FLEN)
NAN_BOXED(0x398a2cfeed793415146175880365421589,64,FLEN)
NAN_BOXED(0x3ffe62a026651722611231508452415266,64,FLEN)
NAN_BOXED(0x3998c0eb80d62dac150279174333279660,64,FLEN)
NAN_BOXED(0x398a2cfeed793415146175880365421589,64,FLEN)
NAN_BOXED(0x3ffe62a026651722611231508452415266,64,FLEN)
NAN_BOXED(0x3998c0eb80d62dac150279174333279660,64,FLEN)
NAN_BOXED(0x398a2cfeed793415146175880365421589,64,FLEN)
NAN_BOXED(0x3ffe62a026651722611231508452415266,64,FLEN)
NAN_BOXED(0x3998c0eb80d62dac150279174333279660,64,FLEN)
NAN_BOXED(0x398a2cfeed793415146175880365421589,64,FLEN)
NAN_BOXED(0x3ffe62a026651722611231508452415266,64,FLEN)
NAN_BOXED(0x3998c0eb80d62dac150279174333279660,64,FLEN)
NAN_BOXED(0x398a2cfeed793415146175880365421589,64,FLEN)
NAN_BOXED(0x3ffe62a026651722611231508452415266,64,FLEN)
NAN_BOXED(0x3998c0eb80d62dac150279174333279660,64,FLEN)
NAN_BOXED(0x398c043435ab09ee146693979186596334,64,FLEN)
NAN_BOXED(0xc67691d2a37263244300778000632931108,64,FLEN)
NAN_BOXED(0x39813aae709bc4f3143657653045544179,64,FLEN)
NAN_BOXED(0x398c043435ab09ee146693979186596334,64,FLEN)
NAN_BOXED(0xc67691d2a37263244300778000632931108,64,FLEN)
NAN_BOXED(0x39813aae709bc4f3143657653045544179,64,FLEN)
NAN_BOXED(0x398c043435ab09ee146693979186596334,64,FLEN)
NAN_BOXED(0xc67691d2a37263244300778000632931108,64,FLEN)
NAN_BOXED(0x39813aae709bc4f3143657653045544179,64,FLEN)
NAN_BOXED(0x398c043435ab09ee146693979186596334,64,FLEN)
NAN_BOXED(0xc67691d2a37263244300778000632931108,64,FLEN)
NAN_BOXED(0x39813aae709bc4f3143657653045544179,64,FLEN)
NAN_BOXED(0x398c043435ab09ee146693979186596334,64,FLEN)
NAN_BOXED(0xc67691d2a37263244300778000632931108,64,FLEN)
NAN_BOXED(0x39813aae709bc4f3143657653045544179,64,FLEN)
NAN_BOXED(0x399164ec3aaad4a5148207697544271013,64,FLEN)
NAN_BOXED(0xc6722d17b13e4e894299541346635894409,64,FLEN)
NAN_BOXED(0x39b2cfba931fb37b157613806255584123,64,FLEN)
NAN_BOXED(0x399164ec3aaad4a5148207697544271013,64,FLEN)
NAN_BOXED(0xc6722d17b13e4e894299541346635894409,64,FLEN)
NAN_BOXED(0x39b2cfba931fb37b157613806255584123,64,FLEN)
NAN_BOXED(0x399164ec3aaad4a5148207697544271013,64,FLEN)
NAN_BOXED(0xc6722d17b13e4e894299541346635894409,64,FLEN)
NAN_BOXED(0x39b2cfba931fb37b157613806255584123,64,FLEN)
NAN_BOXED(0x399164ec3aaad4a5148207697544271013,64,FLEN)
NAN_BOXED(0xc6722d17b13e4e894299541346635894409,64,FLEN)
NAN_BOXED(0x39b2cfba931fb37b157613806255584123,64,FLEN)
NAN_BOXED(0x399164ec3aaad4a5148207697544271013,64,FLEN)
NAN_BOXED(0xc6722d17b13e4e894299541346635894409,64,FLEN)
NAN_BOXED(0x39b2cfba931fb37b157613806255584123,64,FLEN)
NAN_BOXED(0x3996c05eb40c4ba6149715619648654246,64,FLEN)
NAN_BOXED(0x4083cb4025d5a1a9648782716749586857,64,FLEN)
NAN_BOXED(0x39a5afd48389c633153919558593922611,64,FLEN)
NAN_BOXED(0x3996c05eb40c4ba6149715619648654246,64,FLEN)
NAN_BOXED(0x4083cb4025d5a1a9648782716749586857,64,FLEN)
NAN_BOXED(0x39a5afd48389c633153919558593922611,64,FLEN)
NAN_BOXED(0x3996c05eb40c4ba6149715619648654246,64,FLEN)
NAN_BOXED(0x4083cb4025d5a1a9648782716749586857,64,FLEN)
NAN_BOXED(0x39a5afd48389c633153919558593922611,64,FLEN)
NAN_BOXED(0x3996c05eb40c4ba6149715619648654246,64,FLEN)
NAN_BOXED(0x4083cb4025d5a1a9648782716749586857,64,FLEN)
NAN_BOXED(0x39a5afd48389c633153919558593922611,64,FLEN)
NAN_BOXED(0x3996c05eb40c4ba6149715619648654246,64,FLEN)
NAN_BOXED(0x4083cb4025d5a1a9648782716749586857,64,FLEN)
NAN_BOXED(0x39a5afd48389c633153919558593922611,64,FLEN)
NAN_BOXED(0x39992354f370e226150387379367109158,64,FLEN)
NAN_BOXED(0x41045e28866807e2684973040518825954,64,FLEN)
NAN_BOXED(0x39a96ee30bfb4cea154974052663643370,64,FLEN)
NAN_BOXED(0x39992354f370e226150387379367109158,64,FLEN)
NAN_BOXED(0x41045e28866807e2684973040518825954,64,FLEN)
NAN_BOXED(0x39a96ee30bfb4cea154974052663643370,64,FLEN)
NAN_BOXED(0x39992354f370e226150387379367109158,64,FLEN)
NAN_BOXED(0x41045e28866807e2684973040518825954,64,FLEN)
NAN_BOXED(0x39a96ee30bfb4cea154974052663643370,64,FLEN)
NAN_BOXED(0x39992354f370e226150387379367109158,64,FLEN)
NAN_BOXED(0x41045e28866807e2684973040518825954,64,FLEN)
NAN_BOXED(0x39a96ee30bfb4cea154974052663643370,64,FLEN)
NAN_BOXED(0x39992354f370e226150387379367109158,64,FLEN)
NAN_BOXED(0x41045e28866807e2684973040518825954,64,FLEN)
NAN_BOXED(0x39a96ee30bfb4cea154974052663643370,64,FLEN)
NAN_BOXED(0x39a0beb46d781d82152528538575576450,64,FLEN)
NAN_BOXED(0x3fe08c8c5747da51602833353560283729,64,FLEN)
NAN_BOXED(0x3990714dd3e7e73e147939835889837886,64,FLEN)
NAN_BOXED(0x39a0beb46d781d82152528538575576450,64,FLEN)
NAN_BOXED(0x3fe08c8c5747da51602833353560283729,64,FLEN)
NAN_BOXED(0x3990714dd3e7e73e147939835889837886,64,FLEN)
NAN_BOXED(0x39a0beb46d781d82152528538575576450,64,FLEN)
NAN_BOXED(0x3fe08c8c5747da51602833353560283729,64,FLEN)
NAN_BOXED(0x3990714dd3e7e73e147939835889837886,64,FLEN)
NAN_BOXED(0x39a0beb46d781d82152528538575576450,64,FLEN)
NAN_BOXED(0x3fe08c8c5747da51602833353560283729,64,FLEN)
NAN_BOXED(0x3990714dd3e7e73e147939835889837886,64,FLEN)
NAN_BOXED(0x39a0beb46d781d82152528538575576450,64,FLEN)
NAN_BOXED(0x3fe08c8c5747da51602833353560283729,64,FLEN)
NAN_BOXED(0x3990714dd3e7e73e147939835889837886,64,FLEN)
NAN_BOXED(0x39a31da307c8502d153195867413172269,64,FLEN)
NAN_BOXED(0x401db1be11dx76bf620044222653757119,64,FLEN)
NAN_BOXED(0x399bd093775ceed4151140813333393108,64,FLEN)
NAN_BOXED(0x39a31da307c8502d153195867413172269,64,FLEN)
NAN_BOXED(0x401db1be11dx76bf620044222653757119,64,FLEN)
NAN_BOXED(0x399bd093775ceed4151140813333393108,64,FLEN)
NAN_BOXED(0x39a31da307c8502d153195867413172269,64,FLEN)
NAN_BOXED(0x401db1be11dx76bf620044222653757119,64,FLEN)
NAN_BOXED(0x399bd093775ceed4151140813333393108,64,FLEN)
NAN_BOXED(0x39a31da307c8502d153195867413172269,64,FLEN)
NAN_BOXED(0x401db1be11dx76bf620044222653757119,64,FLEN)
NAN_BOXED(0x399bd093775ceed4151140813333393108,64,FLEN)
NAN_BOXED(0x39a31da307c8502d153195867413172269,64,FLEN)
NAN_BOXED(0x401db1be11dx76bf620044222653757119,64,FLEN)
NAN_BOXED(0x399bd093775ceed4151140813333393108,64,FLEN)
NAN_BOXED(0x39a336048eaa4560153222674567021920,64,FLEN)
NAN_BOXED(0x3fc87c5cc2b9e4ef596060157577389295,64,FLEN)
NAN_BOXED(0x397cfe97ae238935142465684689094965,64,FLEN)
NAN_BOXED(0x39a336048eaa4560153222674567021920,64,FLEN)
NAN_BOXED(0x3fc87c5cc2b9e4ef596060157577389295,64,FLEN)
NAN_BOXED(0x397cfe97ae238935142465684689094965,64,FLEN)
NAN_BOXED(0x39a336048eaa4560153222674567021920,64,FLEN)
NAN_BOXED(0x3fc87c5cc2b9e4ef596060157577389295,64,FLEN)
NAN_BOXED(0x397cfe97ae238935142465684689094965,64,FLEN)
NAN_BOXED(0x39a336048eaa4560153222674567021920,64,FLEN)
NAN_BOXED(0x3fc87c5cc2b9e4ef596060157577389295,64,FLEN)
NAN_BOXED(0x397cfe97ae238935142465684689094965,64,FLEN)
NAN_BOXED(0x39a336048eaa4560153222674567021920,64,FLEN)
NAN_BOXED(0x3fc87c5cc2b9e4ef596060157577389295,64,FLEN)
NAN_BOXED(0x397cfe97ae238935142465684689094965,64,FLEN)
NAN_BOXED(0x39a4861fd8b3e0f9153592227680215289,64,FLEN)
NAN_BOXED(0x3fd7db4ae95d05e4600386659171501540,64,FLEN)
NAN_BOXED(0x398cd91d6a7290c8146928077264556232,64,FLEN)
NAN_BOXED(0x39a4861fd8b3e0f9153592227680215289,64,FLEN)
NAN_BOXED(0x3fd7db4ae95d05e4600386659171501540,64,FLEN)
NAN_BOXED(0x398cd91d6a7290c8146928077264556232,64,FLEN)
NAN_BOXED(0x39a4861fd8b3e0f9153592227680215289,64,FLEN)
NAN_BOXED(0x3fd7db4ae95d05e4600386659171501540,64,FLEN)
NAN_BOXED(0x398cd91d6a7290c8146928077264556232,64,FLEN)
NAN_BOXED(0x39a4861fd8b3e0f9153592227680215289,64,FLEN)
NAN_BOXED(0x3fd7db4ae95d05e4600386659171501540,64,FLEN)
NAN_BOXED(0x398cd91d6a7290c8146928077264556232,64,FLEN)
NAN_BOXED(0x39a4861fd8b3e0f9153592227680215289,64,FLEN)
NAN_BOXED(0x3fd7db4ae95d05e4600386659171501540,64,FLEN)
NAN_BOXED(0x398cd91d6a7290c8146928077264556232,64,FLEN)
NAN_BOXED(0x39a49x3d964x96f0153619843206059760,64,FLEN)
NAN_BOXED(0x3ff165581x0ea188607575322929308040,64,FLEN)
NAN_BOXED(0x39a0caa956ab3972152541685087943026,64,FLEN)
NAN_BOXED(0x39a49x3d964x96f0153619843206059760,64,FLEN)
NAN_BOXED(0x3ff165581x0ea188607575322929308040,64,FLEN)
NAN_BOXED(0x39a0caa956ab3972152541685087943026,64,FLEN)
NAN_BOXED(0x39a49x3d964x96f0153619843206059760,64,FLEN)
NAN_BOXED(0x3ff165581x0ea188607575322929308040,64,FLEN)
NAN_BOXED(0x39a0caa956ab3972152541685087943026,64,FLEN)
NAN_BOXED(0x39a49x3d964x96f0153619843206059760,64,FLEN)
NAN_BOXED(0x3ff165581x0ea188607575322929308040,64,FLEN)
NAN_BOXED(0x39a0caa956ab3972152541685087943026,64,FLEN)
NAN_BOXED(0x39a49x3d964x96f0153619843206059760,64,FLEN)
NAN_BOXED(0x3ff165581x0ea188607575322929308040,64,FLEN)
NAN_BOXED(0x39a0caa956ab3972152541685087943026,64,FLEN)
NAN_BOXED(0x39a5c5342eebx7b3153943059235338163,64,FLEN)
NAN_BOXED(0xc65d0b87a440ebba4293593469548030906,64,FLEN)
NAN_BOXED(0x39967279432x4eba149629971812273850,64,FLEN)
NAN_BOXED(0x39a5c5342eebx7b3153943059235338163,64,FLEN)
NAN_BOXED(0xc65d0b87a440ebba4293593469548030906,64,FLEN)
NAN_BOXED(0x39967279432x4eba149629971812273850,64,FLEN)
NAN_BOXED(0x39a5c5342eebx7b3153943059235338163,64,FLEN)
NAN_BOXED(0xc65d0b87a440ebba4293593469548030906,64,FLEN)
NAN_BOXED(0x39967279432x4eba149629971812273850,64,FLEN)
NAN_BOXED(0x39a5c5342eebx7b3153943059235338163,64,FLEN)
NAN_BOXED(0xc65d0b87a440ebba4293593469548030906,64,FLEN)
NAN_BOXED(0x39967279432x4eba149629971812273850,64,FLEN)
NAN_BOXED(0x39a5c5342eebx7b3153943059235338163,64,FLEN)
NAN_BOXED(0xc65d0b87a440ebba4293593469548030906,64,FLEN)
NAN_BOXED(0x39967279432x4eba149629971812273850,64,FLEN)
NAN_BOXED(0x39a63701d585a076154068187312660598,64,FLEN)
NAN_BOXED(0x40x70c39d380240b681223780175979531,64,FLEN)
NAN_BOXED(0x39985bdc2bae0463150168057805669475,64,FLEN)
NAN_BOXED(0x39a63701d585a076154068187312660598,64,FLEN)
NAN_BOXED(0x40x70c39d380240b681223780175979531,64,FLEN)
NAN_BOXED(0x39985bdc2bae0463150168057805669475,64,FLEN)
NAN_BOXED(0x39a63701d585a076154068187312660598,64,FLEN)
NAN_BOXED(0x40x70c39d380240b681223780175979531,64,FLEN)
NAN_BOXED(0x39985bdc2bae0463150168057805669475,64,FLEN)
NAN_BOXED(0x39a63701d585a076154068187312660598,64,FLEN)
NAN_BOXED(0x40x70c39d380240b681223780175979531,64,FLEN)
NAN_BOXED(0x39985bdc2bae0463150168057805669475,64,FLEN)
NAN_BOXED(0x39a63701d585a076154068187312660598,64,FLEN)
NAN_BOXED(0x40x70c39d380240b681223780175979531,64,FLEN)
NAN_BOXED(0x39985bdc2bae0463150168057805669475,64,FLEN)
NAN_BOXED(0x39a84b76733b0607154653628360754695,64,FLEN)
NAN_BOXED(0x3fe79bb4d9eddb8a604820345062284170,64,FLEN)
NAN_BOXED(0x39a17c34e456afbe152736898023337918,64,FLEN)
NAN_BOXED(0x39a84b76733b0607154653628360754695,64,FLEN)
NAN_BOXED(0x3fe79bb4d9eddb8a604820345062284170,64,FLEN)
NAN_BOXED(0x39a17c34e456afbe152736898023337918,64,FLEN)
NAN_BOXED(0x39a84b76733b0607154653628360754695,64,FLEN)
NAN_BOXED(0x3fe79bb4d9eddb8a604820345062284170,64,FLEN)
NAN_BOXED(0x39a17c34e456afbe152736898023337918,64,FLEN)
NAN_BOXED(0x39a84b76733b0607154653628360754695,64,FLEN)
NAN_BOXED(0x3fe79bb4d9eddb8a604820345062284170,64,FLEN)
NAN_BOXED(0x39a17c34e456afbe152736898023337918,64,FLEN)
NAN_BOXED(0x39a84b76733b0607154653628360754695,64,FLEN)
NAN_BOXED(0x3fe79bb4d9eddb8a604820345062284170,64,FLEN)
NAN_BOXED(0x39a17c34e456afbe152736898023337918,64,FLEN)
NAN_BOXED(0x39a8938691fdcdb1154732862433512881,64,FLEN)
NAN_BOXED(0x3ff5676e3c35cec5608703516837793477,64,FLEN)
NAN_BOXED(0x39ab3x58c2x9ax8a155484731640229770,64,FLEN)
NAN_BOXED(0x39a8938691fdcdb1154732862433512881,64,FLEN)
NAN_BOXED(0x3ff5676e3c35cec5608703516837793477,64,FLEN)
NAN_BOXED(0x39ab3x58c2x9ax8a155484731640229770,64,FLEN)
NAN_BOXED(0x39a8938691fdcdb1154732862433512881,64,FLEN)
NAN_BOXED(0x3ff5676e3c35cec5608703516837793477,64,FLEN)
NAN_BOXED(0x39ab3x58c2x9ax8a155484731640229770,64,FLEN)
NAN_BOXED(0x39a8938691fdcdb1154732862433512881,64,FLEN)
NAN_BOXED(0x3ff5676e3c35cec5608703516837793477,64,FLEN)
NAN_BOXED(0x39ab3x58c2x9ax8a155484731640229770,64,FLEN)
NAN_BOXED(0x39a8938691fdcdb1154732862433512881,64,FLEN)
NAN_BOXED(0x3ff5676e3c35cec5608703516837793477,64,FLEN)
NAN_BOXED(0x39ab3x58c2x9ax8a155484731640229770,64,FLEN)
NAN_BOXED(0x39a9a9f802f19511155039013892363537,64,FLEN)
NAN_BOXED(0x3fdc13c11507e273601574639268258419,64,FLEN)
NAN_BOXED(0x39966aa07ced57ce149621344191731662,64,FLEN)
NAN_BOXED(0x39a9a9f802f19511155039013892363537,64,FLEN)
NAN_BOXED(0x3fdc13c11507e273601574639268258419,64,FLEN)
NAN_BOXED(0x39966aa07ced57ce149621344191731662,64,FLEN)
NAN_BOXED(0x39a9a9f802f19511155039013892363537,64,FLEN)
NAN_BOXED(0x3fdc13c11507e273601574639268258419,64,FLEN)
NAN_BOXED(0x39966aa07ced57ce149621344191731662,64,FLEN)
NAN_BOXED(0x39a9a9f802f19511155039013892363537,64,FLEN)
NAN_BOXED(0x3fdc13c11507e273601574639268258419,64,FLEN)
NAN_BOXED(0x39966aa07ced57ce149621344191731662,64,FLEN)
NAN_BOXED(0x39a9a9f802f19511155039013892363537,64,FLEN)
NAN_BOXED(0x3fdc13c11507e273601574639268258419,64,FLEN)
NAN_BOXED(0x39966aa07ced57ce149621344191731662,64,FLEN)
NAN_BOXED(0x39adb06ddfbf9214156172017084633620,64,FLEN)
NAN_BOXED(0x406e644674861x0d642758519630995213,64,FLEN)
NAN_BOXED(0x39b155968624739e157198036023669662,64,FLEN)
NAN_BOXED(0x39adb06ddfbf9214156172017084633620,64,FLEN)
NAN_BOXED(0x406e644674861x0d642758519630995213,64,FLEN)
NAN_BOXED(0x39b155968624739e157198036023669662,64,FLEN)
NAN_BOXED(0x39adb06ddfbf9214156172017084633620,64,FLEN)
NAN_BOXED(0x406e644674861x0d642758519630995213,64,FLEN)
NAN_BOXED(0x39b155968624739e157198036023669662,64,FLEN)
NAN_BOXED(0x39adb06ddfbf9214156172017084633620,64,FLEN)
NAN_BOXED(0x406e644674861x0d642758519630995213,64,FLEN)
NAN_BOXED(0x39b155968624739e157198036023669662,64,FLEN)
NAN_BOXED(0x39adb06ddfbf9214156172017084633620,64,FLEN)
NAN_BOXED(0x406e644674861x0d642758519630995213,64,FLEN)
NAN_BOXED(0x39b155968624739e157198036023669662,64,FLEN)
NAN_BOXED(0x39ax09e71aeb7cb5156551869279993013,64,FLEN)
NAN_BOXED(0xc6545x3b4d4e490b4291152225858111755,64,FLEN)
NAN_BOXED(0x3992014493a4320c148379600808063500,64,FLEN)
NAN_BOXED(0x39ax09e71aeb7cb5156551869279993013,64,FLEN)
NAN_BOXED(0xc6545x3b4d4e490b4291152225858111755,64,FLEN)
NAN_BOXED(0x3992014493a4320c148379600808063500,64,FLEN)
NAN_BOXED(0x39ax09e71aeb7cb5156551869279993013,64,FLEN)
NAN_BOXED(0xc6545x3b4d4e490b4291152225858111755,64,FLEN)
NAN_BOXED(0x3992014493a4320c148379600808063500,64,FLEN)
NAN_BOXED(0x39ax09e71aeb7cb5156551869279993013,64,FLEN)
NAN_BOXED(0xc6545x3b4d4e490b4291152225858111755,64,FLEN)
NAN_BOXED(0x3992014493a4320c148379600808063500,64,FLEN)
NAN_BOXED(0x39ax09e71aeb7cb5156551869279993013,64,FLEN)
NAN_BOXED(0xc6545x3b4d4e490b4291152225858111755,64,FLEN)
NAN_BOXED(0x3992014493a4320c148379600808063500,64,FLEN)
NAN_BOXED(0x39b03c29ad189d45156888605758364997,64,FLEN)
NAN_BOXED(0x41cf896a8b45c45f742160023340565599,64,FLEN)
NAN_BOXED(0x398f63004f923af8147642634817649400,64,FLEN)
NAN_BOXED(0x39b03c29ad189d45156888605758364997,64,FLEN)
NAN_BOXED(0x41cf896a8b45c45f742160023340565599,64,FLEN)
NAN_BOXED(0x398f63004f923af8147642634817649400,64,FLEN)
NAN_BOXED(0x39b03c29ad189d45156888605758364997,64,FLEN)
NAN_BOXED(0x41cf896a8b45c45f742160023340565599,64,FLEN)
NAN_BOXED(0x398f63004f923af8147642634817649400,64,FLEN)
NAN_BOXED(0x39b03c29ad189d45156888605758364997,64,FLEN)
NAN_BOXED(0x41cf896a8b45c45f742160023340565599,64,FLEN)
NAN_BOXED(0x398f63004f923af8147642634817649400,64,FLEN)
NAN_BOXED(0x39b03c29ad189d45156888605758364997,64,FLEN)
NAN_BOXED(0x41cf896a8b45c45f742160023340565599,64,FLEN)
NAN_BOXED(0x398f63004f923af8147642634817649400,64,FLEN)
NAN_BOXED(0x39b07b387586d9e2156957938483124706,64,FLEN)
NAN_BOXED(0x41cx10c191255df5742027356194299381,64,FLEN)
NAN_BOXED(0x396c103913225855137699994966841429,64,FLEN)
NAN_BOXED(0x39b07b387586d9e2156957938483124706,64,FLEN)
NAN_BOXED(0x41cx10c191255df5742027356194299381,64,FLEN)
NAN_BOXED(0x396c103913225855137699994966841429,64,FLEN)
NAN_BOXED(0x39b07b387586d9e2156957938483124706,64,FLEN)
NAN_BOXED(0x41cx10c191255df5742027356194299381,64,FLEN)
NAN_BOXED(0x396c103913225855137699994966841429,64,FLEN)
NAN_BOXED(0x39b07b387586d9e2156957938483124706,64,FLEN)
NAN_BOXED(0x41cx10c191255df5742027356194299381,64,FLEN)
NAN_BOXED(0x396c103913225855137699994966841429,64,FLEN)
NAN_BOXED(0x39b07b387586d9e2156957938483124706,64,FLEN)
NAN_BOXED(0x41cx10c191255df5742027356194299381,64,FLEN)
NAN_BOXED(0x396c103913225855137699994966841429,64,FLEN)
NAN_BOXED(0x39b0cfffbc2fc11c157051153343824156,64,FLEN)
NAN_BOXED(0xc652ce186e43520e4290711171924447758,64,FLEN)
NAN_BOXED(0x39b05c60e1d1754d156924027238184269,64,FLEN)
NAN_BOXED(0x39b0cfffbc2fc11c157051153343824156,64,FLEN)
NAN_BOXED(0xc652ce186e43520e4290711171924447758,64,FLEN)
NAN_BOXED(0x39b05c60e1d1754d156924027238184269,64,FLEN)
NAN_BOXED(0x39b0cfffbc2fc11c157051153343824156,64,FLEN)
NAN_BOXED(0xc652ce186e43520e4290711171924447758,64,FLEN)
NAN_BOXED(0x39b05c60e1d1754d156924027238184269,64,FLEN)
NAN_BOXED(0x39b0cfffbc2fc11c157051153343824156,64,FLEN)
NAN_BOXED(0xc652ce186e43520e4290711171924447758,64,FLEN)
NAN_BOXED(0x39b05c60e1d1754d156924027238184269,64,FLEN)
NAN_BOXED(0x39b0cfffbc2fc11c157051153343824156,64,FLEN)
NAN_BOXED(0xc652ce186e43520e4290711171924447758,64,FLEN)
NAN_BOXED(0x39b05c60e1d1754d156924027238184269,64,FLEN)
NAN_BOXED(0x39b1d97c18af0989157343058052974985,64,FLEN)
NAN_BOXED(0x400d78x5b3aa2195615478189801218453,64,FLEN)
NAN_BOXED(0x397c24454430932e142225637189391150,64,FLEN)
NAN_BOXED(0x39b1d97c18af0989157343058052974985,64,FLEN)
NAN_BOXED(0x400d78x5b3aa2195615478189801218453,64,FLEN)
NAN_BOXED(0x397c24454430932e142225637189391150,64,FLEN)
NAN_BOXED(0x39b1d97c18af0989157343058052974985,64,FLEN)
NAN_BOXED(0x400d78x5b3aa2195615478189801218453,64,FLEN)
NAN_BOXED(0x397c24454430932e142225637189391150,64,FLEN)
NAN_BOXED(0x39b1d97c18af0989157343058052974985,64,FLEN)
NAN_BOXED(0x400d78x5b3aa2195615478189801218453,64,FLEN)
NAN_BOXED(0x397c24454430932e142225637189391150,64,FLEN)
NAN_BOXED(0x39b1d97c18af0989157343058052974985,64,FLEN)
NAN_BOXED(0x400d78x5b3aa2195615478189801218453,64,FLEN)
NAN_BOXED(0x397c24454430932e142225637189391150,64,FLEN)
NAN_BOXED(0x39b1e540c6c2d7b8157355997415004088,64,FLEN)
NAN_BOXED(0x4012265e7285040b616794755098280971,64,FLEN)
NAN_BOXED(0x39b1334bf1981380157160332308517760,64,FLEN)
NAN_BOXED(0x39b1e540c6c2d7b8157355997415004088,64,FLEN)
NAN_BOXED(0x4012265e7285040b616794755098280971,64,FLEN)
NAN_BOXED(0x39b1334bf1981380157160332308517760,64,FLEN)
NAN_BOXED(0x39b1e540c6c2d7b8157355997415004088,64,FLEN)
NAN_BOXED(0x4012265e7285040b616794755098280971,64,FLEN)
NAN_BOXED(0x39b1334bf1981380157160332308517760,64,FLEN)
NAN_BOXED(0x39b1e540c6c2d7b8157355997415004088,64,FLEN)
NAN_BOXED(0x4012265e7285040b616794755098280971,64,FLEN)
NAN_BOXED(0x39b1334bf1981380157160332308517760,64,FLEN)
NAN_BOXED(0x39b1e540c6c2d7b8157355997415004088,64,FLEN)
NAN_BOXED(0x4012265e7285040b616794755098280971,64,FLEN)
NAN_BOXED(0x39b1334bf1981380157160332308517760,64,FLEN)
NAN_BOXED(0x39b26x1fd54e5fb5157507588529741749,64,FLEN)
NAN_BOXED(0x40686x5bb59x2eb2641081855685111474,64,FLEN)
NAN_BOXED(0x39a737cbx40c9df3154350530384928243,64,FLEN)
NAN_BOXED(0x39b26x1fd54e5fb5157507588529741749,64,FLEN)
NAN_BOXED(0x40686x5bb59x2eb2641081855685111474,64,FLEN)
NAN_BOXED(0x39a737cbx40c9df3154350530384928243,64,FLEN)
NAN_BOXED(0x39b26x1fd54e5fb5157507588529741749,64,FLEN)
NAN_BOXED(0x40686x5bb59x2eb2641081855685111474,64,FLEN)
NAN_BOXED(0x39a737cbx40c9df3154350530384928243,64,FLEN)
NAN_BOXED(0x39b26x1fd54e5fb5157507588529741749,64,FLEN)
NAN_BOXED(0x40686x5bb59x2eb2641081855685111474,64,FLEN)
NAN_BOXED(0x39a737cbx40c9df3154350530384928243,64,FLEN)
NAN_BOXED(0x39b26x1fd54e5fb5157507588529741749,64,FLEN)
NAN_BOXED(0x40686x5bb59x2eb2641081855685111474,64,FLEN)
NAN_BOXED(0x39a737cbx40c9df3154350530384928243,64,FLEN)
NAN_BOXED(0x39b29e4b8ac9x56c157559453304616300,64,FLEN)
NAN_BOXED(0xc650fb29bbeb8d754290197774311591285,64,FLEN)
NAN_BOXED(0x39b03c2facc640b3156888631522771123,64,FLEN)
NAN_BOXED(0x39b29e4b8ac9x56c157559453304616300,64,FLEN)
NAN_BOXED(0xc650fb29bbeb8d754290197774311591285,64,FLEN)
NAN_BOXED(0x39b03c2facc640b3156888631522771123,64,FLEN)
NAN_BOXED(0x39b29e4b8ac9x56c157559453304616300,64,FLEN)
NAN_BOXED(0xc650fb29bbeb8d754290197774311591285,64,FLEN)
NAN_BOXED(0x39b03c2facc640b3156888631522771123,64,FLEN)
NAN_BOXED(0x39b29e4b8ac9x56c157559453304616300,64,FLEN)
NAN_BOXED(0xc650fb29bbeb8d754290197774311591285,64,FLEN)
NAN_BOXED(0x39b03c2facc640b3156888631522771123,64,FLEN)
NAN_BOXED(0x39b29e4b8ac9x56c157559453304616300,64,FLEN)
NAN_BOXED(0xc650fb29bbeb8d754290197774311591285,64,FLEN)
NAN_BOXED(0x39b03c2facc640b3156888631522771123,64,FLEN)
NAN_BOXED(0x39b2x4a904908b78157654412779621240,64,FLEN)
NAN_BOXED(0x41cb02a59bddd2aa740885943045444266,64,FLEN)
NAN_BOXED(0x39b18dd9c9f69342157259897575478082,64,FLEN)
NAN_BOXED(0x39b2x4a904908b78157654412779621240,64,FLEN)
NAN_BOXED(0x41cb02a59bddd2aa740885943045444266,64,FLEN)
NAN_BOXED(0x39b18dd9c9f69342157259897575478082,64,FLEN)
NAN_BOXED(0x39b2x4a904908b78157654412779621240,64,FLEN)
NAN_BOXED(0x41cb02a59bddd2aa740885943045444266,64,FLEN)
NAN_BOXED(0x39b18dd9c9f69342157259897575478082,64,FLEN)
NAN_BOXED(0x39b2x4a904908b78157654412779621240,64,FLEN)
NAN_BOXED(0x41cb02a59bddd2aa740885943045444266,64,FLEN)
NAN_BOXED(0x39b18dd9c9f69342157259897575478082,64,FLEN)
NAN_BOXED(0x39b2x4a904908b78157654412779621240,64,FLEN)
NAN_BOXED(0x41cb02a59bddd2aa740885943045444266,64,FLEN)
NAN_BOXED(0x39b18dd9c9f69342157259897575478082,64,FLEN)
NAN_BOXED(0x39b43a2affc895c3158012312324183491,64,FLEN)
NAN_BOXED(0x3fd574x5bd5cx21d599711193221624349,64,FLEN)
NAN_BOXED(0x398fbbce1c784c51147740275746819153,64,FLEN)
NAN_BOXED(0x39b43a2affc895c3158012312324183491,64,FLEN)
NAN_BOXED(0x3fd574x5bd5cx21d599711193221624349,64,FLEN)
NAN_BOXED(0x398fbbce1c784c51147740275746819153,64,FLEN)
NAN_BOXED(0x39b43a2affc895c3158012312324183491,64,FLEN)
NAN_BOXED(0x3fd574x5bd5cx21d599711193221624349,64,FLEN)
NAN_BOXED(0x398fbbce1c784c51147740275746819153,64,FLEN)
NAN_BOXED(0x39b43a2affc895c3158012312324183491,64,FLEN)
NAN_BOXED(0x3fd574x5bd5cx21d599711193221624349,64,FLEN)
NAN_BOXED(0x398fbbce1c784c51147740275746819153,64,FLEN)
NAN_BOXED(0x39b43a2affc895c3158012312324183491,64,FLEN)
NAN_BOXED(0x3fd574x5bd5cx21d599711193221624349,64,FLEN)
NAN_BOXED(0x398fbbce1c784c51147740275746819153,64,FLEN)
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x413107b7ba6ddb6d697544372012309357,64,FLEN)
NAN_BOXED(0x39a96865e46e1628154966918059398696,64,FLEN)
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x413107b7ba6ddb6d697544372012309357,64,FLEN)
NAN_BOXED(0x39a96865e46e1628154966918059398696,64,FLEN)
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x413107b7ba6ddb6d697544372012309357,64,FLEN)
NAN_BOXED(0x39a96865e46e1628154966918059398696,64,FLEN)
NAN_BOXED(0x396e108feec3fd98138263317972254104,64,FLEN)
NAN_BOXED(0x413107b7ba6ddb6d697544372012309357,64,FLEN)
NAN_BOXED(0x39a96865e46e1628154966918059398696,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0xc68d4b3ce824x4e64307174316190790886,64,FLEN)
NAN_BOXED(0x39a04a5c09e2e627152400615598908967,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0xc68d4b3ce824x4e64307174316190790886,64,FLEN)
NAN_BOXED(0x39a04a5c09e2e627152400615598908967,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0xc68d4b3ce824x4e64307174316190790886,64,FLEN)
NAN_BOXED(0x39a04a5c09e2e627152400615598908967,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0xc68d4b3ce824x4e64307174316190790886,64,FLEN)
NAN_BOXED(0x39a04a5c09e2e627152400615598908967,64,FLEN)
NAN_BOXED(0x397595dba319e6b7140380203003799223,64,FLEN)
NAN_BOXED(0xc68d4b3ce824x4e64307174316190790886,64,FLEN)
NAN_BOXED(0x39a04a5c09e2e627152400615598908967,64,FLEN)
NAN_BOXED(0x398a2cfeed793415146175880365421589,64,FLEN)
NAN_BOXED(0x3ffe62a026651722611231508452415266,64,FLEN)
NAN_BOXED(0x3998c0eb80d62dac150279174333279660,64,FLEN)
NAN_BOXED(0x398a2cfeed793415146175880365421589,64,FLEN)
NAN_BOXED(0x3ffe62a026651722611231508452415266,64,FLEN)
NAN_BOXED(0x3998c0eb80d62dac150279174333279660,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 46*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
