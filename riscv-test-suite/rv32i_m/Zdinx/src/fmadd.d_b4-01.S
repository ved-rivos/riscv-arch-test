
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b4 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b4)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x17, rs2==x3, rs3==x28, rd==x17,fs1 == 0 and fe1 == 0x7x5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x17; op2:x3; op3:x28; dest:x17; op1val:0x7x5d144fc758c3ff; op2val:0x40521d08b2b77735;
op3val:0x7febe28c340570cd; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x17, x17, x3, x28, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x26, rs2==x9, rs3==x20, rd==x15,fs1 == 0 and fe1 == 0x7x5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x26; op2:x9; op3:x20; dest:x15; op1val:0x7x5d144fc758c3ff; op2val:0x40521d08b2b77735;
op3val:0x7febe28c340570cd; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x15, x26, x9, x20, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==x18, rs2==x18, rs3==x14, rd==x18,fs1 == 0 and fe1 == 0x7x5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x18; op2:x18; op3:x14; dest:x18; op1val:0x7x5d144fc758c3ff; op2val:0x7x5d144fc758c3ff;
op3val:0x7febe28c340570cd; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x18, x18, x18, x14, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rs2 == rs3 == rd, rs1==x24, rs2==x24, rs3==x24, rd==x24,fs1 == 0 and fe1 == 0x7x5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x24; op2:x24; op3:x24; dest:x24; op1val:0x7x5d144fc758c3ff; op2val:0x7x5d144fc758c3ff;
op3val:0x7x5d144fc758c3ff; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x24, x24, x24, x24, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x23, rs2==x23, rs3==x19, rd==x16,fs1 == 0 and fe1 == 0x7x5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x23; op2:x23; op3:x19; dest:x16; op1val:0x7x5d144fc758c3ff; op2val:0x7x5d144fc758c3ff;
op3val:0x7febe28c340570cd; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x16, x23, x23, x19, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x4, rs2==x11, rs3==x5, rd==x11,fs1 == 0 and fe1 == 0x7x6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x4; op2:x11; op3:x5; dest:x11; op1val:0x7x6bb6ea62484dff; op2val:0xc06c87d5180d6de7;
op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x11, x4, x11, x5, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x20, rs2==x8, rs3==x8, rd==x10,fs1 == 0 and fe1 == 0x7x6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x20; op2:x8; op3:x8; dest:x10; op1val:0x7x6bb6ea62484dff; op2val:0xc06c87d5180d6de7;
op3val:0xc06c87d5180d6de7; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x10, x20, x8, x8, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x13, rs2==x26, rs3==x13, rd==x6,fs1 == 0 and fe1 == 0x7x6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x13; op2:x26; op3:x13; dest:x6; op1val:0x7x6bb6ea62484dff; op2val:0xc06c87d5180d6de7;
op3val:0x7x6bb6ea62484dff; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x6, x13, x26, x13, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x27, rs2==x5, rs3==x1, rd==x1,fs1 == 0 and fe1 == 0x7x6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x27; op2:x5; op3:x1; dest:x1; op1val:0x7x6bb6ea62484dff; op2val:0xc06c87d5180d6de7;
op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x1, x27, x5, x1, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rd == rs2 == rs3 != rs1, rs1==x12, rs2==x29, rs3==x29, rd==x29,fs1 == 0 and fe1 == 0x7x6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x12; op2:x29; op3:x29; dest:x29; op1val:0x7x6bb6ea62484dff; op2val:0xc06c87d5180d6de7;
op3val:0xc06c87d5180d6de7; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x29, x12, x29, x29, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==x0, rs2==x13, rs3==x0, rd==x0,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xfx8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x0; op2:x13; op3:x0; dest:x0; op1val:0x7f8297b073ec28bf; op2val:0x407fx8a642c3925c;
op3val:0x7f8297b073ec28bf; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x0, x0, x13, x0, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 == rs3 != rd, rs1==x21, rs2==x21, rs3==x21, rd==x20,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xfx8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x21; op2:x21; op3:x21; dest:x20; op1val:0x7f8297b073ec28bf; op2val:0x7f8297b073ec28bf;
op3val:0x7f8297b073ec28bf; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x20, x21, x21, x21, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x29, rs2==x17, rs3==x25, rd==x22,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xfx8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x29; op2:x17; op3:x25; dest:x22; op1val:0x7f8297b073ec28bf; op2val:0x407fx8a642c3925c;
op3val:0x7fa7ec9ded4be93f; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x22, x29, x17, x25, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x15, rs2==x0, rs3==x16, rd==x31,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xfx8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x15; op2:x0; op3:x16; dest:x31; op1val:0x7f8297b073ec28bf; op2val:0x407fx8a642c3925c;
op3val:0x7fa7ec9ded4be93f; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x15, x0, x16, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x3, rs2==x10, rs3==x22, rd==x4,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xfx8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x3; op2:x10; op3:x22; dest:x4; op1val:0x7f8297b073ec28bf; op2val:0x407fx8a642c3925c;
op3val:0x7fa7ec9ded4be93f; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x4, x3, x10, x22, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x9, rs2==x27, rs3==x15, rd==x14,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0xadb9cbb2edaff and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddd0bd50d5455 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x9; op2:x27; op3:x15; dest:x14; op1val:0x7x8adb9cbb2edaff; op2val:0x404ddd0bd50d5455;
op3val:0x7fcbbdcd5687c963; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x14, x9, x27, x15, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x7, rs2==x25, rs3==x12, rd==x27,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0xadb9cbb2edaff and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddd0bd50d5455 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x7; op2:x25; op3:x12; dest:x27; op1val:0x7x8adb9cbb2edaff; op2val:0x404ddd0bd50d5455;
op3val:0x7fcbbdcd5687c963; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x27, x7, x25, x12, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x30, rs2==x12, rs3==x4, rd==x2,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0xadb9cbb2edaff and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddd0bd50d5455 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x12; op3:x4; dest:x2; op1val:0x7x8adb9cbb2edaff; op2val:0x404ddd0bd50d5455;
op3val:0x7fcbbdcd5687c963; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x2, x30, x12, x4, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x5, rs2==x31, rs3==x6, rd==x28,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0xadb9cbb2edaff and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddd0bd50d5455 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x5; op2:x31; op3:x6; dest:x28; op1val:0x7x8adb9cbb2edaff; op2val:0x404ddd0bd50d5455;
op3val:0x7fcbbdcd5687c963; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x28, x5, x31, x6, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x19, rs2==x22, rs3==x17, rd==x3,fs1 == 0 and fe1 == 0x7x8 and fm1 == 0xadb9cbb2edaff and fs2 == 0 and fe2 == 0x404 and fm2 == 0xddd0bd50d5455 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xbbdcd5687c963 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x19; op2:x22; op3:x17; dest:x3; op1val:0x7x8adb9cbb2edaff; op2val:0x404ddd0bd50d5455;
op3val:0x7fcbbdcd5687c963; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x3, x19, x22, x17, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x28, rs2==x20, rs3==x11, rd==x9,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x2804bc647cadf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x90d9b84a2ad4d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526x5ace10b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x28; op2:x20; op3:x11; dest:x9; op1val:0x7f92804bc647cadf; op2val:0x40190d9b84a2ad4d;
op3val:0x7fe93526x5ace10b; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x9, x28, x20, x11, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x31, rs2==x30, rs3==x27, rd==x12,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x2804bc647cadf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x90d9b84a2ad4d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526x5ace10b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x31; op2:x30; op3:x27; dest:x12; op1val:0x7f92804bc647cadf; op2val:0x40190d9b84a2ad4d;
op3val:0x7fe93526x5ace10b; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x12, x31, x30, x27, dyn, 32, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==x10, rs2==x16, rs3==x3, rd==x21,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x2804bc647cadf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x90d9b84a2ad4d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526x5ace10b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x10; op2:x16; op3:x3; dest:x21; op1val:0x7f92804bc647cadf; op2val:0x40190d9b84a2ad4d;
op3val:0x7fe93526x5ace10b; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x21, x10, x16, x3, dyn, 64, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==x1, rs2==x19, rs3==x9, rd==x23,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x2804bc647cadf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x90d9b84a2ad4d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526x5ace10b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x1; op2:x19; op3:x9; dest:x23; op1val:0x7f92804bc647cadf; op2val:0x40190d9b84a2ad4d;
op3val:0x7fe93526x5ace10b; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x23, x1, x19, x9, dyn, 96, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==x25, rs2==x28, rs3==x18, rd==x8,fs1 == 0 and fe1 == 0x7x9 and fm1 == 0x2804bc647cadf and fs2 == 0 and fe2 == 0x401 and fm2 == 0x90d9b84a2ad4d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x93526x5ace10b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x25; op2:x28; op3:x18; dest:x8; op1val:0x7f92804bc647cadf; op2val:0x40190d9b84a2ad4d;
op3val:0x7fe93526x5ace10b; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x8, x25, x28, x18, dyn, 128, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==x2, rs2==x14, rs3==x26, rd==x7,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe9917808601d0 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acfx0a9e8d47 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x2; op2:x14; op3:x26; dest:x7; op1val:0x7fc2a65c343892db; op2val:0xbfee9917808601d0;
op3val:0x7fb0acfx0a9e8d47; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x7, x2, x14, x26, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==x22, rs2==x15, rs3==x2, rd==x30,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe9917808601d0 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acfx0a9e8d47 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x22; op2:x15; op3:x2; dest:x30; op1val:0x7fc2a65c343892db; op2val:0xbfee9917808601d0;
op3val:0x7fb0acfx0a9e8d47; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x30, x22, x15, x2, dyn, 32, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==x8, rs2==x1, rs3==x31, rd==x5,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe9917808601d0 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acfx0a9e8d47 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x8; op2:x1; op3:x31; dest:x5; op1val:0x7fc2a65c343892db; op2val:0xbfee9917808601d0;
op3val:0x7fb0acfx0a9e8d47; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x5, x8, x1, x31, dyn, 64, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==x11, rs2==x7, rs3==x30, rd==x26,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe9917808601d0 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acfx0a9e8d47 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x11; op2:x7; op3:x30; dest:x26; op1val:0x7fc2a65c343892db; op2val:0xbfee9917808601d0;
op3val:0x7fb0acfx0a9e8d47; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x26, x11, x7, x30, dyn, 96, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==x14, rs2==x2, rs3==x7, rd==x25,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x2a65c343892db and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xe9917808601d0 and fs3 == 0 and fe3 == 0x7fb and fm3 == 0x0acfx0a9e8d47 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x14; op2:x2; op3:x7; dest:x25; op1val:0x7fc2a65c343892db; op2val:0xbfee9917808601d0;
op3val:0x7fb0acfx0a9e8d47; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x25, x14, x2, x7, dyn, 128, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==x16, rs2==x6, rs3==x10, rd==x13,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x16; op2:x6; op3:x10; dest:x13; op1val:0x7fc7285ea9faba7f; op2val:0xc032e8909705103d;
op3val:0x7fee90d56fd14cc8; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x13, x16, x6, x10, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==x6, rs2==x4, rs3==x23, rd==x19,fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x6; op2:x4; op3:x23; dest:x19; op1val:0x7fc7285ea9faba7f; op2val:0xc032e8909705103d;
op3val:0x7fee90d56fd14cc8; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x19, x6, x4, x23, dyn, 32, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc7285ea9faba7f; op2val:0xc032e8909705103d;
op3val:0x7fee90d56fd14cc8; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc7285ea9faba7f; op2val:0xc032e8909705103d;
op3val:0x7fee90d56fd14cc8; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0x7285ea9faba7f and fs2 == 1 and fe2 == 0x403 and fm2 == 0x2e8909705103d and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe90d56fd14cc8 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fc7285ea9faba7f; op2val:0xc032e8909705103d;
op3val:0x7fee90d56fd14cc8; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x272646c589bef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fca363712e81d63; op2val:0x3fd272646c589bef;
op3val:0x7fee1c79b3dfcd57; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x272646c589bef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fca363712e81d63; op2val:0x3fd272646c589bef;
op3val:0x7fee1c79b3dfcd57; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x272646c589bef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fca363712e81d63; op2val:0x3fd272646c589bef;
op3val:0x7fee1c79b3dfcd57; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x272646c589bef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fca363712e81d63; op2val:0x3fd272646c589bef;
op3val:0x7fee1c79b3dfcd57; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xa363712e81d63 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x272646c589bef and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xe1c79b3dfcd57 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fca363712e81d63; op2val:0x3fd272646c589bef;
op3val:0x7fee1c79b3dfcd57; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xdx6c8944627b9 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30x5cae37 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcacf777c60a3c7; op2val:0x400dx6c8944627b9;
op3val:0x7fcb94e30x5cae37; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xdx6c8944627b9 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30x5cae37 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcacf777c60a3c7; op2val:0x400dx6c8944627b9;
op3val:0x7fcb94e30x5cae37; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xdx6c8944627b9 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30x5cae37 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcacf777c60a3c7; op2val:0x400dx6c8944627b9;
op3val:0x7fcb94e30x5cae37; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xdx6c8944627b9 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30x5cae37 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcacf777c60a3c7; op2val:0x400dx6c8944627b9;
op3val:0x7fcb94e30x5cae37; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x7fc and fm1 == 0xacf777c60a3c7 and fs2 == 0 and fe2 == 0x400 and fm2 == 0xdx6c8944627b9 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0xb94e30x5cae37 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fcacf777c60a3c7; op2val:0x400dx6c8944627b9;
op3val:0x7fcb94e30x5cae37; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3280e91a916a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd1e30a0174e413; op2val:0x3fd3280e91a916a6;
op3val:0x7fed52b387784731; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3280e91a916a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd1e30a0174e413; op2val:0x3fd3280e91a916a6;
op3val:0x7fed52b387784731; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3280e91a916a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd1e30a0174e413; op2val:0x3fd3280e91a916a6;
op3val:0x7fed52b387784731; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3280e91a916a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd1e30a0174e413; op2val:0x3fd3280e91a916a6;
op3val:0x7fed52b387784731; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x1e30a0174e413 and fs2 == 0 and fe2 == 0x3fd and fm2 == 0x3280e91a916a6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xd52b387784731 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd1e30a0174e413; op2val:0x3fd3280e91a916a6;
op3val:0x7fed52b387784731; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283x9d2825ba3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x10b2cf635997b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd283x9d2825ba3; op2val:0x3fc10b2cf635997b;
op3val:0x7feec46d7ccba9a3; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283x9d2825ba3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x10b2cf635997b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd283x9d2825ba3; op2val:0x3fc10b2cf635997b;
op3val:0x7feec46d7ccba9a3; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283x9d2825ba3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x10b2cf635997b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd283x9d2825ba3; op2val:0x3fc10b2cf635997b;
op3val:0x7feec46d7ccba9a3; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283x9d2825ba3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x10b2cf635997b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd283x9d2825ba3; op2val:0x3fc10b2cf635997b;
op3val:0x7feec46d7ccba9a3; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x283x9d2825ba3 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x10b2cf635997b and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xec46d7ccba9a3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd283x9d2825ba3; op2val:0x3fc10b2cf635997b;
op3val:0x7feec46d7ccba9a3; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbcc84701e68b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd34977ae8a092b; op2val:0xbffbcc84701e68b6;
op3val:0x7fe34cad56583569; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbcc84701e68b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd34977ae8a092b; op2val:0xbffbcc84701e68b6;
op3val:0x7fe34cad56583569; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbcc84701e68b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd34977ae8a092b; op2val:0xbffbcc84701e68b6;
op3val:0x7fe34cad56583569; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbcc84701e68b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd34977ae8a092b; op2val:0xbffbcc84701e68b6;
op3val:0x7fe34cad56583569; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x34977ae8a092b and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xbcc84701e68b6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x34cad56583569 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd34977ae8a092b; op2val:0xbffbcc84701e68b6;
op3val:0x7fe34cad56583569; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35x0bec2723e1 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd435f4497a6a63; op2val:0xbfe35x0bec2723e1;
op3val:0x7fdecc4833c7c22d; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35x0bec2723e1 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd435f4497a6a63; op2val:0xbfe35x0bec2723e1;
op3val:0x7fdecc4833c7c22d; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35x0bec2723e1 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd435f4497a6a63; op2val:0xbfe35x0bec2723e1;
op3val:0x7fdecc4833c7c22d; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35x0bec2723e1 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd435f4497a6a63; op2val:0xbfe35x0bec2723e1;
op3val:0x7fdecc4833c7c22d; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x435f4497a6a63 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x35x0bec2723e1 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xecc4833c7c22d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd435f4497a6a63; op2val:0xbfe35x0bec2723e1;
op3val:0x7fdecc4833c7c22d; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x658d473310be9 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd5a01a288736c5; op2val:0xbfe658d473310be9;
op3val:0x7fd3d659cad7c271; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x658d473310be9 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd5a01a288736c5; op2val:0xbfe658d473310be9;
op3val:0x7fd3d659cad7c271; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x658d473310be9 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd5a01a288736c5; op2val:0xbfe658d473310be9;
op3val:0x7fd3d659cad7c271; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x658d473310be9 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd5a01a288736c5; op2val:0xbfe658d473310be9;
op3val:0x7fd3d659cad7c271; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x5a01a288736c5 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x658d473310be9 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x3d659cad7c271 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd5a01a288736c5; op2val:0xbfe658d473310be9;
op3val:0x7fd3d659cad7c271; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25e6811887cb1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd71dbc6351ba9b; op2val:0xbfd25e6811887cb1;
op3val:0x7fc53e0c4ef901b7; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25e6811887cb1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd71dbc6351ba9b; op2val:0xbfd25e6811887cb1;
op3val:0x7fc53e0c4ef901b7; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25e6811887cb1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd71dbc6351ba9b; op2val:0xbfd25e6811887cb1;
op3val:0x7fc53e0c4ef901b7; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25e6811887cb1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd71dbc6351ba9b; op2val:0xbfd25e6811887cb1;
op3val:0x7fc53e0c4ef901b7; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x71dbc6351ba9b and fs2 == 1 and fe2 == 0x3fd and fm2 == 0x25e6811887cb1 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x53e0c4ef901b7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd71dbc6351ba9b; op2val:0xbfd25e6811887cb1;
op3val:0x7fc53e0c4ef901b7; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2af7840cd0fd6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd76f910302cbdd; op2val:0xc012af7840cd0fd6;
op3val:0x7fe28339eb5d6c77; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2af7840cd0fd6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd76f910302cbdd; op2val:0xc012af7840cd0fd6;
op3val:0x7fe28339eb5d6c77; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2af7840cd0fd6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd76f910302cbdd; op2val:0xc012af7840cd0fd6;
op3val:0x7fe28339eb5d6c77; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2af7840cd0fd6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd76f910302cbdd; op2val:0xc012af7840cd0fd6;
op3val:0x7fe28339eb5d6c77; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x7fd and fm1 == 0x76f910302cbdd and fs2 == 1 and fe2 == 0x401 and fm2 == 0x2af7840cd0fd6 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x28339eb5d6c77 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fd76f910302cbdd; op2val:0xc012af7840cd0fd6;
op3val:0x7fe28339eb5d6c77; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31e7826018085 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bx69 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1415193812551; op2val:0x3fe31e7826018085;
op3val:0x7fe5b0c98a80bx69; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31e7826018085 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bx69 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1415193812551; op2val:0x3fe31e7826018085;
op3val:0x7fe5b0c98a80bx69; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31e7826018085 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bx69 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1415193812551; op2val:0x3fe31e7826018085;
op3val:0x7fe5b0c98a80bx69; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31e7826018085 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bx69 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1415193812551; op2val:0x3fe31e7826018085;
op3val:0x7fe5b0c98a80bx69; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1415193812551 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x31e7826018085 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b0c98a80bx69 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1415193812551; op2val:0x3fe31e7826018085;
op3val:0x7fe5b0c98a80bx69; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bx9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x912c42162d7e8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1667d2c686bx9; op2val:0x3fe912c42162d7e8;
op3val:0x7fe25db9e8ff508c; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bx9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x912c42162d7e8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1667d2c686bx9; op2val:0x3fe912c42162d7e8;
op3val:0x7fe25db9e8ff508c; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bx9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x912c42162d7e8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1667d2c686bx9; op2val:0x3fe912c42162d7e8;
op3val:0x7fe25db9e8ff508c; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bx9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x912c42162d7e8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1667d2c686bx9; op2val:0x3fe912c42162d7e8;
op3val:0x7fe25db9e8ff508c; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x1667d2c686bx9 and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x912c42162d7e8 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x25db9e8ff508c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe1667d2c686bx9; op2val:0x3fe912c42162d7e8;
op3val:0x7fe25db9e8ff508c; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a139015a7821 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3c22bc9c78300; op2val:0x3fx6a139015a7821;
op3val:0x7fc037ae321da893; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a139015a7821 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3c22bc9c78300; op2val:0x3fx6a139015a7821;
op3val:0x7fc037ae321da893; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a139015a7821 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3c22bc9c78300; op2val:0x3fx6a139015a7821;
op3val:0x7fc037ae321da893; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a139015a7821 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3c22bc9c78300; op2val:0x3fx6a139015a7821;
op3val:0x7fc037ae321da893; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x3c22bc9c78300 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x6a139015a7821 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x037ae321da893 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe3c22bc9c78300; op2val:0x3fx6a139015a7821;
op3val:0x7fc037ae321da893; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x8c98532405521 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe619bd20c99aa7; op2val:0x3fa8c98532405521;
op3val:0x7feeee1847dc4239; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x8c98532405521 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe619bd20c99aa7; op2val:0x3fa8c98532405521;
op3val:0x7feeee1847dc4239; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x8c98532405521 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe619bd20c99aa7; op2val:0x3fa8c98532405521;
op3val:0x7feeee1847dc4239; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x8c98532405521 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe619bd20c99aa7; op2val:0x3fa8c98532405521;
op3val:0x7feeee1847dc4239; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x619bd20c99aa7 and fs2 == 0 and fe2 == 0x3fa and fm2 == 0x8c98532405521 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xeee1847dc4239 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe619bd20c99aa7; op2val:0x3fa8c98532405521;
op3val:0x7feeee1847dc4239; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7bba9ce426aa5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2x39d065486f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe68ca648b458d1; op2val:0xbfe7bba9ce426aa5;
op3val:0x7fad2x39d065486f; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7bba9ce426aa5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2x39d065486f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe68ca648b458d1; op2val:0xbfe7bba9ce426aa5;
op3val:0x7fad2x39d065486f; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7bba9ce426aa5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2x39d065486f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe68ca648b458d1; op2val:0xbfe7bba9ce426aa5;
op3val:0x7fad2x39d065486f; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7bba9ce426aa5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2x39d065486f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe68ca648b458d1; op2val:0xbfe7bba9ce426aa5;
op3val:0x7fad2x39d065486f; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x68ca648b458d1 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x7bba9ce426aa5 and fs3 == 0 and fe3 == 0x7fa and fm3 == 0xd2x39d065486f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe68ca648b458d1; op2val:0xbfe7bba9ce426aa5;
op3val:0x7fad2x39d065486f; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfe0ac40de451e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dfx43 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7fe52216e3a3d; op2val:0xbfffe0ac40de451e;
op3val:0x7feb0943a59dfx43; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfe0ac40de451e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dfx43 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7fe52216e3a3d; op2val:0xbfffe0ac40de451e;
op3val:0x7feb0943a59dfx43; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfe0ac40de451e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dfx43 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7fe52216e3a3d; op2val:0xbfffe0ac40de451e;
op3val:0x7feb0943a59dfx43; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfe0ac40de451e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dfx43 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7fe52216e3a3d; op2val:0xbfffe0ac40de451e;
op3val:0x7feb0943a59dfx43; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x7fe52216e3a3d and fs2 == 1 and fe2 == 0x3ff and fm2 == 0xfe0ac40de451e and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb0943a59dfx43 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe7fe52216e3a3d; op2val:0xbfffe0ac40de451e;
op3val:0x7feb0943a59dfx43; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18x6cbc59783a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe880d2a98ec8a6; op2val:0x3fx18x6cbc59783a;
op3val:0x7fc46de92c30d8b3; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18x6cbc59783a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe880d2a98ec8a6; op2val:0x3fx18x6cbc59783a;
op3val:0x7fc46de92c30d8b3; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18x6cbc59783a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe880d2a98ec8a6; op2val:0x3fx18x6cbc59783a;
op3val:0x7fc46de92c30d8b3; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18x6cbc59783a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe880d2a98ec8a6; op2val:0x3fx18x6cbc59783a;
op3val:0x7fc46de92c30d8b3; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x880d2a98ec8a6 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x18x6cbc59783a and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x46de92c30d8b3 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe880d2a98ec8a6; op2val:0x3fx18x6cbc59783a;
op3val:0x7fc46de92c30d8b3; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1494ae586f255 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9823a6849a878; op2val:0x3ff1494ae586f255;
op3val:0x7fc1c32179e3068f; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1494ae586f255 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9823a6849a878; op2val:0x3ff1494ae586f255;
op3val:0x7fc1c32179e3068f; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1494ae586f255 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9823a6849a878; op2val:0x3ff1494ae586f255;
op3val:0x7fc1c32179e3068f; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1494ae586f255 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9823a6849a878; op2val:0x3ff1494ae586f255;
op3val:0x7fc1c32179e3068f; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0x9823a6849a878 and fs2 == 0 and fe2 == 0x3ff and fm2 == 0x1494ae586f255 and fs3 == 0 and fe3 == 0x7fc and fm3 == 0x1c32179e3068f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fe9823a6849a878; op2val:0x3ff1494ae586f255;
op3val:0x7fc1c32179e3068f; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6668ceb51c07e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea314cd13968e7; op2val:0xbfe6668ceb51c07e;
op3val:0x7fdec4877592448b; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6668ceb51c07e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea314cd13968e7; op2val:0xbfe6668ceb51c07e;
op3val:0x7fdec4877592448b; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6668ceb51c07e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea314cd13968e7; op2val:0xbfe6668ceb51c07e;
op3val:0x7fdec4877592448b; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6668ceb51c07e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea314cd13968e7; op2val:0xbfe6668ceb51c07e;
op3val:0x7fdec4877592448b; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xa314cd13968e7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0x6668ceb51c07e and fs3 == 0 and fe3 == 0x7fd and fm3 == 0xec4877592448b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fea314cd13968e7; op2val:0xbfe6668ceb51c07e;
op3val:0x7fdec4877592448b; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91b45c5ab1967 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31x5b782c2cff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec998825886bbc; op2val:0x3fe91b45c5ab1967;
op3val:0x7fd31x5b782c2cff; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91b45c5ab1967 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31x5b782c2cff and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec998825886bbc; op2val:0x3fe91b45c5ab1967;
op3val:0x7fd31x5b782c2cff; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91b45c5ab1967 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31x5b782c2cff and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec998825886bbc; op2val:0x3fe91b45c5ab1967;
op3val:0x7fd31x5b782c2cff; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91b45c5ab1967 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31x5b782c2cff and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec998825886bbc; op2val:0x3fe91b45c5ab1967;
op3val:0x7fd31x5b782c2cff; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xc998825886bbc and fs2 == 0 and fe2 == 0x3fe and fm2 == 0x91b45c5ab1967 and fs3 == 0 and fe3 == 0x7fd and fm3 == 0x31x5b782c2cff and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fec998825886bbc; op2val:0x3fe91b45c5ab1967;
op3val:0x7fd31x5b782c2cff; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe353964a8812d and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0x76a11f9800e5f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef3403ffc18c4e; op2val:0x3fee353964a8812d;
op3val:0x7f976a11f9800e5f; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe353964a8812d and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0x76a11f9800e5f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef3403ffc18c4e; op2val:0x3fee353964a8812d;
op3val:0x7f976a11f9800e5f; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe353964a8812d and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0x76a11f9800e5f and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef3403ffc18c4e; op2val:0x3fee353964a8812d;
op3val:0x7f976a11f9800e5f; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe353964a8812d and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0x76a11f9800e5f and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef3403ffc18c4e; op2val:0x3fee353964a8812d;
op3val:0x7f976a11f9800e5f; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xf3403ffc18c4e and fs2 == 0 and fe2 == 0x3fe and fm2 == 0xe353964a8812d and fs3 == 0 and fe3 == 0x7x9 and fm3 == 0x76a11f9800e5f and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fef3403ffc18c4e; op2val:0x3fee353964a8812d;
op3val:0x7f976a11f9800e5f; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx6ffe64a9d644 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x09fc0x75fdd31 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex6ffe64a9d644; op2val:0x3fc09fc0x75fdd31;
op3val:0x7febeac3b0aa7ae7; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx6ffe64a9d644 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x09fc0x75fdd31 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex6ffe64a9d644; op2val:0x3fc09fc0x75fdd31;
op3val:0x7febeac3b0aa7ae7; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx6ffe64a9d644 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x09fc0x75fdd31 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex6ffe64a9d644; op2val:0x3fc09fc0x75fdd31;
op3val:0x7febeac3b0aa7ae7; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx6ffe64a9d644 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x09fc0x75fdd31 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex6ffe64a9d644; op2val:0x3fc09fc0x75fdd31;
op3val:0x7febeac3b0aa7ae7; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x7fe and fm1 == 0xx6ffe64a9d644 and fs2 == 0 and fe2 == 0x3fc and fm2 == 0x09fc0x75fdd31 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbeac3b0aa7ae7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7fex6ffe64a9d644; op2val:0x3fc09fc0x75fdd31;
op3val:0x7febeac3b0aa7ae7; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x7x5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x5d144fc758c3ff; op2val:0x40521d08b2b77735;
op3val:0x7febe28c340570cd; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x7x5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x5d144fc758c3ff; op2val:0x40521d08b2b77735;
op3val:0x7febe28c340570cd; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x7x5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x5d144fc758c3ff; op2val:0x40521d08b2b77735;
op3val:0x7febe28c340570cd; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x7x5 and fm1 == 0xd144fc758c3ff and fs2 == 0 and fe2 == 0x405 and fm2 == 0x21d08b2b77735 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xbe28c340570cd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x5d144fc758c3ff; op2val:0x40521d08b2b77735;
op3val:0x7febe28c340570cd; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x7x6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x6bb6ea62484dff; op2val:0xc06c87d5180d6de7;
op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x7x6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x6bb6ea62484dff; op2val:0xc06c87d5180d6de7;
op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x7x6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x6bb6ea62484dff; op2val:0xc06c87d5180d6de7;
op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 64, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x7x6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x6bb6ea62484dff; op2val:0xc06c87d5180d6de7;
op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 96, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x7x6 and fm1 == 0xbb6ea62484dff and fs2 == 1 and fe2 == 0x406 and fm2 == 0xc87d5180d6de7 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x5b1a32ad4a90d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7x6bb6ea62484dff; op2val:0xc06c87d5180d6de7;
op3val:0x7fe5b1a32ad4a90d; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 128, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xfx8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f8297b073ec28bf; op2val:0x407fx8a642c3925c;
op3val:0x7fa7ec9ded4be93f; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x7x8 and fm1 == 0x297b073ec28bf and fs2 == 0 and fe2 == 0x407 and fm2 == 0xfx8a642c3925c and fs3 == 0 and fe3 == 0x7fa and fm3 == 0x7ec9ded4be93f and  fcsr == 0x20 and rm_val == 7   
/* opcode: fmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f8297b073ec28bf; op2val:0x407fx8a642c3925c;
op3val:0x7fa7ec9ded4be93f; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fmadd.d, x31, x30, x29, x28, dyn, 32, 0, x3, 450*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x40521d08b2b77735634798889712973621,64,FLEN)
NAN_BOXED(0x7febe28c340570cd217710154139922637,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x40521d08b2b77735634798889712973621,64,FLEN)
NAN_BOXED(0x7febe28c340570cd217710154139922637,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x7febe28c340570cd217710154139922637,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x7febe28c340570cd217710154139922637,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0xc06c87d5180d6de73865606702068231655,64,FLEN)
NAN_BOXED(0x7fe5b1a32ad4a90d215967526839953677,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0xc06c87d5180d6de73865606702068231655,64,FLEN)
NAN_BOXED(0xc06c87d5180d6de73865606702068231655,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0xc06c87d5180d6de73865606702068231655,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0xc06c87d5180d6de73865606702068231655,64,FLEN)
NAN_BOXED(0x7fe5b1a32ad4a90d215967526839953677,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0xc06c87d5180d6de73865606702068231655,64,FLEN)
NAN_BOXED(0xc06c87d5180d6de73865606702068231655,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x407fx8a642c3925c647706733438014044,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x407fx8a642c3925c647706733438014044,64,FLEN)
NAN_BOXED(0x7fa7ec9ded4be93f198580926962723135,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x407fx8a642c3925c647706733438014044,64,FLEN)
NAN_BOXED(0x7fa7ec9ded4be93f198580926962723135,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x407fx8a642c3925c647706733438014044,64,FLEN)
NAN_BOXED(0x7fa7ec9ded4be93f198580926962723135,64,FLEN)
NAN_BOXED(0x7x8adb9cbb2edaff190399455804709631,64,FLEN)
NAN_BOXED(0x404ddd0bd50d5455633602634522907733,64,FLEN)
NAN_BOXED(0x7fcbbdcd5687c963208662552706795875,64,FLEN)
NAN_BOXED(0x7x8adb9cbb2edaff190399455804709631,64,FLEN)
NAN_BOXED(0x404ddd0bd50d5455633602634522907733,64,FLEN)
NAN_BOXED(0x7fcbbdcd5687c963208662552706795875,64,FLEN)
NAN_BOXED(0x7x8adb9cbb2edaff190399455804709631,64,FLEN)
NAN_BOXED(0x404ddd0bd50d5455633602634522907733,64,FLEN)
NAN_BOXED(0x7fcbbdcd5687c963208662552706795875,64,FLEN)
NAN_BOXED(0x7x8adb9cbb2edaff190399455804709631,64,FLEN)
NAN_BOXED(0x404ddd0bd50d5455633602634522907733,64,FLEN)
NAN_BOXED(0x7fcbbdcd5687c963208662552706795875,64,FLEN)
NAN_BOXED(0x7x8adb9cbb2edaff190399455804709631,64,FLEN)
NAN_BOXED(0x404ddd0bd50d5455633602634522907733,64,FLEN)
NAN_BOXED(0x7fcbbdcd5687c963208662552706795875,64,FLEN)
NAN_BOXED(0x7f92804bc647cadf192550852354099935,64,FLEN)
NAN_BOXED(0x40190d9b84a2ad4d618737854441499981,64,FLEN)
NAN_BOXED(0x7fe93526x5ace10b216956553837207819,64,FLEN)
NAN_BOXED(0x7f92804bc647cadf192550852354099935,64,FLEN)
NAN_BOXED(0x40190d9b84a2ad4d618737854441499981,64,FLEN)
NAN_BOXED(0x7fe93526x5ace10b216956553837207819,64,FLEN)
NAN_BOXED(0x7f92804bc647cadf192550852354099935,64,FLEN)
NAN_BOXED(0x40190d9b84a2ad4d618737854441499981,64,FLEN)
NAN_BOXED(0x7fe93526x5ace10b216956553837207819,64,FLEN)
NAN_BOXED(0x7f92804bc647cadf192550852354099935,64,FLEN)
NAN_BOXED(0x40190d9b84a2ad4d618737854441499981,64,FLEN)
NAN_BOXED(0x7fe93526x5ace10b216956553837207819,64,FLEN)
NAN_BOXED(0x7f92804bc647cadf192550852354099935,64,FLEN)
NAN_BOXED(0x40190d9b84a2ad4d618737854441499981,64,FLEN)
NAN_BOXED(0x7fe93526x5ace10b216956553837207819,64,FLEN)
NAN_BOXED(0x7fc2a65c343892db206103503242040027,64,FLEN)
NAN_BOXED(0xbfee9917808601d03830159831920935376,64,FLEN)
NAN_BOXED(0x7fb0acfx0a9e8d47201044250112724295,64,FLEN)
NAN_BOXED(0x7fc2a65c343892db206103503242040027,64,FLEN)
NAN_BOXED(0xbfee9917808601d03830159831920935376,64,FLEN)
NAN_BOXED(0x7fb0acfx0a9e8d47201044250112724295,64,FLEN)
NAN_BOXED(0x7fc2a65c343892db206103503242040027,64,FLEN)
NAN_BOXED(0xbfee9917808601d03830159831920935376,64,FLEN)
NAN_BOXED(0x7fb0acfx0a9e8d47201044250112724295,64,FLEN)
NAN_BOXED(0x7fc2a65c343892db206103503242040027,64,FLEN)
NAN_BOXED(0xbfee9917808601d03830159831920935376,64,FLEN)
NAN_BOXED(0x7fb0acfx0a9e8d47201044250112724295,64,FLEN)
NAN_BOXED(0x7fc2a65c343892db206103503242040027,64,FLEN)
NAN_BOXED(0xbfee9917808601d03830159831920935376,64,FLEN)
NAN_BOXED(0x7fb0acfx0a9e8d47201044250112724295,64,FLEN)
NAN_BOXED(0x7fc7285ea9faba7f207372350226086527,64,FLEN)
NAN_BOXED(0xc032e8909705103d3849387511824322621,64,FLEN)
NAN_BOXED(0x7fee90d56fd14cc8218464733652405448,64,FLEN)
NAN_BOXED(0x7fc7285ea9faba7f207372350226086527,64,FLEN)
NAN_BOXED(0xc032e8909705103d3849387511824322621,64,FLEN)
NAN_BOXED(0x7fee90d56fd14cc8218464733652405448,64,FLEN)
NAN_BOXED(0x7fc7285ea9faba7f207372350226086527,64,FLEN)
NAN_BOXED(0xc032e8909705103d3849387511824322621,64,FLEN)
NAN_BOXED(0x7fee90d56fd14cc8218464733652405448,64,FLEN)
NAN_BOXED(0x7fc7285ea9faba7f207372350226086527,64,FLEN)
NAN_BOXED(0xc032e8909705103d3849387511824322621,64,FLEN)
NAN_BOXED(0x7fee90d56fd14cc8218464733652405448,64,FLEN)
NAN_BOXED(0x7fc7285ea9faba7f207372350226086527,64,FLEN)
NAN_BOXED(0xc032e8909705103d3849387511824322621,64,FLEN)
NAN_BOXED(0x7fee90d56fd14cc8218464733652405448,64,FLEN)
NAN_BOXED(0x7fca363712e81d63208231998280703331,64,FLEN)
NAN_BOXED(0x3fd272646c589bef598863945138740207,64,FLEN)
NAN_BOXED(0x7fee1c79b3dfcd57218336796308393303,64,FLEN)
NAN_BOXED(0x7fca363712e81d63208231998280703331,64,FLEN)
NAN_BOXED(0x3fd272646c589bef598863945138740207,64,FLEN)
NAN_BOXED(0x7fee1c79b3dfcd57218336796308393303,64,FLEN)
NAN_BOXED(0x7fca363712e81d63208231998280703331,64,FLEN)
NAN_BOXED(0x3fd272646c589bef598863945138740207,64,FLEN)
NAN_BOXED(0x7fee1c79b3dfcd57218336796308393303,64,FLEN)
NAN_BOXED(0x7fca363712e81d63208231998280703331,64,FLEN)
NAN_BOXED(0x3fd272646c589bef598863945138740207,64,FLEN)
NAN_BOXED(0x7fee1c79b3dfcd57218336796308393303,64,FLEN)
NAN_BOXED(0x7fca363712e81d63208231998280703331,64,FLEN)
NAN_BOXED(0x3fd272646c589bef598863945138740207,64,FLEN)
NAN_BOXED(0x7fee1c79b3dfcd57218336796308393303,64,FLEN)
NAN_BOXED(0x7fcacf777c60a3c7208400500207166407,64,FLEN)
NAN_BOXED(0x400dx6c8944627b9615616534466144185,64,FLEN)
NAN_BOXED(0x7fcb94e30x5cae37208617566025330231,64,FLEN)
NAN_BOXED(0x7fcacf777c60a3c7208400500207166407,64,FLEN)
NAN_BOXED(0x400dx6c8944627b9615616534466144185,64,FLEN)
NAN_BOXED(0x7fcb94e30x5cae37208617566025330231,64,FLEN)
NAN_BOXED(0x7fcacf777c60a3c7208400500207166407,64,FLEN)
NAN_BOXED(0x400dx6c8944627b9615616534466144185,64,FLEN)
NAN_BOXED(0x7fcb94e30x5cae37208617566025330231,64,FLEN)
NAN_BOXED(0x7fcacf777c60a3c7208400500207166407,64,FLEN)
NAN_BOXED(0x400dx6c8944627b9615616534466144185,64,FLEN)
NAN_BOXED(0x7fcb94e30x5cae37208617566025330231,64,FLEN)
NAN_BOXED(0x7fcacf777c60a3c7208400500207166407,64,FLEN)
NAN_BOXED(0x400dx6c8944627b9615616534466144185,64,FLEN)
NAN_BOXED(0x7fcb94e30x5cae37208617566025330231,64,FLEN)
NAN_BOXED(0x7fd1e30a0174e413210392345062990867,64,FLEN)
NAN_BOXED(0x3fd3280e91a916a6599063687513839270,64,FLEN)
NAN_BOXED(0x7fed52b387784731218114943322703665,64,FLEN)
NAN_BOXED(0x7fd1e30a0174e413210392345062990867,64,FLEN)
NAN_BOXED(0x3fd3280e91a916a6599063687513839270,64,FLEN)
NAN_BOXED(0x7fed52b387784731218114943322703665,64,FLEN)
NAN_BOXED(0x7fd1e30a0174e413210392345062990867,64,FLEN)
NAN_BOXED(0x3fd3280e91a916a6599063687513839270,64,FLEN)
NAN_BOXED(0x7fed52b387784731218114943322703665,64,FLEN)
NAN_BOXED(0x7fd1e30a0174e413210392345062990867,64,FLEN)
NAN_BOXED(0x3fd3280e91a916a6599063687513839270,64,FLEN)
NAN_BOXED(0x7fed52b387784731218114943322703665,64,FLEN)
NAN_BOXED(0x7fd1e30a0174e413210392345062990867,64,FLEN)
NAN_BOXED(0x3fd3280e91a916a6599063687513839270,64,FLEN)
NAN_BOXED(0x7fed52b387784731218114943322703665,64,FLEN)
NAN_BOXED(0x7fd283x9d2825ba3210569296927939491,64,FLEN)
NAN_BOXED(0x3fc10b2cf635997b593965382631790971,64,FLEN)
NAN_BOXED(0x7feec46d7ccba9a3218521461798185379,64,FLEN)
NAN_BOXED(0x7fd283x9d2825ba3210569296927939491,64,FLEN)
NAN_BOXED(0x3fc10b2cf635997b593965382631790971,64,FLEN)
NAN_BOXED(0x7feec46d7ccba9a3218521461798185379,64,FLEN)
NAN_BOXED(0x7fd283x9d2825ba3210569296927939491,64,FLEN)
NAN_BOXED(0x3fc10b2cf635997b593965382631790971,64,FLEN)
NAN_BOXED(0x7feec46d7ccba9a3218521461798185379,64,FLEN)
NAN_BOXED(0x7fd283x9d2825ba3210569296927939491,64,FLEN)
NAN_BOXED(0x3fc10b2cf635997b593965382631790971,64,FLEN)
NAN_BOXED(0x7feec46d7ccba9a3218521461798185379,64,FLEN)
NAN_BOXED(0x7fd283x9d2825ba3210569296927939491,64,FLEN)
NAN_BOXED(0x3fc10b2cf635997b593965382631790971,64,FLEN)
NAN_BOXED(0x7feec46d7ccba9a3218521461798185379,64,FLEN)
NAN_BOXED(0x7fd34977ae8a092b210786441281014059,64,FLEN)
NAN_BOXED(0xbffbcc84701e68b63833875549587400886,64,FLEN)
NAN_BOXED(0x7fe34cad56583569215293569891841385,64,FLEN)
NAN_BOXED(0x7fd34977ae8a092b210786441281014059,64,FLEN)
NAN_BOXED(0xbffbcc84701e68b63833875549587400886,64,FLEN)
NAN_BOXED(0x7fe34cad56583569215293569891841385,64,FLEN)
NAN_BOXED(0x7fd34977ae8a092b210786441281014059,64,FLEN)
NAN_BOXED(0xbffbcc84701e68b63833875549587400886,64,FLEN)
NAN_BOXED(0x7fe34cad56583569215293569891841385,64,FLEN)
NAN_BOXED(0x7fd34977ae8a092b210786441281014059,64,FLEN)
NAN_BOXED(0xbffbcc84701e68b63833875549587400886,64,FLEN)
NAN_BOXED(0x7fe34cad56583569215293569891841385,64,FLEN)
NAN_BOXED(0x7fd34977ae8a092b210786441281014059,64,FLEN)
NAN_BOXED(0xbffbcc84701e68b63833875549587400886,64,FLEN)
NAN_BOXED(0x7fe34cad56583569215293569891841385,64,FLEN)
NAN_BOXED(0x7fd435f4497a6a63211046461200558691,64,FLEN)
NAN_BOXED(0xbfe35x0bec2723e13826999785768821729,64,FLEN)
NAN_BOXED(0x7fdecc4833c7c22d214026498125054509,64,FLEN)
NAN_BOXED(0x7fd435f4497a6a63211046461200558691,64,FLEN)
NAN_BOXED(0xbfe35x0bec2723e13826999785768821729,64,FLEN)
NAN_BOXED(0x7fdecc4833c7c22d214026498125054509,64,FLEN)
NAN_BOXED(0x7fd435f4497a6a63211046461200558691,64,FLEN)
NAN_BOXED(0xbfe35x0bec2723e13826999785768821729,64,FLEN)
NAN_BOXED(0x7fdecc4833c7c22d214026498125054509,64,FLEN)
NAN_BOXED(0x7fd435f4497a6a63211046461200558691,64,FLEN)
NAN_BOXED(0xbfe35x0bec2723e13826999785768821729,64,FLEN)
NAN_BOXED(0x7fdecc4833c7c22d214026498125054509,64,FLEN)
NAN_BOXED(0x7fd435f4497a6a63211046461200558691,64,FLEN)
NAN_BOXED(0xbfe35x0bec2723e13826999785768821729,64,FLEN)
NAN_BOXED(0x7fdecc4833c7c22d214026498125054509,64,FLEN)
NAN_BOXED(0x7fd5a01a288736c5211444647065761477,64,FLEN)
NAN_BOXED(0xbfe658d473310be93827837375376591849,64,FLEN)
NAN_BOXED(0x7fd3d659cad7c271210941344046367345,64,FLEN)
NAN_BOXED(0x7fd5a01a288736c5211444647065761477,64,FLEN)
NAN_BOXED(0xbfe658d473310be93827837375376591849,64,FLEN)
NAN_BOXED(0x7fd3d659cad7c271210941344046367345,64,FLEN)
NAN_BOXED(0x7fd5a01a288736c5211444647065761477,64,FLEN)
NAN_BOXED(0xbfe658d473310be93827837375376591849,64,FLEN)
NAN_BOXED(0x7fd3d659cad7c271210941344046367345,64,FLEN)
NAN_BOXED(0x7fd5a01a288736c5211444647065761477,64,FLEN)
NAN_BOXED(0xbfe658d473310be93827837375376591849,64,FLEN)
NAN_BOXED(0x7fd3d659cad7c271210941344046367345,64,FLEN)
NAN_BOXED(0x7fd5a01a288736c5211444647065761477,64,FLEN)
NAN_BOXED(0xbfe658d473310be93827837375376591849,64,FLEN)
NAN_BOXED(0x7fd3d659cad7c271210941344046367345,64,FLEN)
NAN_BOXED(0x7fd71dbc6351ba9b211864257766996635,64,FLEN)
NAN_BOXED(0xbfd25e6811887cb13822214007417240753,64,FLEN)
NAN_BOXED(0x7fc53e0c4ef901b7206833235814318519,64,FLEN)
NAN_BOXED(0x7fd71dbc6351ba9b211864257766996635,64,FLEN)
NAN_BOXED(0xbfd25e6811887cb13822214007417240753,64,FLEN)
NAN_BOXED(0x7fc53e0c4ef901b7206833235814318519,64,FLEN)
NAN_BOXED(0x7fd71dbc6351ba9b211864257766996635,64,FLEN)
NAN_BOXED(0xbfd25e6811887cb13822214007417240753,64,FLEN)
NAN_BOXED(0x7fc53e0c4ef901b7206833235814318519,64,FLEN)
NAN_BOXED(0x7fd71dbc6351ba9b211864257766996635,64,FLEN)
NAN_BOXED(0xbfd25e6811887cb13822214007417240753,64,FLEN)
NAN_BOXED(0x7fc53e0c4ef901b7206833235814318519,64,FLEN)
NAN_BOXED(0x7fd71dbc6351ba9b211864257766996635,64,FLEN)
NAN_BOXED(0xbfd25e6811887cb13822214007417240753,64,FLEN)
NAN_BOXED(0x7fc53e0c4ef901b7206833235814318519,64,FLEN)
NAN_BOXED(0x7fd76f910302cbdd211954231421094877,64,FLEN)
NAN_BOXED(0xc012af7840cd0fd63840317535881072598,64,FLEN)
NAN_BOXED(0x7fe28339eb5d6c77215072072338599031,64,FLEN)
NAN_BOXED(0x7fd76f910302cbdd211954231421094877,64,FLEN)
NAN_BOXED(0xc012af7840cd0fd63840317535881072598,64,FLEN)
NAN_BOXED(0x7fe28339eb5d6c77215072072338599031,64,FLEN)
NAN_BOXED(0x7fd76f910302cbdd211954231421094877,64,FLEN)
NAN_BOXED(0xc012af7840cd0fd63840317535881072598,64,FLEN)
NAN_BOXED(0x7fe28339eb5d6c77215072072338599031,64,FLEN)
NAN_BOXED(0x7fd76f910302cbdd211954231421094877,64,FLEN)
NAN_BOXED(0xc012af7840cd0fd63840317535881072598,64,FLEN)
NAN_BOXED(0x7fe28339eb5d6c77215072072338599031,64,FLEN)
NAN_BOXED(0x7fd76f910302cbdd211954231421094877,64,FLEN)
NAN_BOXED(0xc012af7840cd0fd63840317535881072598,64,FLEN)
NAN_BOXED(0x7fe28339eb5d6c77215072072338599031,64,FLEN)
NAN_BOXED(0x7fe1415193812551214718131199616337,64,FLEN)
NAN_BOXED(0x3fe31e7826018085603556745485320325,64,FLEN)
NAN_BOXED(0x7fe5b0c98a80bf69215966592142196585,64,FLEN)
NAN_BOXED(0x7fe1415193812551214718131199616337,64,FLEN)
NAN_BOXED(0x3fe31e7826018085603556745485320325,64,FLEN)
NAN_BOXED(0x7fe5b0c98a80bf69215966592142196585,64,FLEN)
NAN_BOXED(0x7fe1415193812551214718131199616337,64,FLEN)
NAN_BOXED(0x3fe31e7826018085603556745485320325,64,FLEN)
NAN_BOXED(0x7fe5b0c98a80bf69215966592142196585,64,FLEN)
NAN_BOXED(0x7fe1415193812551214718131199616337,64,FLEN)
NAN_BOXED(0x3fe31e7826018085603556745485320325,64,FLEN)
NAN_BOXED(0x7fe5b0c98a80bf69215966592142196585,64,FLEN)
NAN_BOXED(0x7fe1415193812551214718131199616337,64,FLEN)
NAN_BOXED(0x3fe31e7826018085603556745485320325,64,FLEN)
NAN_BOXED(0x7fe5b0c98a80bf69215966592142196585,64,FLEN)
NAN_BOXED(0x7fe1667d2c686bf9214759000378731513,64,FLEN)
NAN_BOXED(0x3fe912c42162d7e8605232727546058728,64,FLEN)
NAN_BOXED(0x7fe25db9e8ff508c215030840612835468,64,FLEN)
NAN_BOXED(0x7fe1667d2c686bf9214759000378731513,64,FLEN)
NAN_BOXED(0x3fe912c42162d7e8605232727546058728,64,FLEN)
NAN_BOXED(0x7fe25db9e8ff508c215030840612835468,64,FLEN)
NAN_BOXED(0x7fe1667d2c686bf9214759000378731513,64,FLEN)
NAN_BOXED(0x3fe912c42162d7e8605232727546058728,64,FLEN)
NAN_BOXED(0x7fe25db9e8ff508c215030840612835468,64,FLEN)
NAN_BOXED(0x7fe1667d2c686bf9214759000378731513,64,FLEN)
NAN_BOXED(0x3fe912c42162d7e8605232727546058728,64,FLEN)
NAN_BOXED(0x7fe25db9e8ff508c215030840612835468,64,FLEN)
NAN_BOXED(0x7fe1667d2c686bf9214759000378731513,64,FLEN)
NAN_BOXED(0x3fe912c42162d7e8605232727546058728,64,FLEN)
NAN_BOXED(0x7fe25db9e8ff508c215030840612835468,64,FLEN)
NAN_BOXED(0x7fe3c22bc9c78300215422755854844672,64,FLEN)
NAN_BOXED(0x3fx6a139015a7821609048534868195361,64,FLEN)
NAN_BOXED(0x7fc037ae321da893205418859649935507,64,FLEN)
NAN_BOXED(0x7fe3c22bc9c78300215422755854844672,64,FLEN)
NAN_BOXED(0x3fx6a139015a7821609048534868195361,64,FLEN)
NAN_BOXED(0x7fc037ae321da893205418859649935507,64,FLEN)
NAN_BOXED(0x7fe3c22bc9c78300215422755854844672,64,FLEN)
NAN_BOXED(0x3fx6a139015a7821609048534868195361,64,FLEN)
NAN_BOXED(0x7fc037ae321da893205418859649935507,64,FLEN)
NAN_BOXED(0x7fe3c22bc9c78300215422755854844672,64,FLEN)
NAN_BOXED(0x3fx6a139015a7821609048534868195361,64,FLEN)
NAN_BOXED(0x7fc037ae321da893205418859649935507,64,FLEN)
NAN_BOXED(0x7fe3c22bc9c78300215422755854844672,64,FLEN)
NAN_BOXED(0x3fx6a139015a7821609048534868195361,64,FLEN)
NAN_BOXED(0x7fc037ae321da893205418859649935507,64,FLEN)
NAN_BOXED(0x7fe619bd20c99aa7216081987549895335,64,FLEN)
NAN_BOXED(0x3fa8c98532405521587137794387760417,64,FLEN)
NAN_BOXED(0x7feeee1847dc4239218567275326227001,64,FLEN)
NAN_BOXED(0x7fe619bd20c99aa7216081987549895335,64,FLEN)
NAN_BOXED(0x3fa8c98532405521587137794387760417,64,FLEN)
NAN_BOXED(0x7feeee1847dc4239218567275326227001,64,FLEN)
NAN_BOXED(0x7fe619bd20c99aa7216081987549895335,64,FLEN)
NAN_BOXED(0x3fa8c98532405521587137794387760417,64,FLEN)
NAN_BOXED(0x7feeee1847dc4239218567275326227001,64,FLEN)
NAN_BOXED(0x7fe619bd20c99aa7216081987549895335,64,FLEN)
NAN_BOXED(0x3fa8c98532405521587137794387760417,64,FLEN)
NAN_BOXED(0x7feeee1847dc4239218567275326227001,64,FLEN)
NAN_BOXED(0x7fe619bd20c99aa7216081987549895335,64,FLEN)
NAN_BOXED(0x3fa8c98532405521587137794387760417,64,FLEN)
NAN_BOXED(0x7feeee1847dc4239218567275326227001,64,FLEN)
NAN_BOXED(0x7fe68ca648b458d1216208333272537297,64,FLEN)
NAN_BOXED(0xbfe7bba9ce426aa53828227518848723621,64,FLEN)
NAN_BOXED(0x7fad2x39d065486f200061539143731311,64,FLEN)
NAN_BOXED(0x7fe68ca648b458d1216208333272537297,64,FLEN)
NAN_BOXED(0xbfe7bba9ce426aa53828227518848723621,64,FLEN)
NAN_BOXED(0x7fad2x39d065486f200061539143731311,64,FLEN)
NAN_BOXED(0x7fe68ca648b458d1216208333272537297,64,FLEN)
NAN_BOXED(0xbfe7bba9ce426aa53828227518848723621,64,FLEN)
NAN_BOXED(0x7fad2x39d065486f200061539143731311,64,FLEN)
NAN_BOXED(0x7fe68ca648b458d1216208333272537297,64,FLEN)
NAN_BOXED(0xbfe7bba9ce426aa53828227518848723621,64,FLEN)
NAN_BOXED(0x7fad2x39d065486f200061539143731311,64,FLEN)
NAN_BOXED(0x7fe68ca648b458d1216208333272537297,64,FLEN)
NAN_BOXED(0xbfe7bba9ce426aa53828227518848723621,64,FLEN)
NAN_BOXED(0x7fad2x39d065486f200061539143731311,64,FLEN)
NAN_BOXED(0x7fe7fe52216e3a3d216614791138654781,64,FLEN)
NAN_BOXED(0xbfffe0ac40de451e3835023610732758302,64,FLEN)
NAN_BOXED(0x7feb0943a59dff43217471248489905987,64,FLEN)
NAN_BOXED(0x7fe7fe52216e3a3d216614791138654781,64,FLEN)
NAN_BOXED(0xbfffe0ac40de451e3835023610732758302,64,FLEN)
NAN_BOXED(0x7feb0943a59dff43217471248489905987,64,FLEN)
NAN_BOXED(0x7fe7fe52216e3a3d216614791138654781,64,FLEN)
NAN_BOXED(0xbfffe0ac40de451e3835023610732758302,64,FLEN)
NAN_BOXED(0x7feb0943a59dff43217471248489905987,64,FLEN)
NAN_BOXED(0x7fe7fe52216e3a3d216614791138654781,64,FLEN)
NAN_BOXED(0xbfffe0ac40de451e3835023610732758302,64,FLEN)
NAN_BOXED(0x7feb0943a59dff43217471248489905987,64,FLEN)
NAN_BOXED(0x7fe7fe52216e3a3d216614791138654781,64,FLEN)
NAN_BOXED(0xbfffe0ac40de451e3835023610732758302,64,FLEN)
NAN_BOXED(0x7feb0943a59dff43217471248489905987,64,FLEN)
NAN_BOXED(0x7fe880d2a98ec8a6216758279689914534,64,FLEN)
NAN_BOXED(0x3fx18x6cbc59783a607621590955948090,64,FLEN)
NAN_BOXED(0x7fc46de92c30d8b3206604386488342707,64,FLEN)
NAN_BOXED(0x7fe880d2a98ec8a6216758279689914534,64,FLEN)
NAN_BOXED(0x3fx18x6cbc59783a607621590955948090,64,FLEN)
NAN_BOXED(0x7fc46de92c30d8b3206604386488342707,64,FLEN)
NAN_BOXED(0x7fe880d2a98ec8a6216758279689914534,64,FLEN)
NAN_BOXED(0x3fx18x6cbc59783a607621590955948090,64,FLEN)
NAN_BOXED(0x7fc46de92c30d8b3206604386488342707,64,FLEN)
NAN_BOXED(0x7fe880d2a98ec8a6216758279689914534,64,FLEN)
NAN_BOXED(0x3fx18x6cbc59783a607621590955948090,64,FLEN)
NAN_BOXED(0x7fc46de92c30d8b3206604386488342707,64,FLEN)
NAN_BOXED(0x7fe880d2a98ec8a6216758279689914534,64,FLEN)
NAN_BOXED(0x3fx18x6cbc59783a607621590955948090,64,FLEN)
NAN_BOXED(0x7fc46de92c30d8b3206604386488342707,64,FLEN)
NAN_BOXED(0x7fe9823a6849a878217041299759802488,64,FLEN)
NAN_BOXED(0x3ff1494ae586f255607544479803961941,64,FLEN)
NAN_BOXED(0x7fc1c32179e3068f205853661868263055,64,FLEN)
NAN_BOXED(0x7fe9823a6849a878217041299759802488,64,FLEN)
NAN_BOXED(0x3ff1494ae586f255607544479803961941,64,FLEN)
NAN_BOXED(0x7fc1c32179e3068f205853661868263055,64,FLEN)
NAN_BOXED(0x7fe9823a6849a878217041299759802488,64,FLEN)
NAN_BOXED(0x3ff1494ae586f255607544479803961941,64,FLEN)
NAN_BOXED(0x7fc1c32179e3068f205853661868263055,64,FLEN)
NAN_BOXED(0x7fe9823a6849a878217041299759802488,64,FLEN)
NAN_BOXED(0x3ff1494ae586f255607544479803961941,64,FLEN)
NAN_BOXED(0x7fc1c32179e3068f205853661868263055,64,FLEN)
NAN_BOXED(0x7fe9823a6849a878217041299759802488,64,FLEN)
NAN_BOXED(0x3ff1494ae586f255607544479803961941,64,FLEN)
NAN_BOXED(0x7fc1c32179e3068f205853661868263055,64,FLEN)
NAN_BOXED(0x7fea314cd13968e7217233793364617447,64,FLEN)
NAN_BOXED(0xbfe6668ceb51c07e3827852461317144702,64,FLEN)
NAN_BOXED(0x7fdec4877592448b214017973718762635,64,FLEN)
NAN_BOXED(0x7fea314cd13968e7217233793364617447,64,FLEN)
NAN_BOXED(0xbfe6668ceb51c07e3827852461317144702,64,FLEN)
NAN_BOXED(0x7fdec4877592448b214017973718762635,64,FLEN)
NAN_BOXED(0x7fea314cd13968e7217233793364617447,64,FLEN)
NAN_BOXED(0xbfe6668ceb51c07e3827852461317144702,64,FLEN)
NAN_BOXED(0x7fdec4877592448b214017973718762635,64,FLEN)
NAN_BOXED(0x7fea314cd13968e7217233793364617447,64,FLEN)
NAN_BOXED(0xbfe6668ceb51c07e3827852461317144702,64,FLEN)
NAN_BOXED(0x7fdec4877592448b214017973718762635,64,FLEN)
NAN_BOXED(0x7fea314cd13968e7217233793364617447,64,FLEN)
NAN_BOXED(0xbfe6668ceb51c07e3827852461317144702,64,FLEN)
NAN_BOXED(0x7fdec4877592448b214017973718762635,64,FLEN)
NAN_BOXED(0x7fec998825886bbc217911347344862140,64,FLEN)
NAN_BOXED(0x3fe91b45c5ab1967605242080446060903,64,FLEN)
NAN_BOXED(0x7fd31x5b782c2cff210740140621442303,64,FLEN)
NAN_BOXED(0x7fec998825886bbc217911347344862140,64,FLEN)
NAN_BOXED(0x3fe91b45c5ab1967605242080446060903,64,FLEN)
NAN_BOXED(0x7fd31x5b782c2cff210740140621442303,64,FLEN)
NAN_BOXED(0x7fec998825886bbc217911347344862140,64,FLEN)
NAN_BOXED(0x3fe91b45c5ab1967605242080446060903,64,FLEN)
NAN_BOXED(0x7fd31x5b782c2cff210740140621442303,64,FLEN)
NAN_BOXED(0x7fec998825886bbc217911347344862140,64,FLEN)
NAN_BOXED(0x3fe91b45c5ab1967605242080446060903,64,FLEN)
NAN_BOXED(0x7fd31x5b782c2cff210740140621442303,64,FLEN)
NAN_BOXED(0x7fec998825886bbc217911347344862140,64,FLEN)
NAN_BOXED(0x3fe91b45c5ab1967605242080446060903,64,FLEN)
NAN_BOXED(0x7fd31x5b782c2cff210740140621442303,64,FLEN)
NAN_BOXED(0x7fef3403ffc18c4e218644154031115342,64,FLEN)
NAN_BOXED(0x3fee353964a8812d606677989464768813,64,FLEN)
NAN_BOXED(0x7f976a11f9800e5f193933789733064287,64,FLEN)
NAN_BOXED(0x7fef3403ffc18c4e218644154031115342,64,FLEN)
NAN_BOXED(0x3fee353964a8812d606677989464768813,64,FLEN)
NAN_BOXED(0x7f976a11f9800e5f193933789733064287,64,FLEN)
NAN_BOXED(0x7fef3403ffc18c4e218644154031115342,64,FLEN)
NAN_BOXED(0x3fee353964a8812d606677989464768813,64,FLEN)
NAN_BOXED(0x7f976a11f9800e5f193933789733064287,64,FLEN)
NAN_BOXED(0x7fef3403ffc18c4e218644154031115342,64,FLEN)
NAN_BOXED(0x3fee353964a8812d606677989464768813,64,FLEN)
NAN_BOXED(0x7f976a11f9800e5f193933789733064287,64,FLEN)
NAN_BOXED(0x7fef3403ffc18c4e218644154031115342,64,FLEN)
NAN_BOXED(0x3fee353964a8812d606677989464768813,64,FLEN)
NAN_BOXED(0x7f976a11f9800e5f193933789733064287,64,FLEN)
NAN_BOXED(0x7fex6ffe64a9d644218710100651923012,64,FLEN)
NAN_BOXED(0x3fc09fc0x75fdd31593847271050698033,64,FLEN)
NAN_BOXED(0x7febeac3b0aa7ae7217719188547336935,64,FLEN)
NAN_BOXED(0x7fex6ffe64a9d644218710100651923012,64,FLEN)
NAN_BOXED(0x3fc09fc0x75fdd31593847271050698033,64,FLEN)
NAN_BOXED(0x7febeac3b0aa7ae7217719188547336935,64,FLEN)
NAN_BOXED(0x7fex6ffe64a9d644218710100651923012,64,FLEN)
NAN_BOXED(0x3fc09fc0x75fdd31593847271050698033,64,FLEN)
NAN_BOXED(0x7febeac3b0aa7ae7217719188547336935,64,FLEN)
NAN_BOXED(0x7fex6ffe64a9d644218710100651923012,64,FLEN)
NAN_BOXED(0x3fc09fc0x75fdd31593847271050698033,64,FLEN)
NAN_BOXED(0x7febeac3b0aa7ae7217719188547336935,64,FLEN)
NAN_BOXED(0x7fex6ffe64a9d644218710100651923012,64,FLEN)
NAN_BOXED(0x3fc09fc0x75fdd31593847271050698033,64,FLEN)
NAN_BOXED(0x7febeac3b0aa7ae7217719188547336935,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x40521d08b2b77735634798889712973621,64,FLEN)
NAN_BOXED(0x7febe28c340570cd217710154139922637,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x40521d08b2b77735634798889712973621,64,FLEN)
NAN_BOXED(0x7febe28c340570cd217710154139922637,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x40521d08b2b77735634798889712973621,64,FLEN)
NAN_BOXED(0x7febe28c340570cd217710154139922637,64,FLEN)
NAN_BOXED(0x7x5d144fc758c3ff177513948530394111,64,FLEN)
NAN_BOXED(0x40521d08b2b77735634798889712973621,64,FLEN)
NAN_BOXED(0x7febe28c340570cd217710154139922637,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0xc06c87d5180d6de73865606702068231655,64,FLEN)
NAN_BOXED(0x7fe5b1a32ad4a90d215967526839953677,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0xc06c87d5180d6de73865606702068231655,64,FLEN)
NAN_BOXED(0x7fe5b1a32ad4a90d215967526839953677,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0xc06c87d5180d6de73865606702068231655,64,FLEN)
NAN_BOXED(0x7fe5b1a32ad4a90d215967526839953677,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0xc06c87d5180d6de73865606702068231655,64,FLEN)
NAN_BOXED(0x7fe5b1a32ad4a90d215967526839953677,64,FLEN)
NAN_BOXED(0x7x6bb6ea62484dff181633383112396287,64,FLEN)
NAN_BOXED(0xc06c87d5180d6de73865606702068231655,64,FLEN)
NAN_BOXED(0x7fe5b1a32ad4a90d215967526839953677,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x407fx8a642c3925c647706733438014044,64,FLEN)
NAN_BOXED(0x7fa7ec9ded4be93f198580926962723135,64,FLEN)
NAN_BOXED(0x7f8297b073ec28bf188072973904128191,64,FLEN)
NAN_BOXED(0x407fx8a642c3925c647706733438014044,64,FLEN)
NAN_BOXED(0x7fa7ec9ded4be93f198580926962723135,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 46*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
