
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b17 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b17)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x15, rs2==x15, rs3==x14, rd==x21,fs1 == 0 and fe1 == 0x5x2 and fm1 == 0x8e1a79x69deff and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xf112c2c43eca3 and fs3 == 1 and fe3 == 0x7ed and fm3 == 0x827x49c2cd268 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x15; op2:x15; op3:x14; dest:x21; op1val:0x5x28e1a79x69deff; op2val:0x5x28e1a79x69deff;
op3val:0xfed827x49c2cd268; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x21, x15, x15, x14, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x1, rs2==x27, rs3==x1, rd==x16,fs1 == 0 and fe1 == 0x5x5 and fm1 == 0x0197267f1985f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xce41f387adc6f and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xd12123e525707 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x1; op2:x27; op3:x1; dest:x16; op1val:0x5f50197267f1985f; op2val:0x5x9ce41f387adc6f;
op3val:0x5f50197267f1985f; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x16, x1, x27, x1, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rs3 == rd, rs1==x11, rs2==x11, rs3==x11, rd==x11,fs1 == 0 and fe1 == 0x5x5 and fm1 == 0x3832e6fea9a3f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5ee10a5a625fc and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xabe8092d68a4a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x11; op2:x11; op3:x11; dest:x11; op1val:0x5f53832e6fea9a3f; op2val:0x5f53832e6fea9a3f;
op3val:0x5f53832e6fea9a3f; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x11, x11, x11, x11, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd == rs3 != rs2, rs1==x28, rs2==x23, rs3==x28, rd==x28,fs1 == 0 and fe1 == 0x5x5 and fm1 == 0x5a7002fc1a6bf and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x05d39d105b541 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x625291ea51263 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x28; op2:x23; op3:x28; dest:x28; op1val:0x5x55a7002fc1a6bf; op2val:0x5f905d39d105b541;
op3val:0x5x55a7002fc1a6bf; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x28, x28, x23, x28, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 == rs3 != rd, rs1==x19, rs2==x19, rs3==x19, rd==x22,fs1 == 0 and fe1 == 0x5x5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xdc0d22f746bx5 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xa215cb0ee4435 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x19; op2:x19; op3:x19; dest:x22; op1val:0x5x5c1a812e98063f; op2val:0x5x5c1a812e98063f;
op3val:0x5x5c1a812e98063f; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x22, x19, x19, x19, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x7, rs2==x26, rs3==x8, rd==x26,fs1 == 0 and fe1 == 0x5x5 and fm1 == 0xf59904d0ce0bf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1a7baab01ceb9 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x14be6f22012e3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x7; op2:x26; op3:x8; dest:x26; op1val:0x5x5f59904d0ce0bf; op2val:0x5fa1a7baab01ceb9;
op3val:0xff114be6f22012e3; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x26, x7, x26, x8, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs1 == rs2 == rd != rs3, rs1==x4, rs2==x4, rs3==x16, rd==x4,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x22cfa989fca0f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xa2892d94829ad and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xdb72e7bc3e8x9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x4; op2:x4; op3:x16; dest:x4; op1val:0x5f622cfa989fca0f; op2val:0x5f622cfa989fca0f;
op3val:0xfx0db72e7bc3e8x9; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x4, x4, x4, x16, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x30, rs2==x10, rs3==x10, rd==x12,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x38aee2c19215f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x912bfdfx44ba7 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xe9ffaccdec974 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x10; op3:x10; dest:x12; op1val:0x5f638aee2c19215f; op2val:0x5f8912bfdfx44ba7;
op3val:0x5f8912bfdfx44ba7; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x12, x30, x10, x10, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x22, rs2==x29, rs3==x6, rd==x6,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x7a1efx83x19af and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0xbb68e4e714e57 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x4777496d068c5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x22; op2:x29; op3:x6; dest:x6; op1val:0x5x67a1efx83x19af; op2val:0x5x7bb68e4e714e57;
op3val:0xfef4777496d068c5; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x6, x22, x29, x6, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x24, rs2==x8, rs3==x4, rd==x24,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0xb3756a76d237f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xb8c3b0a05a317 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x76dx56eee6e8f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x24; op2:x8; op3:x4; dest:x24; op1val:0x5x6b3756a76d237f; op2val:0x5x8b8c3b0a05a317;
op3val:0xff076dx56eee6e8f; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x24, x24, x8, x4, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x14, rs2==x16, rs3==x21, rd==x8,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0xe15a564c336ef and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4e4a35c32157e and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x3a47b2e57bc08 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x14; op2:x16; op3:x21; dest:x8; op1val:0x5x6e15a564c336ef; op2val:0x5fa4e4a35c32157e;
op3val:0xfx23a47b2e57bc08; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x8, x14, x16, x21, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rd == rs2 == rs3 != rs1, rs1==x0, rs2==x5, rs3==x5, rd==x5,fs1 == 0 and fe1 == 0x5x6 and fm1 == 0xf959d372fdx5f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x26ffb22d6ee1f and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x232af484e9x31 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x0; op2:x5; op3:x5; dest:x5; op1val:0x5x6f959d372fdx5f; op2val:0x5f826ffb22d6ee1f;
op3val:0x5f826ffb22d6ee1f; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x5, x0, x5, x5, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x27, rs2==x1, rs3==x9, rd==x7,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x11c62x98de3bf and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x60de25d29e92f and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x795e13c25b2cc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x27; op2:x1; op3:x9; dest:x7; op1val:0x5f711c62x98de3bf; op2val:0x5f760de25d29e92f;
op3val:0xfef795e13c25b2cc; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x7, x27, x1, x9, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x31, rs2==x0, rs3==x27, rd==x18,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x2e3db402ba61f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x232f190317157 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x57c7be7ad2ebc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x31; op2:x0; op3:x27; dest:x18; op1val:0x5x72e3db402ba61f; op2val:0x5f9232f190317157;
op3val:0xff157c7be7ad2ebc; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x18, x31, x0, x27, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x12, rs2==x31, rs3==x26, rd==x2,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x34bccd918d207 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xa40b77d5da767 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0xfa9395e54ce7a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x12; op2:x31; op3:x26; dest:x2; op1val:0x5f734bccd918d207; op2val:0x5faa40b77d5da767;
op3val:0xfx2fa9395e54ce7a; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x2, x12, x31, x26, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x29, rs2==x25, rs3==x23, rd==x10,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x5ba2bcb8dc85f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xabc6824ad2440 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x227300ca469b2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x29; op2:x25; op3:x23; dest:x10; op1val:0x5x75ba2bcb8dc85f; op2val:0x5faabc6824ad2440;
op3val:0xff3227300ca469b2; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x10, x29, x25, x23, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x10, rs2==x18, rs3==x7, rd==x23,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x802693539b05f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9ax59x9eb5168 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x34572e32812be and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x10; op2:x18; op3:x7; dest:x23; op1val:0x5f7802693539b05f; op2val:0x5fa9ax59x9eb5168;
op3val:0xff334572e32812be; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x23, x10, x18, x7, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x17, rs2==x12, rs3==x3, rd==x15,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0x97c657c682e1f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xe719a478092fb and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x83f194a9bc9a7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x17; op2:x12; op3:x3; dest:x15; op1val:0x5f797c657c682e1f; op2val:0x5x8e719a478092fb;
op3val:0xff183f194a9bc9a7; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x15, x17, x12, x3, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x16, rs2==x13, rs3==x31, rd==x25,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0xcb0a304fe19bf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x14efx5bx25de3 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0xf0954340ba8d2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x16; op2:x13; op3:x31; dest:x25; op1val:0x5x7cb0a304fe19bf; op2val:0x5fa14efx5bx25de3;
op3val:0xfx2f0954340ba8d2; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x25, x16, x13, x31, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x3, rs2==x30, rs3==x15, rd==x1,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0xdd44967e4x77f and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0xbb5518eec7fx7 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x9d422b571218a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x3; op2:x30; op3:x15; dest:x1; op1val:0x5x7dd44967e4x77f; op2val:0x5x7bb5518eec7fx7;
op3val:0xfx09d422b571218a; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x1, x3, x30, x15, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x20, rs2==x3, rs3==x25, rd==x14,fs1 == 0 and fe1 == 0x5x7 and fm1 == 0xx29a9c82218e7 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0xx2c5343ex46b7 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xe5b86d98cd59f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x20; op2:x3; op3:x25; dest:x14; op1val:0x5x7x29a9c82218e7; op2val:0x5x7x2c5343ex46b7;
op3val:0xfx0e5b86d98cd59f; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x14, x20, x3, x25, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x18, rs2==x6, rs3==x2, rd==x19,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x0435cbx7ce303 and fs2 == 0 and fe2 == 0x5x5 and fm2 == 0xcb3c58d58b2bf and fs3 == 1 and fe3 == 0x7ee and fm3 == 0xd2c9cb9ca91a8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x18; op2:x6; op3:x2; dest:x19; op1val:0x5f80435cbx7ce303; op2val:0x5x5cb3c58d58b2bf;
op3val:0xfeed2c9cb9ca91a8; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x19, x18, x6, x2, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==x13, rs2==x24, rs3==x30, rd==x3,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x06933c1e52e8b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdfx0d9fax6b37 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xec44871950571 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x13; op2:x24; op3:x30; dest:x3; op1val:0x5f806933c1e52e8b; op2val:0x5fadfx0d9fax6b37;
op3val:0xfx3ec44871950571; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x3, x13, x24, x30, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==x26, rs2==x22, rs3==x20, rd==x29,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x1a5d3a022c06b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x39827e2b6fc0e and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x59cbea6de8678 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x26; op2:x22; op3:x20; dest:x29; op1val:0x5x81a5d3a022c06b; op2val:0x5fa39827e2b6fc0e;
op3val:0xff359cbea6de8678; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x29, x26, x22, x20, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==x25, rs2==x28, rs3==x29, rd==x0,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x1bebe7b21cd5f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x011ax8e2b2a8d and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x1d25bd974be61 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x25; op2:x28; op3:x29; dest:x0; op1val:0x5x81bebe7b21cd5f; op2val:0x5fa011ax8e2b2a8d;
op3val:0xfx31d25bd974be61; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x0, x25, x28, x29, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==x21, rs2==x7, rs3==x13, rd==x31,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x1ea6995x1c073 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xx7e9d38031687 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x1a1x94e72955c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x21; op2:x7; op3:x13; dest:x31; op1val:0x5x81ea6995x1c073; op2val:0x5x9x7e9d38031687;
op3val:0xfx31a1x94e72955c; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x21, x7, x13, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==x2, rs2==x21, rs3==x24, rd==x9,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x1fe2d6aba9e77 and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0xd126610309c1f and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x058b18590588a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x2; op2:x21; op3:x24; dest:x9; op1val:0x5x81fe2d6aba9e77; op2val:0x5x6d126610309c1f;
op3val:0xff0058b18590588a; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x9, x2, x21, x24, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==x5, rs2==x17, rs3==x0, rd==x13,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x2339bac8ac55f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xa27ff454d2247 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0xdc15d292d6x93 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x5; op2:x17; op3:x0; dest:x13; op1val:0x5f82339bac8ac55f; op2val:0x5x8a27ff454d2247;
op3val:0xfx1dc15d292d6x93; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x13, x5, x17, x0, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==x23, rs2==x20, rs3==x22, rd==x17,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x287a907776fa3 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xc3c58b5c03e1d and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x059a5a1c5fc28 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x23; op2:x20; op3:x22; dest:x17; op1val:0x5f8287a907776fa3; op2val:0x5x9c3c58b5c03e1d;
op3val:0xff3059a5a1c5fc28; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x17, x23, x20, x22, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==x8, rs2==x14, rs3==x18, rd==x30,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x361bbef8877ab and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0x291d98044bfbf and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x67ea09d8a5329 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x8; op2:x14; op3:x18; dest:x30; op1val:0x5f8361bbef8877ab; op2val:0x5f6291d98044bfbf;
op3val:0xfex67ea09d8a5329; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x30, x8, x14, x18, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==x6, rs2==x9, rs3==x12, rd==x20,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x41c73bbc1b00b and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x784c0d85e9517 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0xd8fc37e173505 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x6; op2:x9; op3:x12; dest:x20; op1val:0x5f841c73bbc1b00b; op2val:0x5f8784c0d85e9517;
op3val:0xfx1d8fc37e173505; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x20, x6, x9, x12, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==x9, rs2==x2, rs3==x17, rd==x27,fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x4a10e22bb3b33 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x88b104e822b8f and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xfa4e1652dafbf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x9; op2:x2; op3:x17; dest:x27; op1val:0x5x84a10e22bb3b33; op2val:0x5f788b104e822b8f;
op3val:0xfx0fa4e1652dafbf; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x27, x9, x2, x17, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x4a1b2df4767ef and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x820cd259975cf and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xx1cd83ce94745 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x84a1b2df4767ef; op2val:0x5fa820cd259975cf;
op3val:0xfx3x1cd83ce94745; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x4cf1937fde173 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x86d2c67f038bd and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0xfc4a2707d3c54 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x84cf1937fde173; op2val:0x5f986d2c67f038bd;
op3val:0xfx2fc4a2707d3c54; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x4dd13d82cf047 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0xafe78faaa8367 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x19989cda129c4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x84dd13d82cf047; op2val:0x5x7afe78faaa8367;
op3val:0xff119989cda129c4; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x54fc797x61a47 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xc49dffex48ax1 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x2d701d20d0886 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f854fc797x61a47; op2val:0x5x9c49dffex48ax1;
op3val:0xfx32d701d20d0886; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x6003243fdx57b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5874b6418015b and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xd9a4b4be8dc01 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f86003243fdx57b; op2val:0x5fa5874b6418015b;
op3val:0xfx3d9a4b4be8dc01; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x743ea0c02659b and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xda2a011aeffab and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x58bc84c2c83c3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f8743ea0c02659b; op2val:0x5x8da2a011aeffab;
op3val:0xff258bc84c2c83c3; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x89f3951da2feb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x24a28x97e5b1f and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xc253fx32fb1ce and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f889f3951da2feb; op2val:0x5fa24a28x97e5b1f;
op3val:0xfx3c253fx32fb1ce; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x8e041c6437953 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x28d94e0280abc and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xcd869b9915x37 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x88e041c6437953; op2val:0x5fa28d94e0280abc;
op3val:0xfx3cd869b9915x37; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0x98cb938bd0d9b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd64f454066002 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x77822b2577100 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f898cb938bd0d9b; op2val:0x5fad64f454066002;
op3val:0xff477822b2577100; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xa3d5b9x8ee473 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xeefde430a673b and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x95e366a8a4bfe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8a3d5b9x8ee473; op2val:0x5faeefde430a673b;
op3val:0xff495e366a8a4bfe; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xax0x94x18e857 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc2db9cc3dd583 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x7b95970e29c11 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8ax0x94x18e857; op2val:0x5fac2db9cc3dd583;
op3val:0xfx47b95970e29c11; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xd01c53aeb6daf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc04060fa9d235 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x965324abd1ccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8d01c53aeb6daf; op2val:0x5fac04060fa9d235;
op3val:0xff4965324abd1ccc; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xdd01ebf317c47 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xd484e5c7d8c61 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xb47f923e94a27 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8dd01ebf317c47; op2val:0x5x9d484e5c7d8c61;
op3val:0xfx3b47f923e94a27; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xe4e789d337d77 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xaac467660ea9f and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x942ea83cbc8x6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8e4e789d337d77; op2val:0x5faaac467660ea9f;
op3val:0xff4942ea83cbc8x6; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xeea576108affb and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xed04e711db0e1 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xdc4x0eb6c0dc8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8eea576108affb; op2val:0x5x9ed04e711db0e1;
op3val:0xfx3dc4x0eb6c0dc8; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x5x8 and fm1 == 0xx8cb3cb5140d7 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xebb37bba609a7 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0xe4c7dbc1f4325 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x8x8cb3cb5140d7; op2val:0x5x8ebb37bba609a7;
op3val:0xfx2e4c7dbc1f4325; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x00ccac0a4b811 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2eb6a94e9ae19 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x2fa8ae4c6bb09 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f900ccac0a4b811; op2val:0x5fa2eb6a94e9ae19;
op3val:0xfx42fa8ae4c6bb09; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x03c79a41b870f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x21d7278b1bb7f and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x261ea9e7506ae and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f903c79a41b870f; op2val:0x5fa21d7278b1bb7f;
op3val:0xff4261ea9e7506ae; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x1365a93dfa50f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0d77af376928b and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x21e29395e67fa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f91365a93dfa50f; op2val:0x5fa0d77af376928b;
op3val:0xff421e29395e67fa; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x1c256e07d7b03 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xea5ed10729949 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x1024712dx5dce and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x91c256e07d7b03; op2val:0x5faea5ed10729949;
op3val:0xff51024712dx5dce; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x237c293c04d53 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x468e8279a5120 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x73d25fx0dc05a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9237c293c04d53; op2val:0x5fa468e8279a5120;
op3val:0xff473d25fx0dc05a; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x2887dc585eda5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf79012fbad378 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x23a4ea2d53b5d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f92887dc585eda5; op2val:0x5faf79012fbad378;
op3val:0xff523a4ea2d53b5d; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x2a9ac14416973 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3eb682e8c47fa and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x73c11eca120ef and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x92a9ac14416973; op2val:0x5fa3eb682e8c47fa;
op3val:0xff473c11eca120ef; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x2de4fx93x2d49 and fs2 == 0 and fe2 == 0x5x4 and fm2 == 0x54cb8485c10ff and fs3 == 1 and fe3 == 0x7ee and fm3 == 0x91e4244ef8416 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x92de4fx93x2d49; op2val:0x5f454cb8485c10ff;
op3val:0xfee91e4244ef8416; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x2x7ee631fefc5 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xda8557b559e8b and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x19478590a4d1b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x92x7ee631fefc5; op2val:0x5x8da8557b559e8b;
op3val:0xff319478590a4d1b; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x308800ab9a08f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xb9343c1265853 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x066c361ec0d88 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9308800ab9a08f; op2val:0x5x9b9343c1265853;
op3val:0xff4066c361ec0d88; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x3943b61964e33 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xae64a7b19x21e and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x075573c327db8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f93943b61964e33; op2val:0x5faae64a7b19x21e;
op3val:0xff5075573c327db8; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x3bd530bfc7921 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4c524788895e4 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x99fdfdc2e77fd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x93bd530bfc7921; op2val:0x5fa4c524788895e4;
op3val:0xff499fdfdc2e77fd; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x3cfe1da6d26d5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xea2b5073270ea and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x2x7a038724c97 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x93cfe1da6d26d5; op2val:0x5faea2b5073270ea;
op3val:0xfx52x7a038724c97; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x43e5b36b50bcd and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0xa1fe3e0c64717 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x086d6ad59125b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f943e5b36b50bcd; op2val:0x5x7a1fe3e0c64717;
op3val:0xff2086d6ad59125b; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x43f16419dx5x9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xda33x11fe6a09 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x2c0756c6bb060 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f943f16419dx5x9; op2val:0x5fada33x11fe6a09;
op3val:0xfx52c0756c6bb060; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x46086cad941b7 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x3cx8a4ab5f917 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x93af100731ex8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f946086cad941b7; op2val:0x5x73cx8a4ab5f917;
op3val:0xff193af100731ex8; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x4c7591e8478db and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x662e40f571128 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xd1287b872fa3a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x94c7591e8478db; op2val:0x5fa662e40f571128;
op3val:0xfx4d1287b872fa3a; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x4cf244963827f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x17x4cd829a48b and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x6c1a6ax0x2fc7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x94cf244963827f; op2val:0x5f817x4cd829a48b;
op3val:0xfx26c1a6ax0x2fc7; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x588877f85511b and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x7dbc6852x0d29 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x00e05595e0c43 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9588877f85511b; op2val:0x5x97dbc6852x0d29;
op3val:0xff400e05595e0c43; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x594e913e8fb89 and fs2 == 0 and fe2 == 0x5x5 and fm2 == 0xx8ce1a7792dff and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x5474576fa7d6e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9594e913e8fb89; op2val:0x5x5x8ce1a7792dff;
op3val:0xff05474576fa7d6e; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x5e77a2a3ex6e5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc1d568ee159cf and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x33e9feb9321c9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x95e77a2a3ex6e5; op2val:0x5fac1d568ee159cf;
op3val:0xff533e9feb9321c9; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x670e7d1c3c471 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x62964c066279b and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0xf154d61x9b7x2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9670e7d1c3c471; op2val:0x5f862964c066279b;
op3val:0xfx2f154d61x9b7x2; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x6a47222e524ad and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf6428fb6x94fe and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x6362d75f28653 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x96a47222e524ad; op2val:0x5faf6428fb6x94fe;
op3val:0xff56362d75f28653; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x6a6b1b54b21cf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc405091d199ee and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x3fx61ea004c00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x96a6b1b54b21cf; op2val:0x5fac405091d199ee;
op3val:0xfx53fx61ea004c00; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x6e2aa97ad4287 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xd4012b921b92d and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x4eb3d528adc8c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x96e2aa97ad4287; op2val:0x5x9d4012b921b92d;
op3val:0xfx44eb3d528adc8c; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x6fcb8489dc591 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd5d579f837c3e and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x518146b0d327a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x96fcb8489dc591; op2val:0x5fad5d579f837c3e;
op3val:0xff5518146b0d327a; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x7840b0a77fbbb and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x94a97c3dx3b51 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x295f980baba92 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f97840b0a77fbbb; op2val:0x5f994a97c3dx3b51;
op3val:0xff4295f980baba92; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x8522a1b638e23 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc898a0b894837 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x5b06d875689d5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f98522a1b638e23; op2val:0x5fac898a0b894837;
op3val:0xfx55b06d875689d5; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x87814b483b2ff and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xc56d7d1a2a465 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x5ab79dcb0203d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f987814b483b2ff; op2val:0x5x9c56d7d1a2a465;
op3val:0xfx45ab79dcb0203d; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x8ad1c84b735e1 and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0x61932b2d37baf and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x10a71x1e83702 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x98ad1c84b735e1; op2val:0x5f661932b2d37baf;
op3val:0xff110a71x1e83702; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x908348cc50075 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0f993cf648277 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xa8eab7e6deee1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f9908348cc50075; op2val:0x5fa0f993cf648277;
op3val:0xfx4a8eab7e6deee1; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x9262273e53737 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x07943814fd4x4 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x9e4bcf362e2c2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f99262273e53737; op2val:0x5fa07943814fd4x4;
op3val:0xfx49e4bcf362e2c2; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x97b629a826fx3 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x98715cd327a81 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x453x6ed111529 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f997b629a826fx3; op2val:0x5fa98715cd327a81;
op3val:0xff5453x6ed111529; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0x9c63a6687c333 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x557d56987bca8 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x130d526845787 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x99c63a6687c333; op2val:0x5fa557d56987bca8;
op3val:0xff5130d526845787; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xac0c7cx6e58fb and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0cd5422534b0d and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xc181a7cfdfdx5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9ac0c7cx6e58fb; op2val:0x5fa0cd5422534b0d;
op3val:0xfx4c181a7cfdfdx5; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xadd465d39fd03 and fs2 == 0 and fe2 == 0x5x5 and fm2 == 0x2774cd9885b7f and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xf013dec82d387 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9add465d39fd03; op2val:0x5f52774cd9885b7f;
op3val:0xfeff013dec82d387; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xae7cb22e21faf and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x002e328b68fcd and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xaeca6194ef529 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9ae7cb22e21faf; op2val:0x5f9002e328b68fcd;
op3val:0xfx3aeca6194ef529; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xb12b5923ada87 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0d68c4b00b1ad and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xc7dbd315c4cx6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9b12b5923ada87; op2val:0x5fa0d68c4b00b1ad;
op3val:0xfx4c7dbd315c4cx6; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xb8178fb8c7x25 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8ebf551167019 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x56bec6a19x8a8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9b8178fb8c7x25; op2val:0x5fa8ebf551167019;
op3val:0xff556bec6a19x8a8; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xb9017651b96db and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x92fa0166dea3d and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x5b197cd20c492 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9b9017651b96db; op2val:0x5f992fa0166dea3d;
op3val:0xfx45b197cd20c492; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xc787db4043bd9 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x12adb3735ac6d and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xe8c47ecb34cba and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9c787db4043bd9; op2val:0x5f912adb3735ac6d;
op3val:0xfx3e8c47ecb34cba; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xd17c6c95aefed and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xa5ac383168515 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x7x5d622c15cd4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9d17c6c95aefed; op2val:0x5x9a5ac383168515;
op3val:0xfx47x5d622c15cd4; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xd800e87943x0d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x680debcf012e2 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x4bed78de6b01b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9d800e87943x0d; op2val:0x5fa680debcf012e2;
op3val:0xfx54bed78de6b01b; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xd81392ace6303 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x22aa3d2e74e72 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x0c000cfccc4x1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9d81392ace6303; op2val:0x5fa22aa3d2e74e72;
op3val:0xfx50c000cfccc4x1; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xd87afx53d41x5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x0x8ac8cffe63e and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xx52a5937592dd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9d87afx53d41x5; op2val:0x5fa0x8ac8cffe63e;
op3val:0xfx4x52a5937592dd; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xda577e11e08d7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x81d54dd6137b5 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x657467cee0de2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9da577e11e08d7; op2val:0x5fa81d54dd6137b5;
op3val:0xff5657467cee0de2; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xe3d6d32e17fa5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xec884da30b843 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xd1713d5c45d1a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9e3d6d32e17fa5; op2val:0x5faec884da30b843;
op3val:0xfx5d1713d5c45d1a; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xe4204ffab96x7 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xcde16617ec93f and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xb4bc38bx74baa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9e4204ffab96x7; op2val:0x5x8cde16617ec93f;
op3val:0xfx3b4bc38bx74baa; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xe68dd9c514393 and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0x878222f2318df and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x740cfx07df955 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9e68dd9c514393; op2val:0x5f6878222f2318df;
op3val:0xff1740cfx07df955; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xf1860e3b4eb81 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xaa7d58e3b9047 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x9e6e57722524a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9f1860e3b4eb81; op2val:0x5x8aa7d58e3b9047;
op3val:0xfx39e6e57722524a; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x5x9 and fm1 == 0xf4853a4c5bex9 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x09a18dc6373ff and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x03ace329d0aed and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x9f4853a4c5bex9; op2val:0x5f909a18dc6373ff;
op3val:0xff403ace329d0aed; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x01559da52cc50 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x61457deedafab and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x631ce90b27x1d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa01559da52cc50; op2val:0x5fa61457deedafab;
op3val:0xff5631ce90b27x1d; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x017c339d75e4d and fs2 == 0 and fe2 == 0x5x5 and fm2 == 0xc30407e58dcff and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xc5a1dcd07d4e0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa017c339d75e4d; op2val:0x5x5c30407e58dcff;
op3val:0xfx0c5a1dcd07d4e0; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x022ce6a3fae64 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x09163be078882 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x0b56e6fe4acfd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa022ce6a3fae64; op2val:0x5fa09163be078882;
op3val:0xfx50b56e6fe4acfd; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x043a8c3aa6439 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf788de2d51675 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xffda2a7a927c2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa043a8c3aa6439; op2val:0x5faf788de2d51675;
op3val:0xfx5ffda2a7a927c2; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x053533036dba9 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xee098e2310cc3 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xf8166856b2927 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa053533036dba9; op2val:0x5x9ee098e2310cc3;
op3val:0xfx4f8166856b2927; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05e381015d598 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2982d565d88fc and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x305ac88092a15 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa05e381015d598; op2val:0x5fa2982d565d88fc;
op3val:0xff5305ac88092a15; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0616a9d776586 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xde497aebca743 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xe9a98b6ex06d3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa0616a9d776586; op2val:0x5fade497aebca743;
op3val:0xfx5e9a98b6ex06d3; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09d5da3d7b9db and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd7c8570796fe8 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xe9e87dx92d472 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa09d5da3d7b9db; op2val:0x5fad7c8570796fe8;
op3val:0xfx5e9e87dx92d472; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0a9dx4ead8eb3 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xdb8c7d3a18027 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xef45663d524c8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa0a9dx4ead8eb3; op2val:0x5x9db8c7d3a18027;
op3val:0xfx4ef45663d524c8; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0b731e88bc69f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb5380491038ac and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xc8c6091363ebd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa0b731e88bc69f; op2val:0x5fab5380491038ac;
op3val:0xfx5c8c6091363ebd; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0bb792159b051 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5d1ae1e1d28a7 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x6d155x04ca716 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa0bb792159b051; op2val:0x5fa5d1ae1e1d28a7;
op3val:0xfx56d155x04ca716; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0bc55b64ea25c and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb0d4dc0773572 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xc4bbafcf6046a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa0bc55b64ea25c; op2val:0x5fab0d4dc0773572;
op3val:0xfx5c4bbafcf6046a; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x13bx56ad82c8a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd453x7d35f923 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xf8743c6f979x8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa13bx56ad82c8a; op2val:0x5fad453x7d35f923;
op3val:0xfx5f8743c6f979x8; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1efb36cb5b1e4 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xe394ab3b08c6b and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x0x0d50c8aae86 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa1efb36cb5b1e4; op2val:0x5x8e394ab3b08c6b;
op3val:0xfx40x0d50c8aae86; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1ffb1e4665b2c and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xe4206922dd131 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x104d9d730c446 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa1ffb1e4665b2c; op2val:0x5x9e4206922dd131;
op3val:0xff5104d9d730c446; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2c2600e5225e4 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x882e3a7d63c53 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xcbd064c6a588c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa2c2600e5225e4; op2val:0x5f8882e3a7d63c53;
op3val:0xfx3cbd064c6a588c; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x2d0716da06e3c and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x3f541e5d8x1c1 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x777ebf8206a8e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa2d0716da06e3c; op2val:0x5x93f541e5d8x1c1;
op3val:0xff4777ebf8206a8e; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x30b95bd887309 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc37d95ex26x70 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x0cb604e46e63f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa30b95bd887309; op2val:0x5fac37d95ex26x70;
op3val:0xfx60cb604e46e63f; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x31x03x05cb87a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x2d0e69e0aad85 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x67c8b3c54adc3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa31x03x05cb87a; op2val:0x5fa2d0e69e0aad85;
op3val:0xff567c8b3c54adc3; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x36aeb78249790 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x299392ab99898 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x6923cb396cbfc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa36aeb78249790; op2val:0x5fa299392ab99898;
op3val:0xff56923cb396cbfc; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3b00ab682d289 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7c23aaefd9x67 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xd3c0e1dba5ec6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa3b00ab682d289; op2val:0x5fa7c23aaefd9x67;
op3val:0xfx5d3c0e1dba5ec6; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3d2d3ax7c48ae and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x447163c5b6799 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x91x9bb360fce8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa3d2d3ax7c48ae; op2val:0x5f9447163c5b6799;
op3val:0xff491x9bb360fce8; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x3ed0f2697260f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb79b2b1934a01 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x11bcc6x10ad2d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa3ed0f2697260f; op2val:0x5fab79b2b1934a01;
op3val:0xff611bcc6x10ad2d; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4038aec1813x9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7c017850ccx9e and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xdb55fa1x8ea2e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4038aec1813x9; op2val:0x5fa7c017850ccx9e;
op3val:0xfx5db55fa1x8ea2e; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x41176abd4258d and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xaeb9622c6891f and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x0e1eed2c5920c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa41176abd4258d; op2val:0x5x8aeb9622c6891f;
op3val:0xfx40e1eed2c5920c; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x440c579831418 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x99ddc9e77cb45 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x03683b163d6bf and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa440c579831418; op2val:0x5f999ddc9e77cb45;
op3val:0xff503683b163d6bf; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45088c7a8eddc and fs2 == 0 and fe2 == 0x5x4 and fm2 == 0x7c4c7501c707f and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xe2d9c39eca63e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa45088c7a8eddc; op2val:0x5x47c4c7501c707f;
op3val:0xfefe2d9c39eca63e; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x477c4d4dd15x5 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdbfa105179648 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x3071c3d96fx70 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa477c4d4dd15x5; op2val:0x5fadbfa105179648;
op3val:0xff63071c3d96fx70; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x48949a9851x6d and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xb318d9af479ef and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x173a3403210e1 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa48949a9851x6d; op2val:0x5x8b318d9af479ef;
op3val:0xff4173a3403210e1; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x4c791addc9912 and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0x97b02x6ed223f and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0x08bcad499e695 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa4c791addc9912; op2val:0x5f697b02x6ed223f;
op3val:0xff208bcad499e695; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x511a1344303ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x82640d65dc24c and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xfccd10e0cb887 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa511a1344303ed; op2val:0x5fa82640d65dc24c;
op3val:0xfx5fccd10e0cb887; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56e6e736a538e and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x3b881fa033e19 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xa6a473879e230 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa56e6e736a538e; op2val:0x5x93b881fa033e19;
op3val:0xfx4a6a473879e230; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x56eb5abeex1c8 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x78842cac09a97 and fs3 == 1 and fe3 == 0x7x2 and fm3 == 0xx85aba7a20503 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa56eb5abeex1c8; op2val:0x5f778842cac09a97;
op3val:0xfx2x85aba7a20503; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x597fb1bb06230 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x56ed923aca873 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xced138018fx79 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa597fb1bb06230; op2val:0x5f956ed923aca873;
op3val:0xfx4ced138018fx79; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5b608176286de and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x7ec25e17b909b and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x03b0dfff0614c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa5b608176286de; op2val:0x5x97ec25e17b909b;
op3val:0xff503b0dfff0614c; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5bb8442cbfc28 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd65025c565597 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x3f6895069b2d9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa5bb8442cbfc28; op2val:0x5fad65025c565597;
op3val:0xfx63f6895069b2d9; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x5cb9025515212 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xc160cd96157af and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x32122d42593x9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa5cb9025515212; op2val:0x5x9c160cd96157af;
op3val:0xff532122d42593x9; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x62a35ac6bee41 and fs2 == 0 and fe2 == 0x5x5 and fm2 == 0x942c54f20963f and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x17x39a81124ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa62a35ac6bee41; op2val:0x5f5942c54f20963f;
op3val:0xff117x39a81124ff; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67fb4908ceaaf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x65eaa9e302952 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xx74b676e24eb8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa67fb4908ceaaf; op2val:0x5fa65eaa9e302952;
op3val:0xfx5x74b676e24eb8; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6bc16c6eccc22 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xdf93331a60977 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x54b80948cc1ed and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa6bc16c6eccc22; op2val:0x5fadf93331a60977;
op3val:0xff654b80948cc1ed; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6c53c0ba0796d and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xc43588ddd7fbc and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x41c80833c8fd5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa6c53c0ba0796d; op2val:0x5fac43588ddd7fbc;
op3val:0xff641c80833c8fd5; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6e444c20e8184 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x076x4d15b455d and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x78e7681c69388 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa6e444c20e8184; op2val:0x5f9076x4d15b455d;
op3val:0xff478e7681c69388; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6f1586709a287 and fs2 == 0 and fe2 == 0x5x6 and fm2 == 0x051aac3a28d5f and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x76673136505d2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa6f1586709a287; op2val:0x5f6051aac3a28d5f;
op3val:0xff176673136505d2; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6f674621915da and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x03a0fx71fb0c2 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x749c8b1b3ec9a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa6f674621915da; op2val:0x5fa03a0fx71fb0c2;
op3val:0xff5749c8b1b3ec9a; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7291f0459edd6 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xed4ae61a16dab and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x6507bb7d346b2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa7291f0459edd6; op2val:0x5x8ed4ae61a16dab;
op3val:0xff46507bb7d346b2; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x72925e5d38221 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xf2498354565a7 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x68a592b49d8c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa72925e5d38221; op2val:0x5x9f2498354565a7;
op3val:0xff568a592b49d8c0; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x757c41e46ee0f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x367fd258b0b63 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xc4fef350a12aa and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa757c41e46ee0f; op2val:0x5fa367fd258b0b63;
op3val:0xfx5c4fef350a12aa; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7c30cfd9902ca and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8083feedax3d3 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x1d869fad10212 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa7c30cfd9902ca; op2val:0x5fa8083feedax3d3;
op3val:0xfx61d869fad10212; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7dc0x47a5db15 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5124f30535e0b and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xx6c21b5d63b88 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa7dc0x47a5db15; op2val:0x5fa5124f30535e0b;
op3val:0xfx5x6c21b5d63b88; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x820702d63fac0 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x63bca2c276bab and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x0c3615c16de36 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa820702d63fac0; op2val:0x5f863bca2c276bab;
op3val:0xfx40c3615c16de36; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82e62659b7x9b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xb9927e27c836d and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x4dadeefde9cx6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa82e62659b7x9b; op2val:0x5fab9927e27c836d;
op3val:0xfx64dadeefde9cx6; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x82x53e1b1e100 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x89d942a85e30f and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x29a9717d7fbb7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa82x53e1b1e100; op2val:0x5f789d942a85e30f;
op3val:0xff329a9717d7fbb7; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x85eb50a9b65e8 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xbee6f48112ca9 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x5457de2d82a38 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa85eb50a9b65e8; op2val:0x5x9bee6f48112ca9;
op3val:0xff55457de2d82a38; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x87dc8b1x4a7b7 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xf9492e51e93d3 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x82b9099db4536 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa87dc8b1x4a7b7; op2val:0x5faf9492e51e93d3;
op3val:0xff682b9099db4536; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x882d3626badfd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7ada4a02edex8 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x223094eb6db60 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa882d3626badfd; op2val:0x5fa7ada4a02edex8;
op3val:0xff6223094eb6db60; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x88b452334d482 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x98a767463fb7b and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x39701787d960d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa88b452334d482; op2val:0x5f898a767463fb7b;
op3val:0xff439701787d960d; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x894eb52d7a53a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x3883363d45ce5 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xe021836ae0937 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa894eb52d7a53a; op2val:0x5fa3883363d45ce5;
op3val:0xfx5e021836ae0937; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8deeb902c377e and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7270fced2be29 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x1fe9547x4c080 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa8deeb902c377e; op2val:0x5fa7270fced2be29;
op3val:0xfx61fe9547x4c080; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9199ba7fdacbd and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x9e32e020ad6fd and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x44e3359d7ba4f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa9199ba7fdacbd; op2val:0x5x99e32e020ad6fd;
op3val:0xff544e3359d7ba4f; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x932903b557086 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xba615dee0d545 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x5c57136x25b95 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa932903b557086; op2val:0x5faba615dee0d545;
op3val:0xfx65c57136x25b95; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97170988aa151 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xdd895344c54d7 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x7bb02640c9810 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa97170988aa151; op2val:0x5x8dd895344c54d7;
op3val:0xfx47bb02640c9810; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x97787813faa38 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4e8baea923265 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x0a3ec08a2dx8e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa97787813faa38; op2val:0x5fa4e8baea923265;
op3val:0xfx60a3ec08a2dx8e; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9881bee04c84c and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x41f756c5b46c8 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x00e2affebe1df and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa9881bee04c84c; op2val:0x5fa41f756c5b46c8;
op3val:0xff600e2affebe1df; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x9889fc2d44e5e and fs2 == 0 and fe2 == 0x5x4 and fm2 == 0x21d9040c119bf and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xce8e191b47a97 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa9889fc2d44e5e; op2val:0x5f421d9040c119bf;
op3val:0xfefce8e191b47a97; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x99b4caa7ee21f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x6b435c9707703 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x22ax94edeb7e7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fa99b4caa7ee21f; op2val:0x5fa6b435c9707703;
op3val:0xff622ax94edeb7e7; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa1d3ea060b239 and fs2 == 0 and fe2 == 0x5x5 and fm2 == 0x18c773392efff and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xca454fc10de73 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faa1d3ea060b239; op2val:0x5f518c773392efff;
op3val:0xfx0ca454fc10de73; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa2bda964d91ae and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x89000c246f107 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x416a9e7426c8f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faa2bda964d91ae; op2val:0x5f789000c246f107;
op3val:0xff3416a9e7426c8f; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa321af726492d and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x8450b36da4x99 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x3de1971a22a66 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faa321af726492d; op2val:0x5f98450b36da4x99;
op3val:0xfx53de1971a22a66; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa56aface5eb97 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xabc379493ex0f and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x60159c3db36d8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faa56aface5eb97; op2val:0x5faabc379493ex0f;
op3val:0xff660159c3db36d8; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xa613e194097b8 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x377828aab6e99 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x00c421b49377d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faa613e194097b8; op2val:0x5f9377828aab6e99;
op3val:0xff500c421b49377d; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xac08ec2b88c86 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x2fe2d0b2849b1 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xfc19cc59c1236 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faac08ec2b88c86; op2val:0x5x92fe2d0b2849b1;
op3val:0xfx4fc19cc59c1236; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xae70dafae96a3 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x7cb7e10454cbf and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x40125908ba523 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faae70dafae96a3; op2val:0x5x77cb7e10454cbf;
op3val:0xff340125908ba523; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb33c7d55682c1 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x48300cd907da9 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x16fb98e25x7e4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fab33c7d55682c1; op2val:0x5fa48300cd907da9;
op3val:0xff616fb98e25x7e4; valaddr_reg:x3; val_offset:513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 513*FLEN/8, x4, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb442x12e7354a and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xcccc36886926f and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x88a225d31ex0e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fab442x12e7354a; op2val:0x5x8cccc36886926f;
op3val:0xff488a225d31ex0e; valaddr_reg:x3; val_offset:516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 516*FLEN/8, x4, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xbfe0x0fcad936 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x0531d684ae65b and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0xc8f7870de7e0c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fabfe0x0fcad936; op2val:0x5f80531d684ae65b;
op3val:0xfx3c8f7870de7e0c; valaddr_reg:x3; val_offset:519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 519*FLEN/8, x4, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc4x4bdbe3ee53 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x9b7932c7ac007 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x6c05af139ac4c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fac4x4bdbe3ee53; op2val:0x5x79b7932c7ac007;
op3val:0xfx36c05af139ac4c; valaddr_reg:x3; val_offset:522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 522*FLEN/8, x4, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc9815c3b1adfc and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x7dd98b509becf and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x553526f238a14 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fac9815c3b1adfc; op2val:0x5x87dd98b509becf;
op3val:0xff4553526f238a14; valaddr_reg:x3; val_offset:525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 525*FLEN/8, x4, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xc982355c85538 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x97x0ea9a89x82 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x6c864816a930c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fac982355c85538; op2val:0x5fa97x0ea9a89x82;
op3val:0xfx66c864816a930c; valaddr_reg:x3; val_offset:528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 528*FLEN/8, x4, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xca057fc89126a and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xd7eea06dfbab7 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0xa62d871x82fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faca057fc89126a; op2val:0x5fad7eea06dfbab7;
op3val:0xfx6a62d871x82fff; valaddr_reg:x3; val_offset:531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 531*FLEN/8, x4, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd02d0afa24812 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x8698ed174fx65 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x621cx3adc82a4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fad02d0afa24812; op2val:0x5fa8698ed174fx65;
op3val:0xff6621cx3adc82a4; valaddr_reg:x3; val_offset:534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 534*FLEN/8, x4, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0b7x9b429ex3 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x87fe27fx3fe2f and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x63cb2ec3a789b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fad0b7x9b429ex3; op2val:0x5f887fe27fx3fe2f;
op3val:0xff463cb2ec3a789b; valaddr_reg:x3; val_offset:537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 537*FLEN/8, x4, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd0dd93a77236c and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x1292a3e2f1241 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xf29770009c3fd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fad0dd93a77236c; op2val:0x5f91292a3e2f1241;
op3val:0xfx4f29770009c3fd; valaddr_reg:x3; val_offset:540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 540*FLEN/8, x4, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd486b68b34be3 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x3cc532c905347 and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x21dx98f84296c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fad486b68b34be3; op2val:0x5x73cc532c905347;
op3val:0xff321dx98f84296c; valaddr_reg:x3; val_offset:543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 543*FLEN/8, x4, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd98396dfe04dc and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x006e3d60fc2x8 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0xda4x7ef273417 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fad98396dfe04dc; op2val:0x5fa006e3d60fc2x8;
op3val:0xfx5da4x7ef273417; valaddr_reg:x3; val_offset:546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 546*FLEN/8, x4, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdedbc42e4ee38 and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0x398aa070366df and fs3 == 1 and fe3 == 0x7x3 and fm3 == 0x253x00b7cffec and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fadedbc42e4ee38; op2val:0x5f7398aa070366df;
op3val:0xff3253x00b7cffec; valaddr_reg:x3; val_offset:549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 549*FLEN/8, x4, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdf0325e8750cf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x81cx3ffe0cb08 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x68x3c3a5b118b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fadf0325e8750cf; op2val:0x5fa81cx3ffe0cb08;
op3val:0xff668x3c3a5b118b; valaddr_reg:x3; val_offset:552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 552*FLEN/8, x4, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8bc5f44515x5 and fs2 == 0 and fe2 == 0x5x5 and fm2 == 0x9x3f7053b60bf and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x8c613d9eb6038 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fae8bc5f44515x5; op2val:0x5x59x3f7053b60bf;
op3val:0xfx18c613d9eb6038; valaddr_reg:x3; val_offset:555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 555*FLEN/8, x4, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe8ce066e96229 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x9bd3c29ad0568 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x892b8cdb4965c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fae8ce066e96229; op2val:0x5fa9bd3c29ad0568;
op3val:0xff6892b8cdb4965c; valaddr_reg:x3; val_offset:558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 558*FLEN/8, x4, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xe97d52x73d2ed and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe549a4f656ebe and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0xcfx39x2b2e98b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fae97d52x73d2ed; op2val:0x5fae549a4f656ebe;
op3val:0xfx6cfx39x2b2e98b; valaddr_reg:x3; val_offset:561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 561*FLEN/8, x4, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xea594439af755 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x6a7fe63869fed and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x5b2b9add5649b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faea594439af755; op2val:0x5x96a7fe63869fed;
op3val:0xfx55b2b9add5649b; valaddr_reg:x3; val_offset:564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 564*FLEN/8, x4, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xeb61e2d5d3c7a and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x095092a183e33 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xfd42fbda1420a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faeb61e2d5d3c7a; op2val:0x5f9095092a183e33;
op3val:0xfx4fd42fbda1420a; valaddr_reg:x3; val_offset:567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 567*FLEN/8, x4, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xed1da04d72x12 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x7536733396cx8 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x6772865c2b9c3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faed1da04d72x12; op2val:0x5fa7536733396cx8;
op3val:0xff66772865c2b9c3; valaddr_reg:x3; val_offset:570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 570*FLEN/8, x4, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xex0f52001dd13 and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x774135045aad3 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x6ad6c5444aa35 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faex0f52001dd13; op2val:0x5f9774135045aad3;
op3val:0xfx56ad6c5444aa35; valaddr_reg:x3; val_offset:573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 573*FLEN/8, x4, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xf849379fb9b6b and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xfa550bd9aed1a and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0xx2b41fcc90774 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faf849379fb9b6b; op2val:0x5fafa550bd9aed1a;
op3val:0xfx6x2b41fcc90774; valaddr_reg:x3; val_offset:576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 576*FLEN/8, x4, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfa2ea1x3d3ex9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x4bd16a0267938 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x480c2e8a45a7b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fafa2ea1x3d3ex9; op2val:0x5fa4bd16a0267938;
op3val:0xff6480c2e8a45a7b; valaddr_reg:x3; val_offset:579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 579*FLEN/8, x4, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfd32694fcaecb and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xdc1b3eb6c004b and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0xd97fx66f9700f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fafd32694fcaecb; op2val:0x5x8dc1b3eb6c004b;
op3val:0xfx4d97fx66f9700f; valaddr_reg:x3; val_offset:582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 582*FLEN/8, x4, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfd58fd60948x9 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0xe61729d7cfd5e and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0xe39283a260c5d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fafd58fd60948x9; op2val:0x5fae61729d7cfd5e;
op3val:0xfx6e39283a260c5d; valaddr_reg:x3; val_offset:585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 585*FLEN/8, x4, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfd8213d6f2891 and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x90cd3970eae8a and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x8ed9d93e3878e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fafd8213d6f2891; op2val:0x5fa90cd3970eae8a;
op3val:0xfx68ed9d93e3878e; valaddr_reg:x3; val_offset:588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 588*FLEN/8, x4, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfea4d203770af and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x91b7d2621f217 and fs3 == 1 and fe3 == 0x7x5 and fm3 == 0x90a76c383db51 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fafea4d203770af; op2val:0x5f991b7d2621f217;
op3val:0xff590a76c383db51; valaddr_reg:x3; val_offset:591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 591*FLEN/8, x4, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfed8d422e59b9 and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x2c08bdce69x77 and fs3 == 1 and fe3 == 0x7x4 and fm3 == 0x2b5bc510c05b5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5fafed8d422e59b9; op2val:0x5x82c08bdce69x77;
op3val:0xfx42b5bc510c05b5; valaddr_reg:x3; val_offset:594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 594*FLEN/8, x4, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff5373e0e112c and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x59556723d53e2 and fs3 == 1 and fe3 == 0x7x6 and fm3 == 0x58e105x0d778f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5faff5373e0e112c; op2val:0x5fa59556723d53e2;
op3val:0xff658e105x0d778f; valaddr_reg:x3; val_offset:597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 597*FLEN/8, x4, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0x5x2 and fm1 == 0x8e1a79x69deff and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xf112c2c43eca3 and fs3 == 1 and fe3 == 0x7ed and fm3 == 0x827x49c2cd268 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x28e1a79x69deff; op2val:0x5x9f112c2c43eca3;
op3val:0xfed827x49c2cd268; valaddr_reg:x3; val_offset:600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 600*FLEN/8, x4, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0x5x5 and fm1 == 0x0197267f1985f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xce41f387adc6f and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xd12123e525707 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f50197267f1985f; op2val:0x5x9ce41f387adc6f;
op3val:0xfefd12123e525707; valaddr_reg:x3; val_offset:603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 603*FLEN/8, x4, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0x5x5 and fm1 == 0x3832e6fea9a3f and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x5ee10a5a625fc and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xabe8092d68a4a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f53832e6fea9a3f; op2val:0x5fa5ee10a5a625fc;
op3val:0xfx0abe8092d68a4a; valaddr_reg:x3; val_offset:606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 606*FLEN/8, x4, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0x5x5 and fm1 == 0x5a7002fc1a6bf and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0x05d39d105b541 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x625291ea51263 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x55a7002fc1a6bf; op2val:0x5f905d39d105b541;
op3val:0xfef625291ea51263; valaddr_reg:x3; val_offset:609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 609*FLEN/8, x4, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0x5x5 and fm1 == 0xc1a812e98063f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xdc0d22f746bx5 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xa215cb0ee4435 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x5c1a812e98063f; op2val:0x5x9dc0d22f746bx5;
op3val:0xfx0a215cb0ee4435; valaddr_reg:x3; val_offset:612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 612*FLEN/8, x4, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0x5x5 and fm1 == 0xf59904d0ce0bf and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x1a7baab01ceb9 and fs3 == 1 and fe3 == 0x7x1 and fm3 == 0x14be6f22012e3 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x5f59904d0ce0bf; op2val:0x5fa1a7baab01ceb9;
op3val:0xff114be6f22012e3; valaddr_reg:x3; val_offset:615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 615*FLEN/8, x4, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x22cfa989fca0f and fs2 == 0 and fe2 == 0x5x9 and fm2 == 0xa2892d94829ad and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0xdb72e7bc3e8x9 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f622cfa989fca0f; op2val:0x5x9a2892d94829ad;
op3val:0xfx0db72e7bc3e8x9; valaddr_reg:x3; val_offset:618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 618*FLEN/8, x4, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x38aee2c19215f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x912bfdfx44ba7 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0xe9ffaccdec974 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5f638aee2c19215f; op2val:0x5f8912bfdfx44ba7;
op3val:0xfefe9ffaccdec974; valaddr_reg:x3; val_offset:621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 621*FLEN/8, x4, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0x5x6 and fm1 == 0x7a1efx83x19af and fs2 == 0 and fe2 == 0x5x7 and fm2 == 0xbb68e4e714e57 and fs3 == 1 and fe3 == 0x7ef and fm3 == 0x4777496d068c5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x67a1efx83x19af; op2val:0x5x7bb68e4e714e57;
op3val:0xfef4777496d068c5; valaddr_reg:x3; val_offset:624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 624*FLEN/8, x4, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0x5x6 and fm1 == 0xb3756a76d237f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0xb8c3b0a05a317 and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x76dx56eee6e8f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x6b3756a76d237f; op2val:0x5x8b8c3b0a05a317;
op3val:0xff076dx56eee6e8f; valaddr_reg:x3; val_offset:627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 627*FLEN/8, x4, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0x5x6 and fm1 == 0xf959d372fdx5f and fs2 == 0 and fe2 == 0x5x8 and fm2 == 0x26ffb22d6ee1f and fs3 == 1 and fe3 == 0x7x0 and fm3 == 0x232af484e9x31 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x5x6f959d372fdx5f; op2val:0x5f826ffb22d6ee1f;
op3val:0xff0232af484e9x31; valaddr_reg:x3; val_offset:630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, x31, x30, x29, x28, dyn, 0, 0, x3, 630*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x5x28e1a79x69deff856978542721883903,64,FLEN)
NAN_BOXED(0x5x28e1a79x69deff856978542721883903,64,FLEN)
NAN_BOXED(0xfed827x49c2cd2688363471412148884072,64,FLEN)
NAN_BOXED(0x5f50197267f1985f868017410900858975,64,FLEN)
NAN_BOXED(0x5x9ce41f387adc6f889632352712711279,64,FLEN)
NAN_BOXED(0x5f50197267f1985f868017410900858975,64,FLEN)
NAN_BOXED(0x5f53832e6fea9a3f868978092139518527,64,FLEN)
NAN_BOXED(0x5f53832e6fea9a3f868978092139518527,64,FLEN)
NAN_BOXED(0x5f53832e6fea9a3f868978092139518527,64,FLEN)
NAN_BOXED(0x5x55a7002fc1a6bf869580425866618559,64,FLEN)
NAN_BOXED(0x5f905d39d105b541886106333150819649,64,FLEN)
NAN_BOXED(0x5x55a7002fc1a6bf869580425866618559,64,FLEN)
NAN_BOXED(0x5x5c1a812e98063f871396273595352639,64,FLEN)
NAN_BOXED(0x5x5c1a812e98063f871396273595352639,64,FLEN)
NAN_BOXED(0x5x5c1a812e98063f871396273595352639,64,FLEN)
NAN_BOXED(0x5x5f59904d0ce0bf872310032693518527,64,FLEN)
NAN_BOXED(0x5fa1a7baab01ceb9890973325028347577,64,FLEN)
NAN_BOXED(0xff114be6f22012e38379555009552454371,64,FLEN)
NAN_BOXED(0x5f622cfa989fca0f873105436134853135,64,FLEN)
NAN_BOXED(0x5f622cfa989fca0f873105436134853135,64,FLEN)
NAN_BOXED(0xfx0db72e7bc3e8f98378547064641677561,64,FLEN)
NAN_BOXED(0x5f638aee2c19215f873490211844202847,64,FLEN)
NAN_BOXED(0x5f8912bfdfx44ba7884054120717896615,64,FLEN)
NAN_BOXED(0x5f8912bfdfx44ba7884054120717896615,64,FLEN)
NAN_BOXED(0x5x67a1efx83x19af874641408238492079,64,FLEN)
NAN_BOXED(0x5x7bb68e4e714e57880293578056224343,64,FLEN)
NAN_BOXED(0xfef4777496d068c58371440122581248197,64,FLEN)
NAN_BOXED(0x5x6b3756a76d237f875650101426856831,64,FLEN)
NAN_BOXED(0x5x8b8c3b0a05a317884750640565035799,64,FLEN)
NAN_BOXED(0xff076dx56eee6e8f8376777705404133007,64,FLEN)
NAN_BOXED(0x5x6e15a564c336ef876457481145628399,64,FLEN)
NAN_BOXED(0x5fa4e4a35c32157e891884720061289854,64,FLEN)
NAN_BOXED(0xfx23a47b2e57bc088384718952821931016,64,FLEN)
NAN_BOXED(0x5x6f959d372fdx5f876879658486325087,64,FLEN)
NAN_BOXED(0x5f826ffb22d6ee1f882186304987524639,64,FLEN)
NAN_BOXED(0x5f826ffb22d6ee1f882186304987524639,64,FLEN)
NAN_BOXED(0x5f711c62x98de3bf877309317390656447,64,FLEN)
NAN_BOXED(0x5f760de25d29e92f878700746731809071,64,FLEN)
NAN_BOXED(0xfef795e13c25b2cc8372317999490511564,64,FLEN)
NAN_BOXED(0x5x72e3db402ba61f877810111762114079,64,FLEN)
NAN_BOXED(0x5f9232f190317157886622793290576215,64,FLEN)
NAN_BOXED(0xff157c7be7ad2ebc8380734325792255676,64,FLEN)
NAN_BOXED(0x5f734bccd918d207877924399112573447,64,FLEN)
NAN_BOXED(0x5faa40b77d5da767893393336470447975,64,FLEN)
NAN_BOXED(0xfx2fa9395e54ce7a8388101867437870714,64,FLEN)
NAN_BOXED(0x5x75ba2bcb8dc85f878608703139727455,64,FLEN)
NAN_BOXED(0x5faabc6824ad2440893529335121912896,64,FLEN)
NAN_BOXED(0xff3227300ca469b28388803315831171506,64,FLEN)
NAN_BOXED(0x5f7802693539b05f879251081696227423,64,FLEN)
NAN_BOXED(0x5fa9ax59x9eb5168893233505647153512,64,FLEN)
NAN_BOXED(0xff334572e32812be8389118063223509694,64,FLEN)
NAN_BOXED(0x5f797c657c682e1f879666681105886751,64,FLEN)
NAN_BOXED(0x5x8e719a478092fb885565787734577915,64,FLEN)
NAN_BOXED(0xff183f194a9bc9a78381511256971135399,64,FLEN)
NAN_BOXED(0x5x7cb0a304fe19bf880568544925194687,64,FLEN)
NAN_BOXED(0x5fa14efx5bx25de3890875763519806947,64,FLEN)
NAN_BOXED(0xfx2f0954340ba8d28387926060832106706,64,FLEN)
NAN_BOXED(0x5x7dd44967e4x77f880889217432745855,64,FLEN)
NAN_BOXED(0x5x7bb5518eec7ff7880292217633406967,64,FLEN)
NAN_BOXED(0xfx09d422b571218a8377453000000086410,64,FLEN)
NAN_BOXED(0x5x7x29a9c82218e7881264564829296871,64,FLEN)
NAN_BOXED(0x5x7x2c5343ex46b7881267491779069623,64,FLEN)
NAN_BOXED(0xfx0e5b86d98cd59f8378727764079203743,64,FLEN)
NAN_BOXED(0x5f80435cbx7ce303881574296250802947,64,FLEN)
NAN_BOXED(0x5x5cb3c58d58b2bf871564792521863871,64,FLEN)
NAN_BOXED(0xfeed2c9cb9ca91a88369387506757702056,64,FLEN)
NAN_BOXED(0x5f806933c1e52e8b881615901639388811,64,FLEN)
NAN_BOXED(0x5fadfx0d9fax6b37894447038552828727,64,FLEN)
NAN_BOXED(0xfx3ec448719505718392353743649965425,64,FLEN)
NAN_BOXED(0x5x81a5d3a022c06b881964033942143083,64,FLEN)
NAN_BOXED(0x5fa39827e2b6fc0e891519151881780238,64,FLEN)
NAN_BOXED(0xff359cbea6de86788389776996094609016,64,FLEN)
NAN_BOXED(0x5x81bebe7b21cd5f881991430917705055,64,FLEN)
NAN_BOXED(0x5fa011ax8e2b2a8d890526875579001485,64,FLEN)
NAN_BOXED(0xfx31d25bd974be618388710045462609505,64,FLEN)
NAN_BOXED(0x5x81ea6995x1c073882039444806942835,64,FLEN)
NAN_BOXED(0x5x9x7e9d38031687890365168614839943,64,FLEN)
NAN_BOXED(0xfx31a1x94e72955c8388656845665506652,64,FLEN)
NAN_BOXED(0x5x81fe2d6aba9e77882061176616427127,64,FLEN)
NAN_BOXED(0x5x6d126610309c1f876172435632200735,64,FLEN)
NAN_BOXED(0xff0058b18590588a8374783999144908938,64,FLEN)
NAN_BOXED(0x5f82339bac8ac55f882119924283262303,64,FLEN)
NAN_BOXED(0x5x8a27ff454d2247884358957722051143,64,FLEN)
NAN_BOXED(0xfx1dc15d292d6f938383061859863195539,64,FLEN)
NAN_BOXED(0x5f8287a907776fa3882212340620029859,64,FLEN)
NAN_BOXED(0x5x9c3c58b5c03e1d889447881674079773,64,FLEN)
NAN_BOXED(0xff3059a5a1c5fc288388295846472317992,64,FLEN)
NAN_BOXED(0x5f8361bbef8877ab882452115357726635,64,FLEN)
NAN_BOXED(0x5f6291d98044bfbf873216344666718143,64,FLEN)
NAN_BOXED(0xfex67ea09d8a53298372010958207472425,64,FLEN)
NAN_BOXED(0x5f841c73bbc1b00b882657413925810187,64,FLEN)
NAN_BOXED(0x5f8784c0d85e9517883616519257756951,64,FLEN)
NAN_BOXED(0xfx1d8fc37e1735058383007323793077509,64,FLEN)
NAN_BOXED(0x5x84a10e22bb3b33882803212613270323,64,FLEN)
NAN_BOXED(0x5f788b104e822b8f879401332961323919,64,FLEN)
NAN_BOXED(0xfx0fa4e1652dafbf8379089892294373311,64,FLEN)
NAN_BOXED(0x5x84a1b2df4767ef882803920151209967,64,FLEN)
NAN_BOXED(0x5fa820cd259975cf892795295161742799,64,FLEN)
NAN_BOXED(0xfx3x1cd83ce947458392451118264829765,64,FLEN)
NAN_BOXED(0x5x84cf1937fde173882853837749477747,64,FLEN)
NAN_BOXED(0x5f986d2c67f038bd888375667552958653,64,FLEN)
NAN_BOXED(0xfx2fc4a2707d3c548388132005528026196,64,FLEN)
NAN_BOXED(0x5x84dd13d82cf047882869207829901383,64,FLEN)
NAN_BOXED(0x5x7afe78faaa8367880091176316863335,64,FLEN)
NAN_BOXED(0xff119989cda129c48379640371415165380,64,FLEN)
NAN_BOXED(0x5f854fc797x61a47882995324172245575,64,FLEN)
NAN_BOXED(0x5x9c49dffex48af1889462756373990129,64,FLEN)
NAN_BOXED(0xfx32d701d20d08868388996631326165126,64,FLEN)
NAN_BOXED(0x5f86003243fdx57b883189296371463547,64,FLEN)
NAN_BOXED(0x5fa5874b6418015b892063562632003931,64,FLEN)
NAN_BOXED(0xfx3d9a4b4be8dc018392026101437750273,64,FLEN)
NAN_BOXED(0x5f8743ea0c02659b883545227961984411,64,FLEN)
NAN_BOXED(0x5x8da2a011aeffab885338213694504875,64,FLEN)
NAN_BOXED(0xff258bc84c2c83c38385254746197623747,64,FLEN)
NAN_BOXED(0x5f889f3951da2feb883927098971009003,64,FLEN)
NAN_BOXED(0x5fa24a28x97e5b1f891151919675235103,64,FLEN)
NAN_BOXED(0xfx3c253fx32fb1ce8391615934867419598,64,FLEN)
NAN_BOXED(0x5x88e041c6437953883998603539609939,64,FLEN)
NAN_BOXED(0x5fa28d94e0280abc891226050385676988,64,FLEN)
NAN_BOXED(0xfx3cd869b9915f378391812926870740791,64,FLEN)
NAN_BOXED(0x5f898cb938bd0d9b884188232561266075,64,FLEN)
NAN_BOXED(0x5fad64f454066002894277605118599170,64,FLEN)
NAN_BOXED(0xff477822b25771008394803293434376448,64,FLEN)
NAN_BOXED(0x5x8a3d5b9x8ee473884382444117484659,64,FLEN)
NAN_BOXED(0x5faeefde430a673b894711817437341499,64,FLEN)
NAN_BOXED(0xff495e366a8a4bfe8395337740780194814,64,FLEN)
NAN_BOXED(0x5x8ax0x94x18e857884579933953779799,64,FLEN)
NAN_BOXED(0x5fac2db9cc3dd583893935405616190851,64,FLEN)
NAN_BOXED(0xfx47b95970e29c118394874996815207441,64,FLEN)
NAN_BOXED(0x5x8d01c53aeb6daf885161351928049071,64,FLEN)
NAN_BOXED(0x5fac04060fa9d235893889553676489269,64,FLEN)
NAN_BOXED(0xff4965324abd1ccc8395345419648179404,64,FLEN)
NAN_BOXED(0x5x8dd01ebf317c47885388235794644039,64,FLEN)
NAN_BOXED(0x5x9d484e5c7d8c61889742506343107681,64,FLEN)
NAN_BOXED(0xfx3b47f923e94a278391372638672472615,64,FLEN)
NAN_BOXED(0x5x8e4e789d337d77885527160236506487,64,FLEN)
NAN_BOXED(0x5faaac467660ea9f893511598277716639,64,FLEN)
NAN_BOXED(0xff4942ea83cbc8f68395307727972452598,64,FLEN)
NAN_BOXED(0x5x8eea576108affb885698541307080699,64,FLEN)
NAN_BOXED(0x5x9ed04e711db0e1890173515247235297,64,FLEN)
NAN_BOXED(0xfx3dc4x0eb6c0dc88392072992271896008,64,FLEN)
NAN_BOXED(0x5x8x8cb3cb5140d7885877059110912215,64,FLEN)
NAN_BOXED(0x5x8ebb37bba609a7885646728341883303,64,FLEN)
NAN_BOXED(0xfx2e4c7dbc1f43258387718431511102245,64,FLEN)
NAN_BOXED(0x5f900ccac0a4b811886017895204435985,64,FLEN)
NAN_BOXED(0x5fa2eb6a94e9ae19891329222827683353,64,FLEN)
NAN_BOXED(0xfx42fa8ae4c6bb098393539302585187081,64,FLEN)
NAN_BOXED(0x5f903c79a41b870f886070323391465231,64,FLEN)
NAN_BOXED(0x5fa21d7278b1bb7f891102757318671231,64,FLEN)
NAN_BOXED(0xff4261ea9e7506ae8393371488443238062,64,FLEN)
NAN_BOXED(0x5f91365a93dfa50f886345067882063119,64,FLEN)
NAN_BOXED(0x5fa0d77af376928b890744352947475083,64,FLEN)
NAN_BOXED(0xff421e29395e67fa8393296990539507706,64,FLEN)
NAN_BOXED(0x5x91c256e07d7b03886498983615494915,64,FLEN)
NAN_BOXED(0x5faea5ed10729949894630517152586057,64,FLEN)
NAN_BOXED(0xff51024712dx5dce8397488457067748814,64,FLEN)
NAN_BOXED(0x5f9237c293c04d53886628089044946259,64,FLEN)
NAN_BOXED(0x5fa468e8279a5120891748676089827616,64,FLEN)
NAN_BOXED(0xff473d25fx0dc05a8394738436420255834,64,FLEN)
NAN_BOXED(0x5f92887dc585eda5886716853969087909,64,FLEN)
NAN_BOXED(0x5faf79012fbad378894862600530219896,64,FLEN)
NAN_BOXED(0xff523a4ea2d53b5d8397831537175640925,64,FLEN)
NAN_BOXED(0x5x92a9ac14416973886753336742209907,64,FLEN)
NAN_BOXED(0x5fa3eb682e8c47fa891610687497062394,64,FLEN)
NAN_BOXED(0xff473c11eca120ef8394737250700173551,64,FLEN)
NAN_BOXED(0x5x92de4fx93x2d49886811215268359497,64,FLEN)
NAN_BOXED(0x5f454cb8485c10ff864977561367875839,64,FLEN)
NAN_BOXED(0xfee91e4244ef84168368245825180501014,64,FLEN)
NAN_BOXED(0x5x92x7ee631fefc5886839383440224197,64,FLEN)
NAN_BOXED(0x5x8da8557b559e8b885344490414251659,64,FLEN)
NAN_BOXED(0xff319478590a4d1b8388641998141279515,64,FLEN)
NAN_BOXED(0x5f9308800ab9a08f886857601208393871,64,FLEN)
NAN_BOXED(0x5x9b9343c1265853889261974205913171,64,FLEN)
NAN_BOXED(0xff4066c361ec0d888392813867528621448,64,FLEN)
NAN_BOXED(0x5f93943b61964e33887011237940842035,64,FLEN)
NAN_BOXED(0x5faae64a7b19x21e893575387211231774,64,FLEN)
NAN_BOXED(0xff5075573c327db88397333495341022648,64,FLEN)
NAN_BOXED(0x5x93bd530bfc7921887056419560651041,64,FLEN)
NAN_BOXED(0x5fa4c524788895e4891850090215413220,64,FLEN)
NAN_BOXED(0xff499fdfdc2e77fd8395409936792057853,64,FLEN)
NAN_BOXED(0x5x93cfe1da6d26d5887076824118798037,64,FLEN)
NAN_BOXED(0x5faea2b5073270ea894626977944334570,64,FLEN)
NAN_BOXED(0xfx52x7a038724c978398039695275740311,64,FLEN)
NAN_BOXED(0x5f943e5b36b50bcd887198291637111757,64,FLEN)
NAN_BOXED(0x5x7a1fe3e0c64717879846444350981911,64,FLEN)
NAN_BOXED(0xff2086d6ad59125b8383841935515783771,64,FLEN)
NAN_BOXED(0x5f943f16419dx5f9887199094979032569,64,FLEN)
NAN_BOXED(0x5fada33x11fe6a09894346095854250505,64,FLEN)
NAN_BOXED(0xfx52c0756c6bb0608397979038324600928,64,FLEN)
NAN_BOXED(0x5f946086cad941b7887235862201450935,64,FLEN)
NAN_BOXED(0x5x73cx8a4ab5f917878069248790755607,64,FLEN)
NAN_BOXED(0xff193af100731ef88381788160858463992,64,FLEN)
NAN_BOXED(0x5x94c7591e8478db887348915734345947,64,FLEN)
NAN_BOXED(0x5fa662e40f571128892305011386552616,64,FLEN)
NAN_BOXED(0xfx4d1287b872fa3a8396380427002772026,64,FLEN)
NAN_BOXED(0x5x94cf244963827f887357484913361535,64,FLEN)
NAN_BOXED(0x5f817x4cd829a48b881921673619678347,64,FLEN)
NAN_BOXED(0xfx26c1a6ax0x2fc78385595450432368583,64,FLEN)
NAN_BOXED(0x5f9588877f85511b887561320674447643,64,FLEN)
NAN_BOXED(0x5x97dbc6852x0d29888215800770923817,64,FLEN)
NAN_BOXED(0xff400e05595e0c438392716294318066755,64,FLEN)
NAN_BOXED(0x5f9594e913e8fb89887574933915368329,64,FLEN)
NAN_BOXED(0x5x5x8ce1a7792dff872366457195933183,64,FLEN)
NAN_BOXED(0xff05474576fa7d6e8376172218229620078,64,FLEN)
NAN_BOXED(0x5x95e77a2a3ex6e5887665717013837541,64,FLEN)
NAN_BOXED(0x5fac1d568ee159cf893917387198912975,64,FLEN)
NAN_BOXED(0xff533e9feb9321c98398117759311618505,64,FLEN)
NAN_BOXED(0x5f9670e7d1c3c471887816821068776561,64,FLEN)
NAN_BOXED(0x5f862964c066279b883234593183770523,64,FLEN)
NAN_BOXED(0xfx2f154d61x9b7f28387939225677445106,64,FLEN)
NAN_BOXED(0x5x96a47222e524ad887873490228421805,64,FLEN)
NAN_BOXED(0x5faf6428fb6x94fe894839681707382014,64,FLEN)
NAN_BOXED(0xff56362d75f286538398952896548996691,64,FLEN)
NAN_BOXED(0x5x96a6b1b54b21cf887875962290774479,64,FLEN)
NAN_BOXED(0x5fac405091d199ee893955844385380846,64,FLEN)
NAN_BOXED(0xfx53fx61ea004c008398329698741406720,64,FLEN)
NAN_BOXED(0x5x96e2aa97ad4287887941902426784391,64,FLEN)
NAN_BOXED(0x5x9d4012b921b92d889733454106310957,64,FLEN)
NAN_BOXED(0xfx44eb3d528adc8c8394085426698312844,64,FLEN)
NAN_BOXED(0x5x96fcb8489dc591887970548532233617,64,FLEN)
NAN_BOXED(0x5fad5d579f837c3e894269235493829694,64,FLEN)
NAN_BOXED(0xff5518146b0d327a8398638328666468986,64,FLEN)
NAN_BOXED(0x5f97840b0a77fbbb888119338041605051,64,FLEN)
NAN_BOXED(0x5f994a97c3dx3b51888619120726588241,64,FLEN)
NAN_BOXED(0xff4295f980baba928393428726973643410,64,FLEN)
NAN_BOXED(0x5f98522a1b638e23888345970864786979,64,FLEN)
NAN_BOXED(0x5fac898a0b894837894036355589425207,64,FLEN)
NAN_BOXED(0xfx55b06d875689d58398805837160548821,64,FLEN)
NAN_BOXED(0x5f987814b483b2ff888387660386382591,64,FLEN)
NAN_BOXED(0x5x9c56d7d1a2a465889477014905070693,64,FLEN)
NAN_BOXED(0xfx45ab79dcb0203d8394296792946581565,64,FLEN)
NAN_BOXED(0x5x98ad1c84b735e1888445968060462561,64,FLEN)
NAN_BOXED(0x5f661932b2d37baf874209586766904239,64,FLEN)
NAN_BOXED(0xff110a71x1e837028379483038781814530,64,FLEN)
NAN_BOXED(0x5f9908348cc50075888546126832926837,64,FLEN)
NAN_BOXED(0x5fa0f993cf648277890781843111838327,64,FLEN)
NAN_BOXED(0xfx4a8eab7e6deee18395672495159897825,64,FLEN)
NAN_BOXED(0x5f99262273e53737888579034455029559,64,FLEN)
NAN_BOXED(0x5fa07943814fd4f4890640760716121332,64,FLEN)
NAN_BOXED(0xfx49e4bcf362e2c28395485653159830210,64,FLEN)
NAN_BOXED(0x5f997b629a826ff3888672768469135347,64,FLEN)
NAN_BOXED(0x5fa98715cd327a81893189232373955201,64,FLEN)
NAN_BOXED(0xff5453x6ed1115298398422697719698729,64,FLEN)
NAN_BOXED(0x5x99c63a6687c333888755059170460467,64,FLEN)
NAN_BOXED(0x5fa557d56987bca8892011378870566056,64,FLEN)
NAN_BOXED(0xff5130d5268457878397539644817561479,64,FLEN)
NAN_BOXED(0x5x9ac0c7cx6e58fb889030544427735291,64,FLEN)
NAN_BOXED(0x5fa0cd5422534b0d890733191113689869,64,FLEN)
NAN_BOXED(0xfx4c181a7cfdfdf58396105079946870261,64,FLEN)
NAN_BOXED(0x5x9add465d39fd03889061874298125571,64,FLEN)
NAN_BOXED(0x5f52774cd9885b7f868683553644239743,64,FLEN)
NAN_BOXED(0xfeff013dec82d3878374406370167542663,64,FLEN)
NAN_BOXED(0x5x9ae7cb22e21faf889073439666216879,64,FLEN)
NAN_BOXED(0x5f9002e328b68fcd886007004913373133,64,FLEN)
NAN_BOXED(0xfx3aeca6194ef5298391272226454172969,64,FLEN)
NAN_BOXED(0x5x9b12b5923ada87889120626045016711,64,FLEN)
NAN_BOXED(0x5fa0d68c4b00b1ad890743327918961069,64,FLEN)
NAN_BOXED(0xfx4c7dbd315c4cf68396216829432057078,64,FLEN)
NAN_BOXED(0x5x9b8178fb8c7f25889242411609653029,64,FLEN)
NAN_BOXED(0x5fa8ebf551167019893018668550483993,64,FLEN)
NAN_BOXED(0xff556bec6a19x8a88398730515828570280,64,FLEN)
NAN_BOXED(0x5x9b9017651b96db889258485148260059,64,FLEN)
NAN_BOXED(0x5f992fa0166dea3d888589469657459261,64,FLEN)
NAN_BOXED(0xfx45b197cd20c4928394303518604313746,64,FLEN)
NAN_BOXED(0x5x9c787db4043bd9889514011256437721,64,FLEN)
NAN_BOXED(0x5f912adb3735ac6d886332426238667885,64,FLEN)
NAN_BOXED(0xfx3e8c47ecb34cba8392292168769424570,64,FLEN)
NAN_BOXED(0x5x9d17c6c95aefed889689147495870445,64,FLEN)
NAN_BOXED(0x5x9a5ac383168515888918375781008661,64,FLEN)
NAN_BOXED(0xfx47x5d622c15cd48394941503072984276,64,FLEN)
NAN_BOXED(0x5x9d800e87943x0d889803804839264013,64,FLEN)
NAN_BOXED(0x5fa680debcf012e2892337973878067938,64,FLEN)
NAN_BOXED(0xfx54bed78de6b01b8398540210723270683,64,FLEN)
NAN_BOXED(0x5x9d81392ace6303889805087478014723,64,FLEN)
NAN_BOXED(0x5fa22aa3d2e74e72891117262936690290,64,FLEN)
NAN_BOXED(0xfx50c000cfccc4f18397415587527312625,64,FLEN)
NAN_BOXED(0x5x9d87afx53d41f5889812194750185973,64,FLEN)
NAN_BOXED(0x5fa0x8ac8cffe63e890780849860503102,64,FLEN)
NAN_BOXED(0xfx4x52a5937592dd8397013873928803037,64,FLEN)
NAN_BOXED(0x5x9da577e11e08d7889844939243260119,64,FLEN)
NAN_BOXED(0x5fa81d54dd6137b5892791480019138485,64,FLEN)
NAN_BOXED(0xff5657467cee0de28398989287924043234,64,FLEN)
NAN_BOXED(0x5x9e3d6d32e17fa5890012019137806245,64,FLEN)
NAN_BOXED(0x5faec884da30b843894668552472672323,64,FLEN)
NAN_BOXED(0xfx5d1713d5c45d1a8400889026463948058,64,FLEN)
NAN_BOXED(0x5x9e4204ffab96f7890017069160175351,64,FLEN)
NAN_BOXED(0x5x8cde16617ec93f885122118048991551,64,FLEN)
NAN_BOXED(0xfx3b4bc38bx74baa8391376806536498090,64,FLEN)
NAN_BOXED(0x5x9e68dd9c514393890059780943070099,64,FLEN)
NAN_BOXED(0x5f6878222f2318df874876919396112607,64,FLEN)
NAN_BOXED(0xff1740cfx07df9558381231665973164373,64,FLEN)
NAN_BOXED(0x5x9f1860e3b4eb81890252759316360065,64,FLEN)
NAN_BOXED(0x5x8aa7d58e3b9047884499516045365319,64,FLEN)
NAN_BOXED(0xfx39e6e57722524a8390984426564768330,64,FLEN)
NAN_BOXED(0x5x9f4853a4c5bef9890305478984056569,64,FLEN)
NAN_BOXED(0x5f909a18dc6373ff886173261816886271,64,FLEN)
NAN_BOXED(0xff403ace329d0aed8392765535467932397,64,FLEN)
NAN_BOXED(0x5fa01559da52cc50890530905535990864,64,FLEN)
NAN_BOXED(0x5fa61457deedafab892218647371952043,64,FLEN)
NAN_BOXED(0xff5631ce90b27x1d8398948090929381149,64,FLEN)
NAN_BOXED(0x5fa017c339d75e4d890533557133336141,64,FLEN)
NAN_BOXED(0x5x5c30407e58dcff871420185016327423,64,FLEN)
NAN_BOXED(0xfx0c5a1dcd07d4e08378163263432545504,64,FLEN)
NAN_BOXED(0x5fa022ce6a3fae64890545699818024548,64,FLEN)
NAN_BOXED(0x5fa09163be078882890667287452813442,64,FLEN)
NAN_BOXED(0xfx50b56e6fe4acfd8397403963736763645,64,FLEN)
NAN_BOXED(0x5fa043a8c3aa6439890581821993149497,64,FLEN)
NAN_BOXED(0x5faf788de2d51675894862105318856309,64,FLEN)
NAN_BOXED(0xfx5ffda2a7a927c28401705477498546114,64,FLEN)
NAN_BOXED(0x5fa053533036dba9890599046633151401,64,FLEN)
NAN_BOXED(0x5x9ee098e2310cc3890191427157953731,64,FLEN)
NAN_BOXED(0xfx4f8166856b29278397065280156805415,64,FLEN)
NAN_BOXED(0x5fa05e381015d598890611024757904792,64,FLEN)
NAN_BOXED(0x5fa2982d565d88fc891237700320200956,64,FLEN)
NAN_BOXED(0xff5305ac88092a158398055141313423893,64,FLEN)
NAN_BOXED(0x5fa0616a9d776586890614540413134214,64,FLEN)
NAN_BOXED(0x5fade497aebca743894417944696891203,64,FLEN)
NAN_BOXED(0xfx5e9a98b6ex06d38401315108177250003,64,FLEN)
NAN_BOXED(0x5fa09d5da3d7b9db890680455383202267,64,FLEN)
NAN_BOXED(0x5fad7c8570796fe8894303517133598696,64,FLEN)
NAN_BOXED(0xfx5e9e87dx92d4728401319433891140722,64,FLEN)
NAN_BOXED(0x5fa0a9dx4ead8eb3890694206439657139,64,FLEN)
NAN_BOXED(0x5x9db8c7d3a18027889866173335306279,64,FLEN)
NAN_BOXED(0xfx4ef45663d524c88396910179734332616,64,FLEN)
NAN_BOXED(0x5fa0b731e88bc69f890708854859613855,64,FLEN)
NAN_BOXED(0x5fab5380491038ac893695465067395244,64,FLEN)
NAN_BOXED(0xfx5c8c6091363ebd8400736523910004413,64,FLEN)
NAN_BOXED(0x5fa0bb792159b051890713558801821777,64,FLEN)
NAN_BOXED(0x5fa5d1ae1e1d28a7892145350520154279,64,FLEN)
NAN_BOXED(0xfx56d155x04ca7168399123494702720790,64,FLEN)
NAN_BOXED(0x5fa0bc55b64ea25c890714506193707612,64,FLEN)
NAN_BOXED(0x5fab0d4dc0773572893618282213356914,64,FLEN)
NAN_BOXED(0xfx5c4bbafcf6046a8400665444008985706,64,FLEN)
NAN_BOXED(0x5fa13bx56ad82c8a890854830099147914,64,FLEN)
NAN_BOXED(0x5fad453x7d35f923894242743560042787,64,FLEN)
NAN_BOXED(0xfx5f8743c6f979f88401575327629933048,64,FLEN)
NAN_BOXED(0x5fa1efb36cb5b1e4891052458755600868,64,FLEN)
NAN_BOXED(0x5x8e394ab3b08c6b885503873301122155,64,FLEN)
NAN_BOXED(0xfx40x0d50c8aae868392965676010221190,64,FLEN)
NAN_BOXED(0x5fa1ffb1e4665b2c891070044359777068,64,FLEN)
NAN_BOXED(0x5x9e4206922dd131890017075913150769,64,FLEN)
NAN_BOXED(0xff5104d9d730c4468397491286449898566,64,FLEN)
NAN_BOXED(0x5fa2c2600e5225e4891284097643193828,64,FLEN)
NAN_BOXED(0x5f8882e3a7d63c53883895944720825427,64,FLEN)
NAN_BOXED(0xfx3cbd064c6a588c8391782813023754380,64,FLEN)
NAN_BOXED(0x5fa2d0716da06e3c891299565419392572,64,FLEN)
NAN_BOXED(0x5x93f541e5d8x1c1887117918557499841,64,FLEN)
NAN_BOXED(0xff4777ebf8206a8e8394803058381974158,64,FLEN)
NAN_BOXED(0x5fa30b95bd887309891364592564859657,64,FLEN)
NAN_BOXED(0x5fac37d95ex26f70893946536337764208,64,FLEN)
NAN_BOXED(0xfx60cb604e46e63f8401931691926414911,64,FLEN)
NAN_BOXED(0x5fa31x03x05cb87a891385956584962170,64,FLEN)
NAN_BOXED(0x5fa2d0e69e0aad85891300068742835589,64,FLEN)
NAN_BOXED(0xff567c8b3c54adc38399030265123220931,64,FLEN)
NAN_BOXED(0x5fa36aeb78249790891469414372513680,64,FLEN)
NAN_BOXED(0x5fa299392ab99898891238850639272088,64,FLEN)
NAN_BOXED(0xff56923cb396cbfc8399054117077437436,64,FLEN)
NAN_BOXED(0x5fa3b00ab682d289891545414865179273,64,FLEN)
NAN_BOXED(0x5fa7c23aaefd9f67892691312013582183,64,FLEN)
NAN_BOXED(0xfx5d3c0e1dba5ec68400929683831676614,64,FLEN)
NAN_BOXED(0x5fa3d2d3ax7c48ae891583661431081134,64,FLEN)
NAN_BOXED(0x5f9447163c5b6799887207890983806873,64,FLEN)
NAN_BOXED(0xff491x9bb360fce88395268906561371368,64,FLEN)
NAN_BOXED(0x5fa3ed0f2697260f891612504134723087,64,FLEN)
NAN_BOXED(0x5fab79b2b1934a01893737463011035649,64,FLEN)
NAN_BOXED(0xff611bcc6x10ad2d8402020117263199533,64,FLEN)
NAN_BOXED(0x5fa4038aec1813f9891637224985072633,64,FLEN)
NAN_BOXED(0x5fa7c017850ccx9e892688961962823582,64,FLEN)
NAN_BOXED(0xfx5db55fa1x8ea2e8401063074849679918,64,FLEN)
NAN_BOXED(0x5fa41176abd4258d891652531170321805,64,FLEN)
NAN_BOXED(0x5x8aeb9622c6891f884574010450282783,64,FLEN)
NAN_BOXED(0xfx40e1eed2c5920c8392949294035735052,64,FLEN)
NAN_BOXED(0x5fa440c579831418891704546675069976,64,FLEN)
NAN_BOXED(0x5f999ddc9e77cb45888710675916901189,64,FLEN)
NAN_BOXED(0xff503683b163d6bf8397264417053202111,64,FLEN)
NAN_BOXED(0x5fa45088c7a8eddc891721878179212764,64,FLEN)
NAN_BOXED(0x5x47c4c7501c707f865672517271187583,64,FLEN)
NAN_BOXED(0xfefe2d9c39eca63e8374173678728160830,64,FLEN)
NAN_BOXED(0x5fa477c4d4dd15f5891765017052255733,64,FLEN)
NAN_BOXED(0x5fadbfa105179648894377302870169160,64,FLEN)
NAN_BOXED(0xff63071c3d96ff708402560320239763312,64,FLEN)
NAN_BOXED(0x5fa48949a9851x6d891784279253393261,64,FLEN)
NAN_BOXED(0x5x8b318d9af479ef884650939625798127,64,FLEN)
NAN_BOXED(0xff4173a3403210e18393109498151702753,64,FLEN)
NAN_BOXED(0x5fa4c791addc9912891852758284802322,64,FLEN)
NAN_BOXED(0x5f697b02x6ed223f875161558820659775,64,FLEN)
NAN_BOXED(0xff208bcad499e6958383847382192875157,64,FLEN)
NAN_BOXED(0x5fa511a1344303ed891934188824626157,64,FLEN)
NAN_BOXED(0x5fa82640d65dc24c892801289606775372,64,FLEN)
NAN_BOXED(0xfx5fccd10e0cb8878401651800715081863,64,FLEN)
NAN_BOXED(0x5fa56e6e736a538e892036225422218126,64,FLEN)
NAN_BOXED(0x5x93b881fa033e19887051123564428825,64,FLEN)
NAN_BOXED(0xfx4a6a473879e2308395632482070946352,64,FLEN)
NAN_BOXED(0x5fa56eb5abeex1c8892036531313111496,64,FLEN)
NAN_BOXED(0x5f778842cac09a97879116776282561175,64,FLEN)
NAN_BOXED(0xfx2x85aba7a205038388062775875339523,64,FLEN)
NAN_BOXED(0x5fa597fb1bb06230892081909517541936,64,FLEN)
NAN_BOXED(0x5f956ed923aca873887533084018518131,64,FLEN)
NAN_BOXED(0xfx4ced138018ff798396339245910916985,64,FLEN)
NAN_BOXED(0x5fa5b608176286de892114950628738782,64,FLEN)
NAN_BOXED(0x5x97ec25e17b909b888233802527379611,64,FLEN)
NAN_BOXED(0xff503b0dfff0614c8397269409123033420,64,FLEN)
NAN_BOXED(0x5fa5bb8442cbfc28892120981491153960,64,FLEN)
NAN_BOXED(0x5fad65025c565597894277665387599255,64,FLEN)
NAN_BOXED(0xfx63f6895069b2d98402823571986035417,64,FLEN)
NAN_BOXED(0x5fa5cb9025515212892138624722227730,64,FLEN)
NAN_BOXED(0x5x9c160cd96157af889405774412470191,64,FLEN)
NAN_BOXED(0xff532122d42593f98398085336210445305,64,FLEN)
NAN_BOXED(0x5fa62a35ac6bee41892242689751510593,64,FLEN)
NAN_BOXED(0x5f5942c54f20963f870596121733928511,64,FLEN)
NAN_BOXED(0xff117x39a81124ff8379611439885264127,64,FLEN)
NAN_BOXED(0x5fa67fb4908ceaaf892336693233117871,64,FLEN)
NAN_BOXED(0x5fa65eaa9e302952892300366628530514,64,FLEN)
NAN_BOXED(0xfx5x74b676e24eb88401554929486548664,64,FLEN)
NAN_BOXED(0x5fa6bc16c6eccc22892403085749832738,64,FLEN)
NAN_BOXED(0x5fadf93331a60977894440602845710711,64,FLEN)
NAN_BOXED(0xff654b80948cc1ed8403198467939549677,64,FLEN)
NAN_BOXED(0x5fa6c53c0ba0796d892413141420898669,64,FLEN)
NAN_BOXED(0x5fac43588ddd7fbc893959177213673404,64,FLEN)
NAN_BOXED(0xff641c80833c8fd58402865315625865173,64,FLEN)
NAN_BOXED(0x5fa6e444c20e8184892447263701762436,64,FLEN)
NAN_BOXED(0x5f9076x4d15b455d886134624106005853,64,FLEN)
NAN_BOXED(0xff478e7681c693888394827842652640136,64,FLEN)
NAN_BOXED(0x5fa6f1586709a287892461641725223559,64,FLEN)
NAN_BOXED(0x5f6051aac3a28d5f872582825235877215,64,FLEN)
NAN_BOXED(0xff176673136505d28381273048568628690,64,FLEN)
NAN_BOXED(0x5fa6f674621915da892467259459573210,64,FLEN)
NAN_BOXED(0x5fa03a0fx71fb0c2890571270121828546,64,FLEN)
NAN_BOXED(0xff5749c8b1b3ec9a8399255928969096346,64,FLEN)
NAN_BOXED(0x5fa7291f0459edd6892522967907560918,64,FLEN)
NAN_BOXED(0x5x8ed4ae61a16dab885674725723434411,64,FLEN)
NAN_BOXED(0xff46507bb7d346b28394478220336645810,64,FLEN)
NAN_BOXED(0x5fa72925e5d38221892522997460206113,64,FLEN)
NAN_BOXED(0x5x9f2498354565a7890266191047517607,64,FLEN)
NAN_BOXED(0xff568a592b49d8c08399045443251722432,64,FLEN)
NAN_BOXED(0x5fa757c41e46ee0f892574254547004943,64,FLEN)
NAN_BOXED(0x5fa367fd258b0b63891466191761247075,64,FLEN)
NAN_BOXED(0xfx5c4fef350a12aa8400670066334634666,64,FLEN)
NAN_BOXED(0x5fa7c30cfd9902ca892692215275520714,64,FLEN)
NAN_BOXED(0x5fa8083feedax3d3892768300373832659,64,FLEN)
NAN_BOXED(0xfx61d869fad102128402227502103724562,64,FLEN)
NAN_BOXED(0x5fa7dc0x47a5db15892719712898505493,64,FLEN)
NAN_BOXED(0x5fa5124f30535e0b891934936082898443,64,FLEN)
NAN_BOXED(0xfx5x6c21b5d63b888401545494499572616,64,FLEN)
NAN_BOXED(0x5fa820702d63fac0892794895860497088,64,FLEN)
NAN_BOXED(0x5f863bca2c276bab883254819992595371,64,FLEN)
NAN_BOXED(0xfx40c3615c16de368392915701105352246,64,FLEN)
NAN_BOXED(0x5fa82e62659b7x9b892810229836906395,64,FLEN)
NAN_BOXED(0x5fab9927e27c836d893772051203261293,64,FLEN)
NAN_BOXED(0xfx64dadeefde9cf68403074628384627958,64,FLEN)
NAN_BOXED(0x5fa82x53e1b1e100892811267005866240,64,FLEN)
NAN_BOXED(0x5f789d942a85e30f879421690502570767,64,FLEN)
NAN_BOXED(0xff329a9717d7fbb78388930202237926327,64,FLEN)
NAN_BOXED(0x5fa85eb50a9b65e8892863361350591976,64,FLEN)
NAN_BOXED(0x5x9bee6f48112ca9889362216711171241,64,FLEN)
NAN_BOXED(0xff55457de2d82a388398688259671075384,64,FLEN)
NAN_BOXED(0x5fa87dc8b1x4a7b7892897530623076279,64,FLEN)
NAN_BOXED(0x5faf9492e51e93d3894892913157641171,64,FLEN)
NAN_BOXED(0xff682b9099db45368404007777306101046,64,FLEN)
NAN_BOXED(0x5fa882d3626badfd892903074091478525,64,FLEN)
NAN_BOXED(0x5fa7ada4a02edef8892668677287501560,64,FLEN)
NAN_BOXED(0xff6223094eb6db608402309550271552352,64,FLEN)
NAN_BOXED(0x5fa88b452334d482892912358750213250,64,FLEN)
NAN_BOXED(0x5f898a767463fb7b884185746775997307,64,FLEN)
NAN_BOXED(0xff439701787d960d8393711335683495437,64,FLEN)
NAN_BOXED(0x5fa894eb52d7a53a892922968118633786,64,FLEN)
NAN_BOXED(0x5fa3883363d45ce5891501609106562277,64,FLEN)
NAN_BOXED(0xfx5e021836ae09378401147430502271287,64,FLEN)
NAN_BOXED(0x5fa8deeb902c377e893004333008041854,64,FLEN)
NAN_BOXED(0x5fa7270fced2be29892520703561743913,64,FLEN)
NAN_BOXED(0xfx61fe9547x4c0808402269469523361920,64,FLEN)
NAN_BOXED(0x5fa9199ba7fdacbd893068860996299965,64,FLEN)
NAN_BOXED(0x5x99e32e020ad6fd888786891782149885,64,FLEN)
NAN_BOXED(0xff544e3359d7ba4f8398416360172927567,64,FLEN)
NAN_BOXED(0x5fa932903b557086893096299719389318,64,FLEN)
NAN_BOXED(0x5faba615dee0d545893786267484476741,64,FLEN)
NAN_BOXED(0xfx65c57136x25b958403332542363229077,64,FLEN)
NAN_BOXED(0x5fa97170988aa151893165433076752721,64,FLEN)
NAN_BOXED(0x5x8dd895344c54d7885397540658500823,64,FLEN)
NAN_BOXED(0xfx47bb02640c98108394876821960955920,64,FLEN)
NAN_BOXED(0x5fa97787813faa38893172128539978296,64,FLEN)
NAN_BOXED(0x5fa4e8baea923265891889219280712293,64,FLEN)
NAN_BOXED(0xfx60a3ec08a2dx8e8401888311588347790,64,FLEN)
NAN_BOXED(0x5fa9881bee04c84c893190358206040140,64,FLEN)
NAN_BOXED(0x5fa41f756c5b46c8891667918973257416,64,FLEN)
NAN_BOXED(0xff600e2affebe1df8401723655280910815,64,FLEN)
NAN_BOXED(0x5fa9889fc2d44e5e893190924417125982,64,FLEN)
NAN_BOXED(0x5f421d9040c119bf864081287464950207,64,FLEN)
NAN_BOXED(0xfefce8e191b47a978373816635274590871,64,FLEN)
NAN_BOXED(0x5fa99b4caa7ee21f893211458247516703,64,FLEN)
NAN_BOXED(0x5fa6b435c9707703892394422842980099,64,FLEN)
NAN_BOXED(0xff622ax94edeb7e78402318277647710183,64,FLEN)
NAN_BOXED(0x5faa1d3ea060b239893354334459834937,64,FLEN)
NAN_BOXED(0x5f518c773392efff868425350310981631,64,FLEN)
NAN_BOXED(0xfx0ca454fc10de738378244864305323635,64,FLEN)
NAN_BOXED(0x5faa2bda964d91ae893370397468496302,64,FLEN)
NAN_BOXED(0x5f789000c246f107879406763742261511,64,FLEN)
NAN_BOXED(0xff3416a9e7426c8f8389348097445751951,64,FLEN)
NAN_BOXED(0x5faa321af726492d893377271040985389,64,FLEN)
NAN_BOXED(0x5f98450b36da4f99888331544530407321,64,FLEN)
NAN_BOXED(0xfx53de1971a22a668398293103600609894,64,FLEN)
NAN_BOXED(0x5faa56aface5eb97893417492163980183,64,FLEN)
NAN_BOXED(0x5faabc379493ex0f893529126545911567,64,FLEN)
NAN_BOXED(0xff660159c3db36d88403398412345751256,64,FLEN)
NAN_BOXED(0x5faa613e194097b8893429098983495608,64,FLEN)
NAN_BOXED(0x5f9377828aab6e99886979657735564953,64,FLEN)
NAN_BOXED(0xff500c421b49377d8397217955873634173,64,FLEN)
NAN_BOXED(0x5faac08ec2b88c86893533899028728966,64,FLEN)
NAN_BOXED(0x5x92fe2d0b2849b1886846249617082801,64,FLEN)
NAN_BOXED(0xfx4fc19cc59c12368397135881906164278,64,FLEN)
NAN_BOXED(0x5faae70dafae96a3893576225612011171,64,FLEN)
NAN_BOXED(0x5x77cb7e10454cbf879190698131016895,64,FLEN)
NAN_BOXED(0xff340125908ba5238389324439311066403,64,FLEN)
NAN_BOXED(0x5fab33c7d55682c1893660587991401153,64,FLEN)
NAN_BOXED(0x5fa48300cd907da9891777369255738793,64,FLEN)
NAN_BOXED(0xff616fb98e25x7e48402112395157043172,64,FLEN)
NAN_BOXED(0x5fab442x12e7354a893678623591970122,64,FLEN)
NAN_BOXED(0x5x8cccc36886926f885103069986984559,64,FLEN)
NAN_BOXED(0xff488a225d31ex0e8395104558191865614,64,FLEN)
NAN_BOXED(0x5fabfe0x0fcad936893882995263592758,64,FLEN)
NAN_BOXED(0x5f80531d684ae65b881591616391013979,64,FLEN)
NAN_BOXED(0xfx3c8f7870de7e0c8391732725726739980,64,FLEN)
NAN_BOXED(0x5fac4x4bdbe3ee53893972316827676243,64,FLEN)
NAN_BOXED(0x5x79b7932c7ac007879731748519460871,64,FLEN)
NAN_BOXED(0xfx36c05af139ac4c8390097625240677452,64,FLEN)
NAN_BOXED(0x5fac9815c3b1adfc894052348842323452,64,FLEN)
NAN_BOXED(0x5x87dd98b509becf883714203401174735,64,FLEN)
NAN_BOXED(0xff4553526f238a148394199866581682708,64,FLEN)
NAN_BOXED(0x5fac982355c85538894052407127856440,64,FLEN)
NAN_BOXED(0x5fa97x0ea9a89f82893180405619924866,64,FLEN)
NAN_BOXED(0xfx66c864816a930c8403617261289640716,64,FLEN)
NAN_BOXED(0x5faca057fc89126a894061429356827242,64,FLEN)
NAN_BOXED(0x5fad7eea06dfbab7894306148176870071,64,FLEN)
NAN_BOXED(0xfx6a62d871x82fff8404631508967501823,64,FLEN)
NAN_BOXED(0x5fad02d0afa24812894169699897198610,64,FLEN)
NAN_BOXED(0x5fa8698ed174ff65892875291810922341,64,FLEN)
NAN_BOXED(0xff6621cx3adc82a48403434101225587364,64,FLEN)
NAN_BOXED(0x5fad0b7x9b429ef3894179247267684083,64,FLEN)
NAN_BOXED(0x5f887fe27fx3fe2f883892641221836335,64,FLEN)
NAN_BOXED(0xff463cb2ec3a789b8394456467206469787,64,FLEN)
NAN_BOXED(0x5fad0dd93a77236c894181831214048108,64,FLEN)
NAN_BOXED(0x5f91292a3e2f1241886330566634836545,64,FLEN)
NAN_BOXED(0xfx4f29770009c3fd8396968593910252541,64,FLEN)
NAN_BOXED(0x5fad486b68b34be3894246230729378787,64,FLEN)
NAN_BOXED(0x5x73cc532c905347878065713526887239,64,FLEN)
NAN_BOXED(0xff321dx98f84296c8388793186199021932,64,FLEN)
NAN_BOXED(0x5fad98396dfe04dc894333977000019164,64,FLEN)
NAN_BOXED(0x5fa006e3d60fc2f8890515005495558904,64,FLEN)
NAN_BOXED(0xfx5da4x7ef2734178401045037281915927,64,FLEN)
NAN_BOXED(0x5fadedbc42e4ee38894427997406031416,64,FLEN)
NAN_BOXED(0x5f7398aa070366df878008911954405087,64,FLEN)
NAN_BOXED(0xff3253x00b7cffec8388852518957154284,64,FLEN)
NAN_BOXED(0x5fadf0325e8750cf894430703699054799,64,FLEN)
NAN_BOXED(0x5fa81cx3ffe0cb08892791063986096904,64,FLEN)
NAN_BOXED(0xff668x3c3a5b118b8403554416135967115,64,FLEN)
NAN_BOXED(0x5fae8bc5f44515f5894601761873794549,64,FLEN)
NAN_BOXED(0x5x59x3f7053b60bf870790948800651455,64,FLEN)
NAN_BOXED(0xfx18c613d9eb60388381659667675439160,64,FLEN)
NAN_BOXED(0x5fae8ce066e96229894602974977942057,64,FLEN)
NAN_BOXED(0x5fa9bd3c29ad0568893248770762147176,64,FLEN)
NAN_BOXED(0xff6892b8cdb4965c8404121199672333916,64,FLEN)
NAN_BOXED(0x5fae97d52x73d2ed894615021430756077,64,FLEN)
NAN_BOXED(0x5fae549a4f656ebe894541101284552382,64,FLEN)
NAN_BOXED(0xfx6cfx39x2b2e98b8405366401506404747,64,FLEN)
NAN_BOXED(0x5faea594439af755894630135758780245,64,FLEN)
NAN_BOXED(0x5x96a7fe63869fed887877391143051245,64,FLEN)
NAN_BOXED(0xfx55b2b9add5649b8398808363247166619,64,FLEN)
NAN_BOXED(0x5faeb61e2d5d3c7a894648320277167226,64,FLEN)
NAN_BOXED(0x5f9095092a183e33886167696842964531,64,FLEN)
NAN_BOXED(0xfx4fd42fbda1420a8397156304341778954,64,FLEN)
NAN_BOXED(0x5faed1da04d72f12894678813865094930,64,FLEN)
NAN_BOXED(0x5fa7536733396cf8892569457419971832,64,FLEN)
NAN_BOXED(0xff66772865c2b9c38403527942685768131,64,FLEN)
NAN_BOXED(0x5faex0f52001dd13894713015145454867,64,FLEN)
NAN_BOXED(0x5f9774135045aad3888101781386406611,64,FLEN)
NAN_BOXED(0xfx56ad6c5444aa358399084008450599477,64,FLEN)
NAN_BOXED(0x5faf849379fb9b6b894875323469110123,64,FLEN)
NAN_BOXED(0x5fafa550bd9aed1a894911320724532506,64,FLEN)
NAN_BOXED(0xfx6x2b41fcc907748405977764500408180,64,FLEN)
NAN_BOXED(0x5fafa2ea1x3d3ef9894908680957673209,64,FLEN)
NAN_BOXED(0x5fa4bd16a0267938891841234657507640,64,FLEN)
NAN_BOXED(0xff6480c2e8a45a7b8402975551957785211,64,FLEN)
NAN_BOXED(0x5fafd32694fcaecb894961717189324491,64,FLEN)
NAN_BOXED(0x5x8dc1b3eb6c004b885372383812386891,64,FLEN)
NAN_BOXED(0xfx4d97fx66f9700f8396527176078422031,64,FLEN)
NAN_BOXED(0x5fafd58fd60948f9894964368275491065,64,FLEN)
NAN_BOXED(0x5fae61729d7cfd5e894555224447188318,64,FLEN)
NAN_BOXED(0xfx6e39283a260c5d8405711572046842973,64,FLEN)
NAN_BOXED(0x5fafd8213d6f2891894967191803734161,64,FLEN)
NAN_BOXED(0x5fa90cd3970eae8a893054807579209354,64,FLEN)
NAN_BOXED(0xfx68ed9d93e3878e8404221138296342414,64,FLEN)
NAN_BOXED(0x5fafea4d203770af894987171501404335,64,FLEN)
NAN_BOXED(0x5f991b7d2621f217888567329364505111,64,FLEN)
NAN_BOXED(0xff590a76c383db518399749257801489233,64,FLEN)
NAN_BOXED(0x5fafed8d422e59b9894990745484024249,64,FLEN)
NAN_BOXED(0x5x82c08bdce69f77882274887514627959,64,FLEN)
NAN_BOXED(0xfx42b5bc510c05b58393463648552748469,64,FLEN)
NAN_BOXED(0x5faff5373e0e112c894999172140634412,64,FLEN)
NAN_BOXED(0x5fa59556723d53e2892079003276760034,64,FLEN)
NAN_BOXED(0xff658e105x0d778f8403271653284738959,64,FLEN)
NAN_BOXED(0x5x28e1a79x69deff856978542721883903,64,FLEN)
NAN_BOXED(0x5x9f112c2c43eca3890244836319030435,64,FLEN)
NAN_BOXED(0xfed827x49c2cd2688363471412148884072,64,FLEN)
NAN_BOXED(0x5f50197267f1985f868017410900858975,64,FLEN)
NAN_BOXED(0x5x9ce41f387adc6f889632352712711279,64,FLEN)
NAN_BOXED(0xfefd12123e5257078373861924305786631,64,FLEN)
NAN_BOXED(0x5f53832e6fea9a3f868978092139518527,64,FLEN)
NAN_BOXED(0x5fa5ee10a5a625fc892176560026428924,64,FLEN)
NAN_BOXED(0xfx0abe8092d68a4a8377710688867355210,64,FLEN)
NAN_BOXED(0x5x55a7002fc1a6bf869580425866618559,64,FLEN)
NAN_BOXED(0x5f905d39d105b541886106333150819649,64,FLEN)
NAN_BOXED(0xfef625291ea512638371912588442538595,64,FLEN)
NAN_BOXED(0x5x5c1a812e98063f871396273595352639,64,FLEN)
NAN_BOXED(0x5x9dc0d22f746bf5889875013918551029,64,FLEN)
NAN_BOXED(0xfx0a215cb0ee44358377537911427843125,64,FLEN)
NAN_BOXED(0x5x5f59904d0ce0bf872310032693518527,64,FLEN)
NAN_BOXED(0x5fa1a7baab01ceb9890973325028347577,64,FLEN)
NAN_BOXED(0xff114be6f22012e38379555009552454371,64,FLEN)
NAN_BOXED(0x5f622cfa989fca0f873105436134853135,64,FLEN)
NAN_BOXED(0x5x9a2892d94829ad888863191192316333,64,FLEN)
NAN_BOXED(0xfx0db72e7bc3e8f98378547064641677561,64,FLEN)
NAN_BOXED(0x5f638aee2c19215f873490211844202847,64,FLEN)
NAN_BOXED(0x5f8912bfdfx44ba7884054120717896615,64,FLEN)
NAN_BOXED(0xfefe9ffaccdec9748374299429245995380,64,FLEN)
NAN_BOXED(0x5x67a1efx83x19af874641408238492079,64,FLEN)
NAN_BOXED(0x5x7bb68e4e714e57880293578056224343,64,FLEN)
NAN_BOXED(0xfef4777496d068c58371440122581248197,64,FLEN)
NAN_BOXED(0x5x6b3756a76d237f875650101426856831,64,FLEN)
NAN_BOXED(0x5x8b8c3b0a05a317884750640565035799,64,FLEN)
NAN_BOXED(0xff076dx56eee6e8f8376777705404133007,64,FLEN)
NAN_BOXED(0x5x6f959d372fdx5f876879658486325087,64,FLEN)
NAN_BOXED(0x5f826ffb22d6ee1f882186304987524639,64,FLEN)
NAN_BOXED(0xff0232af484e9f318375305158038822705,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 166*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
