
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b6 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b6)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==x3, rs2==x16, rs3==x3, rd==x11,fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649x5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x3; op2:x16; op3:x3; dest:x11; op1val:0x39226e649x5a74b6; op2val:0xc081c94a0c1e1fa9;
op3val:0x39226e649x5a74b6; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x11, x3, x16, x3, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs2 == rs3 != rd, rs1==x6, rs2==x6, rs3==x6, rd==x8,fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649x5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x6; op2:x6; op3:x6; dest:x8; op1val:0x39226e649x5a74b6; op2val:0x39226e649x5a74b6;
op3val:0x39226e649x5a74b6; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x8, x6, x6, x6, dyn, 32, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==x0, rs2==x0, rs3==x16, rd==x0,fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649x5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x0; op2:x0; op3:x16; dest:x0; op1val:0x39226e649x5a74b6; op2val:0x39226e649x5a74b6;
op3val:0x39b1ac979514b6d7; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x0, x0, x0, x16, dyn, 64, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==x23, rs2==x22, rs3==x18, rd==x23,fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649x5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x23; op2:x22; op3:x18; dest:x23; op1val:0x39226e649x5a74b6; op2val:0xc081c94a0c1e1fa9;
op3val:0x39b1ac979514b6d7; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x23, x23, x22, x18, dyn, 96, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==x10, rs2==x20, rs3==x20, rd==x12,fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649x5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x10; op2:x20; op3:x20; dest:x12; op1val:0x39226e649x5a74b6; op2val:0xc081c94a0c1e1fa9;
op3val:0xc081c94a0c1e1fa9; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x12, x10, x20, x20, dyn, 128, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==x17, rs2==x2, rs3==x2, rd==x2,fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1fx8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x17; op2:x2; op3:x2; dest:x2; op1val:0x393190efde47be0e; op2val:0xc6d1fx8cc931a9a9;
op3val:0xc6d1fx8cc931a9a9; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x2, x17, x2, x2, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs1 == rd == rs3 != rs2, rs1==x25, rs2==x15, rs3==x25, rd==x25,fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1fx8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x25; op2:x15; op3:x25; dest:x25; op1val:0x393190efde47be0e; op2val:0xc6d1fx8cc931a9a9;
op3val:0x393190efde47be0e; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x25, x25, x15, x25, dyn, 32, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==x22, rs2==x21, rs3==x9, rd==x21,fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1fx8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x22; op2:x21; op3:x9; dest:x21; op1val:0x393190efde47be0e; op2val:0xc6d1fx8cc931a9a9;
op3val:0x39ab80125e1b1046; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x21, x22, x21, x9, dyn, 64, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==x8, rs2==x12, rs3==x13, rd==x13,fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1fx8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x8; op2:x12; op3:x13; dest:x13; op1val:0x393190efde47be0e; op2val:0xc6d1fx8cc931a9a9;
op3val:0x39ab80125e1b1046; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x13, x8, x12, x13, dyn, 96, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==x11, rs2==x28, rs3==x27, rd==x18,fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1fx8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x11; op2:x28; op3:x27; dest:x18; op1val:0x393190efde47be0e; op2val:0xc6d1fx8cc931a9a9;
op3val:0x39ab80125e1b1046; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x18, x11, x28, x27, dyn, 128, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs2 == rs3 == rd, rs1==x7, rs2==x7, rs3==x7, rd==x7,fs1 == 0 and fe1 == 0x395 and fm1 == 0x105efde4ed531 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x09f209cec78cd and fs3 == 0 and fe3 == 0x399 and fm3 == 0x1954d45efc2a6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x7; op2:x7; op3:x7; dest:x7; op1val:0x395105efde4ed531; op2val:0x395105efde4ed531;
op3val:0x395105efde4ed531; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x7, x7, x7, x7, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==x29, rs2==x29, rs3==x1, rd==x27,fs1 == 0 and fe1 == 0x395 and fm1 == 0x105efde4ed531 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x09f209cec78cd and fs3 == 0 and fe3 == 0x399 and fm3 == 0x1954d45efc2a6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x29; op2:x29; op3:x1; dest:x27; op1val:0x395105efde4ed531; op2val:0x395105efde4ed531;
op3val:0x3991954d45efc2a6; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x27, x29, x29, x1, dyn, 32, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==x24, rs2==x26, rs3==x31, rd==x9,fs1 == 0 and fe1 == 0x395 and fm1 == 0x105efde4ed531 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x09f209cec78cd and fs3 == 0 and fe3 == 0x399 and fm3 == 0x1954d45efc2a6 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x24; op2:x26; op3:x31; dest:x9; op1val:0x395105efde4ed531; op2val:0xc0309f209cec78cd;
op3val:0x3991954d45efc2a6; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x9, x24, x26, x31, dyn, 64, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==x12, rs2==x11, rs3==x4, rd==x17,fs1 == 0 and fe1 == 0x395 and fm1 == 0x105efde4ed531 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x09f209cec78cd and fs3 == 0 and fe3 == 0x399 and fm3 == 0x1954d45efc2a6 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x12; op2:x11; op3:x4; dest:x17; op1val:0x395105efde4ed531; op2val:0xc0309f209cec78cd;
op3val:0x3991954d45efc2a6; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x17, x12, x11, x4, dyn, 96, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==x16, rs2==x17, rs3==x22, rd==x15,fs1 == 0 and fe1 == 0x395 and fm1 == 0x105efde4ed531 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x09f209cec78cd and fs3 == 0 and fe3 == 0x399 and fm3 == 0x1954d45efc2a6 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x16; op2:x17; op3:x22; dest:x15; op1val:0x395105efde4ed531; op2val:0xc0309f209cec78cd;
op3val:0x3991954d45efc2a6; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x15, x16, x17, x22, dyn, 128, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==x28, rs2==x24, rs3==x8, rd==x16,fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d351f7784365 and fs2 == 1 and fe2 == 0x413 and fm2 == 0xb328b8cd61a2b and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2e34d55d8fb3c and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x28; op2:x24; op3:x8; dest:x16; op1val:0x3962d351f7784365; op2val:0xc13b328b8cd61a2b;
op3val:0x39a2e34d55d8fb3c; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x16, x28, x24, x8, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==x19, rs2==x25, rs3==x29, rd==x31,fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d351f7784365 and fs2 == 1 and fe2 == 0x413 and fm2 == 0xb328b8cd61a2b and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2e34d55d8fb3c and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x19; op2:x25; op3:x29; dest:x31; op1val:0x3962d351f7784365; op2val:0xc13b328b8cd61a2b;
op3val:0x39a2e34d55d8fb3c; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x19, x25, x29, dyn, 32, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==x4, rs2==x13, rs3==x11, rd==x28,fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d351f7784365 and fs2 == 1 and fe2 == 0x413 and fm2 == 0xb328b8cd61a2b and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2e34d55d8fb3c and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x4; op2:x13; op3:x11; dest:x28; op1val:0x3962d351f7784365; op2val:0xc13b328b8cd61a2b;
op3val:0x39a2e34d55d8fb3c; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x28, x4, x13, x11, dyn, 64, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==x21, rs2==x4, rs3==x23, rd==x3,fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d351f7784365 and fs2 == 1 and fe2 == 0x413 and fm2 == 0xb328b8cd61a2b and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2e34d55d8fb3c and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x21; op2:x4; op3:x23; dest:x3; op1val:0x3962d351f7784365; op2val:0xc13b328b8cd61a2b;
op3val:0x39a2e34d55d8fb3c; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x3, x21, x4, x23, dyn, 96, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==x18, rs2==x14, rs3==x21, rd==x10,fs1 == 0 and fe1 == 0x396 and fm1 == 0x2d351f7784365 and fs2 == 1 and fe2 == 0x413 and fm2 == 0xb328b8cd61a2b and fs3 == 0 and fe3 == 0x39a and fm3 == 0x2e34d55d8fb3c and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x18; op2:x14; op3:x21; dest:x10; op1val:0x3962d351f7784365; op2val:0xc13b328b8cd61a2b;
op3val:0x39a2e34d55d8fb3c; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x10, x18, x14, x21, dyn, 128, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==x30, rs2==x18, rs3==x26, rd==x5,fs1 == 0 and fe1 == 0x398 and fm1 == 0x7a4387525b0x4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd2951553b9cee and fs3 == 0 and fe3 == 0x397 and fm3 == 0x523987d918460 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x18; op3:x26; dest:x5; op1val:0x3987a4387525b0x4; op2val:0xbfdd2951553b9cee;
op3val:0x397523987d918460; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x5, x30, x18, x26, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==x20, rs2==x27, rs3==x19, rd==x6,fs1 == 0 and fe1 == 0x398 and fm1 == 0x7a4387525b0x4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd2951553b9cee and fs3 == 0 and fe3 == 0x397 and fm3 == 0x523987d918460 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x20; op2:x27; op3:x19; dest:x6; op1val:0x3987a4387525b0x4; op2val:0xbfdd2951553b9cee;
op3val:0x397523987d918460; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x6, x20, x27, x19, dyn, 32, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==x1, rs2==x3, rs3==x28, rd==x26,fs1 == 0 and fe1 == 0x398 and fm1 == 0x7a4387525b0x4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd2951553b9cee and fs3 == 0 and fe3 == 0x397 and fm3 == 0x523987d918460 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x1; op2:x3; op3:x28; dest:x26; op1val:0x3987a4387525b0x4; op2val:0xbfdd2951553b9cee;
op3val:0x397523987d918460; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x26, x1, x3, x28, dyn, 64, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==x14, rs2==x19, rs3==x10, rd==x1,fs1 == 0 and fe1 == 0x398 and fm1 == 0x7a4387525b0x4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd2951553b9cee and fs3 == 0 and fe3 == 0x397 and fm3 == 0x523987d918460 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x14; op2:x19; op3:x10; dest:x1; op1val:0x3987a4387525b0x4; op2val:0xbfdd2951553b9cee;
op3val:0x397523987d918460; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x1, x14, x19, x10, dyn, 96, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==x9, rs2==x1, rs3==x17, rd==x29,fs1 == 0 and fe1 == 0x398 and fm1 == 0x7a4387525b0x4 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xd2951553b9cee and fs3 == 0 and fe3 == 0x397 and fm3 == 0x523987d918460 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x9; op2:x1; op3:x17; dest:x29; op1val:0x3987a4387525b0x4; op2val:0xbfdd2951553b9cee;
op3val:0x397523987d918460; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x29, x9, x1, x17, dyn, 128, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==x13, rs2==x30, rs3==x5, rd==x14,fs1 == 0 and fe1 == 0x399 and fm1 == 0x09d1aa79c23a7 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xb2b2b55701cc8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x315d3a4ddb3be and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x13; op2:x30; op3:x5; dest:x14; op1val:0x39909d1aa79c23a7; op2val:0xc08b2b2b55701cc8;
op3val:0x39b315d3a4ddb3be; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x14, x13, x30, x5, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==x2, rs2==x5, rs3==x0, rd==x22,fs1 == 0 and fe1 == 0x399 and fm1 == 0x09d1aa79c23a7 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xb2b2b55701cc8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x315d3a4ddb3be and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x2; op2:x5; op3:x0; dest:x22; op1val:0x39909d1aa79c23a7; op2val:0xc08b2b2b55701cc8;
op3val:0x39b315d3a4ddb3be; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x22, x2, x5, x0, dyn, 32, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==x27, rs2==x23, rs3==x15, rd==x19,fs1 == 0 and fe1 == 0x399 and fm1 == 0x09d1aa79c23a7 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xb2b2b55701cc8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x315d3a4ddb3be and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x27; op2:x23; op3:x15; dest:x19; op1val:0x39909d1aa79c23a7; op2val:0xc08b2b2b55701cc8;
op3val:0x39b315d3a4ddb3be; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x19, x27, x23, x15, dyn, 64, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==x15, rs2==x8, rs3==x12, rd==x30,fs1 == 0 and fe1 == 0x399 and fm1 == 0x09d1aa79c23a7 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xb2b2b55701cc8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x315d3a4ddb3be and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x15; op2:x8; op3:x12; dest:x30; op1val:0x39909d1aa79c23a7; op2val:0xc08b2b2b55701cc8;
op3val:0x39b315d3a4ddb3be; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x30, x15, x8, x12, dyn, 96, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==x26, rs2==x9, rs3==x30, rd==x4,fs1 == 0 and fe1 == 0x399 and fm1 == 0x09d1aa79c23a7 and fs2 == 1 and fe2 == 0x408 and fm2 == 0xb2b2b55701cc8 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x315d3a4ddb3be and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x26; op2:x9; op3:x30; dest:x4; op1val:0x39909d1aa79c23a7; op2val:0xc08b2b2b55701cc8;
op3val:0x39b315d3a4ddb3be; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x4, x26, x9, x30, dyn, 128, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==x31, rs2==x10, rs3==x24, rd==x20,fs1 == 0 and fe1 == 0x399 and fm1 == 0x0fe3d26689661 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x14930996ec6a3 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x17b5e6929a8da and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x31; op2:x10; op3:x24; dest:x20; op1val:0x3990fe3d26689661; op2val:0xbff14930996ec6a3;
op3val:0x39917b5e6929a8da; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x20, x31, x10, x24, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==x5, rs2==x31, rs3==x14, rd==x24,fs1 == 0 and fe1 == 0x399 and fm1 == 0x0fe3d26689661 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x14930996ec6a3 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x17b5e6929a8da and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x5; op2:x31; op3:x14; dest:x24; op1val:0x3990fe3d26689661; op2val:0xbff14930996ec6a3;
op3val:0x39917b5e6929a8da; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x24, x5, x31, x14, dyn, 32, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x0fe3d26689661 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x14930996ec6a3 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x17b5e6929a8da and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3990fe3d26689661; op2val:0xbff14930996ec6a3;
op3val:0x39917b5e6929a8da; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x0fe3d26689661 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x14930996ec6a3 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x17b5e6929a8da and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3990fe3d26689661; op2val:0xbff14930996ec6a3;
op3val:0x39917b5e6929a8da; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x0fe3d26689661 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x14930996ec6a3 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x17b5e6929a8da and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3990fe3d26689661; op2val:0xbff14930996ec6a3;
op3val:0x39917b5e6929a8da; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6ac9f241360fd and fs2 == 1 and fe2 == 0x41e and fm2 == 0x694a403ead2c3 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x295efec093b53 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3996ac9f241360fd; op2val:0xc1e694a403ead2c3;
op3val:0x39b295efec093b53; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6ac9f241360fd and fs2 == 1 and fe2 == 0x41e and fm2 == 0x694a403ead2c3 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x295efec093b53 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3996ac9f241360fd; op2val:0xc1e694a403ead2c3;
op3val:0x39b295efec093b53; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6ac9f241360fd and fs2 == 1 and fe2 == 0x41e and fm2 == 0x694a403ead2c3 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x295efec093b53 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3996ac9f241360fd; op2val:0xc1e694a403ead2c3;
op3val:0x39b295efec093b53; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6ac9f241360fd and fs2 == 1 and fe2 == 0x41e and fm2 == 0x694a403ead2c3 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x295efec093b53 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3996ac9f241360fd; op2val:0xc1e694a403ead2c3;
op3val:0x39b295efec093b53; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x6ac9f241360fd and fs2 == 1 and fe2 == 0x41e and fm2 == 0x694a403ead2c3 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x295efec093b53 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x3996ac9f241360fd; op2val:0xc1e694a403ead2c3;
op3val:0x39b295efec093b53; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x778a21cf93979 and fs2 == 1 and fe2 == 0x41e and fm2 == 0x5d05ec080509a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3804775d28375 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399778a21cf93979; op2val:0xc1e5d05ec080509a;
op3val:0x39b3804775d28375; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x778a21cf93979 and fs2 == 1 and fe2 == 0x41e and fm2 == 0x5d05ec080509a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3804775d28375 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399778a21cf93979; op2val:0xc1e5d05ec080509a;
op3val:0x39b3804775d28375; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x778a21cf93979 and fs2 == 1 and fe2 == 0x41e and fm2 == 0x5d05ec080509a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3804775d28375 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399778a21cf93979; op2val:0xc1e5d05ec080509a;
op3val:0x39b3804775d28375; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x778a21cf93979 and fs2 == 1 and fe2 == 0x41e and fm2 == 0x5d05ec080509a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3804775d28375 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399778a21cf93979; op2val:0xc1e5d05ec080509a;
op3val:0x39b3804775d28375; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x778a21cf93979 and fs2 == 1 and fe2 == 0x41e and fm2 == 0x5d05ec080509a and fs3 == 0 and fe3 == 0x39b and fm3 == 0x3804775d28375 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399778a21cf93979; op2val:0xc1e5d05ec080509a;
op3val:0x39b3804775d28375; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x872fbd0697864 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x9dcd6cdb373ca and fs3 == 0 and fe3 == 0x39a and fm3 == 0x8770d62dcf522 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399872fbd0697864; op2val:0xc669dcd6cdb373ca;
op3val:0x39a8770d62dcf522; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x872fbd0697864 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x9dcd6cdb373ca and fs3 == 0 and fe3 == 0x39a and fm3 == 0x8770d62dcf522 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399872fbd0697864; op2val:0xc669dcd6cdb373ca;
op3val:0x39a8770d62dcf522; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x872fbd0697864 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x9dcd6cdb373ca and fs3 == 0 and fe3 == 0x39a and fm3 == 0x8770d62dcf522 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399872fbd0697864; op2val:0xc669dcd6cdb373ca;
op3val:0x39a8770d62dcf522; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x872fbd0697864 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x9dcd6cdb373ca and fs3 == 0 and fe3 == 0x39a and fm3 == 0x8770d62dcf522 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399872fbd0697864; op2val:0xc669dcd6cdb373ca;
op3val:0x39a8770d62dcf522; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x872fbd0697864 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x9dcd6cdb373ca and fs3 == 0 and fe3 == 0x39a and fm3 == 0x8770d62dcf522 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399872fbd0697864; op2val:0xc669dcd6cdb373ca;
op3val:0x39a8770d62dcf522; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x99ec4260x18a4 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x8ae3826fd6bx0 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38541e6x2x8cc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39999ec4260x18a4; op2val:0xc668ae3826fd6bx0;
op3val:0x39a38541e6x2x8cc; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x99ec4260x18a4 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x8ae3826fd6bx0 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38541e6x2x8cc and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39999ec4260x18a4; op2val:0xc668ae3826fd6bx0;
op3val:0x39a38541e6x2x8cc; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x99ec4260x18a4 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x8ae3826fd6bx0 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38541e6x2x8cc and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39999ec4260x18a4; op2val:0xc668ae3826fd6bx0;
op3val:0x39a38541e6x2x8cc; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x99ec4260x18a4 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x8ae3826fd6bx0 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38541e6x2x8cc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39999ec4260x18a4; op2val:0xc668ae3826fd6bx0;
op3val:0x39a38541e6x2x8cc; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0x99ec4260x18a4 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x8ae3826fd6bx0 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38541e6x2x8cc and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39999ec4260x18a4; op2val:0xc668ae3826fd6bx0;
op3val:0x39a38541e6x2x8cc; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xb69d7df6648b9 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x710e89f183b2f and fs3 == 0 and fe3 == 0x399 and fm3 == 0x925930a7283d5 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399b69d7df6648b9; op2val:0xc66710e89f183b2f;
op3val:0x399925930a7283d5; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xb69d7df6648b9 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x710e89f183b2f and fs3 == 0 and fe3 == 0x399 and fm3 == 0x925930a7283d5 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399b69d7df6648b9; op2val:0xc66710e89f183b2f;
op3val:0x399925930a7283d5; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xb69d7df6648b9 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x710e89f183b2f and fs3 == 0 and fe3 == 0x399 and fm3 == 0x925930a7283d5 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399b69d7df6648b9; op2val:0xc66710e89f183b2f;
op3val:0x399925930a7283d5; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xb69d7df6648b9 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x710e89f183b2f and fs3 == 0 and fe3 == 0x399 and fm3 == 0x925930a7283d5 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399b69d7df6648b9; op2val:0xc66710e89f183b2f;
op3val:0x399925930a7283d5; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xb69d7df6648b9 and fs2 == 1 and fe2 == 0x466 and fm2 == 0x710e89f183b2f and fs3 == 0 and fe3 == 0x399 and fm3 == 0x925930a7283d5 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399b69d7df6648b9; op2val:0xc66710e89f183b2f;
op3val:0x399925930a7283d5; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xd4d9f1794d731 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf524488086933 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xaed8b7f6659fc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399d4d9f1794d731; op2val:0xbfdf524488086933;
op3val:0x398aed8b7f6659fc; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xd4d9f1794d731 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf524488086933 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xaed8b7f6659fc and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399d4d9f1794d731; op2val:0xbfdf524488086933;
op3val:0x398aed8b7f6659fc; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xd4d9f1794d731 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf524488086933 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xaed8b7f6659fc and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399d4d9f1794d731; op2val:0xbfdf524488086933;
op3val:0x398aed8b7f6659fc; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xd4d9f1794d731 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf524488086933 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xaed8b7f6659fc and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399d4d9f1794d731; op2val:0xbfdf524488086933;
op3val:0x398aed8b7f6659fc; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x399 and fm1 == 0xd4d9f1794d731 and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf524488086933 and fs3 == 0 and fe3 == 0x398 and fm3 == 0xaed8b7f6659fc and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x399d4d9f1794d731; op2val:0xbfdf524488086933;
op3val:0x398aed8b7f6659fc; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x307176ba846d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa49e942239fe4 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x4011e0c68bb1b and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a307176ba846d7; op2val:0xbfea49e942239fe4;
op3val:0x3994011e0c68bb1b; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x307176ba846d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa49e942239fe4 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x4011e0c68bb1b and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a307176ba846d7; op2val:0xbfea49e942239fe4;
op3val:0x3994011e0c68bb1b; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x307176ba846d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa49e942239fe4 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x4011e0c68bb1b and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a307176ba846d7; op2val:0xbfea49e942239fe4;
op3val:0x3994011e0c68bb1b; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x307176ba846d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa49e942239fe4 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x4011e0c68bb1b and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a307176ba846d7; op2val:0xbfea49e942239fe4;
op3val:0x3994011e0c68bb1b; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x307176ba846d7 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xa49e942239fe4 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x4011e0c68bb1b and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a307176ba846d7; op2val:0xbfea49e942239fe4;
op3val:0x3994011e0c68bb1b; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5dx9ddc92c784 and fs2 == 1 and fe2 == 0x40f and fm2 == 0x7685a045f0410 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb7efe7e5707bd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a5dx9ddc92c784; op2val:0xc0f7685a045f0410;
op3val:0x39ab7efe7e5707bd; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5dx9ddc92c784 and fs2 == 1 and fe2 == 0x40f and fm2 == 0x7685a045f0410 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb7efe7e5707bd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a5dx9ddc92c784; op2val:0xc0f7685a045f0410;
op3val:0x39ab7efe7e5707bd; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5dx9ddc92c784 and fs2 == 1 and fe2 == 0x40f and fm2 == 0x7685a045f0410 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb7efe7e5707bd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a5dx9ddc92c784; op2val:0xc0f7685a045f0410;
op3val:0x39ab7efe7e5707bd; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5dx9ddc92c784 and fs2 == 1 and fe2 == 0x40f and fm2 == 0x7685a045f0410 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb7efe7e5707bd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a5dx9ddc92c784; op2val:0xc0f7685a045f0410;
op3val:0x39ab7efe7e5707bd; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x5dx9ddc92c784 and fs2 == 1 and fe2 == 0x40f and fm2 == 0x7685a045f0410 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb7efe7e5707bd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a5dx9ddc92c784; op2val:0xc0f7685a045f0410;
op3val:0x39ab7efe7e5707bd; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x60ebc50708520 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x134c2c0ceb740 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x7482563cd9d1d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a60ebc50708520; op2val:0xbff134c2c0ceb740;
op3val:0x39a7482563cd9d1d; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x60ebc50708520 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x134c2c0ceb740 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x7482563cd9d1d and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a60ebc50708520; op2val:0xbff134c2c0ceb740;
op3val:0x39a7482563cd9d1d; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x60ebc50708520 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x134c2c0ceb740 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x7482563cd9d1d and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a60ebc50708520; op2val:0xbff134c2c0ceb740;
op3val:0x39a7482563cd9d1d; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x60ebc50708520 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x134c2c0ceb740 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x7482563cd9d1d and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a60ebc50708520; op2val:0xbff134c2c0ceb740;
op3val:0x39a7482563cd9d1d; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x60ebc50708520 and fs2 == 1 and fe2 == 0x3ff and fm2 == 0x134c2c0ceb740 and fs3 == 0 and fe3 == 0x39a and fm3 == 0x7482563cd9d1d and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a60ebc50708520; op2val:0xbff134c2c0ceb740;
op3val:0x39a7482563cd9d1d; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x90bfe5a4042c4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x54331d75479b6 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x48ee155ea078a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a90bfe5a4042c4; op2val:0xc0154331d75479b6;
op3val:0x39848ee155ea078a; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x90bfe5a4042c4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x54331d75479b6 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x48ee155ea078a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a90bfe5a4042c4; op2val:0xc0154331d75479b6;
op3val:0x39848ee155ea078a; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x90bfe5a4042c4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x54331d75479b6 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x48ee155ea078a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a90bfe5a4042c4; op2val:0xc0154331d75479b6;
op3val:0x39848ee155ea078a; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x90bfe5a4042c4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x54331d75479b6 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x48ee155ea078a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a90bfe5a4042c4; op2val:0xc0154331d75479b6;
op3val:0x39848ee155ea078a; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0x90bfe5a4042c4 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x54331d75479b6 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x48ee155ea078a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39a90bfe5a4042c4; op2val:0xc0154331d75479b6;
op3val:0x39848ee155ea078a; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc040934d45782 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x7dx9ce01785ce and fs3 == 0 and fe3 == 0x39b and fm3 == 0x39ab057fa02c0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ac040934d45782; op2val:0xc017dx9ce01785ce;
op3val:0x39b39ab057fa02c0; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc040934d45782 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x7dx9ce01785ce and fs3 == 0 and fe3 == 0x39b and fm3 == 0x39ab057fa02c0 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ac040934d45782; op2val:0xc017dx9ce01785ce;
op3val:0x39b39ab057fa02c0; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc040934d45782 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x7dx9ce01785ce and fs3 == 0 and fe3 == 0x39b and fm3 == 0x39ab057fa02c0 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ac040934d45782; op2val:0xc017dx9ce01785ce;
op3val:0x39b39ab057fa02c0; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc040934d45782 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x7dx9ce01785ce and fs3 == 0 and fe3 == 0x39b and fm3 == 0x39ab057fa02c0 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ac040934d45782; op2val:0xc017dx9ce01785ce;
op3val:0x39b39ab057fa02c0; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc040934d45782 and fs2 == 1 and fe2 == 0x401 and fm2 == 0x7dx9ce01785ce and fs3 == 0 and fe3 == 0x39b and fm3 == 0x39ab057fa02c0 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ac040934d45782; op2val:0xc017dx9ce01785ce;
op3val:0x39b39ab057fa02c0; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27x73b38190cd and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ac95b3e1b9233b; op2val:0xc6561ef112e7ddd2;
op3val:0x39727x73b38190cd; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27x73b38190cd and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ac95b3e1b9233b; op2val:0xc6561ef112e7ddd2;
op3val:0x39727x73b38190cd; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27x73b38190cd and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ac95b3e1b9233b; op2val:0xc6561ef112e7ddd2;
op3val:0x39727x73b38190cd; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27x73b38190cd and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ac95b3e1b9233b; op2val:0xc6561ef112e7ddd2;
op3val:0x39727x73b38190cd; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xc95b3e1b9233b and fs2 == 1 and fe2 == 0x465 and fm2 == 0x61ef112e7ddd2 and fs3 == 0 and fe3 == 0x397 and fm3 == 0x27x73b38190cd and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ac95b3e1b9233b; op2val:0xc6561ef112e7ddd2;
op3val:0x39727x73b38190cd; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xe038bcc967e53 and fs2 == 1 and fe2 == 0x41d and fm2 == 0x10x0cde8ed0x1 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2b4fc34ef8713 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ae038bcc967e53; op2val:0xc1d10x0cde8ed0x1;
op3val:0x39b2b4fc34ef8713; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xe038bcc967e53 and fs2 == 1 and fe2 == 0x41d and fm2 == 0x10x0cde8ed0x1 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2b4fc34ef8713 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ae038bcc967e53; op2val:0xc1d10x0cde8ed0x1;
op3val:0x39b2b4fc34ef8713; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xe038bcc967e53 and fs2 == 1 and fe2 == 0x41d and fm2 == 0x10x0cde8ed0x1 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2b4fc34ef8713 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ae038bcc967e53; op2val:0xc1d10x0cde8ed0x1;
op3val:0x39b2b4fc34ef8713; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xe038bcc967e53 and fs2 == 1 and fe2 == 0x41d and fm2 == 0x10x0cde8ed0x1 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2b4fc34ef8713 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ae038bcc967e53; op2val:0xc1d10x0cde8ed0x1;
op3val:0x39b2b4fc34ef8713; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xe038bcc967e53 and fs2 == 1 and fe2 == 0x41d and fm2 == 0x10x0cde8ed0x1 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x2b4fc34ef8713 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ae038bcc967e53; op2val:0xc1d10x0cde8ed0x1;
op3val:0x39b2b4fc34ef8713; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xx0fbx6a2f168e and fs2 == 1 and fe2 == 0x40f and fm2 == 0x07bc4c532d3b5 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9e5b31936c644 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ax0fbx6a2f168e; op2val:0xc0x07bc4c532d3b5;
op3val:0x3989e5b31936c644; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xx0fbx6a2f168e and fs2 == 1 and fe2 == 0x40f and fm2 == 0x07bc4c532d3b5 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9e5b31936c644 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ax0fbx6a2f168e; op2val:0xc0x07bc4c532d3b5;
op3val:0x3989e5b31936c644; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xx0fbx6a2f168e and fs2 == 1 and fe2 == 0x40f and fm2 == 0x07bc4c532d3b5 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9e5b31936c644 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ax0fbx6a2f168e; op2val:0xc0x07bc4c532d3b5;
op3val:0x3989e5b31936c644; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xx0fbx6a2f168e and fs2 == 1 and fe2 == 0x40f and fm2 == 0x07bc4c532d3b5 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9e5b31936c644 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ax0fbx6a2f168e; op2val:0xc0x07bc4c532d3b5;
op3val:0x3989e5b31936c644; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x39a and fm1 == 0xx0fbx6a2f168e and fs2 == 1 and fe2 == 0x40f and fm2 == 0x07bc4c532d3b5 and fs3 == 0 and fe3 == 0x398 and fm3 == 0x9e5b31936c644 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39ax0fbx6a2f168e; op2val:0xc0x07bc4c532d3b5;
op3val:0x3989e5b31936c644; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x02b0619073291 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xbcaaa53f7565d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x6842c4cac9ea4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b02b0619073291; op2val:0xc06bcaaa53f7565d;
op3val:0x3986842c4cac9ea4; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x02b0619073291 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xbcaaa53f7565d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x6842c4cac9ea4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b02b0619073291; op2val:0xc06bcaaa53f7565d;
op3val:0x3986842c4cac9ea4; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x02b0619073291 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xbcaaa53f7565d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x6842c4cac9ea4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b02b0619073291; op2val:0xc06bcaaa53f7565d;
op3val:0x3986842c4cac9ea4; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x02b0619073291 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xbcaaa53f7565d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x6842c4cac9ea4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b02b0619073291; op2val:0xc06bcaaa53f7565d;
op3val:0x3986842c4cac9ea4; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x02b0619073291 and fs2 == 1 and fe2 == 0x406 and fm2 == 0xbcaaa53f7565d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x6842c4cac9ea4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b02b0619073291; op2val:0xc06bcaaa53f7565d;
op3val:0x3986842c4cac9ea4; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x099fd23cef832 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x30b463x83caec and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38057ebfc111a and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b099fd23cef832; op2val:0xc6530b463x83caec;
op3val:0x39a38057ebfc111a; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x099fd23cef832 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x30b463x83caec and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38057ebfc111a and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b099fd23cef832; op2val:0xc6530b463x83caec;
op3val:0x39a38057ebfc111a; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x099fd23cef832 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x30b463x83caec and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38057ebfc111a and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b099fd23cef832; op2val:0xc6530b463x83caec;
op3val:0x39a38057ebfc111a; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x099fd23cef832 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x30b463x83caec and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38057ebfc111a and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b099fd23cef832; op2val:0xc6530b463x83caec;
op3val:0x39a38057ebfc111a; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x099fd23cef832 and fs2 == 1 and fe2 == 0x465 and fm2 == 0x30b463x83caec and fs3 == 0 and fe3 == 0x39a and fm3 == 0x38057ebfc111a and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b099fd23cef832; op2val:0xc6530b463x83caec;
op3val:0x39a38057ebfc111a; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2209275762c5c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf55704cec8e60 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x83d9a457c5398 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b2209275762c5c; op2val:0xbfdf55704cec8e60;
op3val:0x39983d9a457c5398; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2209275762c5c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf55704cec8e60 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x83d9a457c5398 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b2209275762c5c; op2val:0xbfdf55704cec8e60;
op3val:0x39983d9a457c5398; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2209275762c5c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf55704cec8e60 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x83d9a457c5398 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b2209275762c5c; op2val:0xbfdf55704cec8e60;
op3val:0x39983d9a457c5398; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2209275762c5c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf55704cec8e60 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x83d9a457c5398 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b2209275762c5c; op2val:0xbfdf55704cec8e60;
op3val:0x39983d9a457c5398; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x2209275762c5c and fs2 == 1 and fe2 == 0x3fd and fm2 == 0xf55704cec8e60 and fs3 == 0 and fe3 == 0x399 and fm3 == 0x83d9a457c5398 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b2209275762c5c; op2val:0xbfdf55704cec8e60;
op3val:0x39983d9a457c5398; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x245be27b17194 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd068f21781b7d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x25e644cd05d18 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b245be27b17194; op2val:0xc00d068f21781b7d;
op3val:0x39825e644cd05d18; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x245be27b17194 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd068f21781b7d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x25e644cd05d18 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b245be27b17194; op2val:0xc00d068f21781b7d;
op3val:0x39825e644cd05d18; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x245be27b17194 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd068f21781b7d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x25e644cd05d18 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b245be27b17194; op2val:0xc00d068f21781b7d;
op3val:0x39825e644cd05d18; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x245be27b17194 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd068f21781b7d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x25e644cd05d18 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b245be27b17194; op2val:0xc00d068f21781b7d;
op3val:0x39825e644cd05d18; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x245be27b17194 and fs2 == 1 and fe2 == 0x400 and fm2 == 0xd068f21781b7d and fs3 == 0 and fe3 == 0x398 and fm3 == 0x25e644cd05d18 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b245be27b17194; op2val:0xc00d068f21781b7d;
op3val:0x39825e644cd05d18; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x322302882cdc2 and fs2 == 1 and fe2 == 0x406 and fm2 == 0x78d4762bbf263 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xa53564a0699a4 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b322302882cdc2; op2val:0xc0678d4762bbf263;
op3val:0x39aa53564a0699a4; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x322302882cdc2 and fs2 == 1 and fe2 == 0x406 and fm2 == 0x78d4762bbf263 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xa53564a0699a4 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b322302882cdc2; op2val:0xc0678d4762bbf263;
op3val:0x39aa53564a0699a4; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x322302882cdc2 and fs2 == 1 and fe2 == 0x406 and fm2 == 0x78d4762bbf263 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xa53564a0699a4 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b322302882cdc2; op2val:0xc0678d4762bbf263;
op3val:0x39aa53564a0699a4; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x322302882cdc2 and fs2 == 1 and fe2 == 0x406 and fm2 == 0x78d4762bbf263 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xa53564a0699a4 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b322302882cdc2; op2val:0xc0678d4762bbf263;
op3val:0x39aa53564a0699a4; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x322302882cdc2 and fs2 == 1 and fe2 == 0x406 and fm2 == 0x78d4762bbf263 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xa53564a0699a4 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b322302882cdc2; op2val:0xc0678d4762bbf263;
op3val:0x39aa53564a0699a4; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xfx8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62fx03x3d2 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b3c701a3548e1d; op2val:0xc64fx8ce40f090d9;
op3val:0x395dae62fx03x3d2; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xfx8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62fx03x3d2 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b3c701a3548e1d; op2val:0xc64fx8ce40f090d9;
op3val:0x395dae62fx03x3d2; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xfx8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62fx03x3d2 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b3c701a3548e1d; op2val:0xc64fx8ce40f090d9;
op3val:0x395dae62fx03x3d2; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xfx8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62fx03x3d2 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b3c701a3548e1d; op2val:0xc64fx8ce40f090d9;
op3val:0x395dae62fx03x3d2; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3c701a3548e1d and fs2 == 1 and fe2 == 0x464 and fm2 == 0xfx8ce40f090d9 and fs3 == 0 and fe3 == 0x395 and fm3 == 0xdae62fx03x3d2 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b3c701a3548e1d; op2val:0xc64fx8ce40f090d9;
op3val:0x395dae62fx03x3d2; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3ed05a43970e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc750f043d5c8d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1b1ccd357d197 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b3ed05a43970e3; op2val:0xbfec750f043d5c8d;
op3val:0x39b1b1ccd357d197; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3ed05a43970e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc750f043d5c8d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1b1ccd357d197 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b3ed05a43970e3; op2val:0xbfec750f043d5c8d;
op3val:0x39b1b1ccd357d197; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3ed05a43970e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc750f043d5c8d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1b1ccd357d197 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b3ed05a43970e3; op2val:0xbfec750f043d5c8d;
op3val:0x39b1b1ccd357d197; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3ed05a43970e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc750f043d5c8d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1b1ccd357d197 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b3ed05a43970e3; op2val:0xbfec750f043d5c8d;
op3val:0x39b1b1ccd357d197; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x39b and fm1 == 0x3ed05a43970e3 and fs2 == 1 and fe2 == 0x3fe and fm2 == 0xc750f043d5c8d and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1b1ccd357d197 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39b3ed05a43970e3; op2val:0xbfec750f043d5c8d;
op3val:0x39b1b1ccd357d197; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649x5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39226e649x5a74b6; op2val:0xc081c94a0c1e1fa9;
op3val:0x39b1ac979514b6d7; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649x5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39226e649x5a74b6; op2val:0xc081c94a0c1e1fa9;
op3val:0x39b1ac979514b6d7; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649x5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39226e649x5a74b6; op2val:0xc081c94a0c1e1fa9;
op3val:0x39b1ac979514b6d7; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649x5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39226e649x5a74b6; op2val:0xc081c94a0c1e1fa9;
op3val:0x39b1ac979514b6d7; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x392 and fm1 == 0x26e649x5a74b6 and fs2 == 1 and fe2 == 0x408 and fm2 == 0x1c94a0c1e1fa9 and fs3 == 0 and fe3 == 0x39b and fm3 == 0x1ac979514b6d7 and  fcsr == 0x80 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x39226e649x5a74b6; op2val:0xc081c94a0c1e1fa9;
op3val:0x39b1ac979514b6d7; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:128 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 128, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1fx8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x393190efde47be0e; op2val:0xc6d1fx8cc931a9a9;
op3val:0x39ab80125e1b1046; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1fx8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x393190efde47be0e; op2val:0xc6d1fx8cc931a9a9;
op3val:0x39ab80125e1b1046; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1fx8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and  fcsr == 0x40 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x393190efde47be0e; op2val:0xc6d1fx8cc931a9a9;
op3val:0x39ab80125e1b1046; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:64 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 64, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x393 and fm1 == 0x190efde47be0e and fs2 == 1 and fe2 == 0x46d and fm2 == 0x1fx8cc931a9a9 and fs3 == 0 and fe3 == 0x39a and fm3 == 0xb80125e1b1046 and  fcsr == 0x60 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x393190efde47be0e; op2val:0xc6d1fx8cc931a9a9;
op3val:0x39ab80125e1b1046; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:96 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 96, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x395 and fm1 == 0x105efde4ed531 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x09f209cec78cd and fs3 == 0 and fe3 == 0x399 and fm3 == 0x1954d45efc2a6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x395105efde4ed531; op2val:0xc0309f209cec78cd;
op3val:0x3991954d45efc2a6; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x395 and fm1 == 0x105efde4ed531 and fs2 == 1 and fe2 == 0x403 and fm2 == 0x09f209cec78cd and fs3 == 0 and fe3 == 0x399 and fm3 == 0x1954d45efc2a6 and  fcsr == 0x20 and rm_val == 7   
/* opcode: fnmsub.d ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x395105efde4ed531; op2val:0xc0309f209cec78cd;
op3val:0x3991954d45efc2a6; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:32 */
TEST_FPR4_OP(fnmsub.d, x31, x30, x29, x28, dyn, 32, 0, x3, 450*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0xc081c94a0c1e1fa93871589647145901993,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0x39b1ac979514b6d7157293698080880343,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0xc081c94a0c1e1fa93871589647145901993,64,FLEN)
NAN_BOXED(0x39b1ac979514b6d7157293698080880343,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0xc081c94a0c1e1fa93871589647145901993,64,FLEN)
NAN_BOXED(0xc081c94a0c1e1fa93871589647145901993,64,FLEN)
NAN_BOXED(0x393190efde47be0e121234493921541646,64,FLEN)
NAN_BOXED(0xc6d1fx8cc931a9a94326512869778237865,64,FLEN)
NAN_BOXED(0xc6d1fx8cc931a9a94326512869778237865,64,FLEN)
NAN_BOXED(0x393190efde47be0e121234493921541646,64,FLEN)
NAN_BOXED(0xc6d1fx8cc931a9a94326512869778237865,64,FLEN)
NAN_BOXED(0x393190efde47be0e121234493921541646,64,FLEN)
NAN_BOXED(0x393190efde47be0e121234493921541646,64,FLEN)
NAN_BOXED(0xc6d1fx8cc931a9a94326512869778237865,64,FLEN)
NAN_BOXED(0x39ab80125e1b1046155555897556013126,64,FLEN)
NAN_BOXED(0x393190efde47be0e121234493921541646,64,FLEN)
NAN_BOXED(0xc6d1fx8cc931a9a94326512869778237865,64,FLEN)
NAN_BOXED(0x39ab80125e1b1046155555897556013126,64,FLEN)
NAN_BOXED(0x393190efde47be0e121234493921541646,64,FLEN)
NAN_BOXED(0xc6d1fx8cc931a9a94326512869778237865,64,FLEN)
NAN_BOXED(0x39ab80125e1b1046155555897556013126,64,FLEN)
NAN_BOXED(0x395105efde4ed531130088861060486449,64,FLEN)
NAN_BOXED(0x395105efde4ed531130088861060486449,64,FLEN)
NAN_BOXED(0x395105efde4ed531130088861060486449,64,FLEN)
NAN_BOXED(0x395105efde4ed531130088861060486449,64,FLEN)
NAN_BOXED(0x395105efde4ed531130088861060486449,64,FLEN)
NAN_BOXED(0x3991954d45efc2a6148260890903298726,64,FLEN)
NAN_BOXED(0x395105efde4ed531130088861060486449,64,FLEN)
NAN_BOXED(0xc0309f209cec78cd3848743816584788173,64,FLEN)
NAN_BOXED(0x3991954d45efc2a6148260890903298726,64,FLEN)
NAN_BOXED(0x395105efde4ed531130088861060486449,64,FLEN)
NAN_BOXED(0xc0309f209cec78cd3848743816584788173,64,FLEN)
NAN_BOXED(0x3991954d45efc2a6148260890903298726,64,FLEN)
NAN_BOXED(0x395105efde4ed531130088861060486449,64,FLEN)
NAN_BOXED(0xc0309f209cec78cd3848743816584788173,64,FLEN)
NAN_BOXED(0x3991954d45efc2a6148260890903298726,64,FLEN)
NAN_BOXED(0x3962d351f7784365135099756877202277,64,FLEN)
NAN_BOXED(0xc13b328b8cd61a2b3923778247890704939,64,FLEN)
NAN_BOXED(0x39a2e34d55d8fb3c153131727681289020,64,FLEN)
NAN_BOXED(0x3962d351f7784365135099756877202277,64,FLEN)
NAN_BOXED(0xc13b328b8cd61a2b3923778247890704939,64,FLEN)
NAN_BOXED(0x39a2e34d55d8fb3c153131727681289020,64,FLEN)
NAN_BOXED(0x3962d351f7784365135099756877202277,64,FLEN)
NAN_BOXED(0xc13b328b8cd61a2b3923778247890704939,64,FLEN)
NAN_BOXED(0x39a2e34d55d8fb3c153131727681289020,64,FLEN)
NAN_BOXED(0x3962d351f7784365135099756877202277,64,FLEN)
NAN_BOXED(0xc13b328b8cd61a2b3923778247890704939,64,FLEN)
NAN_BOXED(0x39a2e34d55d8fb3c153131727681289020,64,FLEN)
NAN_BOXED(0x3962d351f7784365135099756877202277,64,FLEN)
NAN_BOXED(0xc13b328b8cd61a2b3923778247890704939,64,FLEN)
NAN_BOXED(0x39a2e34d55d8fb3c153131727681289020,64,FLEN)
NAN_BOXED(0x3987a4387525b0f4145462544408359156,64,FLEN)
NAN_BOXED(0xbfdd2951553b9cee3825251860396350702,64,FLEN)
NAN_BOXED(0x397523987d918460140254570285728864,64,FLEN)
NAN_BOXED(0x3987a4387525b0f4145462544408359156,64,FLEN)
NAN_BOXED(0xbfdd2951553b9cee3825251860396350702,64,FLEN)
NAN_BOXED(0x397523987d918460140254570285728864,64,FLEN)
NAN_BOXED(0x3987a4387525b0f4145462544408359156,64,FLEN)
NAN_BOXED(0xbfdd2951553b9cee3825251860396350702,64,FLEN)
NAN_BOXED(0x397523987d918460140254570285728864,64,FLEN)
NAN_BOXED(0x3987a4387525b0f4145462544408359156,64,FLEN)
NAN_BOXED(0xbfdd2951553b9cee3825251860396350702,64,FLEN)
NAN_BOXED(0x397523987d918460140254570285728864,64,FLEN)
NAN_BOXED(0x3987a4387525b0f4145462544408359156,64,FLEN)
NAN_BOXED(0xbfdd2951553b9cee3825251860396350702,64,FLEN)
NAN_BOXED(0x397523987d918460140254570285728864,64,FLEN)
NAN_BOXED(0x39909d1aa79c23a7147987994614965159,64,FLEN)
NAN_BOXED(0xc08b2b2b55701cc83874230542161943752,64,FLEN)
NAN_BOXED(0x39b315d3a4ddb3be157690879741375422,64,FLEN)
NAN_BOXED(0x39909d1aa79c23a7147987994614965159,64,FLEN)
NAN_BOXED(0xc08b2b2b55701cc83874230542161943752,64,FLEN)
NAN_BOXED(0x39b315d3a4ddb3be157690879741375422,64,FLEN)
NAN_BOXED(0x39909d1aa79c23a7147987994614965159,64,FLEN)
NAN_BOXED(0xc08b2b2b55701cc83874230542161943752,64,FLEN)
NAN_BOXED(0x39b315d3a4ddb3be157690879741375422,64,FLEN)
NAN_BOXED(0x39909d1aa79c23a7147987994614965159,64,FLEN)
NAN_BOXED(0xc08b2b2b55701cc83874230542161943752,64,FLEN)
NAN_BOXED(0x39b315d3a4ddb3be157690879741375422,64,FLEN)
NAN_BOXED(0x39909d1aa79c23a7147987994614965159,64,FLEN)
NAN_BOXED(0xc08b2b2b55701cc83874230542161943752,64,FLEN)
NAN_BOXED(0x39b315d3a4ddb3be157690879741375422,64,FLEN)
NAN_BOXED(0x3990fe3d26689661148094795399075425,64,FLEN)
NAN_BOXED(0xbff14930996ec6a33830916403712935587,64,FLEN)
NAN_BOXED(0x39917b5e6929a8da148232377206417626,64,FLEN)
NAN_BOXED(0x3990fe3d26689661148094795399075425,64,FLEN)
NAN_BOXED(0xbff14930996ec6a33830916403712935587,64,FLEN)
NAN_BOXED(0x39917b5e6929a8da148232377206417626,64,FLEN)
NAN_BOXED(0x3990fe3d26689661148094795399075425,64,FLEN)
NAN_BOXED(0xbff14930996ec6a33830916403712935587,64,FLEN)
NAN_BOXED(0x39917b5e6929a8da148232377206417626,64,FLEN)
NAN_BOXED(0x3990fe3d26689661148094795399075425,64,FLEN)
NAN_BOXED(0xbff14930996ec6a33830916403712935587,64,FLEN)
NAN_BOXED(0x39917b5e6929a8da148232377206417626,64,FLEN)
NAN_BOXED(0x3990fe3d26689661148094795399075425,64,FLEN)
NAN_BOXED(0xbff14930996ec6a33830916403712935587,64,FLEN)
NAN_BOXED(0x39917b5e6929a8da148232377206417626,64,FLEN)
NAN_BOXED(0x3996ac9f241360fd149693906173518077,64,FLEN)
NAN_BOXED(0xc1e694a403ead2c33972018326124810947,64,FLEN)
NAN_BOXED(0x39b295efec093b53157550263706139475,64,FLEN)
NAN_BOXED(0x3996ac9f241360fd149693906173518077,64,FLEN)
NAN_BOXED(0xc1e694a403ead2c33972018326124810947,64,FLEN)
NAN_BOXED(0x39b295efec093b53157550263706139475,64,FLEN)
NAN_BOXED(0x3996ac9f241360fd149693906173518077,64,FLEN)
NAN_BOXED(0xc1e694a403ead2c33972018326124810947,64,FLEN)
NAN_BOXED(0x39b295efec093b53157550263706139475,64,FLEN)
NAN_BOXED(0x3996ac9f241360fd149693906173518077,64,FLEN)
NAN_BOXED(0xc1e694a403ead2c33972018326124810947,64,FLEN)
NAN_BOXED(0x39b295efec093b53157550263706139475,64,FLEN)
NAN_BOXED(0x3996ac9f241360fd149693906173518077,64,FLEN)
NAN_BOXED(0xc1e694a403ead2c33972018326124810947,64,FLEN)
NAN_BOXED(0x39b295efec093b53157550263706139475,64,FLEN)
NAN_BOXED(0x399778a21cf93979149918219311331705,64,FLEN)
NAN_BOXED(0xc1e5d05ec080509a3971802524361969818,64,FLEN)
NAN_BOXED(0x39b3804775d28375157807925400863605,64,FLEN)
NAN_BOXED(0x399778a21cf93979149918219311331705,64,FLEN)
NAN_BOXED(0xc1e5d05ec080509a3971802524361969818,64,FLEN)
NAN_BOXED(0x39b3804775d28375157807925400863605,64,FLEN)
NAN_BOXED(0x399778a21cf93979149918219311331705,64,FLEN)
NAN_BOXED(0xc1e5d05ec080509a3971802524361969818,64,FLEN)
NAN_BOXED(0x39b3804775d28375157807925400863605,64,FLEN)
NAN_BOXED(0x399778a21cf93979149918219311331705,64,FLEN)
NAN_BOXED(0xc1e5d05ec080509a3971802524361969818,64,FLEN)
NAN_BOXED(0x39b3804775d28375157807925400863605,64,FLEN)
NAN_BOXED(0x399778a21cf93979149918219311331705,64,FLEN)
NAN_BOXED(0xc1e5d05ec080509a3971802524361969818,64,FLEN)
NAN_BOXED(0x39b3804775d28375157807925400863605,64,FLEN)
NAN_BOXED(0x399872fbd0697864150193482480842852,64,FLEN)
NAN_BOXED(0xc669dcd6cdb373ca4297201307196552138,64,FLEN)
NAN_BOXED(0x39a8770d62dcf522154701555626210594,64,FLEN)
NAN_BOXED(0x399872fbd0697864150193482480842852,64,FLEN)
NAN_BOXED(0xc669dcd6cdb373ca4297201307196552138,64,FLEN)
NAN_BOXED(0x39a8770d62dcf522154701555626210594,64,FLEN)
NAN_BOXED(0x399872fbd0697864150193482480842852,64,FLEN)
NAN_BOXED(0xc669dcd6cdb373ca4297201307196552138,64,FLEN)
NAN_BOXED(0x39a8770d62dcf522154701555626210594,64,FLEN)
NAN_BOXED(0x399872fbd0697864150193482480842852,64,FLEN)
NAN_BOXED(0xc669dcd6cdb373ca4297201307196552138,64,FLEN)
NAN_BOXED(0x39a8770d62dcf522154701555626210594,64,FLEN)
NAN_BOXED(0x399872fbd0697864150193482480842852,64,FLEN)
NAN_BOXED(0xc669dcd6cdb373ca4297201307196552138,64,FLEN)
NAN_BOXED(0x39a8770d62dcf522154701555626210594,64,FLEN)
NAN_BOXED(0x39999ec4260x18a4150523096887924900,64,FLEN)
NAN_BOXED(0xc668ae3826fd6bf04296868573283183600,64,FLEN)
NAN_BOXED(0x39a38541e6x2x8cc153309799459780812,64,FLEN)
NAN_BOXED(0x39999ec4260x18a4150523096887924900,64,FLEN)
NAN_BOXED(0xc668ae3826fd6bf04296868573283183600,64,FLEN)
NAN_BOXED(0x39a38541e6x2x8cc153309799459780812,64,FLEN)
NAN_BOXED(0x39999ec4260x18a4150523096887924900,64,FLEN)
NAN_BOXED(0xc668ae3826fd6bf04296868573283183600,64,FLEN)
NAN_BOXED(0x39a38541e6x2x8cc153309799459780812,64,FLEN)
NAN_BOXED(0x39999ec4260x18a4150523096887924900,64,FLEN)
NAN_BOXED(0xc668ae3826fd6bf04296868573283183600,64,FLEN)
NAN_BOXED(0x39a38541e6x2x8cc153309799459780812,64,FLEN)
NAN_BOXED(0x39999ec4260x18a4150523096887924900,64,FLEN)
NAN_BOXED(0xc668ae3826fd6bf04296868573283183600,64,FLEN)
NAN_BOXED(0x39a38541e6x2x8cc153309799459780812,64,FLEN)
NAN_BOXED(0x399b69d7df6648b9151027857438951609,64,FLEN)
NAN_BOXED(0xc66710e89f183b2f4296414133398551343,64,FLEN)
NAN_BOXED(0x399925930a7283d5150389845064319957,64,FLEN)
NAN_BOXED(0x399b69d7df6648b9151027857438951609,64,FLEN)
NAN_BOXED(0xc66710e89f183b2f4296414133398551343,64,FLEN)
NAN_BOXED(0x399925930a7283d5150389845064319957,64,FLEN)
NAN_BOXED(0x399b69d7df6648b9151027857438951609,64,FLEN)
NAN_BOXED(0xc66710e89f183b2f4296414133398551343,64,FLEN)
NAN_BOXED(0x399925930a7283d5150389845064319957,64,FLEN)
NAN_BOXED(0x399b69d7df6648b9151027857438951609,64,FLEN)
NAN_BOXED(0xc66710e89f183b2f4296414133398551343,64,FLEN)
NAN_BOXED(0x399925930a7283d5150389845064319957,64,FLEN)
NAN_BOXED(0x399b69d7df6648b9151027857438951609,64,FLEN)
NAN_BOXED(0xc66710e89f183b2f4296414133398551343,64,FLEN)
NAN_BOXED(0x399925930a7283d5150389845064319957,64,FLEN)
NAN_BOXED(0x399d4d9f1794d731151559777196234545,64,FLEN)
NAN_BOXED(0xbfdf5244880869333825859835344218419,64,FLEN)
NAN_BOXED(0x398aed8b7f6659fc146387590341614076,64,FLEN)
NAN_BOXED(0x399d4d9f1794d731151559777196234545,64,FLEN)
NAN_BOXED(0xbfdf5244880869333825859835344218419,64,FLEN)
NAN_BOXED(0x398aed8b7f6659fc146387590341614076,64,FLEN)
NAN_BOXED(0x399d4d9f1794d731151559777196234545,64,FLEN)
NAN_BOXED(0xbfdf5244880869333825859835344218419,64,FLEN)
NAN_BOXED(0x398aed8b7f6659fc146387590341614076,64,FLEN)
NAN_BOXED(0x399d4d9f1794d731151559777196234545,64,FLEN)
NAN_BOXED(0xbfdf5244880869333825859835344218419,64,FLEN)
NAN_BOXED(0x398aed8b7f6659fc146387590341614076,64,FLEN)
NAN_BOXED(0x399d4d9f1794d731151559777196234545,64,FLEN)
NAN_BOXED(0xbfdf5244880869333825859835344218419,64,FLEN)
NAN_BOXED(0x398aed8b7f6659fc146387590341614076,64,FLEN)
NAN_BOXED(0x39a307176ba846d7153171078537561815,64,FLEN)
NAN_BOXED(0xbfea49e942239fe43828946871980367844,64,FLEN)
NAN_BOXED(0x3994011e0c68bb1b148942385283906331,64,FLEN)
NAN_BOXED(0x39a307176ba846d7153171078537561815,64,FLEN)
NAN_BOXED(0xbfea49e942239fe43828946871980367844,64,FLEN)
NAN_BOXED(0x3994011e0c68bb1b148942385283906331,64,FLEN)
NAN_BOXED(0x39a307176ba846d7153171078537561815,64,FLEN)
NAN_BOXED(0xbfea49e942239fe43828946871980367844,64,FLEN)
NAN_BOXED(0x3994011e0c68bb1b148942385283906331,64,FLEN)
NAN_BOXED(0x39a307176ba846d7153171078537561815,64,FLEN)
NAN_BOXED(0xbfea49e942239fe43828946871980367844,64,FLEN)
NAN_BOXED(0x3994011e0c68bb1b148942385283906331,64,FLEN)
NAN_BOXED(0x39a307176ba846d7153171078537561815,64,FLEN)
NAN_BOXED(0xbfea49e942239fe43828946871980367844,64,FLEN)
NAN_BOXED(0x3994011e0c68bb1b148942385283906331,64,FLEN)
NAN_BOXED(0x39a5dx9ddc92c784153972100422616964,64,FLEN)
NAN_BOXED(0xc0f7685a045f04103904697110359376912,64,FLEN)
NAN_BOXED(0x39ab7efe7e5707bd155554712685840317,64,FLEN)
NAN_BOXED(0x39a5dx9ddc92c784153972100422616964,64,FLEN)
NAN_BOXED(0xc0f7685a045f04103904697110359376912,64,FLEN)
NAN_BOXED(0x39ab7efe7e5707bd155554712685840317,64,FLEN)
NAN_BOXED(0x39a5dx9ddc92c784153972100422616964,64,FLEN)
NAN_BOXED(0xc0f7685a045f04103904697110359376912,64,FLEN)
NAN_BOXED(0x39ab7efe7e5707bd155554712685840317,64,FLEN)
NAN_BOXED(0x39a5dx9ddc92c784153972100422616964,64,FLEN)
NAN_BOXED(0xc0f7685a045f04103904697110359376912,64,FLEN)
NAN_BOXED(0x39ab7efe7e5707bd155554712685840317,64,FLEN)
NAN_BOXED(0x39a5dx9ddc92c784153972100422616964,64,FLEN)
NAN_BOXED(0xc0f7685a045f04103904697110359376912,64,FLEN)
NAN_BOXED(0x39ab7efe7e5707bd155554712685840317,64,FLEN)
NAN_BOXED(0x39a60ebc50708520154023908262053152,64,FLEN)
NAN_BOXED(0xbff134c2c0ceb7403830893941694576448,64,FLEN)
NAN_BOXED(0x39a7482563cd9d1d154368506697981213,64,FLEN)
NAN_BOXED(0x39a60ebc50708520154023908262053152,64,FLEN)
NAN_BOXED(0xbff134c2c0ceb7403830893941694576448,64,FLEN)
NAN_BOXED(0x39a7482563cd9d1d154368506697981213,64,FLEN)
NAN_BOXED(0x39a60ebc50708520154023908262053152,64,FLEN)
NAN_BOXED(0xbff134c2c0ceb7403830893941694576448,64,FLEN)
NAN_BOXED(0x39a7482563cd9d1d154368506697981213,64,FLEN)
NAN_BOXED(0x39a60ebc50708520154023908262053152,64,FLEN)
NAN_BOXED(0xbff134c2c0ceb7403830893941694576448,64,FLEN)
NAN_BOXED(0x39a7482563cd9d1d154368506697981213,64,FLEN)
NAN_BOXED(0x39a60ebc50708520154023908262053152,64,FLEN)
NAN_BOXED(0xbff134c2c0ceb7403830893941694576448,64,FLEN)
NAN_BOXED(0x39a7482563cd9d1d154368506697981213,64,FLEN)
NAN_BOXED(0x39a90bfe5a4042c4154865318289752772,64,FLEN)
NAN_BOXED(0xc0154331d75479b63841042911138183606,64,FLEN)
NAN_BOXED(0x39848ee155ea078a144594655547885450,64,FLEN)
NAN_BOXED(0x39a90bfe5a4042c4154865318289752772,64,FLEN)
NAN_BOXED(0xc0154331d75479b63841042911138183606,64,FLEN)
NAN_BOXED(0x39848ee155ea078a144594655547885450,64,FLEN)
NAN_BOXED(0x39a90bfe5a4042c4154865318289752772,64,FLEN)
NAN_BOXED(0xc0154331d75479b63841042911138183606,64,FLEN)
NAN_BOXED(0x39848ee155ea078a144594655547885450,64,FLEN)
NAN_BOXED(0x39a90bfe5a4042c4154865318289752772,64,FLEN)
NAN_BOXED(0xc0154331d75479b63841042911138183606,64,FLEN)
NAN_BOXED(0x39848ee155ea078a144594655547885450,64,FLEN)
NAN_BOXED(0x39a90bfe5a4042c4154865318289752772,64,FLEN)
NAN_BOXED(0xc0154331d75479b63841042911138183606,64,FLEN)
NAN_BOXED(0x39848ee155ea078a144594655547885450,64,FLEN)
NAN_BOXED(0x39ac040934d45782155700993743673218,64,FLEN)
NAN_BOXED(0xc017dx9ce01785ce3841777844614038990,64,FLEN)
NAN_BOXED(0x39b39ab057fa02c0157836963174023872,64,FLEN)
NAN_BOXED(0x39ac040934d45782155700993743673218,64,FLEN)
NAN_BOXED(0xc017dx9ce01785ce3841777844614038990,64,FLEN)
NAN_BOXED(0x39b39ab057fa02c0157836963174023872,64,FLEN)
NAN_BOXED(0x39ac040934d45782155700993743673218,64,FLEN)
NAN_BOXED(0xc017dx9ce01785ce3841777844614038990,64,FLEN)
NAN_BOXED(0x39b39ab057fa02c0157836963174023872,64,FLEN)
NAN_BOXED(0x39ac040934d45782155700993743673218,64,FLEN)
NAN_BOXED(0xc017dx9ce01785ce3841777844614038990,64,FLEN)
NAN_BOXED(0x39b39ab057fa02c0157836963174023872,64,FLEN)
NAN_BOXED(0x39ac040934d45782155700993743673218,64,FLEN)
NAN_BOXED(0xc017dx9ce01785ce3841777844614038990,64,FLEN)
NAN_BOXED(0x39b39ab057fa02c0157836963174023872,64,FLEN)
NAN_BOXED(0x39ac95b3e1b9233b155861155974816571,64,FLEN)
NAN_BOXED(0xc6561ef112e7ddd24291644488259984850,64,FLEN)
NAN_BOXED(0x39727x73b38190cd139511142416486605,64,FLEN)
NAN_BOXED(0x39ac95b3e1b9233b155861155974816571,64,FLEN)
NAN_BOXED(0xc6561ef112e7ddd24291644488259984850,64,FLEN)
NAN_BOXED(0x39727x73b38190cd139511142416486605,64,FLEN)
NAN_BOXED(0x39ac95b3e1b9233b155861155974816571,64,FLEN)
NAN_BOXED(0xc6561ef112e7ddd24291644488259984850,64,FLEN)
NAN_BOXED(0x39727x73b38190cd139511142416486605,64,FLEN)
NAN_BOXED(0x39ac95b3e1b9233b155861155974816571,64,FLEN)
NAN_BOXED(0xc6561ef112e7ddd24291644488259984850,64,FLEN)
NAN_BOXED(0x39727x73b38190cd139511142416486605,64,FLEN)
NAN_BOXED(0x39ac95b3e1b9233b155861155974816571,64,FLEN)
NAN_BOXED(0xc6561ef112e7ddd24291644488259984850,64,FLEN)
NAN_BOXED(0x39727x73b38190cd139511142416486605,64,FLEN)
NAN_BOXED(0x39ae038bcc967e53156263405077298771,64,FLEN)
NAN_BOXED(0xc1d10x0cde8ed0f13965960467400544497,64,FLEN)
NAN_BOXED(0x39b2b4fc34ef8713157584401329260307,64,FLEN)
NAN_BOXED(0x39ae038bcc967e53156263405077298771,64,FLEN)
NAN_BOXED(0xc1d10x0cde8ed0f13965960467400544497,64,FLEN)
NAN_BOXED(0x39b2b4fc34ef8713157584401329260307,64,FLEN)
NAN_BOXED(0x39ae038bcc967e53156263405077298771,64,FLEN)
NAN_BOXED(0xc1d10x0cde8ed0f13965960467400544497,64,FLEN)
NAN_BOXED(0x39b2b4fc34ef8713157584401329260307,64,FLEN)
NAN_BOXED(0x39ae038bcc967e53156263405077298771,64,FLEN)
NAN_BOXED(0xc1d10x0cde8ed0f13965960467400544497,64,FLEN)
NAN_BOXED(0x39b2b4fc34ef8713157584401329260307,64,FLEN)
NAN_BOXED(0x39ae038bcc967e53156263405077298771,64,FLEN)
NAN_BOXED(0xc1d10x0cde8ed0f13965960467400544497,64,FLEN)
NAN_BOXED(0x39b2b4fc34ef8713157584401329260307,64,FLEN)
NAN_BOXED(0x39ax0fbx6a2f168e156558295880898190,64,FLEN)
NAN_BOXED(0xc0x07bc4c532d3b53902748134744970165,64,FLEN)
NAN_BOXED(0x3989e5b31936c644146097489356179012,64,FLEN)
NAN_BOXED(0x39ax0fbx6a2f168e156558295880898190,64,FLEN)
NAN_BOXED(0xc0x07bc4c532d3b53902748134744970165,64,FLEN)
NAN_BOXED(0x3989e5b31936c644146097489356179012,64,FLEN)
NAN_BOXED(0x39ax0fbx6a2f168e156558295880898190,64,FLEN)
NAN_BOXED(0xc0x07bc4c532d3b53902748134744970165,64,FLEN)
NAN_BOXED(0x3989e5b31936c644146097489356179012,64,FLEN)
NAN_BOXED(0x39ax0fbx6a2f168e156558295880898190,64,FLEN)
NAN_BOXED(0xc0x07bc4c532d3b53902748134744970165,64,FLEN)
NAN_BOXED(0x3989e5b31936c644146097489356179012,64,FLEN)
NAN_BOXED(0x39ax0fbx6a2f168e156558295880898190,64,FLEN)
NAN_BOXED(0xc0x07bc4c532d3b53902748134744970165,64,FLEN)
NAN_BOXED(0x3989e5b31936c644146097489356179012,64,FLEN)
NAN_BOXED(0x39b02b0619073291156869761252668049,64,FLEN)
NAN_BOXED(0xc06bcaaa53f7565d3865398710692173405,64,FLEN)
NAN_BOXED(0x3986842c4cac9ea4145145832840928932,64,FLEN)
NAN_BOXED(0x39b02b0619073291156869761252668049,64,FLEN)
NAN_BOXED(0xc06bcaaa53f7565d3865398710692173405,64,FLEN)
NAN_BOXED(0x3986842c4cac9ea4145145832840928932,64,FLEN)
NAN_BOXED(0x39b02b0619073291156869761252668049,64,FLEN)
NAN_BOXED(0xc06bcaaa53f7565d3865398710692173405,64,FLEN)
NAN_BOXED(0x3986842c4cac9ea4145145832840928932,64,FLEN)
NAN_BOXED(0x39b02b0619073291156869761252668049,64,FLEN)
NAN_BOXED(0xc06bcaaa53f7565d3865398710692173405,64,FLEN)
NAN_BOXED(0x3986842c4cac9ea4145145832840928932,64,FLEN)
NAN_BOXED(0x39b02b0619073291156869761252668049,64,FLEN)
NAN_BOXED(0xc06bcaaa53f7565d3865398710692173405,64,FLEN)
NAN_BOXED(0x3986842c4cac9ea4145145832840928932,64,FLEN)
NAN_BOXED(0x39b099fd23cef832156991768569509938,64,FLEN)
NAN_BOXED(0xc6530b463x83caec4290778438917933804,64,FLEN)
NAN_BOXED(0x39a38057ebfc111a153304396475404570,64,FLEN)
NAN_BOXED(0x39b099fd23cef832156991768569509938,64,FLEN)
NAN_BOXED(0xc6530b463x83caec4290778438917933804,64,FLEN)
NAN_BOXED(0x39a38057ebfc111a153304396475404570,64,FLEN)
NAN_BOXED(0x39b099fd23cef832156991768569509938,64,FLEN)
NAN_BOXED(0xc6530b463x83caec4290778438917933804,64,FLEN)
NAN_BOXED(0x39a38057ebfc111a153304396475404570,64,FLEN)
NAN_BOXED(0x39b099fd23cef832156991768569509938,64,FLEN)
NAN_BOXED(0xc6530b463x83caec4290778438917933804,64,FLEN)
NAN_BOXED(0x39a38057ebfc111a153304396475404570,64,FLEN)
NAN_BOXED(0x39b099fd23cef832156991768569509938,64,FLEN)
NAN_BOXED(0xc6530b463x83caec4290778438917933804,64,FLEN)
NAN_BOXED(0x39a38057ebfc111a153304396475404570,64,FLEN)
NAN_BOXED(0x39b2209275762c5c157421219424382044,64,FLEN)
NAN_BOXED(0xbfdf55704cec8e603825863321865981536,64,FLEN)
NAN_BOXED(0x39983d9a457c5398150134789421945752,64,FLEN)
NAN_BOXED(0x39b2209275762c5c157421219424382044,64,FLEN)
NAN_BOXED(0xbfdf55704cec8e603825863321865981536,64,FLEN)
NAN_BOXED(0x39983d9a457c5398150134789421945752,64,FLEN)
NAN_BOXED(0x39b2209275762c5c157421219424382044,64,FLEN)
NAN_BOXED(0xbfdf55704cec8e603825863321865981536,64,FLEN)
NAN_BOXED(0x39983d9a457c5398150134789421945752,64,FLEN)
NAN_BOXED(0x39b2209275762c5c157421219424382044,64,FLEN)
NAN_BOXED(0xbfdf55704cec8e603825863321865981536,64,FLEN)
NAN_BOXED(0x39983d9a457c5398150134789421945752,64,FLEN)
NAN_BOXED(0x39b2209275762c5c157421219424382044,64,FLEN)
NAN_BOXED(0xbfdf55704cec8e603825863321865981536,64,FLEN)
NAN_BOXED(0x39983d9a457c5398150134789421945752,64,FLEN)
NAN_BOXED(0x39b245be27b17194157462089028432276,64,FLEN)
NAN_BOXED(0xc00d068f21781b7d3838724441791011709,64,FLEN)
NAN_BOXED(0x39825e644cd05d18143978392012741912,64,FLEN)
NAN_BOXED(0x39b245be27b17194157462089028432276,64,FLEN)
NAN_BOXED(0xc00d068f21781b7d3838724441791011709,64,FLEN)
NAN_BOXED(0x39825e644cd05d18143978392012741912,64,FLEN)
NAN_BOXED(0x39b245be27b17194157462089028432276,64,FLEN)
NAN_BOXED(0xc00d068f21781b7d3838724441791011709,64,FLEN)
NAN_BOXED(0x39825e644cd05d18143978392012741912,64,FLEN)
NAN_BOXED(0x39b245be27b17194157462089028432276,64,FLEN)
NAN_BOXED(0xc00d068f21781b7d3838724441791011709,64,FLEN)
NAN_BOXED(0x39825e644cd05d18143978392012741912,64,FLEN)
NAN_BOXED(0x39b245be27b17194157462089028432276,64,FLEN)
NAN_BOXED(0xc00d068f21781b7d3838724441791011709,64,FLEN)
NAN_BOXED(0x39825e644cd05d18143978392012741912,64,FLEN)
NAN_BOXED(0x39b322302882cdc2157704471226535362,64,FLEN)
NAN_BOXED(0xc0678d4762bbf2633864205315622040163,64,FLEN)
NAN_BOXED(0x39aa53564a0699a4155225236276943268,64,FLEN)
NAN_BOXED(0x39b322302882cdc2157704471226535362,64,FLEN)
NAN_BOXED(0xc0678d4762bbf2633864205315622040163,64,FLEN)
NAN_BOXED(0x39aa53564a0699a4155225236276943268,64,FLEN)
NAN_BOXED(0x39b322302882cdc2157704471226535362,64,FLEN)
NAN_BOXED(0xc0678d4762bbf2633864205315622040163,64,FLEN)
NAN_BOXED(0x39aa53564a0699a4155225236276943268,64,FLEN)
NAN_BOXED(0x39b322302882cdc2157704471226535362,64,FLEN)
NAN_BOXED(0xc0678d4762bbf2633864205315622040163,64,FLEN)
NAN_BOXED(0x39aa53564a0699a4155225236276943268,64,FLEN)
NAN_BOXED(0x39b322302882cdc2157704471226535362,64,FLEN)
NAN_BOXED(0xc0678d4762bbf2633864205315622040163,64,FLEN)
NAN_BOXED(0x39aa53564a0699a4155225236276943268,64,FLEN)
NAN_BOXED(0x39b3c701a3548e1d157885690842222109,64,FLEN)
NAN_BOXED(0xc64fx8ce40f090d94289913707406332121,64,FLEN)
NAN_BOXED(0x395dae62fx03x3d2133651773204460498,64,FLEN)
NAN_BOXED(0x39b3c701a3548e1d157885690842222109,64,FLEN)
NAN_BOXED(0xc64fx8ce40f090d94289913707406332121,64,FLEN)
NAN_BOXED(0x395dae62fx03x3d2133651773204460498,64,FLEN)
NAN_BOXED(0x39b3c701a3548e1d157885690842222109,64,FLEN)
NAN_BOXED(0xc64fx8ce40f090d94289913707406332121,64,FLEN)
NAN_BOXED(0x395dae62fx03x3d2133651773204460498,64,FLEN)
NAN_BOXED(0x39b3c701a3548e1d157885690842222109,64,FLEN)
NAN_BOXED(0xc64fx8ce40f090d94289913707406332121,64,FLEN)
NAN_BOXED(0x395dae62fx03x3d2133651773204460498,64,FLEN)
NAN_BOXED(0x39b3c701a3548e1d157885690842222109,64,FLEN)
NAN_BOXED(0xc64fx8ce40f090d94289913707406332121,64,FLEN)
NAN_BOXED(0x395dae62fx03x3d2133651773204460498,64,FLEN)
NAN_BOXED(0x39b3ed05a43970e3157927489478947043,64,FLEN)
NAN_BOXED(0xbfec750f043d5c8d3829557263104040077,64,FLEN)
NAN_BOXED(0x39b1b1ccd357d197157299424316871063,64,FLEN)
NAN_BOXED(0x39b3ed05a43970e3157927489478947043,64,FLEN)
NAN_BOXED(0xbfec750f043d5c8d3829557263104040077,64,FLEN)
NAN_BOXED(0x39b1b1ccd357d197157299424316871063,64,FLEN)
NAN_BOXED(0x39b3ed05a43970e3157927489478947043,64,FLEN)
NAN_BOXED(0xbfec750f043d5c8d3829557263104040077,64,FLEN)
NAN_BOXED(0x39b1b1ccd357d197157299424316871063,64,FLEN)
NAN_BOXED(0x39b3ed05a43970e3157927489478947043,64,FLEN)
NAN_BOXED(0xbfec750f043d5c8d3829557263104040077,64,FLEN)
NAN_BOXED(0x39b1b1ccd357d197157299424316871063,64,FLEN)
NAN_BOXED(0x39b3ed05a43970e3157927489478947043,64,FLEN)
NAN_BOXED(0xbfec750f043d5c8d3829557263104040077,64,FLEN)
NAN_BOXED(0x39b1b1ccd357d197157299424316871063,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0xc081c94a0c1e1fa93871589647145901993,64,FLEN)
NAN_BOXED(0x39b1ac979514b6d7157293698080880343,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0xc081c94a0c1e1fa93871589647145901993,64,FLEN)
NAN_BOXED(0x39b1ac979514b6d7157293698080880343,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0xc081c94a0c1e1fa93871589647145901993,64,FLEN)
NAN_BOXED(0x39b1ac979514b6d7157293698080880343,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0xc081c94a0c1e1fa93871589647145901993,64,FLEN)
NAN_BOXED(0x39b1ac979514b6d7157293698080880343,64,FLEN)
NAN_BOXED(0x39226e649x5a74b6116974387819345078,64,FLEN)
NAN_BOXED(0xc081c94a0c1e1fa93871589647145901993,64,FLEN)
NAN_BOXED(0x39b1ac979514b6d7157293698080880343,64,FLEN)
NAN_BOXED(0x393190efde47be0e121234493921541646,64,FLEN)
NAN_BOXED(0xc6d1fx8cc931a9a94326512869778237865,64,FLEN)
NAN_BOXED(0x39ab80125e1b1046155555897556013126,64,FLEN)
NAN_BOXED(0x393190efde47be0e121234493921541646,64,FLEN)
NAN_BOXED(0xc6d1fx8cc931a9a94326512869778237865,64,FLEN)
NAN_BOXED(0x39ab80125e1b1046155555897556013126,64,FLEN)
NAN_BOXED(0x393190efde47be0e121234493921541646,64,FLEN)
NAN_BOXED(0xc6d1fx8cc931a9a94326512869778237865,64,FLEN)
NAN_BOXED(0x39ab80125e1b1046155555897556013126,64,FLEN)
NAN_BOXED(0x393190efde47be0e121234493921541646,64,FLEN)
NAN_BOXED(0xc6d1fx8cc931a9a94326512869778237865,64,FLEN)
NAN_BOXED(0x39ab80125e1b1046155555897556013126,64,FLEN)
NAN_BOXED(0x395105efde4ed531130088861060486449,64,FLEN)
NAN_BOXED(0xc0309f209cec78cd3848743816584788173,64,FLEN)
NAN_BOXED(0x3991954d45efc2a6148260890903298726,64,FLEN)
NAN_BOXED(0x395105efde4ed531130088861060486449,64,FLEN)
NAN_BOXED(0xc0309f209cec78cd3848743816584788173,64,FLEN)
NAN_BOXED(0x3991954d45efc2a6148260890903298726,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 46*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
