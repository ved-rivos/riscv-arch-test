
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rs2 == rs3 != rd, rs1==f21, rs2==f21, rs3==f21, rd==f13,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f21; op2:f21; op3:f21; dest:f13; op1val:0x7ab2e791; op2val:0x7ab2e791;
op3val:0x7ab2e791; valaddr_reg:x3; val_offset:0*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f13, f21, f21, f21, dyn, 0, 0, x3, 0*0 + 3*0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f15, rs2==f14, rs3==f15, rd==f20,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f15; op2:f14; op3:f15; dest:f20; op1val:0x7ab2e791; op2val:0x0;
op3val:0x7ab2e791; valaddr_reg:x3; val_offset:3*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f20, f15, f14, f15, dyn, 0, 0, x3, 3*0 + 3*1*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rd == rs3 != rs2, rs1==f31, rs2==f10, rs3==f31, rd==f31,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f31; op2:f10; op3:f31; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0x7ab2e791; valaddr_reg:x3; val_offset:6*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f31, f10, f31, dyn, 0, 0, x3, 6*0 + 3*2*FLEN/8, x4, x1, x2)

inst_3:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f26, rs2==f22, rs3==f13, rd==f28,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f26; op2:f22; op3:f13; dest:f28; op1val:0x7ab2e791; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:9*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f28, f26, f22, f13, dyn, 0, 0, x3, 9*0 + 3*3*FLEN/8, x4, x1, x2)

inst_4:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f16, rs2==f4, rs3==f24, rd==f24,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f16; op2:f4; op3:f24; dest:f24; op1val:0x7ab2e791; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:12*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f24, f16, f4, f24, dyn, 0, 0, x3, 12*0 + 3*4*FLEN/8, x4, x1, x2)

inst_5:
// rd == rs2 == rs3 != rs1, rs1==f3, rs2==f1, rs3==f1, rd==f1,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f3; op2:f1; op3:f1; dest:f1; op1val:0x7ab2e791; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:15*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f1, f3, f1, f1, dyn, 0, 0, x3, 15*0 + 3*5*FLEN/8, x4, x1, x2)

inst_6:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f14, rs2==f26, rs3==f18, rd==f14,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f14; op2:f26; op3:f18; dest:f14; op1val:0x7ab2e791; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:18*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f14, f14, f26, f18, dyn, 0, 0, x3, 18*0 + 3*6*FLEN/8, x4, x1, x2)

inst_7:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f4, rs2==f7, rs3==f2, rd==f7,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f4; op2:f7; op3:f2; dest:f7; op1val:0x7ab2e791; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:21*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f7, f4, f7, f2, dyn, 0, 0, x3, 21*0 + 3*7*FLEN/8, x4, x1, x2)

inst_8:
// rs1 == rs2 == rs3 == rd, rs1==f9, rs2==f9, rs3==f9, rd==f9,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f9; op2:f9; op3:f9; dest:f9; op1val:0x7ab2e791; op2val:0x7ab2e791;
op3val:0x7ab2e791; valaddr_reg:x3; val_offset:24*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f9, f9, f9, f9, dyn, 0, 0, x3, 24*0 + 3*8*FLEN/8, x4, x1, x2)

inst_9:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f11, rs2==f17, rs3==f17, rd==f16,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f11; op2:f17; op3:f17; dest:f16; op1val:0x7ab2e791; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:27*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f16, f11, f17, f17, dyn, 0, 0, x3, 27*0 + 3*9*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rs2 == rd != rs3, rs1==f27, rs2==f27, rs3==f10, rd==f27,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f27; op2:f27; op3:f10; dest:f27; op1val:0x7ab2e791; op2val:0x7ab2e791;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:30*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f27, f27, f27, f10, dyn, 0, 0, x3, 30*0 + 3*10*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f19, rs2==f19, rs3==f25, rd==f6,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f19; op2:f19; op3:f25; dest:f6; op1val:0x7ab2e791; op2val:0x7ab2e791;
op3val:0x666666; valaddr_reg:x3; val_offset:33*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f6, f19, f19, f25, dyn, 0, 0, x3, 33*0 + 3*11*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f20, rs2==f18, rs3==f3, rd==f19,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f20; op2:f18; op3:f3; dest:f19; op1val:0x7ab2e791; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:36*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f19, f20, f18, f3, dyn, 0, 0, x3, 36*0 + 3*12*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f5, rs2==f11, rs3==f20, rd==f25,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f5; op2:f11; op3:f20; dest:f25; op1val:0x7ab2e791; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:39*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f25, f5, f11, f20, dyn, 0, 0, x3, 39*0 + 3*13*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f7, rs2==f6, rs3==f5, rd==f8,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f7; op2:f6; op3:f5; dest:f8; op1val:0x7ab2e791; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:42*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f8, f7, f6, f5, dyn, 0, 0, x3, 42*0 + 3*14*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f6, rs2==f25, rs3==f28, rd==f29,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f6; op2:f25; op3:f28; dest:f29; op1val:0x7ab2e791; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:45*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f29, f6, f25, f28, dyn, 0, 0, x3, 45*0 + 3*15*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f23, rs2==f24, rs3==f16, rd==f18,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f23; op2:f24; op3:f16; dest:f18; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc800000; valaddr_reg:x3; val_offset:48*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f18, f23, f24, f16, dyn, 0, 0, x3, 48*0 + 3*16*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f25, rs2==f13, rs3==f23, rd==f10,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f25; op2:f13; op3:f23; dest:f10; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc800001; valaddr_reg:x3; val_offset:51*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f10, f25, f13, f23, dyn, 0, 0, x3, 51*0 + 3*17*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f12, rs2==f31, rs3==f22, rd==f3,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f12; op2:f31; op3:f22; dest:f3; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc800003; valaddr_reg:x3; val_offset:54*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f3, f12, f31, f22, dyn, 0, 0, x3, 54*0 + 3*18*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f22, rs2==f29, rs3==f14, rd==f23,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f22; op2:f29; op3:f14; dest:f23; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc800007; valaddr_reg:x3; val_offset:57*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f23, f22, f29, f14, dyn, 0, 0, x3, 57*0 + 3*19*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f1, rs2==f3, rs3==f12, rd==f21,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f1; op2:f3; op3:f12; dest:f21; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc80000f; valaddr_reg:x3; val_offset:60*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f21, f1, f3, f12, dyn, 0, 0, x3, 60*0 + 3*20*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f17, rs2==f28, rs3==f27, rd==f22,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f17; op2:f28; op3:f27; dest:f22; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc80001f; valaddr_reg:x3; val_offset:63*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f22, f17, f28, f27, dyn, 0, 0, x3, 63*0 + 3*21*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f30, rs2==f0, rs3==f4, rd==f17,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f0; op3:f4; dest:f17; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc80003f; valaddr_reg:x3; val_offset:66*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f17, f30, f0, f4, dyn, 0, 0, x3, 66*0 + 3*22*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f24, rs2==f8, rs3==f30, rd==f0,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f24; op2:f8; op3:f30; dest:f0; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc80007f; valaddr_reg:x3; val_offset:69*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f0, f24, f8, f30, dyn, 0, 0, x3, 69*0 + 3*23*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f18, rs2==f12, rs3==f29, rd==f30,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f18; op2:f12; op3:f29; dest:f30; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc8000ff; valaddr_reg:x3; val_offset:72*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f30, f18, f12, f29, dyn, 0, 0, x3, 72*0 + 3*24*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f10, rs2==f23, rs3==f26, rd==f4,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f10; op2:f23; op3:f26; dest:f4; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc8001ff; valaddr_reg:x3; val_offset:75*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f4, f10, f23, f26, dyn, 0, 0, x3, 75*0 + 3*25*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f28, rs2==f30, rs3==f19, rd==f5,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f28; op2:f30; op3:f19; dest:f5; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc8003ff; valaddr_reg:x3; val_offset:78*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f5, f28, f30, f19, dyn, 0, 0, x3, 78*0 + 3*26*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f8, rs2==f16, rs3==f6, rd==f12,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f8; op2:f16; op3:f6; dest:f12; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc8007ff; valaddr_reg:x3; val_offset:81*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f12, f8, f16, f6, dyn, 0, 0, x3, 81*0 + 3*27*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f29, rs2==f5, rs3==f8, rd==f2,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f29; op2:f5; op3:f8; dest:f2; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc800fff; valaddr_reg:x3; val_offset:84*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f2, f29, f5, f8, dyn, 0, 0, x3, 84*0 + 3*28*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f0, rs2==f2, rs3==f11, rd==f26,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f0; op2:f2; op3:f11; dest:f26; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc801fff; valaddr_reg:x3; val_offset:87*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f26, f0, f2, f11, dyn, 0, 0, x3, 87*0 + 3*29*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f2, rs2==f20, rs3==f7, rd==f15,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f2; op2:f20; op3:f7; dest:f15; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc803fff; valaddr_reg:x3; val_offset:90*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f15, f2, f20, f7, dyn, 0, 0, x3, 90*0 + 3*30*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f13, rs2==f15, rs3==f0, rd==f11,fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f13; op2:f15; op3:f0; dest:f11; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc807fff; valaddr_reg:x3; val_offset:93*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f11, f13, f15, f0, dyn, 0, 0, x3, 93*0 + 3*31*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc80ffff; valaddr_reg:x3; val_offset:96*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 96*0 + 3*32*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc81ffff; valaddr_reg:x3; val_offset:99*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 99*0 + 3*33*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc83ffff; valaddr_reg:x3; val_offset:102*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102*0 + 3*34*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc87ffff; valaddr_reg:x3; val_offset:105*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 105*0 + 3*35*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc8fffff; valaddr_reg:x3; val_offset:108*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 108*0 + 3*36*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xc9fffff; valaddr_reg:x3; val_offset:111*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 111*0 + 3*37*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcbfffff; valaddr_reg:x3; val_offset:114*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 114*0 + 3*38*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcc00000; valaddr_reg:x3; val_offset:117*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 117*0 + 3*39*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xce00000; valaddr_reg:x3; val_offset:120*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 120*0 + 3*40*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcf00000; valaddr_reg:x3; val_offset:123*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 123*0 + 3*41*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcf80000; valaddr_reg:x3; val_offset:126*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 126*0 + 3*42*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcfc0000; valaddr_reg:x3; val_offset:129*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 129*0 + 3*43*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcfe0000; valaddr_reg:x3; val_offset:132*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 132*0 + 3*44*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcff0000; valaddr_reg:x3; val_offset:135*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 135*0 + 3*45*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcff8000; valaddr_reg:x3; val_offset:138*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 138*0 + 3*46*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcffc000; valaddr_reg:x3; val_offset:141*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 141*0 + 3*47*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcffe000; valaddr_reg:x3; val_offset:144*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 144*0 + 3*48*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcfff000; valaddr_reg:x3; val_offset:147*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 147*0 + 3*49*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcfff800; valaddr_reg:x3; val_offset:150*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 150*0 + 3*50*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcfffc00; valaddr_reg:x3; val_offset:153*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 153*0 + 3*51*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcfffe00; valaddr_reg:x3; val_offset:156*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 156*0 + 3*52*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcffff00; valaddr_reg:x3; val_offset:159*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 159*0 + 3*53*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcffff80; valaddr_reg:x3; val_offset:162*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 162*0 + 3*54*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcffffc0; valaddr_reg:x3; val_offset:165*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 165*0 + 3*55*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcffffe0; valaddr_reg:x3; val_offset:168*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 168*0 + 3*56*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcfffff0; valaddr_reg:x3; val_offset:171*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 171*0 + 3*57*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcfffff8; valaddr_reg:x3; val_offset:174*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 174*0 + 3*58*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcfffffc; valaddr_reg:x3; val_offset:177*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 177*0 + 3*59*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcfffffe; valaddr_reg:x3; val_offset:180*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 180*0 + 3*60*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x32e791 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x19 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7ab2e791; op2val:0x0;
op3val:0xcffffff; valaddr_reg:x3; val_offset:183*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 183*0 + 3*61*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32800000; valaddr_reg:x3; val_offset:186*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 186*0 + 3*62*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32800001; valaddr_reg:x3; val_offset:189*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 189*0 + 3*63*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32800003; valaddr_reg:x3; val_offset:192*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 192*0 + 3*64*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32800007; valaddr_reg:x3; val_offset:195*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 195*0 + 3*65*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3280000f; valaddr_reg:x3; val_offset:198*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 198*0 + 3*66*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3280001f; valaddr_reg:x3; val_offset:201*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 201*0 + 3*67*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3280003f; valaddr_reg:x3; val_offset:204*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 204*0 + 3*68*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3280007f; valaddr_reg:x3; val_offset:207*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 207*0 + 3*69*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x328000ff; valaddr_reg:x3; val_offset:210*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 210*0 + 3*70*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x328001ff; valaddr_reg:x3; val_offset:213*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 213*0 + 3*71*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x328003ff; valaddr_reg:x3; val_offset:216*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 216*0 + 3*72*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x328007ff; valaddr_reg:x3; val_offset:219*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 219*0 + 3*73*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32800fff; valaddr_reg:x3; val_offset:222*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 222*0 + 3*74*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32801fff; valaddr_reg:x3; val_offset:225*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 225*0 + 3*75*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32803fff; valaddr_reg:x3; val_offset:228*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 228*0 + 3*76*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32807fff; valaddr_reg:x3; val_offset:231*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 231*0 + 3*77*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3280ffff; valaddr_reg:x3; val_offset:234*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 234*0 + 3*78*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3281ffff; valaddr_reg:x3; val_offset:237*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 237*0 + 3*79*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3283ffff; valaddr_reg:x3; val_offset:240*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 240*0 + 3*80*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3287ffff; valaddr_reg:x3; val_offset:243*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 243*0 + 3*81*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x328fffff; valaddr_reg:x3; val_offset:246*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 246*0 + 3*82*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x329fffff; valaddr_reg:x3; val_offset:249*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 249*0 + 3*83*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32bfffff; valaddr_reg:x3; val_offset:252*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 252*0 + 3*84*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32c00000; valaddr_reg:x3; val_offset:255*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 255*0 + 3*85*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32e00000; valaddr_reg:x3; val_offset:258*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 258*0 + 3*86*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32f00000; valaddr_reg:x3; val_offset:261*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 261*0 + 3*87*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32f80000; valaddr_reg:x3; val_offset:264*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 264*0 + 3*88*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32fc0000; valaddr_reg:x3; val_offset:267*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 267*0 + 3*89*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32fe0000; valaddr_reg:x3; val_offset:270*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 270*0 + 3*90*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32ff0000; valaddr_reg:x3; val_offset:273*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 273*0 + 3*91*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32ff8000; valaddr_reg:x3; val_offset:276*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 276*0 + 3*92*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32ffc000; valaddr_reg:x3; val_offset:279*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 279*0 + 3*93*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32ffe000; valaddr_reg:x3; val_offset:282*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 282*0 + 3*94*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32fff000; valaddr_reg:x3; val_offset:285*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 285*0 + 3*95*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32fff800; valaddr_reg:x3; val_offset:288*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 288*0 + 3*96*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32fffc00; valaddr_reg:x3; val_offset:291*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 291*0 + 3*97*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32fffe00; valaddr_reg:x3; val_offset:294*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 294*0 + 3*98*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32ffff00; valaddr_reg:x3; val_offset:297*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 297*0 + 3*99*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32ffff80; valaddr_reg:x3; val_offset:300*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 300*0 + 3*100*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32ffffc0; valaddr_reg:x3; val_offset:303*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 303*0 + 3*101*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32ffffe0; valaddr_reg:x3; val_offset:306*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 306*0 + 3*102*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32fffff0; valaddr_reg:x3; val_offset:309*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 309*0 + 3*103*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32fffff8; valaddr_reg:x3; val_offset:312*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 312*0 + 3*104*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32fffffc; valaddr_reg:x3; val_offset:315*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 315*0 + 3*105*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32fffffe; valaddr_reg:x3; val_offset:318*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 318*0 + 3*106*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x65 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x32ffffff; valaddr_reg:x3; val_offset:321*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 321*0 + 3*107*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3f800001; valaddr_reg:x3; val_offset:324*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 324*0 + 3*108*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3f800003; valaddr_reg:x3; val_offset:327*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 327*0 + 3*109*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3f800007; valaddr_reg:x3; val_offset:330*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 330*0 + 3*110*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3f999999; valaddr_reg:x3; val_offset:333*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 333*0 + 3*111*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:336*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 336*0 + 3*112*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:339*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 339*0 + 3*113*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:342*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 342*0 + 3*114*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:345*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 345*0 + 3*115*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:348*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 348*0 + 3*116*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:351*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 351*0 + 3*117*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:354*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 354*0 + 3*118*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:357*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 357*0 + 3*119*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:360*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 360*0 + 3*120*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:363*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 363*0 + 3*121*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:366*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 366*0 + 3*122*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x3e5762 and fs2 == 0 and fe2 == 0x08 and fm2 == 0x2c2764 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7abe5762; op2val:0x42c2764;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:369*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 369*0 + 3*123*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x35000000; valaddr_reg:x3; val_offset:372*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 372*0 + 3*124*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x35000001; valaddr_reg:x3; val_offset:375*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 375*0 + 3*125*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x35000003; valaddr_reg:x3; val_offset:378*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 378*0 + 3*126*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x35000007; valaddr_reg:x3; val_offset:381*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 381*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3500000f; valaddr_reg:x3; val_offset:384*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 384*0 + 3*128*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3500001f; valaddr_reg:x3; val_offset:387*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 387*0 + 3*129*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3500003f; valaddr_reg:x3; val_offset:390*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 390*0 + 3*130*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3500007f; valaddr_reg:x3; val_offset:393*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 393*0 + 3*131*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x350000ff; valaddr_reg:x3; val_offset:396*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 396*0 + 3*132*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x350001ff; valaddr_reg:x3; val_offset:399*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 399*0 + 3*133*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x350003ff; valaddr_reg:x3; val_offset:402*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 402*0 + 3*134*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x350007ff; valaddr_reg:x3; val_offset:405*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 405*0 + 3*135*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x35000fff; valaddr_reg:x3; val_offset:408*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 408*0 + 3*136*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x35001fff; valaddr_reg:x3; val_offset:411*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 411*0 + 3*137*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x35003fff; valaddr_reg:x3; val_offset:414*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 414*0 + 3*138*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x35007fff; valaddr_reg:x3; val_offset:417*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 417*0 + 3*139*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3500ffff; valaddr_reg:x3; val_offset:420*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 420*0 + 3*140*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3501ffff; valaddr_reg:x3; val_offset:423*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 423*0 + 3*141*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3503ffff; valaddr_reg:x3; val_offset:426*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 426*0 + 3*142*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3507ffff; valaddr_reg:x3; val_offset:429*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 429*0 + 3*143*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x350fffff; valaddr_reg:x3; val_offset:432*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 432*0 + 3*144*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x351fffff; valaddr_reg:x3; val_offset:435*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 435*0 + 3*145*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x353fffff; valaddr_reg:x3; val_offset:438*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 438*0 + 3*146*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x35400000; valaddr_reg:x3; val_offset:441*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 441*0 + 3*147*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x35600000; valaddr_reg:x3; val_offset:444*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 444*0 + 3*148*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x35700000; valaddr_reg:x3; val_offset:447*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 447*0 + 3*149*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x35780000; valaddr_reg:x3; val_offset:450*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 450*0 + 3*150*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357c0000; valaddr_reg:x3; val_offset:453*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 453*0 + 3*151*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357e0000; valaddr_reg:x3; val_offset:456*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 456*0 + 3*152*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357f0000; valaddr_reg:x3; val_offset:459*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 459*0 + 3*153*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357f8000; valaddr_reg:x3; val_offset:462*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 462*0 + 3*154*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357fc000; valaddr_reg:x3; val_offset:465*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 465*0 + 3*155*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357fe000; valaddr_reg:x3; val_offset:468*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 468*0 + 3*156*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357ff000; valaddr_reg:x3; val_offset:471*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 471*0 + 3*157*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357ff800; valaddr_reg:x3; val_offset:474*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 474*0 + 3*158*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357ffc00; valaddr_reg:x3; val_offset:477*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 477*0 + 3*159*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357ffe00; valaddr_reg:x3; val_offset:480*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 480*0 + 3*160*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357fff00; valaddr_reg:x3; val_offset:483*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 483*0 + 3*161*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357fff80; valaddr_reg:x3; val_offset:486*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 486*0 + 3*162*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357fffc0; valaddr_reg:x3; val_offset:489*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 489*0 + 3*163*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357fffe0; valaddr_reg:x3; val_offset:492*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 492*0 + 3*164*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357ffff0; valaddr_reg:x3; val_offset:495*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 495*0 + 3*165*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357ffff8; valaddr_reg:x3; val_offset:498*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 498*0 + 3*166*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357ffffc; valaddr_reg:x3; val_offset:501*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 501*0 + 3*167*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357ffffe; valaddr_reg:x3; val_offset:504*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 504*0 + 3*168*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x6a and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x357fffff; valaddr_reg:x3; val_offset:507*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 507*0 + 3*169*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3f800001; valaddr_reg:x3; val_offset:510*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 510*0 + 3*170*FLEN/8, x4, x1, x2)

inst_171:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3f800003; valaddr_reg:x3; val_offset:513*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 513*0 + 3*171*FLEN/8, x4, x1, x2)

inst_172:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3f800007; valaddr_reg:x3; val_offset:516*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 516*0 + 3*172*FLEN/8, x4, x1, x2)

inst_173:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3f999999; valaddr_reg:x3; val_offset:519*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 519*0 + 3*173*FLEN/8, x4, x1, x2)

inst_174:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:522*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 522*0 + 3*174*FLEN/8, x4, x1, x2)

inst_175:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:525*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 525*0 + 3*175*FLEN/8, x4, x1, x2)

inst_176:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:528*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 528*0 + 3*176*FLEN/8, x4, x1, x2)

inst_177:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:531*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 531*0 + 3*177*FLEN/8, x4, x1, x2)

inst_178:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:534*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 534*0 + 3*178*FLEN/8, x4, x1, x2)

inst_179:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:537*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 537*0 + 3*179*FLEN/8, x4, x1, x2)

inst_180:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:540*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 540*0 + 3*180*FLEN/8, x4, x1, x2)

inst_181:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:543*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 543*0 + 3*181*FLEN/8, x4, x1, x2)

inst_182:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:546*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 546*0 + 3*182*FLEN/8, x4, x1, x2)

inst_183:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:549*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 549*0 + 3*183*FLEN/8, x4, x1, x2)

inst_184:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:552*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 552*0 + 3*184*FLEN/8, x4, x1, x2)

inst_185:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x4e3f47 and fs2 == 0 and fe2 == 0x07 and fm2 == 0x1ee097 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b4e3f47; op2val:0x39ee097;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:555*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 555*0 + 3*185*FLEN/8, x4, x1, x2)

inst_186:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3800000; valaddr_reg:x3; val_offset:558*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 558*0 + 3*186*FLEN/8, x4, x1, x2)

inst_187:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3800001; valaddr_reg:x3; val_offset:561*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 561*0 + 3*187*FLEN/8, x4, x1, x2)

inst_188:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3800003; valaddr_reg:x3; val_offset:564*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 564*0 + 3*188*FLEN/8, x4, x1, x2)

inst_189:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3800007; valaddr_reg:x3; val_offset:567*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 567*0 + 3*189*FLEN/8, x4, x1, x2)

inst_190:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb380000f; valaddr_reg:x3; val_offset:570*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 570*0 + 3*190*FLEN/8, x4, x1, x2)

inst_191:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb380001f; valaddr_reg:x3; val_offset:573*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 573*0 + 3*191*FLEN/8, x4, x1, x2)

inst_192:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb380003f; valaddr_reg:x3; val_offset:576*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 576*0 + 3*192*FLEN/8, x4, x1, x2)

inst_193:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb380007f; valaddr_reg:x3; val_offset:579*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 579*0 + 3*193*FLEN/8, x4, x1, x2)

inst_194:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb38000ff; valaddr_reg:x3; val_offset:582*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 582*0 + 3*194*FLEN/8, x4, x1, x2)

inst_195:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb38001ff; valaddr_reg:x3; val_offset:585*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 585*0 + 3*195*FLEN/8, x4, x1, x2)

inst_196:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb38003ff; valaddr_reg:x3; val_offset:588*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 588*0 + 3*196*FLEN/8, x4, x1, x2)

inst_197:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb38007ff; valaddr_reg:x3; val_offset:591*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 591*0 + 3*197*FLEN/8, x4, x1, x2)

inst_198:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3800fff; valaddr_reg:x3; val_offset:594*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 594*0 + 3*198*FLEN/8, x4, x1, x2)

inst_199:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3801fff; valaddr_reg:x3; val_offset:597*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 597*0 + 3*199*FLEN/8, x4, x1, x2)

inst_200:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3803fff; valaddr_reg:x3; val_offset:600*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 600*0 + 3*200*FLEN/8, x4, x1, x2)

inst_201:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3807fff; valaddr_reg:x3; val_offset:603*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 603*0 + 3*201*FLEN/8, x4, x1, x2)

inst_202:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb380ffff; valaddr_reg:x3; val_offset:606*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 606*0 + 3*202*FLEN/8, x4, x1, x2)

inst_203:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb381ffff; valaddr_reg:x3; val_offset:609*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 609*0 + 3*203*FLEN/8, x4, x1, x2)

inst_204:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb383ffff; valaddr_reg:x3; val_offset:612*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 612*0 + 3*204*FLEN/8, x4, x1, x2)

inst_205:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb387ffff; valaddr_reg:x3; val_offset:615*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 615*0 + 3*205*FLEN/8, x4, x1, x2)

inst_206:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb38fffff; valaddr_reg:x3; val_offset:618*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 618*0 + 3*206*FLEN/8, x4, x1, x2)

inst_207:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb39fffff; valaddr_reg:x3; val_offset:621*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 621*0 + 3*207*FLEN/8, x4, x1, x2)

inst_208:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3bfffff; valaddr_reg:x3; val_offset:624*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 624*0 + 3*208*FLEN/8, x4, x1, x2)

inst_209:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3c00000; valaddr_reg:x3; val_offset:627*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 627*0 + 3*209*FLEN/8, x4, x1, x2)

inst_210:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3e00000; valaddr_reg:x3; val_offset:630*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 630*0 + 3*210*FLEN/8, x4, x1, x2)

inst_211:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3f00000; valaddr_reg:x3; val_offset:633*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 633*0 + 3*211*FLEN/8, x4, x1, x2)

inst_212:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3f80000; valaddr_reg:x3; val_offset:636*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 636*0 + 3*212*FLEN/8, x4, x1, x2)

inst_213:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3fc0000; valaddr_reg:x3; val_offset:639*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 639*0 + 3*213*FLEN/8, x4, x1, x2)

inst_214:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3fe0000; valaddr_reg:x3; val_offset:642*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 642*0 + 3*214*FLEN/8, x4, x1, x2)

inst_215:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3ff0000; valaddr_reg:x3; val_offset:645*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 645*0 + 3*215*FLEN/8, x4, x1, x2)

inst_216:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3ff8000; valaddr_reg:x3; val_offset:648*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 648*0 + 3*216*FLEN/8, x4, x1, x2)

inst_217:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3ffc000; valaddr_reg:x3; val_offset:651*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 651*0 + 3*217*FLEN/8, x4, x1, x2)

inst_218:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3ffe000; valaddr_reg:x3; val_offset:654*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 654*0 + 3*218*FLEN/8, x4, x1, x2)

inst_219:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3fff000; valaddr_reg:x3; val_offset:657*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 657*0 + 3*219*FLEN/8, x4, x1, x2)

inst_220:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3fff800; valaddr_reg:x3; val_offset:660*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 660*0 + 3*220*FLEN/8, x4, x1, x2)

inst_221:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3fffc00; valaddr_reg:x3; val_offset:663*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 663*0 + 3*221*FLEN/8, x4, x1, x2)

inst_222:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3fffe00; valaddr_reg:x3; val_offset:666*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 666*0 + 3*222*FLEN/8, x4, x1, x2)

inst_223:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3ffff00; valaddr_reg:x3; val_offset:669*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 669*0 + 3*223*FLEN/8, x4, x1, x2)

inst_224:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3ffff80; valaddr_reg:x3; val_offset:672*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 672*0 + 3*224*FLEN/8, x4, x1, x2)

inst_225:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3ffffc0; valaddr_reg:x3; val_offset:675*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 675*0 + 3*225*FLEN/8, x4, x1, x2)

inst_226:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3ffffe0; valaddr_reg:x3; val_offset:678*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 678*0 + 3*226*FLEN/8, x4, x1, x2)

inst_227:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3fffff0; valaddr_reg:x3; val_offset:681*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 681*0 + 3*227*FLEN/8, x4, x1, x2)

inst_228:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3fffff8; valaddr_reg:x3; val_offset:684*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 684*0 + 3*228*FLEN/8, x4, x1, x2)

inst_229:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3fffffc; valaddr_reg:x3; val_offset:687*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 687*0 + 3*229*FLEN/8, x4, x1, x2)

inst_230:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3fffffe; valaddr_reg:x3; val_offset:690*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 690*0 + 3*230*FLEN/8, x4, x1, x2)

inst_231:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x67 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xb3ffffff; valaddr_reg:x3; val_offset:693*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 693*0 + 3*231*FLEN/8, x4, x1, x2)

inst_232:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbf800001; valaddr_reg:x3; val_offset:696*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 696*0 + 3*232*FLEN/8, x4, x1, x2)

inst_233:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbf800003; valaddr_reg:x3; val_offset:699*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 699*0 + 3*233*FLEN/8, x4, x1, x2)

inst_234:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbf800007; valaddr_reg:x3; val_offset:702*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 702*0 + 3*234*FLEN/8, x4, x1, x2)

inst_235:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbf999999; valaddr_reg:x3; val_offset:705*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 705*0 + 3*235*FLEN/8, x4, x1, x2)

inst_236:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:708*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 708*0 + 3*236*FLEN/8, x4, x1, x2)

inst_237:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:711*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 711*0 + 3*237*FLEN/8, x4, x1, x2)

inst_238:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:714*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 714*0 + 3*238*FLEN/8, x4, x1, x2)

inst_239:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:717*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 717*0 + 3*239*FLEN/8, x4, x1, x2)

inst_240:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:720*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 720*0 + 3*240*FLEN/8, x4, x1, x2)

inst_241:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:723*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 723*0 + 3*241*FLEN/8, x4, x1, x2)

inst_242:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:726*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 726*0 + 3*242*FLEN/8, x4, x1, x2)

inst_243:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:729*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 729*0 + 3*243*FLEN/8, x4, x1, x2)

inst_244:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:732*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 732*0 + 3*244*FLEN/8, x4, x1, x2)

inst_245:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:735*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 735*0 + 3*245*FLEN/8, x4, x1, x2)

inst_246:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:738*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 738*0 + 3*246*FLEN/8, x4, x1, x2)

inst_247:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x02f26f and fs2 == 1 and fe2 == 0x06 and fm2 == 0x7a3d16 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7b82f26f; op2val:0x837a3d16;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:741*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 741*0 + 3*247*FLEN/8, x4, x1, x2)

inst_248:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:744*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 744*0 + 3*248*FLEN/8, x4, x1, x2)

inst_249:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:747*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 747*0 + 3*249*FLEN/8, x4, x1, x2)

inst_250:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:750*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 750*0 + 3*250*FLEN/8, x4, x1, x2)

inst_251:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:753*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 753*0 + 3*251*FLEN/8, x4, x1, x2)

inst_252:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:756*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 756*0 + 3*252*FLEN/8, x4, x1, x2)

inst_253:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:759*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 759*0 + 3*253*FLEN/8, x4, x1, x2)

inst_254:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:762*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 762*0 + 3*254*FLEN/8, x4, x1, x2)

inst_255:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:765*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 765*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_256:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:768*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 768*0 + 3*256*FLEN/8, x4, x1, x2)

inst_257:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:771*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 771*0 + 3*257*FLEN/8, x4, x1, x2)

inst_258:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:774*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 774*0 + 3*258*FLEN/8, x4, x1, x2)

inst_259:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:777*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 777*0 + 3*259*FLEN/8, x4, x1, x2)

inst_260:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:780*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 780*0 + 3*260*FLEN/8, x4, x1, x2)

inst_261:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:783*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 783*0 + 3*261*FLEN/8, x4, x1, x2)

inst_262:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:786*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 786*0 + 3*262*FLEN/8, x4, x1, x2)

inst_263:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:789*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 789*0 + 3*263*FLEN/8, x4, x1, x2)

inst_264:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x84000000; valaddr_reg:x3; val_offset:792*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 792*0 + 3*264*FLEN/8, x4, x1, x2)

inst_265:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x84000001; valaddr_reg:x3; val_offset:795*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 795*0 + 3*265*FLEN/8, x4, x1, x2)

inst_266:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x84000003; valaddr_reg:x3; val_offset:798*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 798*0 + 3*266*FLEN/8, x4, x1, x2)

inst_267:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x84000007; valaddr_reg:x3; val_offset:801*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 801*0 + 3*267*FLEN/8, x4, x1, x2)

inst_268:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x8400000f; valaddr_reg:x3; val_offset:804*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 804*0 + 3*268*FLEN/8, x4, x1, x2)

inst_269:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x8400001f; valaddr_reg:x3; val_offset:807*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 807*0 + 3*269*FLEN/8, x4, x1, x2)

inst_270:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x8400003f; valaddr_reg:x3; val_offset:810*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 810*0 + 3*270*FLEN/8, x4, x1, x2)

inst_271:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x8400007f; valaddr_reg:x3; val_offset:813*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 813*0 + 3*271*FLEN/8, x4, x1, x2)

inst_272:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x840000ff; valaddr_reg:x3; val_offset:816*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 816*0 + 3*272*FLEN/8, x4, x1, x2)

inst_273:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x840001ff; valaddr_reg:x3; val_offset:819*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 819*0 + 3*273*FLEN/8, x4, x1, x2)

inst_274:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x840003ff; valaddr_reg:x3; val_offset:822*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 822*0 + 3*274*FLEN/8, x4, x1, x2)

inst_275:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x840007ff; valaddr_reg:x3; val_offset:825*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 825*0 + 3*275*FLEN/8, x4, x1, x2)

inst_276:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x84000fff; valaddr_reg:x3; val_offset:828*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 828*0 + 3*276*FLEN/8, x4, x1, x2)

inst_277:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x84001fff; valaddr_reg:x3; val_offset:831*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 831*0 + 3*277*FLEN/8, x4, x1, x2)

inst_278:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x84003fff; valaddr_reg:x3; val_offset:834*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 834*0 + 3*278*FLEN/8, x4, x1, x2)

inst_279:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x84007fff; valaddr_reg:x3; val_offset:837*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 837*0 + 3*279*FLEN/8, x4, x1, x2)

inst_280:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x8400ffff; valaddr_reg:x3; val_offset:840*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 840*0 + 3*280*FLEN/8, x4, x1, x2)

inst_281:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x8401ffff; valaddr_reg:x3; val_offset:843*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 843*0 + 3*281*FLEN/8, x4, x1, x2)

inst_282:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x8403ffff; valaddr_reg:x3; val_offset:846*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 846*0 + 3*282*FLEN/8, x4, x1, x2)

inst_283:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x8407ffff; valaddr_reg:x3; val_offset:849*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 849*0 + 3*283*FLEN/8, x4, x1, x2)

inst_284:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x840fffff; valaddr_reg:x3; val_offset:852*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 852*0 + 3*284*FLEN/8, x4, x1, x2)

inst_285:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x841fffff; valaddr_reg:x3; val_offset:855*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 855*0 + 3*285*FLEN/8, x4, x1, x2)

inst_286:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x843fffff; valaddr_reg:x3; val_offset:858*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 858*0 + 3*286*FLEN/8, x4, x1, x2)

inst_287:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x84400000; valaddr_reg:x3; val_offset:861*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 861*0 + 3*287*FLEN/8, x4, x1, x2)

inst_288:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x84600000; valaddr_reg:x3; val_offset:864*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 864*0 + 3*288*FLEN/8, x4, x1, x2)

inst_289:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x84700000; valaddr_reg:x3; val_offset:867*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 867*0 + 3*289*FLEN/8, x4, x1, x2)

inst_290:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x84780000; valaddr_reg:x3; val_offset:870*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 870*0 + 3*290*FLEN/8, x4, x1, x2)

inst_291:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847c0000; valaddr_reg:x3; val_offset:873*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 873*0 + 3*291*FLEN/8, x4, x1, x2)

inst_292:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847e0000; valaddr_reg:x3; val_offset:876*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 876*0 + 3*292*FLEN/8, x4, x1, x2)

inst_293:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847f0000; valaddr_reg:x3; val_offset:879*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 879*0 + 3*293*FLEN/8, x4, x1, x2)

inst_294:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847f8000; valaddr_reg:x3; val_offset:882*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 882*0 + 3*294*FLEN/8, x4, x1, x2)

inst_295:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847fc000; valaddr_reg:x3; val_offset:885*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 885*0 + 3*295*FLEN/8, x4, x1, x2)

inst_296:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847fe000; valaddr_reg:x3; val_offset:888*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 888*0 + 3*296*FLEN/8, x4, x1, x2)

inst_297:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847ff000; valaddr_reg:x3; val_offset:891*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 891*0 + 3*297*FLEN/8, x4, x1, x2)

inst_298:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847ff800; valaddr_reg:x3; val_offset:894*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 894*0 + 3*298*FLEN/8, x4, x1, x2)

inst_299:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847ffc00; valaddr_reg:x3; val_offset:897*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 897*0 + 3*299*FLEN/8, x4, x1, x2)

inst_300:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847ffe00; valaddr_reg:x3; val_offset:900*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 900*0 + 3*300*FLEN/8, x4, x1, x2)

inst_301:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847fff00; valaddr_reg:x3; val_offset:903*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 903*0 + 3*301*FLEN/8, x4, x1, x2)

inst_302:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847fff80; valaddr_reg:x3; val_offset:906*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 906*0 + 3*302*FLEN/8, x4, x1, x2)

inst_303:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847fffc0; valaddr_reg:x3; val_offset:909*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 909*0 + 3*303*FLEN/8, x4, x1, x2)

inst_304:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847fffe0; valaddr_reg:x3; val_offset:912*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 912*0 + 3*304*FLEN/8, x4, x1, x2)

inst_305:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847ffff0; valaddr_reg:x3; val_offset:915*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 915*0 + 3*305*FLEN/8, x4, x1, x2)

inst_306:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847ffff8; valaddr_reg:x3; val_offset:918*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 918*0 + 3*306*FLEN/8, x4, x1, x2)

inst_307:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847ffffc; valaddr_reg:x3; val_offset:921*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 921*0 + 3*307*FLEN/8, x4, x1, x2)

inst_308:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847ffffe; valaddr_reg:x3; val_offset:924*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 924*0 + 3*308*FLEN/8, x4, x1, x2)

inst_309:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4e1809 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bce1809; op2val:0x80000000;
op3val:0x847fffff; valaddr_reg:x3; val_offset:927*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 927*0 + 3*309*FLEN/8, x4, x1, x2)

inst_310:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23800000; valaddr_reg:x3; val_offset:930*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 930*0 + 3*310*FLEN/8, x4, x1, x2)

inst_311:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23800001; valaddr_reg:x3; val_offset:933*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 933*0 + 3*311*FLEN/8, x4, x1, x2)

inst_312:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23800003; valaddr_reg:x3; val_offset:936*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 936*0 + 3*312*FLEN/8, x4, x1, x2)

inst_313:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23800007; valaddr_reg:x3; val_offset:939*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 939*0 + 3*313*FLEN/8, x4, x1, x2)

inst_314:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x2380000f; valaddr_reg:x3; val_offset:942*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 942*0 + 3*314*FLEN/8, x4, x1, x2)

inst_315:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x2380001f; valaddr_reg:x3; val_offset:945*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 945*0 + 3*315*FLEN/8, x4, x1, x2)

inst_316:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x2380003f; valaddr_reg:x3; val_offset:948*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 948*0 + 3*316*FLEN/8, x4, x1, x2)

inst_317:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x2380007f; valaddr_reg:x3; val_offset:951*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 951*0 + 3*317*FLEN/8, x4, x1, x2)

inst_318:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x238000ff; valaddr_reg:x3; val_offset:954*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 954*0 + 3*318*FLEN/8, x4, x1, x2)

inst_319:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x238001ff; valaddr_reg:x3; val_offset:957*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 957*0 + 3*319*FLEN/8, x4, x1, x2)

inst_320:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x238003ff; valaddr_reg:x3; val_offset:960*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 960*0 + 3*320*FLEN/8, x4, x1, x2)

inst_321:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x238007ff; valaddr_reg:x3; val_offset:963*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 963*0 + 3*321*FLEN/8, x4, x1, x2)

inst_322:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23800fff; valaddr_reg:x3; val_offset:966*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 966*0 + 3*322*FLEN/8, x4, x1, x2)

inst_323:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23801fff; valaddr_reg:x3; val_offset:969*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 969*0 + 3*323*FLEN/8, x4, x1, x2)

inst_324:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23803fff; valaddr_reg:x3; val_offset:972*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 972*0 + 3*324*FLEN/8, x4, x1, x2)

inst_325:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23807fff; valaddr_reg:x3; val_offset:975*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 975*0 + 3*325*FLEN/8, x4, x1, x2)

inst_326:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x2380ffff; valaddr_reg:x3; val_offset:978*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 978*0 + 3*326*FLEN/8, x4, x1, x2)

inst_327:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x2381ffff; valaddr_reg:x3; val_offset:981*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 981*0 + 3*327*FLEN/8, x4, x1, x2)

inst_328:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x2383ffff; valaddr_reg:x3; val_offset:984*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 984*0 + 3*328*FLEN/8, x4, x1, x2)

inst_329:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x2387ffff; valaddr_reg:x3; val_offset:987*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 987*0 + 3*329*FLEN/8, x4, x1, x2)

inst_330:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x238fffff; valaddr_reg:x3; val_offset:990*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 990*0 + 3*330*FLEN/8, x4, x1, x2)

inst_331:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x239fffff; valaddr_reg:x3; val_offset:993*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 993*0 + 3*331*FLEN/8, x4, x1, x2)

inst_332:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23bfffff; valaddr_reg:x3; val_offset:996*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 996*0 + 3*332*FLEN/8, x4, x1, x2)

inst_333:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23c00000; valaddr_reg:x3; val_offset:999*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 999*0 + 3*333*FLEN/8, x4, x1, x2)

inst_334:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23e00000; valaddr_reg:x3; val_offset:1002*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1002*0 + 3*334*FLEN/8, x4, x1, x2)

inst_335:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23f00000; valaddr_reg:x3; val_offset:1005*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1005*0 + 3*335*FLEN/8, x4, x1, x2)

inst_336:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23f80000; valaddr_reg:x3; val_offset:1008*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1008*0 + 3*336*FLEN/8, x4, x1, x2)

inst_337:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23fc0000; valaddr_reg:x3; val_offset:1011*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1011*0 + 3*337*FLEN/8, x4, x1, x2)

inst_338:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23fe0000; valaddr_reg:x3; val_offset:1014*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1014*0 + 3*338*FLEN/8, x4, x1, x2)

inst_339:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23ff0000; valaddr_reg:x3; val_offset:1017*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1017*0 + 3*339*FLEN/8, x4, x1, x2)

inst_340:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23ff8000; valaddr_reg:x3; val_offset:1020*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1020*0 + 3*340*FLEN/8, x4, x1, x2)

inst_341:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23ffc000; valaddr_reg:x3; val_offset:1023*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1023*0 + 3*341*FLEN/8, x4, x1, x2)

inst_342:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23ffe000; valaddr_reg:x3; val_offset:1026*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1026*0 + 3*342*FLEN/8, x4, x1, x2)

inst_343:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23fff000; valaddr_reg:x3; val_offset:1029*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1029*0 + 3*343*FLEN/8, x4, x1, x2)

inst_344:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23fff800; valaddr_reg:x3; val_offset:1032*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1032*0 + 3*344*FLEN/8, x4, x1, x2)

inst_345:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23fffc00; valaddr_reg:x3; val_offset:1035*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1035*0 + 3*345*FLEN/8, x4, x1, x2)

inst_346:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23fffe00; valaddr_reg:x3; val_offset:1038*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1038*0 + 3*346*FLEN/8, x4, x1, x2)

inst_347:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23ffff00; valaddr_reg:x3; val_offset:1041*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1041*0 + 3*347*FLEN/8, x4, x1, x2)

inst_348:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23ffff80; valaddr_reg:x3; val_offset:1044*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1044*0 + 3*348*FLEN/8, x4, x1, x2)

inst_349:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23ffffc0; valaddr_reg:x3; val_offset:1047*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1047*0 + 3*349*FLEN/8, x4, x1, x2)

inst_350:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23ffffe0; valaddr_reg:x3; val_offset:1050*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1050*0 + 3*350*FLEN/8, x4, x1, x2)

inst_351:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23fffff0; valaddr_reg:x3; val_offset:1053*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1053*0 + 3*351*FLEN/8, x4, x1, x2)

inst_352:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23fffff8; valaddr_reg:x3; val_offset:1056*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1056*0 + 3*352*FLEN/8, x4, x1, x2)

inst_353:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23fffffc; valaddr_reg:x3; val_offset:1059*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1059*0 + 3*353*FLEN/8, x4, x1, x2)

inst_354:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23fffffe; valaddr_reg:x3; val_offset:1062*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1062*0 + 3*354*FLEN/8, x4, x1, x2)

inst_355:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x47 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x23ffffff; valaddr_reg:x3; val_offset:1065*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1065*0 + 3*355*FLEN/8, x4, x1, x2)

inst_356:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3f800001; valaddr_reg:x3; val_offset:1068*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1068*0 + 3*356*FLEN/8, x4, x1, x2)

inst_357:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3f800003; valaddr_reg:x3; val_offset:1071*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1071*0 + 3*357*FLEN/8, x4, x1, x2)

inst_358:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3f800007; valaddr_reg:x3; val_offset:1074*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1074*0 + 3*358*FLEN/8, x4, x1, x2)

inst_359:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3f999999; valaddr_reg:x3; val_offset:1077*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1077*0 + 3*359*FLEN/8, x4, x1, x2)

inst_360:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:1080*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1080*0 + 3*360*FLEN/8, x4, x1, x2)

inst_361:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:1083*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1083*0 + 3*361*FLEN/8, x4, x1, x2)

inst_362:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:1086*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1086*0 + 3*362*FLEN/8, x4, x1, x2)

inst_363:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:1089*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1089*0 + 3*363*FLEN/8, x4, x1, x2)

inst_364:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:1092*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1092*0 + 3*364*FLEN/8, x4, x1, x2)

inst_365:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:1095*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1095*0 + 3*365*FLEN/8, x4, x1, x2)

inst_366:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:1098*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1098*0 + 3*366*FLEN/8, x4, x1, x2)

inst_367:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:1101*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1101*0 + 3*367*FLEN/8, x4, x1, x2)

inst_368:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:1104*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1104*0 + 3*368*FLEN/8, x4, x1, x2)

inst_369:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:1107*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1107*0 + 3*369*FLEN/8, x4, x1, x2)

inst_370:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:1110*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1110*0 + 3*370*FLEN/8, x4, x1, x2)

inst_371:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x4ef986 and fs2 == 0 and fe2 == 0x06 and fm2 == 0x1e51a0 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bcef986; op2val:0x31e51a0;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:1113*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1113*0 + 3*371*FLEN/8, x4, x1, x2)

inst_372:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:1116*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1116*0 + 3*372*FLEN/8, x4, x1, x2)

inst_373:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:1119*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1119*0 + 3*373*FLEN/8, x4, x1, x2)

inst_374:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:1122*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1122*0 + 3*374*FLEN/8, x4, x1, x2)

inst_375:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:1125*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1125*0 + 3*375*FLEN/8, x4, x1, x2)

inst_376:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:1128*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1128*0 + 3*376*FLEN/8, x4, x1, x2)

inst_377:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:1131*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1131*0 + 3*377*FLEN/8, x4, x1, x2)

inst_378:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:1134*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1134*0 + 3*378*FLEN/8, x4, x1, x2)

inst_379:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:1137*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1137*0 + 3*379*FLEN/8, x4, x1, x2)

inst_380:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:1140*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1140*0 + 3*380*FLEN/8, x4, x1, x2)

inst_381:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:1143*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1143*0 + 3*381*FLEN/8, x4, x1, x2)

inst_382:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:1146*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1146*0 + 3*382*FLEN/8, x4, x1, x2)

inst_383:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:1149*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1149*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_384:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:1152*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1152*0 + 3*384*FLEN/8, x4, x1, x2)

inst_385:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:1155*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1155*0 + 3*385*FLEN/8, x4, x1, x2)

inst_386:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:1158*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1158*0 + 3*386*FLEN/8, x4, x1, x2)

inst_387:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:1161*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1161*0 + 3*387*FLEN/8, x4, x1, x2)

inst_388:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c800000; valaddr_reg:x3; val_offset:1164*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1164*0 + 3*388*FLEN/8, x4, x1, x2)

inst_389:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c800001; valaddr_reg:x3; val_offset:1167*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1167*0 + 3*389*FLEN/8, x4, x1, x2)

inst_390:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c800003; valaddr_reg:x3; val_offset:1170*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1170*0 + 3*390*FLEN/8, x4, x1, x2)

inst_391:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c800007; valaddr_reg:x3; val_offset:1173*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1173*0 + 3*391*FLEN/8, x4, x1, x2)

inst_392:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c80000f; valaddr_reg:x3; val_offset:1176*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1176*0 + 3*392*FLEN/8, x4, x1, x2)

inst_393:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c80001f; valaddr_reg:x3; val_offset:1179*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1179*0 + 3*393*FLEN/8, x4, x1, x2)

inst_394:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c80003f; valaddr_reg:x3; val_offset:1182*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1182*0 + 3*394*FLEN/8, x4, x1, x2)

inst_395:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c80007f; valaddr_reg:x3; val_offset:1185*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1185*0 + 3*395*FLEN/8, x4, x1, x2)

inst_396:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c8000ff; valaddr_reg:x3; val_offset:1188*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1188*0 + 3*396*FLEN/8, x4, x1, x2)

inst_397:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c8001ff; valaddr_reg:x3; val_offset:1191*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1191*0 + 3*397*FLEN/8, x4, x1, x2)

inst_398:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c8003ff; valaddr_reg:x3; val_offset:1194*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1194*0 + 3*398*FLEN/8, x4, x1, x2)

inst_399:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c8007ff; valaddr_reg:x3; val_offset:1197*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1197*0 + 3*399*FLEN/8, x4, x1, x2)

inst_400:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c800fff; valaddr_reg:x3; val_offset:1200*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1200*0 + 3*400*FLEN/8, x4, x1, x2)

inst_401:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c801fff; valaddr_reg:x3; val_offset:1203*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1203*0 + 3*401*FLEN/8, x4, x1, x2)

inst_402:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c803fff; valaddr_reg:x3; val_offset:1206*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1206*0 + 3*402*FLEN/8, x4, x1, x2)

inst_403:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c807fff; valaddr_reg:x3; val_offset:1209*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1209*0 + 3*403*FLEN/8, x4, x1, x2)

inst_404:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c80ffff; valaddr_reg:x3; val_offset:1212*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1212*0 + 3*404*FLEN/8, x4, x1, x2)

inst_405:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c81ffff; valaddr_reg:x3; val_offset:1215*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1215*0 + 3*405*FLEN/8, x4, x1, x2)

inst_406:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c83ffff; valaddr_reg:x3; val_offset:1218*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1218*0 + 3*406*FLEN/8, x4, x1, x2)

inst_407:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c87ffff; valaddr_reg:x3; val_offset:1221*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1221*0 + 3*407*FLEN/8, x4, x1, x2)

inst_408:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c8fffff; valaddr_reg:x3; val_offset:1224*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1224*0 + 3*408*FLEN/8, x4, x1, x2)

inst_409:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8c9fffff; valaddr_reg:x3; val_offset:1227*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1227*0 + 3*409*FLEN/8, x4, x1, x2)

inst_410:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cbfffff; valaddr_reg:x3; val_offset:1230*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1230*0 + 3*410*FLEN/8, x4, x1, x2)

inst_411:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cc00000; valaddr_reg:x3; val_offset:1233*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1233*0 + 3*411*FLEN/8, x4, x1, x2)

inst_412:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8ce00000; valaddr_reg:x3; val_offset:1236*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1236*0 + 3*412*FLEN/8, x4, x1, x2)

inst_413:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cf00000; valaddr_reg:x3; val_offset:1239*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1239*0 + 3*413*FLEN/8, x4, x1, x2)

inst_414:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cf80000; valaddr_reg:x3; val_offset:1242*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1242*0 + 3*414*FLEN/8, x4, x1, x2)

inst_415:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cfc0000; valaddr_reg:x3; val_offset:1245*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1245*0 + 3*415*FLEN/8, x4, x1, x2)

inst_416:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cfe0000; valaddr_reg:x3; val_offset:1248*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1248*0 + 3*416*FLEN/8, x4, x1, x2)

inst_417:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cff0000; valaddr_reg:x3; val_offset:1251*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1251*0 + 3*417*FLEN/8, x4, x1, x2)

inst_418:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cff8000; valaddr_reg:x3; val_offset:1254*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1254*0 + 3*418*FLEN/8, x4, x1, x2)

inst_419:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cffc000; valaddr_reg:x3; val_offset:1257*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1257*0 + 3*419*FLEN/8, x4, x1, x2)

inst_420:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cffe000; valaddr_reg:x3; val_offset:1260*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1260*0 + 3*420*FLEN/8, x4, x1, x2)

inst_421:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cfff000; valaddr_reg:x3; val_offset:1263*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1263*0 + 3*421*FLEN/8, x4, x1, x2)

inst_422:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cfff800; valaddr_reg:x3; val_offset:1266*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1266*0 + 3*422*FLEN/8, x4, x1, x2)

inst_423:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cfffc00; valaddr_reg:x3; val_offset:1269*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1269*0 + 3*423*FLEN/8, x4, x1, x2)

inst_424:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cfffe00; valaddr_reg:x3; val_offset:1272*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1272*0 + 3*424*FLEN/8, x4, x1, x2)

inst_425:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cffff00; valaddr_reg:x3; val_offset:1275*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1275*0 + 3*425*FLEN/8, x4, x1, x2)

inst_426:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cffff80; valaddr_reg:x3; val_offset:1278*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1278*0 + 3*426*FLEN/8, x4, x1, x2)

inst_427:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cffffc0; valaddr_reg:x3; val_offset:1281*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1281*0 + 3*427*FLEN/8, x4, x1, x2)

inst_428:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cffffe0; valaddr_reg:x3; val_offset:1284*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1284*0 + 3*428*FLEN/8, x4, x1, x2)

inst_429:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cfffff0; valaddr_reg:x3; val_offset:1287*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1287*0 + 3*429*FLEN/8, x4, x1, x2)

inst_430:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cfffff8; valaddr_reg:x3; val_offset:1290*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1290*0 + 3*430*FLEN/8, x4, x1, x2)

inst_431:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cfffffc; valaddr_reg:x3; val_offset:1293*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1293*0 + 3*431*FLEN/8, x4, x1, x2)

inst_432:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cfffffe; valaddr_reg:x3; val_offset:1296*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1296*0 + 3*432*FLEN/8, x4, x1, x2)

inst_433:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x50829a and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x19 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd0829a; op2val:0x80000000;
op3val:0x8cffffff; valaddr_reg:x3; val_offset:1299*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1299*0 + 3*433*FLEN/8, x4, x1, x2)

inst_434:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e000000; valaddr_reg:x3; val_offset:1302*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1302*0 + 3*434*FLEN/8, x4, x1, x2)

inst_435:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e000001; valaddr_reg:x3; val_offset:1305*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1305*0 + 3*435*FLEN/8, x4, x1, x2)

inst_436:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e000003; valaddr_reg:x3; val_offset:1308*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1308*0 + 3*436*FLEN/8, x4, x1, x2)

inst_437:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e000007; valaddr_reg:x3; val_offset:1311*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1311*0 + 3*437*FLEN/8, x4, x1, x2)

inst_438:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e00000f; valaddr_reg:x3; val_offset:1314*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1314*0 + 3*438*FLEN/8, x4, x1, x2)

inst_439:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e00001f; valaddr_reg:x3; val_offset:1317*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1317*0 + 3*439*FLEN/8, x4, x1, x2)

inst_440:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e00003f; valaddr_reg:x3; val_offset:1320*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1320*0 + 3*440*FLEN/8, x4, x1, x2)

inst_441:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e00007f; valaddr_reg:x3; val_offset:1323*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1323*0 + 3*441*FLEN/8, x4, x1, x2)

inst_442:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e0000ff; valaddr_reg:x3; val_offset:1326*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1326*0 + 3*442*FLEN/8, x4, x1, x2)

inst_443:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e0001ff; valaddr_reg:x3; val_offset:1329*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1329*0 + 3*443*FLEN/8, x4, x1, x2)

inst_444:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e0003ff; valaddr_reg:x3; val_offset:1332*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1332*0 + 3*444*FLEN/8, x4, x1, x2)

inst_445:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e0007ff; valaddr_reg:x3; val_offset:1335*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1335*0 + 3*445*FLEN/8, x4, x1, x2)

inst_446:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e000fff; valaddr_reg:x3; val_offset:1338*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1338*0 + 3*446*FLEN/8, x4, x1, x2)

inst_447:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e001fff; valaddr_reg:x3; val_offset:1341*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1341*0 + 3*447*FLEN/8, x4, x1, x2)

inst_448:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e003fff; valaddr_reg:x3; val_offset:1344*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1344*0 + 3*448*FLEN/8, x4, x1, x2)

inst_449:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e007fff; valaddr_reg:x3; val_offset:1347*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1347*0 + 3*449*FLEN/8, x4, x1, x2)

inst_450:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e00ffff; valaddr_reg:x3; val_offset:1350*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1350*0 + 3*450*FLEN/8, x4, x1, x2)

inst_451:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e01ffff; valaddr_reg:x3; val_offset:1353*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1353*0 + 3*451*FLEN/8, x4, x1, x2)

inst_452:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e03ffff; valaddr_reg:x3; val_offset:1356*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1356*0 + 3*452*FLEN/8, x4, x1, x2)

inst_453:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e07ffff; valaddr_reg:x3; val_offset:1359*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1359*0 + 3*453*FLEN/8, x4, x1, x2)

inst_454:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e0fffff; valaddr_reg:x3; val_offset:1362*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1362*0 + 3*454*FLEN/8, x4, x1, x2)

inst_455:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e1fffff; valaddr_reg:x3; val_offset:1365*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1365*0 + 3*455*FLEN/8, x4, x1, x2)

inst_456:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e3fffff; valaddr_reg:x3; val_offset:1368*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1368*0 + 3*456*FLEN/8, x4, x1, x2)

inst_457:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e400000; valaddr_reg:x3; val_offset:1371*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1371*0 + 3*457*FLEN/8, x4, x1, x2)

inst_458:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e600000; valaddr_reg:x3; val_offset:1374*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1374*0 + 3*458*FLEN/8, x4, x1, x2)

inst_459:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e700000; valaddr_reg:x3; val_offset:1377*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1377*0 + 3*459*FLEN/8, x4, x1, x2)

inst_460:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e780000; valaddr_reg:x3; val_offset:1380*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1380*0 + 3*460*FLEN/8, x4, x1, x2)

inst_461:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7c0000; valaddr_reg:x3; val_offset:1383*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1383*0 + 3*461*FLEN/8, x4, x1, x2)

inst_462:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7e0000; valaddr_reg:x3; val_offset:1386*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1386*0 + 3*462*FLEN/8, x4, x1, x2)

inst_463:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7f0000; valaddr_reg:x3; val_offset:1389*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1389*0 + 3*463*FLEN/8, x4, x1, x2)

inst_464:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7f8000; valaddr_reg:x3; val_offset:1392*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1392*0 + 3*464*FLEN/8, x4, x1, x2)

inst_465:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7fc000; valaddr_reg:x3; val_offset:1395*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1395*0 + 3*465*FLEN/8, x4, x1, x2)

inst_466:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7fe000; valaddr_reg:x3; val_offset:1398*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1398*0 + 3*466*FLEN/8, x4, x1, x2)

inst_467:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7ff000; valaddr_reg:x3; val_offset:1401*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1401*0 + 3*467*FLEN/8, x4, x1, x2)

inst_468:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7ff800; valaddr_reg:x3; val_offset:1404*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1404*0 + 3*468*FLEN/8, x4, x1, x2)

inst_469:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7ffc00; valaddr_reg:x3; val_offset:1407*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1407*0 + 3*469*FLEN/8, x4, x1, x2)

inst_470:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7ffe00; valaddr_reg:x3; val_offset:1410*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1410*0 + 3*470*FLEN/8, x4, x1, x2)

inst_471:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7fff00; valaddr_reg:x3; val_offset:1413*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1413*0 + 3*471*FLEN/8, x4, x1, x2)

inst_472:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7fff80; valaddr_reg:x3; val_offset:1416*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1416*0 + 3*472*FLEN/8, x4, x1, x2)

inst_473:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7fffc0; valaddr_reg:x3; val_offset:1419*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1419*0 + 3*473*FLEN/8, x4, x1, x2)

inst_474:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7fffe0; valaddr_reg:x3; val_offset:1422*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1422*0 + 3*474*FLEN/8, x4, x1, x2)

inst_475:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7ffff0; valaddr_reg:x3; val_offset:1425*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1425*0 + 3*475*FLEN/8, x4, x1, x2)

inst_476:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7ffff8; valaddr_reg:x3; val_offset:1428*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1428*0 + 3*476*FLEN/8, x4, x1, x2)

inst_477:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7ffffc; valaddr_reg:x3; val_offset:1431*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1431*0 + 3*477*FLEN/8, x4, x1, x2)

inst_478:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7ffffe; valaddr_reg:x3; val_offset:1434*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1434*0 + 3*478*FLEN/8, x4, x1, x2)

inst_479:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xdc and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x6e7fffff; valaddr_reg:x3; val_offset:1437*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1437*0 + 3*479*FLEN/8, x4, x1, x2)

inst_480:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f000001; valaddr_reg:x3; val_offset:1440*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1440*0 + 3*480*FLEN/8, x4, x1, x2)

inst_481:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f000003; valaddr_reg:x3; val_offset:1443*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1443*0 + 3*481*FLEN/8, x4, x1, x2)

inst_482:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f000007; valaddr_reg:x3; val_offset:1446*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1446*0 + 3*482*FLEN/8, x4, x1, x2)

inst_483:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f199999; valaddr_reg:x3; val_offset:1449*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1449*0 + 3*483*FLEN/8, x4, x1, x2)

inst_484:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f249249; valaddr_reg:x3; val_offset:1452*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1452*0 + 3*484*FLEN/8, x4, x1, x2)

inst_485:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f333333; valaddr_reg:x3; val_offset:1455*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1455*0 + 3*485*FLEN/8, x4, x1, x2)

inst_486:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:1458*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1458*0 + 3*486*FLEN/8, x4, x1, x2)

inst_487:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:1461*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1461*0 + 3*487*FLEN/8, x4, x1, x2)

inst_488:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f444444; valaddr_reg:x3; val_offset:1464*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1464*0 + 3*488*FLEN/8, x4, x1, x2)

inst_489:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:1467*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1467*0 + 3*489*FLEN/8, x4, x1, x2)

inst_490:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:1470*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1470*0 + 3*490*FLEN/8, x4, x1, x2)

inst_491:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f666666; valaddr_reg:x3; val_offset:1473*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1473*0 + 3*491*FLEN/8, x4, x1, x2)

inst_492:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:1476*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1476*0 + 3*492*FLEN/8, x4, x1, x2)

inst_493:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:1479*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1479*0 + 3*493*FLEN/8, x4, x1, x2)

inst_494:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:1482*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1482*0 + 3*494*FLEN/8, x4, x1, x2)

inst_495:
// fs1 == 0 and fe1 == 0xf7 and fm1 == 0x5962c2 and fs2 == 0 and fe2 == 0x86 and fm2 == 0x16bc93 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7bd962c2; op2val:0x4316bc93;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:1485*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1485*0 + 3*495*FLEN/8, x4, x1, x2)

inst_496:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd800000; valaddr_reg:x3; val_offset:1488*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1488*0 + 3*496*FLEN/8, x4, x1, x2)

inst_497:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd800001; valaddr_reg:x3; val_offset:1491*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1491*0 + 3*497*FLEN/8, x4, x1, x2)

inst_498:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd800003; valaddr_reg:x3; val_offset:1494*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1494*0 + 3*498*FLEN/8, x4, x1, x2)

inst_499:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd800007; valaddr_reg:x3; val_offset:1497*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1497*0 + 3*499*FLEN/8, x4, x1, x2)

inst_500:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd80000f; valaddr_reg:x3; val_offset:1500*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1500*0 + 3*500*FLEN/8, x4, x1, x2)

inst_501:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd80001f; valaddr_reg:x3; val_offset:1503*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1503*0 + 3*501*FLEN/8, x4, x1, x2)

inst_502:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd80003f; valaddr_reg:x3; val_offset:1506*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1506*0 + 3*502*FLEN/8, x4, x1, x2)

inst_503:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd80007f; valaddr_reg:x3; val_offset:1509*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1509*0 + 3*503*FLEN/8, x4, x1, x2)

inst_504:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd8000ff; valaddr_reg:x3; val_offset:1512*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1512*0 + 3*504*FLEN/8, x4, x1, x2)

inst_505:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd8001ff; valaddr_reg:x3; val_offset:1515*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1515*0 + 3*505*FLEN/8, x4, x1, x2)

inst_506:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd8003ff; valaddr_reg:x3; val_offset:1518*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1518*0 + 3*506*FLEN/8, x4, x1, x2)

inst_507:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd8007ff; valaddr_reg:x3; val_offset:1521*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1521*0 + 3*507*FLEN/8, x4, x1, x2)

inst_508:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd800fff; valaddr_reg:x3; val_offset:1524*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1524*0 + 3*508*FLEN/8, x4, x1, x2)

inst_509:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd801fff; valaddr_reg:x3; val_offset:1527*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1527*0 + 3*509*FLEN/8, x4, x1, x2)

inst_510:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd803fff; valaddr_reg:x3; val_offset:1530*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1530*0 + 3*510*FLEN/8, x4, x1, x2)

inst_511:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd807fff; valaddr_reg:x3; val_offset:1533*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1533*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_512:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd80ffff; valaddr_reg:x3; val_offset:1536*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1536*0 + 3*512*FLEN/8, x4, x1, x2)

inst_513:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd81ffff; valaddr_reg:x3; val_offset:1539*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1539*0 + 3*513*FLEN/8, x4, x1, x2)

inst_514:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd83ffff; valaddr_reg:x3; val_offset:1542*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1542*0 + 3*514*FLEN/8, x4, x1, x2)

inst_515:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd87ffff; valaddr_reg:x3; val_offset:1545*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1545*0 + 3*515*FLEN/8, x4, x1, x2)

inst_516:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd8fffff; valaddr_reg:x3; val_offset:1548*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1548*0 + 3*516*FLEN/8, x4, x1, x2)

inst_517:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfd9fffff; valaddr_reg:x3; val_offset:1551*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1551*0 + 3*517*FLEN/8, x4, x1, x2)

inst_518:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdbfffff; valaddr_reg:x3; val_offset:1554*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1554*0 + 3*518*FLEN/8, x4, x1, x2)

inst_519:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdc00000; valaddr_reg:x3; val_offset:1557*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1557*0 + 3*519*FLEN/8, x4, x1, x2)

inst_520:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfde00000; valaddr_reg:x3; val_offset:1560*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1560*0 + 3*520*FLEN/8, x4, x1, x2)

inst_521:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdf00000; valaddr_reg:x3; val_offset:1563*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1563*0 + 3*521*FLEN/8, x4, x1, x2)

inst_522:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdf80000; valaddr_reg:x3; val_offset:1566*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1566*0 + 3*522*FLEN/8, x4, x1, x2)

inst_523:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfc0000; valaddr_reg:x3; val_offset:1569*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1569*0 + 3*523*FLEN/8, x4, x1, x2)

inst_524:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfe0000; valaddr_reg:x3; val_offset:1572*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1572*0 + 3*524*FLEN/8, x4, x1, x2)

inst_525:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdff0000; valaddr_reg:x3; val_offset:1575*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1575*0 + 3*525*FLEN/8, x4, x1, x2)

inst_526:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdff8000; valaddr_reg:x3; val_offset:1578*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1578*0 + 3*526*FLEN/8, x4, x1, x2)

inst_527:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffc000; valaddr_reg:x3; val_offset:1581*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1581*0 + 3*527*FLEN/8, x4, x1, x2)

inst_528:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffe000; valaddr_reg:x3; val_offset:1584*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1584*0 + 3*528*FLEN/8, x4, x1, x2)

inst_529:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfff000; valaddr_reg:x3; val_offset:1587*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1587*0 + 3*529*FLEN/8, x4, x1, x2)

inst_530:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfff800; valaddr_reg:x3; val_offset:1590*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1590*0 + 3*530*FLEN/8, x4, x1, x2)

inst_531:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfffc00; valaddr_reg:x3; val_offset:1593*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1593*0 + 3*531*FLEN/8, x4, x1, x2)

inst_532:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfffe00; valaddr_reg:x3; val_offset:1596*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1596*0 + 3*532*FLEN/8, x4, x1, x2)

inst_533:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffff00; valaddr_reg:x3; val_offset:1599*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1599*0 + 3*533*FLEN/8, x4, x1, x2)

inst_534:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffff80; valaddr_reg:x3; val_offset:1602*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1602*0 + 3*534*FLEN/8, x4, x1, x2)

inst_535:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffffc0; valaddr_reg:x3; val_offset:1605*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1605*0 + 3*535*FLEN/8, x4, x1, x2)

inst_536:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffffe0; valaddr_reg:x3; val_offset:1608*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1608*0 + 3*536*FLEN/8, x4, x1, x2)

inst_537:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfffff0; valaddr_reg:x3; val_offset:1611*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1611*0 + 3*537*FLEN/8, x4, x1, x2)

inst_538:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfffff8; valaddr_reg:x3; val_offset:1614*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1614*0 + 3*538*FLEN/8, x4, x1, x2)

inst_539:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfffffc; valaddr_reg:x3; val_offset:1617*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1617*0 + 3*539*FLEN/8, x4, x1, x2)

inst_540:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdfffffe; valaddr_reg:x3; val_offset:1620*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1620*0 + 3*540*FLEN/8, x4, x1, x2)

inst_541:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfb and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xfdffffff; valaddr_reg:x3; val_offset:1623*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1623*0 + 3*541*FLEN/8, x4, x1, x2)

inst_542:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff000001; valaddr_reg:x3; val_offset:1626*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1626*0 + 3*542*FLEN/8, x4, x1, x2)

inst_543:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff000003; valaddr_reg:x3; val_offset:1629*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1629*0 + 3*543*FLEN/8, x4, x1, x2)

inst_544:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff000007; valaddr_reg:x3; val_offset:1632*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1632*0 + 3*544*FLEN/8, x4, x1, x2)

inst_545:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff199999; valaddr_reg:x3; val_offset:1635*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1635*0 + 3*545*FLEN/8, x4, x1, x2)

inst_546:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff249249; valaddr_reg:x3; val_offset:1638*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1638*0 + 3*546*FLEN/8, x4, x1, x2)

inst_547:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff333333; valaddr_reg:x3; val_offset:1641*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1641*0 + 3*547*FLEN/8, x4, x1, x2)

inst_548:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:1644*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1644*0 + 3*548*FLEN/8, x4, x1, x2)

inst_549:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:1647*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1647*0 + 3*549*FLEN/8, x4, x1, x2)

inst_550:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff444444; valaddr_reg:x3; val_offset:1650*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1650*0 + 3*550*FLEN/8, x4, x1, x2)

inst_551:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:1653*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1653*0 + 3*551*FLEN/8, x4, x1, x2)

inst_552:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:1656*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1656*0 + 3*552*FLEN/8, x4, x1, x2)

inst_553:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff666666; valaddr_reg:x3; val_offset:1659*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1659*0 + 3*553*FLEN/8, x4, x1, x2)

inst_554:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:1662*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1662*0 + 3*554*FLEN/8, x4, x1, x2)

inst_555:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:1665*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1665*0 + 3*555*FLEN/8, x4, x1, x2)

inst_556:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:1668*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1668*0 + 3*556*FLEN/8, x4, x1, x2)

inst_557:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x418378 and fs2 == 1 and fe2 == 0x85 and fm2 == 0x2954f0 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c418378; op2val:0xc2a954f0;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:1671*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1671*0 + 3*557*FLEN/8, x4, x1, x2)

inst_558:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa000000; valaddr_reg:x3; val_offset:1674*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1674*0 + 3*558*FLEN/8, x4, x1, x2)

inst_559:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa000001; valaddr_reg:x3; val_offset:1677*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1677*0 + 3*559*FLEN/8, x4, x1, x2)

inst_560:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa000003; valaddr_reg:x3; val_offset:1680*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1680*0 + 3*560*FLEN/8, x4, x1, x2)

inst_561:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa000007; valaddr_reg:x3; val_offset:1683*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1683*0 + 3*561*FLEN/8, x4, x1, x2)

inst_562:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa00000f; valaddr_reg:x3; val_offset:1686*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1686*0 + 3*562*FLEN/8, x4, x1, x2)

inst_563:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa00001f; valaddr_reg:x3; val_offset:1689*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1689*0 + 3*563*FLEN/8, x4, x1, x2)

inst_564:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa00003f; valaddr_reg:x3; val_offset:1692*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1692*0 + 3*564*FLEN/8, x4, x1, x2)

inst_565:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa00007f; valaddr_reg:x3; val_offset:1695*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1695*0 + 3*565*FLEN/8, x4, x1, x2)

inst_566:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa0000ff; valaddr_reg:x3; val_offset:1698*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1698*0 + 3*566*FLEN/8, x4, x1, x2)

inst_567:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa0001ff; valaddr_reg:x3; val_offset:1701*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1701*0 + 3*567*FLEN/8, x4, x1, x2)

inst_568:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa0003ff; valaddr_reg:x3; val_offset:1704*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1704*0 + 3*568*FLEN/8, x4, x1, x2)

inst_569:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa0007ff; valaddr_reg:x3; val_offset:1707*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1707*0 + 3*569*FLEN/8, x4, x1, x2)

inst_570:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa000fff; valaddr_reg:x3; val_offset:1710*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1710*0 + 3*570*FLEN/8, x4, x1, x2)

inst_571:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa001fff; valaddr_reg:x3; val_offset:1713*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1713*0 + 3*571*FLEN/8, x4, x1, x2)

inst_572:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa003fff; valaddr_reg:x3; val_offset:1716*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1716*0 + 3*572*FLEN/8, x4, x1, x2)

inst_573:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa007fff; valaddr_reg:x3; val_offset:1719*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1719*0 + 3*573*FLEN/8, x4, x1, x2)

inst_574:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa00ffff; valaddr_reg:x3; val_offset:1722*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1722*0 + 3*574*FLEN/8, x4, x1, x2)

inst_575:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa01ffff; valaddr_reg:x3; val_offset:1725*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1725*0 + 3*575*FLEN/8, x4, x1, x2)

inst_576:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa03ffff; valaddr_reg:x3; val_offset:1728*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1728*0 + 3*576*FLEN/8, x4, x1, x2)

inst_577:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa07ffff; valaddr_reg:x3; val_offset:1731*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1731*0 + 3*577*FLEN/8, x4, x1, x2)

inst_578:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa0fffff; valaddr_reg:x3; val_offset:1734*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1734*0 + 3*578*FLEN/8, x4, x1, x2)

inst_579:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa1fffff; valaddr_reg:x3; val_offset:1737*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1737*0 + 3*579*FLEN/8, x4, x1, x2)

inst_580:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa3fffff; valaddr_reg:x3; val_offset:1740*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1740*0 + 3*580*FLEN/8, x4, x1, x2)

inst_581:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa400000; valaddr_reg:x3; val_offset:1743*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1743*0 + 3*581*FLEN/8, x4, x1, x2)

inst_582:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa600000; valaddr_reg:x3; val_offset:1746*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1746*0 + 3*582*FLEN/8, x4, x1, x2)

inst_583:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa700000; valaddr_reg:x3; val_offset:1749*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1749*0 + 3*583*FLEN/8, x4, x1, x2)

inst_584:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa780000; valaddr_reg:x3; val_offset:1752*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1752*0 + 3*584*FLEN/8, x4, x1, x2)

inst_585:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7c0000; valaddr_reg:x3; val_offset:1755*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1755*0 + 3*585*FLEN/8, x4, x1, x2)

inst_586:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7e0000; valaddr_reg:x3; val_offset:1758*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1758*0 + 3*586*FLEN/8, x4, x1, x2)

inst_587:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7f0000; valaddr_reg:x3; val_offset:1761*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1761*0 + 3*587*FLEN/8, x4, x1, x2)

inst_588:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7f8000; valaddr_reg:x3; val_offset:1764*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1764*0 + 3*588*FLEN/8, x4, x1, x2)

inst_589:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fc000; valaddr_reg:x3; val_offset:1767*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1767*0 + 3*589*FLEN/8, x4, x1, x2)

inst_590:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fe000; valaddr_reg:x3; val_offset:1770*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1770*0 + 3*590*FLEN/8, x4, x1, x2)

inst_591:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ff000; valaddr_reg:x3; val_offset:1773*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1773*0 + 3*591*FLEN/8, x4, x1, x2)

inst_592:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ff800; valaddr_reg:x3; val_offset:1776*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1776*0 + 3*592*FLEN/8, x4, x1, x2)

inst_593:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ffc00; valaddr_reg:x3; val_offset:1779*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1779*0 + 3*593*FLEN/8, x4, x1, x2)

inst_594:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ffe00; valaddr_reg:x3; val_offset:1782*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1782*0 + 3*594*FLEN/8, x4, x1, x2)

inst_595:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fff00; valaddr_reg:x3; val_offset:1785*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1785*0 + 3*595*FLEN/8, x4, x1, x2)

inst_596:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fff80; valaddr_reg:x3; val_offset:1788*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1788*0 + 3*596*FLEN/8, x4, x1, x2)

inst_597:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fffc0; valaddr_reg:x3; val_offset:1791*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1791*0 + 3*597*FLEN/8, x4, x1, x2)

inst_598:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fffe0; valaddr_reg:x3; val_offset:1794*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1794*0 + 3*598*FLEN/8, x4, x1, x2)

inst_599:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ffff0; valaddr_reg:x3; val_offset:1797*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1797*0 + 3*599*FLEN/8, x4, x1, x2)

inst_600:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ffff8; valaddr_reg:x3; val_offset:1800*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1800*0 + 3*600*FLEN/8, x4, x1, x2)

inst_601:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ffffc; valaddr_reg:x3; val_offset:1803*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1803*0 + 3*601*FLEN/8, x4, x1, x2)

inst_602:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7ffffe; valaddr_reg:x3; val_offset:1806*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1806*0 + 3*602*FLEN/8, x4, x1, x2)

inst_603:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x54 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xaa7fffff; valaddr_reg:x3; val_offset:1809*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1809*0 + 3*603*FLEN/8, x4, x1, x2)

inst_604:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbf800001; valaddr_reg:x3; val_offset:1812*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1812*0 + 3*604*FLEN/8, x4, x1, x2)

inst_605:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbf800003; valaddr_reg:x3; val_offset:1815*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1815*0 + 3*605*FLEN/8, x4, x1, x2)

inst_606:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbf800007; valaddr_reg:x3; val_offset:1818*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1818*0 + 3*606*FLEN/8, x4, x1, x2)

inst_607:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbf999999; valaddr_reg:x3; val_offset:1821*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1821*0 + 3*607*FLEN/8, x4, x1, x2)

inst_608:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:1824*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1824*0 + 3*608*FLEN/8, x4, x1, x2)

inst_609:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:1827*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1827*0 + 3*609*FLEN/8, x4, x1, x2)

inst_610:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:1830*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1830*0 + 3*610*FLEN/8, x4, x1, x2)

inst_611:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:1833*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1833*0 + 3*611*FLEN/8, x4, x1, x2)

inst_612:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:1836*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1836*0 + 3*612*FLEN/8, x4, x1, x2)

inst_613:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:1839*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1839*0 + 3*613*FLEN/8, x4, x1, x2)

inst_614:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:1842*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1842*0 + 3*614*FLEN/8, x4, x1, x2)

inst_615:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:1845*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1845*0 + 3*615*FLEN/8, x4, x1, x2)

inst_616:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:1848*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1848*0 + 3*616*FLEN/8, x4, x1, x2)

inst_617:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:1851*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1851*0 + 3*617*FLEN/8, x4, x1, x2)

inst_618:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:1854*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1854*0 + 3*618*FLEN/8, x4, x1, x2)

inst_619:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x6f67da and fs2 == 1 and fe2 == 0x05 and fm2 == 0x08df4d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c6f67da; op2val:0x8288df4d;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:1857*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1857*0 + 3*619*FLEN/8, x4, x1, x2)

inst_620:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f800000; valaddr_reg:x3; val_offset:1860*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1860*0 + 3*620*FLEN/8, x4, x1, x2)

inst_621:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f800001; valaddr_reg:x3; val_offset:1863*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1863*0 + 3*621*FLEN/8, x4, x1, x2)

inst_622:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f800003; valaddr_reg:x3; val_offset:1866*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1866*0 + 3*622*FLEN/8, x4, x1, x2)

inst_623:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f800007; valaddr_reg:x3; val_offset:1869*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1869*0 + 3*623*FLEN/8, x4, x1, x2)

inst_624:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f80000f; valaddr_reg:x3; val_offset:1872*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1872*0 + 3*624*FLEN/8, x4, x1, x2)

inst_625:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f80001f; valaddr_reg:x3; val_offset:1875*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1875*0 + 3*625*FLEN/8, x4, x1, x2)

inst_626:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f80003f; valaddr_reg:x3; val_offset:1878*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1878*0 + 3*626*FLEN/8, x4, x1, x2)

inst_627:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f80007f; valaddr_reg:x3; val_offset:1881*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1881*0 + 3*627*FLEN/8, x4, x1, x2)

inst_628:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f8000ff; valaddr_reg:x3; val_offset:1884*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1884*0 + 3*628*FLEN/8, x4, x1, x2)

inst_629:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f8001ff; valaddr_reg:x3; val_offset:1887*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1887*0 + 3*629*FLEN/8, x4, x1, x2)

inst_630:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f8003ff; valaddr_reg:x3; val_offset:1890*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1890*0 + 3*630*FLEN/8, x4, x1, x2)

inst_631:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f8007ff; valaddr_reg:x3; val_offset:1893*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1893*0 + 3*631*FLEN/8, x4, x1, x2)

inst_632:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f800fff; valaddr_reg:x3; val_offset:1896*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1896*0 + 3*632*FLEN/8, x4, x1, x2)

inst_633:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f801fff; valaddr_reg:x3; val_offset:1899*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1899*0 + 3*633*FLEN/8, x4, x1, x2)

inst_634:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f803fff; valaddr_reg:x3; val_offset:1902*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1902*0 + 3*634*FLEN/8, x4, x1, x2)

inst_635:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f807fff; valaddr_reg:x3; val_offset:1905*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1905*0 + 3*635*FLEN/8, x4, x1, x2)

inst_636:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f80ffff; valaddr_reg:x3; val_offset:1908*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1908*0 + 3*636*FLEN/8, x4, x1, x2)

inst_637:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f81ffff; valaddr_reg:x3; val_offset:1911*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1911*0 + 3*637*FLEN/8, x4, x1, x2)

inst_638:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f83ffff; valaddr_reg:x3; val_offset:1914*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1914*0 + 3*638*FLEN/8, x4, x1, x2)

inst_639:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f87ffff; valaddr_reg:x3; val_offset:1917*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1917*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_640:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f8fffff; valaddr_reg:x3; val_offset:1920*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1920*0 + 3*640*FLEN/8, x4, x1, x2)

inst_641:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9f9fffff; valaddr_reg:x3; val_offset:1923*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1923*0 + 3*641*FLEN/8, x4, x1, x2)

inst_642:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9fbfffff; valaddr_reg:x3; val_offset:1926*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1926*0 + 3*642*FLEN/8, x4, x1, x2)

inst_643:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9fc00000; valaddr_reg:x3; val_offset:1929*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1929*0 + 3*643*FLEN/8, x4, x1, x2)

inst_644:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9fe00000; valaddr_reg:x3; val_offset:1932*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1932*0 + 3*644*FLEN/8, x4, x1, x2)

inst_645:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9ff00000; valaddr_reg:x3; val_offset:1935*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1935*0 + 3*645*FLEN/8, x4, x1, x2)

inst_646:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9ff80000; valaddr_reg:x3; val_offset:1938*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1938*0 + 3*646*FLEN/8, x4, x1, x2)

inst_647:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9ffc0000; valaddr_reg:x3; val_offset:1941*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1941*0 + 3*647*FLEN/8, x4, x1, x2)

inst_648:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9ffe0000; valaddr_reg:x3; val_offset:1944*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1944*0 + 3*648*FLEN/8, x4, x1, x2)

inst_649:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9fff0000; valaddr_reg:x3; val_offset:1947*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1947*0 + 3*649*FLEN/8, x4, x1, x2)

inst_650:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9fff8000; valaddr_reg:x3; val_offset:1950*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1950*0 + 3*650*FLEN/8, x4, x1, x2)

inst_651:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9fffc000; valaddr_reg:x3; val_offset:1953*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1953*0 + 3*651*FLEN/8, x4, x1, x2)

inst_652:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9fffe000; valaddr_reg:x3; val_offset:1956*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1956*0 + 3*652*FLEN/8, x4, x1, x2)

inst_653:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9ffff000; valaddr_reg:x3; val_offset:1959*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1959*0 + 3*653*FLEN/8, x4, x1, x2)

inst_654:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9ffff800; valaddr_reg:x3; val_offset:1962*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1962*0 + 3*654*FLEN/8, x4, x1, x2)

inst_655:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9ffffc00; valaddr_reg:x3; val_offset:1965*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1965*0 + 3*655*FLEN/8, x4, x1, x2)

inst_656:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9ffffe00; valaddr_reg:x3; val_offset:1968*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1968*0 + 3*656*FLEN/8, x4, x1, x2)

inst_657:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9fffff00; valaddr_reg:x3; val_offset:1971*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1971*0 + 3*657*FLEN/8, x4, x1, x2)

inst_658:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9fffff80; valaddr_reg:x3; val_offset:1974*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1974*0 + 3*658*FLEN/8, x4, x1, x2)

inst_659:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9fffffc0; valaddr_reg:x3; val_offset:1977*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1977*0 + 3*659*FLEN/8, x4, x1, x2)

inst_660:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9fffffe0; valaddr_reg:x3; val_offset:1980*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1980*0 + 3*660*FLEN/8, x4, x1, x2)

inst_661:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9ffffff0; valaddr_reg:x3; val_offset:1983*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1983*0 + 3*661*FLEN/8, x4, x1, x2)

inst_662:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9ffffff8; valaddr_reg:x3; val_offset:1986*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1986*0 + 3*662*FLEN/8, x4, x1, x2)

inst_663:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9ffffffc; valaddr_reg:x3; val_offset:1989*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1989*0 + 3*663*FLEN/8, x4, x1, x2)

inst_664:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9ffffffe; valaddr_reg:x3; val_offset:1992*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1992*0 + 3*664*FLEN/8, x4, x1, x2)

inst_665:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0x9fffffff; valaddr_reg:x3; val_offset:1995*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1995*0 + 3*665*FLEN/8, x4, x1, x2)

inst_666:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbf800001; valaddr_reg:x3; val_offset:1998*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 1998*0 + 3*666*FLEN/8, x4, x1, x2)

inst_667:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbf800003; valaddr_reg:x3; val_offset:2001*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2001*0 + 3*667*FLEN/8, x4, x1, x2)

inst_668:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbf800007; valaddr_reg:x3; val_offset:2004*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2004*0 + 3*668*FLEN/8, x4, x1, x2)

inst_669:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbf999999; valaddr_reg:x3; val_offset:2007*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2007*0 + 3*669*FLEN/8, x4, x1, x2)

inst_670:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:2010*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2010*0 + 3*670*FLEN/8, x4, x1, x2)

inst_671:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:2013*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2013*0 + 3*671*FLEN/8, x4, x1, x2)

inst_672:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:2016*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2016*0 + 3*672*FLEN/8, x4, x1, x2)

inst_673:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:2019*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2019*0 + 3*673*FLEN/8, x4, x1, x2)

inst_674:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:2022*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2022*0 + 3*674*FLEN/8, x4, x1, x2)

inst_675:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:2025*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2025*0 + 3*675*FLEN/8, x4, x1, x2)

inst_676:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:2028*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2028*0 + 3*676*FLEN/8, x4, x1, x2)

inst_677:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:2031*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2031*0 + 3*677*FLEN/8, x4, x1, x2)

inst_678:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:2034*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2034*0 + 3*678*FLEN/8, x4, x1, x2)

inst_679:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:2037*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2037*0 + 3*679*FLEN/8, x4, x1, x2)

inst_680:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:2040*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2040*0 + 3*680*FLEN/8, x4, x1, x2)

inst_681:
// fs1 == 0 and fe1 == 0xf8 and fm1 == 0x73530a and fs2 == 1 and fe2 == 0x05 and fm2 == 0x06ab00 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c73530a; op2val:0x8286ab00;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:2043*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2043*0 + 3*681*FLEN/8, x4, x1, x2)

inst_682:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa6000000; valaddr_reg:x3; val_offset:2046*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2046*0 + 3*682*FLEN/8, x4, x1, x2)

inst_683:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa6000001; valaddr_reg:x3; val_offset:2049*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2049*0 + 3*683*FLEN/8, x4, x1, x2)

inst_684:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa6000003; valaddr_reg:x3; val_offset:2052*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2052*0 + 3*684*FLEN/8, x4, x1, x2)

inst_685:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa6000007; valaddr_reg:x3; val_offset:2055*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2055*0 + 3*685*FLEN/8, x4, x1, x2)

inst_686:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa600000f; valaddr_reg:x3; val_offset:2058*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2058*0 + 3*686*FLEN/8, x4, x1, x2)

inst_687:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa600001f; valaddr_reg:x3; val_offset:2061*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2061*0 + 3*687*FLEN/8, x4, x1, x2)

inst_688:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa600003f; valaddr_reg:x3; val_offset:2064*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2064*0 + 3*688*FLEN/8, x4, x1, x2)

inst_689:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa600007f; valaddr_reg:x3; val_offset:2067*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2067*0 + 3*689*FLEN/8, x4, x1, x2)

inst_690:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa60000ff; valaddr_reg:x3; val_offset:2070*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2070*0 + 3*690*FLEN/8, x4, x1, x2)

inst_691:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa60001ff; valaddr_reg:x3; val_offset:2073*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2073*0 + 3*691*FLEN/8, x4, x1, x2)

inst_692:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa60003ff; valaddr_reg:x3; val_offset:2076*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2076*0 + 3*692*FLEN/8, x4, x1, x2)

inst_693:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa60007ff; valaddr_reg:x3; val_offset:2079*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2079*0 + 3*693*FLEN/8, x4, x1, x2)

inst_694:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa6000fff; valaddr_reg:x3; val_offset:2082*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2082*0 + 3*694*FLEN/8, x4, x1, x2)

inst_695:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa6001fff; valaddr_reg:x3; val_offset:2085*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2085*0 + 3*695*FLEN/8, x4, x1, x2)

inst_696:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa6003fff; valaddr_reg:x3; val_offset:2088*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2088*0 + 3*696*FLEN/8, x4, x1, x2)

inst_697:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa6007fff; valaddr_reg:x3; val_offset:2091*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2091*0 + 3*697*FLEN/8, x4, x1, x2)

inst_698:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa600ffff; valaddr_reg:x3; val_offset:2094*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2094*0 + 3*698*FLEN/8, x4, x1, x2)

inst_699:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa601ffff; valaddr_reg:x3; val_offset:2097*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2097*0 + 3*699*FLEN/8, x4, x1, x2)

inst_700:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa603ffff; valaddr_reg:x3; val_offset:2100*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2100*0 + 3*700*FLEN/8, x4, x1, x2)

inst_701:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa607ffff; valaddr_reg:x3; val_offset:2103*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2103*0 + 3*701*FLEN/8, x4, x1, x2)

inst_702:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa60fffff; valaddr_reg:x3; val_offset:2106*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2106*0 + 3*702*FLEN/8, x4, x1, x2)

inst_703:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa61fffff; valaddr_reg:x3; val_offset:2109*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2109*0 + 3*703*FLEN/8, x4, x1, x2)

inst_704:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa63fffff; valaddr_reg:x3; val_offset:2112*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2112*0 + 3*704*FLEN/8, x4, x1, x2)

inst_705:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa6400000; valaddr_reg:x3; val_offset:2115*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2115*0 + 3*705*FLEN/8, x4, x1, x2)

inst_706:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa6600000; valaddr_reg:x3; val_offset:2118*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2118*0 + 3*706*FLEN/8, x4, x1, x2)

inst_707:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa6700000; valaddr_reg:x3; val_offset:2121*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2121*0 + 3*707*FLEN/8, x4, x1, x2)

inst_708:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa6780000; valaddr_reg:x3; val_offset:2124*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2124*0 + 3*708*FLEN/8, x4, x1, x2)

inst_709:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67c0000; valaddr_reg:x3; val_offset:2127*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2127*0 + 3*709*FLEN/8, x4, x1, x2)

inst_710:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67e0000; valaddr_reg:x3; val_offset:2130*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2130*0 + 3*710*FLEN/8, x4, x1, x2)

inst_711:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67f0000; valaddr_reg:x3; val_offset:2133*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2133*0 + 3*711*FLEN/8, x4, x1, x2)

inst_712:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67f8000; valaddr_reg:x3; val_offset:2136*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2136*0 + 3*712*FLEN/8, x4, x1, x2)

inst_713:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67fc000; valaddr_reg:x3; val_offset:2139*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2139*0 + 3*713*FLEN/8, x4, x1, x2)

inst_714:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67fe000; valaddr_reg:x3; val_offset:2142*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2142*0 + 3*714*FLEN/8, x4, x1, x2)

inst_715:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67ff000; valaddr_reg:x3; val_offset:2145*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2145*0 + 3*715*FLEN/8, x4, x1, x2)

inst_716:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67ff800; valaddr_reg:x3; val_offset:2148*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2148*0 + 3*716*FLEN/8, x4, x1, x2)

inst_717:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67ffc00; valaddr_reg:x3; val_offset:2151*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2151*0 + 3*717*FLEN/8, x4, x1, x2)

inst_718:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67ffe00; valaddr_reg:x3; val_offset:2154*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2154*0 + 3*718*FLEN/8, x4, x1, x2)

inst_719:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67fff00; valaddr_reg:x3; val_offset:2157*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2157*0 + 3*719*FLEN/8, x4, x1, x2)

inst_720:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67fff80; valaddr_reg:x3; val_offset:2160*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2160*0 + 3*720*FLEN/8, x4, x1, x2)

inst_721:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67fffc0; valaddr_reg:x3; val_offset:2163*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2163*0 + 3*721*FLEN/8, x4, x1, x2)

inst_722:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67fffe0; valaddr_reg:x3; val_offset:2166*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2166*0 + 3*722*FLEN/8, x4, x1, x2)

inst_723:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67ffff0; valaddr_reg:x3; val_offset:2169*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2169*0 + 3*723*FLEN/8, x4, x1, x2)

inst_724:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67ffff8; valaddr_reg:x3; val_offset:2172*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2172*0 + 3*724*FLEN/8, x4, x1, x2)

inst_725:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67ffffc; valaddr_reg:x3; val_offset:2175*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2175*0 + 3*725*FLEN/8, x4, x1, x2)

inst_726:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67ffffe; valaddr_reg:x3; val_offset:2178*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2178*0 + 3*726*FLEN/8, x4, x1, x2)

inst_727:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x4c and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xa67fffff; valaddr_reg:x3; val_offset:2181*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2181*0 + 3*727*FLEN/8, x4, x1, x2)

inst_728:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbf800001; valaddr_reg:x3; val_offset:2184*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2184*0 + 3*728*FLEN/8, x4, x1, x2)

inst_729:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbf800003; valaddr_reg:x3; val_offset:2187*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2187*0 + 3*729*FLEN/8, x4, x1, x2)

inst_730:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbf800007; valaddr_reg:x3; val_offset:2190*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2190*0 + 3*730*FLEN/8, x4, x1, x2)

inst_731:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbf999999; valaddr_reg:x3; val_offset:2193*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2193*0 + 3*731*FLEN/8, x4, x1, x2)

inst_732:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:2196*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2196*0 + 3*732*FLEN/8, x4, x1, x2)

inst_733:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:2199*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2199*0 + 3*733*FLEN/8, x4, x1, x2)

inst_734:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:2202*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2202*0 + 3*734*FLEN/8, x4, x1, x2)

inst_735:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:2205*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2205*0 + 3*735*FLEN/8, x4, x1, x2)

inst_736:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:2208*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2208*0 + 3*736*FLEN/8, x4, x1, x2)

inst_737:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:2211*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2211*0 + 3*737*FLEN/8, x4, x1, x2)

inst_738:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:2214*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2214*0 + 3*738*FLEN/8, x4, x1, x2)

inst_739:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:2217*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2217*0 + 3*739*FLEN/8, x4, x1, x2)

inst_740:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:2220*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2220*0 + 3*740*FLEN/8, x4, x1, x2)

inst_741:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:2223*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2223*0 + 3*741*FLEN/8, x4, x1, x2)

inst_742:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:2226*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2226*0 + 3*742*FLEN/8, x4, x1, x2)

inst_743:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x030197 and fs2 == 1 and fe2 == 0x04 and fm2 == 0x7a2023 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c830197; op2val:0x827a2023;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:2229*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2229*0 + 3*743*FLEN/8, x4, x1, x2)

inst_744:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d800000; valaddr_reg:x3; val_offset:2232*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2232*0 + 3*744*FLEN/8, x4, x1, x2)

inst_745:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d800001; valaddr_reg:x3; val_offset:2235*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2235*0 + 3*745*FLEN/8, x4, x1, x2)

inst_746:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d800003; valaddr_reg:x3; val_offset:2238*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2238*0 + 3*746*FLEN/8, x4, x1, x2)

inst_747:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d800007; valaddr_reg:x3; val_offset:2241*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2241*0 + 3*747*FLEN/8, x4, x1, x2)

inst_748:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d80000f; valaddr_reg:x3; val_offset:2244*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2244*0 + 3*748*FLEN/8, x4, x1, x2)

inst_749:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d80001f; valaddr_reg:x3; val_offset:2247*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2247*0 + 3*749*FLEN/8, x4, x1, x2)

inst_750:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d80003f; valaddr_reg:x3; val_offset:2250*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2250*0 + 3*750*FLEN/8, x4, x1, x2)

inst_751:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d80007f; valaddr_reg:x3; val_offset:2253*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2253*0 + 3*751*FLEN/8, x4, x1, x2)

inst_752:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d8000ff; valaddr_reg:x3; val_offset:2256*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2256*0 + 3*752*FLEN/8, x4, x1, x2)

inst_753:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d8001ff; valaddr_reg:x3; val_offset:2259*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2259*0 + 3*753*FLEN/8, x4, x1, x2)

inst_754:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d8003ff; valaddr_reg:x3; val_offset:2262*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2262*0 + 3*754*FLEN/8, x4, x1, x2)

inst_755:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d8007ff; valaddr_reg:x3; val_offset:2265*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2265*0 + 3*755*FLEN/8, x4, x1, x2)

inst_756:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d800fff; valaddr_reg:x3; val_offset:2268*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2268*0 + 3*756*FLEN/8, x4, x1, x2)

inst_757:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d801fff; valaddr_reg:x3; val_offset:2271*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2271*0 + 3*757*FLEN/8, x4, x1, x2)

inst_758:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d803fff; valaddr_reg:x3; val_offset:2274*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2274*0 + 3*758*FLEN/8, x4, x1, x2)

inst_759:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d807fff; valaddr_reg:x3; val_offset:2277*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2277*0 + 3*759*FLEN/8, x4, x1, x2)

inst_760:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d80ffff; valaddr_reg:x3; val_offset:2280*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2280*0 + 3*760*FLEN/8, x4, x1, x2)

inst_761:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d81ffff; valaddr_reg:x3; val_offset:2283*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2283*0 + 3*761*FLEN/8, x4, x1, x2)

inst_762:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d83ffff; valaddr_reg:x3; val_offset:2286*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2286*0 + 3*762*FLEN/8, x4, x1, x2)

inst_763:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d87ffff; valaddr_reg:x3; val_offset:2289*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2289*0 + 3*763*FLEN/8, x4, x1, x2)

inst_764:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d8fffff; valaddr_reg:x3; val_offset:2292*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2292*0 + 3*764*FLEN/8, x4, x1, x2)

inst_765:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2d9fffff; valaddr_reg:x3; val_offset:2295*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2295*0 + 3*765*FLEN/8, x4, x1, x2)

inst_766:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dbfffff; valaddr_reg:x3; val_offset:2298*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2298*0 + 3*766*FLEN/8, x4, x1, x2)

inst_767:
// fs1 == 0 and fe1 == 0xf9 and fm1 == 0x100827 and fs2 == 0 and fe2 == 0x04 and fm2 == 0x638156 and fs3 == 0 and fe3 == 0x5b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7c900827; op2val:0x2638156;
op3val:0x2dc00000; valaddr_reg:x3; val_offset:2301*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 2301*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x199999677721,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x249249396745,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x36db6d595117,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x3bbbbb914683,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x5b6db6991862,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x666666710886,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x6db6db190235,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ffff8388600,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ffffc388604,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ffffe388606,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc80000009715200,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc80000109715201,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc80000309715203,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc80000709715207,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc80000f09715215,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc80001f09715231,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc80003f09715263,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc80007f09715327,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc8000ff09715455,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc8001ff09715711,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc8003ff09716223,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc8007ff09717247,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc800fff09719295,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc801fff09723391,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc803fff09731583,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc807fff09747967,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc80ffff09780735,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc81ffff09846271,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc83ffff09977343,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc87ffff10239487,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc8fffff10763775,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc9fffff11812351,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcbfffff13909503,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcc0000013909504,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xce0000016006656,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcf0000017055232,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcf8000017579520,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcfc000017841664,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcfe000017972736,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcff000018038272,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcff800018071040,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcffc00018087424,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcffe00018095616,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcfff00018099712,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcfff80018101760,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcfffc0018102784,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcfffe0018103296,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcffff0018103552,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcffff8018103680,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcffffc018103744,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcffffe018103776,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcfffff018103792,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcfffff818103800,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcfffffc18103804,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcfffffe18103806,32,FLEN)
NAN_BOXED(0x7ab2e791058545041,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcffffff18103807,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3280000047249408,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3280000147249409,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3280000347249411,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3280000747249415,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3280000f47249423,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3280001f47249439,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3280003f47249471,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3280007f47249535,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x328000ff47249663,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x328001ff47249919,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x328003ff47250431,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x328007ff47251455,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32800fff47253503,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32801fff47257599,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32803fff47265791,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32807fff47282175,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3280ffff47314943,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3281ffff47380479,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3283ffff47511551,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3287ffff47773695,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x328fffff48297983,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x329fffff49346559,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32bfffff51443711,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32c0000051443712,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32e0000053540864,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32f0000054589440,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32f8000055113728,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32fc000055375872,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32fe000055506944,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32ff000055572480,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32ff800055605248,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32ffc00055621632,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32ffe00055629824,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32fff00055633920,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32fff80055635968,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32fffc0055636992,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32fffe0055637504,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32ffff0055637760,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32ffff8055637888,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32ffffc055637952,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32ffffe055637984,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32fffff055638000,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32fffff855638008,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32fffffc55638012,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32fffffe55638014,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x32ffffff55638015,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3f800001065353217,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3f800003065353219,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3f800007065353223,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3f999999067030937,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3fa49249067749961,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3fb33333068708659,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3fb6db6d068948333,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3fbbbbbb069267899,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3fc44444069827140,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3fcccccc070386380,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3fdb6db6071345078,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3fe66666072064102,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3fedb6db072543451,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3ffffff8073741816,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3ffffffc073741820,32,FLEN)
NAN_BOXED(0x7abe5762059294562,32,FLEN)
NAN_BOXED(0x42c27640002532,32,FLEN)
NAN_BOXED(0x3ffffffe073741822,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3500000089192448,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3500000189192449,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3500000389192451,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3500000789192455,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3500000f89192463,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3500001f89192479,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3500003f89192511,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3500007f89192575,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x350000ff89192703,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x350001ff89192959,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x350003ff89193471,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x350007ff89194495,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x35000fff89196543,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x35001fff89200639,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x35003fff89208831,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x35007fff89225215,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3500ffff89257983,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3501ffff89323519,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3503ffff89454591,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3507ffff89716735,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x350fffff90241023,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x351fffff91289599,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x353fffff93386751,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3540000093386752,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3560000095483904,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3570000096532480,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3578000097056768,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357c000097318912,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357e000097449984,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357f000097515520,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357f800097548288,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357fc00097564672,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357fe00097572864,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357ff00097576960,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357ff80097579008,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357ffc0097580032,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357ffe0097580544,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357fff0097580800,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357fff8097580928,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357fffc097580992,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357fffe097581024,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357ffff097581040,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357ffff897581048,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357ffffc97581052,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357ffffe97581054,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x357fffff97581055,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3f800001065353217,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3f800003065353219,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3f800007065353223,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3f999999067030937,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3fa49249067749961,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3fb33333068708659,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3fb6db6d068948333,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3fbbbbbb069267899,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3fc44444069827140,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3fcccccc070386380,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3fdb6db6071345078,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3fe66666072064102,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3fedb6db072543451,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3ffffff8073741816,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3ffffffc073741820,32,FLEN)
NAN_BOXED(0x7b4e3f47068725575,32,FLEN)
NAN_BOXED(0x39ee0970743831,32,FLEN)
NAN_BOXED(0x3ffffffe073741822,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3800000011510272,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3800001011510273,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3800003011510275,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3800007011510279,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb380000f011510287,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb380001f011510303,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb380003f011510335,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb380007f011510399,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb38000ff011510527,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb38001ff011510783,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb38003ff011511295,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb38007ff011512319,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3800fff011514367,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3801fff011518463,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3803fff011526655,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3807fff011543039,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb380ffff011575807,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb381ffff011641343,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb383ffff011772415,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb387ffff012034559,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb38fffff012558847,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb39fffff013607423,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3bfffff015704575,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3c00000015704576,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3e00000017801728,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3f00000018850304,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3f80000019374592,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3fc0000019636736,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3fe0000019767808,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3ff0000019833344,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3ff8000019866112,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3ffc000019882496,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3ffe000019890688,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3fff000019894784,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3fff800019896832,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3fffc00019897856,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3fffe00019898368,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3ffff00019898624,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3ffff80019898752,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3ffffc0019898816,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3ffffe0019898848,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3fffff0019898864,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3fffff8019898872,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3fffffc019898876,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3fffffe019898878,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xb3ffffff019898879,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbf800001212836865,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbf800003212836867,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbf800007212836871,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbf999999214514585,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbfa49249215233609,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbfb33333216192307,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbfb6db6d216431981,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbfbbbbbb216751547,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbfc44444217310788,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbfcccccc217870028,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbfdb6db6218828726,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbfe66666219547750,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbfedb6db220027099,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbffffff8221225464,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbffffffc221225468,32,FLEN)
NAN_BOXED(0x7b82f26f072179311,32,FLEN)
NAN_BOXED(0x837a3d16205826326,32,FLEN)
NAN_BOXED(0xbffffffe221225470,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80800001155872257,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80800003155872259,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80800007155872263,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80999999157549977,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80a49249158269001,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80b33333159227699,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80b6db6d159467373,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80bbbbbb159786939,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80c44444160346180,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80cccccc160905420,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80db6db6161864118,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80e66666162583142,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80edb6db163062491,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80fffff8164260856,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80fffffc164260860,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80fffffe164260862,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x84000000214592512,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x84000001214592513,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x84000003214592515,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x84000007214592519,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8400000f214592527,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8400001f214592543,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8400003f214592575,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8400007f214592639,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x840000ff214592767,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x840001ff214593023,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x840003ff214593535,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x840007ff214594559,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x84000fff214596607,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x84001fff214600703,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x84003fff214608895,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x84007fff214625279,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8400ffff214658047,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8401ffff214723583,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8403ffff214854655,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8407ffff215116799,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x840fffff215641087,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x841fffff216689663,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x843fffff218786815,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x84400000218786816,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x84600000220883968,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x84700000221932544,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x84780000222456832,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847c0000222718976,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847e0000222850048,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847f0000222915584,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847f8000222948352,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847fc000222964736,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847fe000222972928,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847ff000222977024,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847ff800222979072,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847ffc00222980096,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847ffe00222980608,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847fff00222980864,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847fff80222980992,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847fffc0222981056,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847fffe0222981088,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847ffff0222981104,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847ffff8222981112,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847ffffc222981116,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847ffffe222981118,32,FLEN)
NAN_BOXED(0x7bce1809077104137,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x847fffff222981119,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x2380000095591168,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x2380000195591169,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x2380000395591171,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x2380000795591175,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x2380000f95591183,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x2380001f95591199,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x2380003f95591231,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x2380007f95591295,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x238000ff95591423,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x238001ff95591679,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x238003ff95592191,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x238007ff95593215,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23800fff95595263,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23801fff95599359,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23803fff95607551,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23807fff95623935,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x2380ffff95656703,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x2381ffff95722239,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x2383ffff95853311,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x2387ffff96115455,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x238fffff96639743,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x239fffff97688319,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23bfffff99785471,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23c0000099785472,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23e0000001882624,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23f0000002931200,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23f8000003455488,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23fc000003717632,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23fe000003848704,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23ff000003914240,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23ff800003947008,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23ffc00003963392,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23ffe00003971584,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23fff00003975680,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23fff80003977728,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23fffc0003978752,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23fffe0003979264,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23ffff0003979520,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23ffff8003979648,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23ffffc003979712,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23ffffe003979744,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23fffff003979760,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23fffff803979768,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23fffffc03979772,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23fffffe03979774,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x23ffffff03979775,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3f800001065353217,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3f800003065353219,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3f800007065353223,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3f999999067030937,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3fa49249067749961,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3fb33333068708659,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3fb6db6d068948333,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3fbbbbbb069267899,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3fc44444069827140,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3fcccccc070386380,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3fdb6db6071345078,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3fe66666072064102,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3fedb6db072543451,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3ffffff8073741816,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3ffffffc073741820,32,FLEN)
NAN_BOXED(0x7bcef986077161862,32,FLEN)
NAN_BOXED(0x31e51a02318624,32,FLEN)
NAN_BOXED(0x3ffffffe073741822,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80000001147483649,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80000003147483651,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80000007147483655,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80199999149161369,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80249249149880393,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80333333150839091,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8036db6d151078765,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x803bbbbb151398331,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80444444151957572,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x804ccccc152516812,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x805b6db6153475510,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80666666154194534,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x806db6db154673883,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x807ffff8155872248,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x807ffffc155872252,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x807ffffe155872254,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c800000357198848,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c800001357198849,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c800003357198851,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c800007357198855,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c80000f357198863,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c80001f357198879,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c80003f357198911,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c80007f357198975,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c8000ff357199103,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c8001ff357199359,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c8003ff357199871,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c8007ff357200895,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c800fff357202943,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c801fff357207039,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c803fff357215231,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c807fff357231615,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c80ffff357264383,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c81ffff357329919,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c83ffff357460991,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c87ffff357723135,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c8fffff358247423,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8c9fffff359295999,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cbfffff361393151,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cc00000361393152,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8ce00000363490304,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cf00000364538880,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cf80000365063168,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cfc0000365325312,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cfe0000365456384,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cff0000365521920,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cff8000365554688,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cffc000365571072,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cffe000365579264,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cfff000365583360,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cfff800365585408,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cfffc00365586432,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cfffe00365586944,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cffff00365587200,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cffff80365587328,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cffffc0365587392,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cffffe0365587424,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cfffff0365587440,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cfffff8365587448,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cfffffc365587452,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cfffffe365587454,32,FLEN)
NAN_BOXED(0x7bd0829a077262490,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8cffffff365587455,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e000000845493760,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e000001845493761,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e000003845493763,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e000007845493767,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e00000f845493775,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e00001f845493791,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e00003f845493823,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e00007f845493887,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e0000ff845494015,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e0001ff845494271,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e0003ff845494783,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e0007ff845495807,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e000fff845497855,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e001fff845501951,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e003fff845510143,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e007fff845526527,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e00ffff845559295,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e01ffff845624831,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e03ffff845755903,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e07ffff846018047,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e0fffff846542335,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e1fffff847590911,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e3fffff849688063,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e400000849688064,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e600000851785216,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e700000852833792,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e780000853358080,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7c0000853620224,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7e0000853751296,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7f0000853816832,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7f8000853849600,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7fc000853865984,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7fe000853874176,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7ff000853878272,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7ff800853880320,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7ffc00853881344,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7ffe00853881856,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7fff00853882112,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7fff80853882240,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7fffc0853882304,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7fffe0853882336,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7ffff0853882352,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7ffff8853882360,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7ffffc853882364,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7ffffe853882366,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x6e7fffff853882367,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f000001130706433,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f000003130706435,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f000007130706439,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f199999132384153,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f249249133103177,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f333333134061875,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f36db6d134301549,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f3bbbbb134621115,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f444444135180356,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f4ccccc135739596,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f5b6db6136698294,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f666666137417318,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f6db6db137896667,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f7ffff8139095032,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f7ffffc139095036,32,FLEN)
NAN_BOXED(0x7bd962c2077844162,32,FLEN)
NAN_BOXED(0x4316bc93125563539,32,FLEN)
NAN_BOXED(0x7f7ffffe139095038,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd800000253024256,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd800001253024257,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd800003253024259,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd800007253024263,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd80000f253024271,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd80001f253024287,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd80003f253024319,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd80007f253024383,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd8000ff253024511,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd8001ff253024767,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd8003ff253025279,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd8007ff253026303,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd800fff253028351,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd801fff253032447,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd803fff253040639,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd807fff253057023,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd80ffff253089791,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd81ffff253155327,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd83ffff253286399,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd87ffff253548543,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd8fffff254072831,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfd9fffff255121407,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdbfffff257218559,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdc00000257218560,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfde00000259315712,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdf00000260364288,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdf80000260888576,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdfc0000261150720,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdfe0000261281792,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdff0000261347328,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdff8000261380096,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdffc000261396480,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdffe000261404672,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdfff000261408768,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdfff800261410816,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdfffc00261411840,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdfffe00261412352,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdffff00261412608,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdffff80261412736,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdffffc0261412800,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdffffe0261412832,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdfffff0261412848,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdfffff8261412856,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdfffffc261412860,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdfffffe261412862,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xfdffffff261412863,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff000001278190081,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff000003278190083,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff000007278190087,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff199999279867801,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff249249280586825,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff333333281545523,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff36db6d281785197,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff3bbbbb282104763,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff444444282664004,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff4ccccc283223244,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff5b6db6284181942,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff666666284900966,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff6db6db285380315,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff7ffff8286578680,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff7ffffc286578684,32,FLEN)
NAN_BOXED(0x7c418378084668280,32,FLEN)
NAN_BOXED(0xc2a954f0265877232,32,FLEN)
NAN_BOXED(0xff7ffffe286578686,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa000000852126720,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa000001852126721,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa000003852126723,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa000007852126727,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa00000f852126735,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa00001f852126751,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa00003f852126783,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa00007f852126847,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa0000ff852126975,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa0001ff852127231,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa0003ff852127743,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa0007ff852128767,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa000fff852130815,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa001fff852134911,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa003fff852143103,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa007fff852159487,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa00ffff852192255,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa01ffff852257791,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa03ffff852388863,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa07ffff852651007,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa0fffff853175295,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa1fffff854223871,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa3fffff856321023,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa400000856321024,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa600000858418176,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa700000859466752,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa780000859991040,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7c0000860253184,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7e0000860384256,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7f0000860449792,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7f8000860482560,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7fc000860498944,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7fe000860507136,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7ff000860511232,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7ff800860513280,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7ffc00860514304,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7ffe00860514816,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7fff00860515072,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7fff80860515200,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7fffc0860515264,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7fffe0860515296,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7ffff0860515312,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7ffff8860515320,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7ffffc860515324,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7ffffe860515326,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xaa7fffff860515327,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbf800001212836865,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbf800003212836867,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbf800007212836871,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbf999999214514585,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbfa49249215233609,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbfb33333216192307,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbfb6db6d216431981,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbfbbbbbb216751547,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbfc44444217310788,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbfcccccc217870028,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbfdb6db6218828726,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbfe66666219547750,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbfedb6db220027099,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbffffff8221225464,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbffffffc221225468,32,FLEN)
NAN_BOXED(0x7c6f67da087675866,32,FLEN)
NAN_BOXED(0x8288df4d190008141,32,FLEN)
NAN_BOXED(0xbffffffe221225470,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f800000675965952,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f800001675965953,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f800003675965955,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f800007675965959,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f80000f675965967,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f80001f675965983,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f80003f675966015,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f80007f675966079,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f8000ff675966207,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f8001ff675966463,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f8003ff675966975,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f8007ff675967999,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f800fff675970047,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f801fff675974143,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f803fff675982335,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f807fff675998719,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f80ffff676031487,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f81ffff676097023,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f83ffff676228095,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f87ffff676490239,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f8fffff677014527,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9f9fffff678063103,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9fbfffff680160255,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9fc00000680160256,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9fe00000682257408,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9ff00000683305984,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9ff80000683830272,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9ffc0000684092416,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9ffe0000684223488,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9fff0000684289024,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9fff8000684321792,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9fffc000684338176,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9fffe000684346368,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9ffff000684350464,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9ffff800684352512,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9ffffc00684353536,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9ffffe00684354048,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9fffff00684354304,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9fffff80684354432,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9fffffc0684354496,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9fffffe0684354528,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9ffffff0684354544,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9ffffff8684354552,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9ffffffc684354556,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9ffffffe684354558,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0x9fffffff684354559,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbf800001212836865,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbf800003212836867,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbf800007212836871,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbf999999214514585,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbfa49249215233609,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbfb33333216192307,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbfb6db6d216431981,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbfbbbbbb216751547,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbfc44444217310788,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbfcccccc217870028,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbfdb6db6218828726,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbfe66666219547750,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbfedb6db220027099,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbffffff8221225464,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbffffffc221225468,32,FLEN)
NAN_BOXED(0x7c73530a087932682,32,FLEN)
NAN_BOXED(0x8286ab00189863680,32,FLEN)
NAN_BOXED(0xbffffffe221225470,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa6000000785017856,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa6000001785017857,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa6000003785017859,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa6000007785017863,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa600000f785017871,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa600001f785017887,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa600003f785017919,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa600007f785017983,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa60000ff785018111,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa60001ff785018367,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa60003ff785018879,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa60007ff785019903,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa6000fff785021951,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa6001fff785026047,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa6003fff785034239,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa6007fff785050623,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa600ffff785083391,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa601ffff785148927,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa603ffff785279999,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa607ffff785542143,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa60fffff786066431,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa61fffff787115007,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa63fffff789212159,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa6400000789212160,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa6600000791309312,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa6700000792357888,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa6780000792882176,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67c0000793144320,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67e0000793275392,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67f0000793340928,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67f8000793373696,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67fc000793390080,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67fe000793398272,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67ff000793402368,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67ff800793404416,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67ffc00793405440,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67ffe00793405952,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67fff00793406208,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67fff80793406336,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67fffc0793406400,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67fffe0793406432,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67ffff0793406448,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67ffff8793406456,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67ffffc793406460,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67ffffe793406462,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xa67fffff793406463,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbf800001212836865,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbf800003212836867,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbf800007212836871,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbf999999214514585,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbfa49249215233609,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbfb33333216192307,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbfb6db6d216431981,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbfbbbbbb216751547,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbfc44444217310788,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbfcccccc217870028,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbfdb6db6218828726,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbfe66666219547750,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbfedb6db220027099,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbffffff8221225464,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbffffffc221225468,32,FLEN)
NAN_BOXED(0x7c830197088960407,32,FLEN)
NAN_BOXED(0x827a2023189041699,32,FLEN)
NAN_BOXED(0xbffffffe221225470,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d80000063363328,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d80000163363329,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d80000363363331,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d80000763363335,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d80000f63363343,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d80001f63363359,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d80003f63363391,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d80007f63363455,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d8000ff63363583,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d8001ff63363839,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d8003ff63364351,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d8007ff63365375,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d800fff63367423,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d801fff63371519,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d803fff63379711,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d807fff63396095,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d80ffff63428863,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d81ffff63494399,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d83ffff63625471,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d87ffff63887615,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d8fffff64411903,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2d9fffff65460479,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2dbfffff67557631,32,FLEN)
NAN_BOXED(0x7c900827089814055,32,FLEN)
NAN_BOXED(0x26381560075606,32,FLEN)
NAN_BOXED(0x2dc0000067557632,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
