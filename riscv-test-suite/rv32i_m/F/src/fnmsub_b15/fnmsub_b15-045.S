
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 14:18:08 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32F/fnmsub.s.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV32F_Zicsr,RV32FD_Zicsr,RV64F_Zicsr,RV64FD_Zicsr extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IF_Zicsr,RV32IFD_Zicsr,RV64IF_Zicsr,RV64IFD_Zicsr,RV32EF_Zicsr,RV32EFD_Zicsr,RV64EF_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*F.*);def TEST_CASE_1=True;",fnmsub_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_33792:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa48000ff; valaddr_reg:x3; val_offset:101376*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101376*0 + 3*0*FLEN/8, x4, x1, x2)

inst_33793:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa48001ff; valaddr_reg:x3; val_offset:101379*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101379*0 + 3*1*FLEN/8, x4, x1, x2)

inst_33794:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa48003ff; valaddr_reg:x3; val_offset:101382*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101382*0 + 3*2*FLEN/8, x4, x1, x2)

inst_33795:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa48007ff; valaddr_reg:x3; val_offset:101385*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101385*0 + 3*3*FLEN/8, x4, x1, x2)

inst_33796:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4800fff; valaddr_reg:x3; val_offset:101388*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101388*0 + 3*4*FLEN/8, x4, x1, x2)

inst_33797:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4801fff; valaddr_reg:x3; val_offset:101391*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101391*0 + 3*5*FLEN/8, x4, x1, x2)

inst_33798:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4803fff; valaddr_reg:x3; val_offset:101394*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101394*0 + 3*6*FLEN/8, x4, x1, x2)

inst_33799:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4807fff; valaddr_reg:x3; val_offset:101397*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101397*0 + 3*7*FLEN/8, x4, x1, x2)

inst_33800:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa480ffff; valaddr_reg:x3; val_offset:101400*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101400*0 + 3*8*FLEN/8, x4, x1, x2)

inst_33801:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa481ffff; valaddr_reg:x3; val_offset:101403*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101403*0 + 3*9*FLEN/8, x4, x1, x2)

inst_33802:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa483ffff; valaddr_reg:x3; val_offset:101406*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101406*0 + 3*10*FLEN/8, x4, x1, x2)

inst_33803:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa487ffff; valaddr_reg:x3; val_offset:101409*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101409*0 + 3*11*FLEN/8, x4, x1, x2)

inst_33804:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa48fffff; valaddr_reg:x3; val_offset:101412*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101412*0 + 3*12*FLEN/8, x4, x1, x2)

inst_33805:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa49fffff; valaddr_reg:x3; val_offset:101415*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101415*0 + 3*13*FLEN/8, x4, x1, x2)

inst_33806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4bfffff; valaddr_reg:x3; val_offset:101418*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101418*0 + 3*14*FLEN/8, x4, x1, x2)

inst_33807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4c00000; valaddr_reg:x3; val_offset:101421*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101421*0 + 3*15*FLEN/8, x4, x1, x2)

inst_33808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4e00000; valaddr_reg:x3; val_offset:101424*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101424*0 + 3*16*FLEN/8, x4, x1, x2)

inst_33809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4f00000; valaddr_reg:x3; val_offset:101427*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101427*0 + 3*17*FLEN/8, x4, x1, x2)

inst_33810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4f80000; valaddr_reg:x3; val_offset:101430*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101430*0 + 3*18*FLEN/8, x4, x1, x2)

inst_33811:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4fc0000; valaddr_reg:x3; val_offset:101433*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101433*0 + 3*19*FLEN/8, x4, x1, x2)

inst_33812:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4fe0000; valaddr_reg:x3; val_offset:101436*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101436*0 + 3*20*FLEN/8, x4, x1, x2)

inst_33813:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4ff0000; valaddr_reg:x3; val_offset:101439*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101439*0 + 3*21*FLEN/8, x4, x1, x2)

inst_33814:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4ff8000; valaddr_reg:x3; val_offset:101442*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101442*0 + 3*22*FLEN/8, x4, x1, x2)

inst_33815:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4ffc000; valaddr_reg:x3; val_offset:101445*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101445*0 + 3*23*FLEN/8, x4, x1, x2)

inst_33816:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4ffe000; valaddr_reg:x3; val_offset:101448*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101448*0 + 3*24*FLEN/8, x4, x1, x2)

inst_33817:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4fff000; valaddr_reg:x3; val_offset:101451*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101451*0 + 3*25*FLEN/8, x4, x1, x2)

inst_33818:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4fff800; valaddr_reg:x3; val_offset:101454*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101454*0 + 3*26*FLEN/8, x4, x1, x2)

inst_33819:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4fffc00; valaddr_reg:x3; val_offset:101457*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101457*0 + 3*27*FLEN/8, x4, x1, x2)

inst_33820:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4fffe00; valaddr_reg:x3; val_offset:101460*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101460*0 + 3*28*FLEN/8, x4, x1, x2)

inst_33821:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4ffff00; valaddr_reg:x3; val_offset:101463*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101463*0 + 3*29*FLEN/8, x4, x1, x2)

inst_33822:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4ffff80; valaddr_reg:x3; val_offset:101466*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101466*0 + 3*30*FLEN/8, x4, x1, x2)

inst_33823:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4ffffc0; valaddr_reg:x3; val_offset:101469*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101469*0 + 3*31*FLEN/8, x4, x1, x2)

inst_33824:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4ffffe0; valaddr_reg:x3; val_offset:101472*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101472*0 + 3*32*FLEN/8, x4, x1, x2)

inst_33825:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4fffff0; valaddr_reg:x3; val_offset:101475*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101475*0 + 3*33*FLEN/8, x4, x1, x2)

inst_33826:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4fffff8; valaddr_reg:x3; val_offset:101478*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101478*0 + 3*34*FLEN/8, x4, x1, x2)

inst_33827:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4fffffc; valaddr_reg:x3; val_offset:101481*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101481*0 + 3*35*FLEN/8, x4, x1, x2)

inst_33828:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4fffffe; valaddr_reg:x3; val_offset:101484*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101484*0 + 3*36*FLEN/8, x4, x1, x2)

inst_33829:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xa4ffffff; valaddr_reg:x3; val_offset:101487*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101487*0 + 3*37*FLEN/8, x4, x1, x2)

inst_33830:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbf800001; valaddr_reg:x3; val_offset:101490*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101490*0 + 3*38*FLEN/8, x4, x1, x2)

inst_33831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbf800003; valaddr_reg:x3; val_offset:101493*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101493*0 + 3*39*FLEN/8, x4, x1, x2)

inst_33832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbf800007; valaddr_reg:x3; val_offset:101496*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101496*0 + 3*40*FLEN/8, x4, x1, x2)

inst_33833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbf999999; valaddr_reg:x3; val_offset:101499*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101499*0 + 3*41*FLEN/8, x4, x1, x2)

inst_33834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:101502*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101502*0 + 3*42*FLEN/8, x4, x1, x2)

inst_33835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:101505*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101505*0 + 3*43*FLEN/8, x4, x1, x2)

inst_33836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:101508*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101508*0 + 3*44*FLEN/8, x4, x1, x2)

inst_33837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:101511*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101511*0 + 3*45*FLEN/8, x4, x1, x2)

inst_33838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:101514*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101514*0 + 3*46*FLEN/8, x4, x1, x2)

inst_33839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:101517*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101517*0 + 3*47*FLEN/8, x4, x1, x2)

inst_33840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:101520*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101520*0 + 3*48*FLEN/8, x4, x1, x2)

inst_33841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:101523*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101523*0 + 3*49*FLEN/8, x4, x1, x2)

inst_33842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:101526*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101526*0 + 3*50*FLEN/8, x4, x1, x2)

inst_33843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:101529*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101529*0 + 3*51*FLEN/8, x4, x1, x2)

inst_33844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:101532*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101532*0 + 3*52*FLEN/8, x4, x1, x2)

inst_33845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x28f4b0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x307c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f28f4b0; op2val:0x80307c6d;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:101535*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101535*0 + 3*53*FLEN/8, x4, x1, x2)

inst_33846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x22000000; valaddr_reg:x3; val_offset:101538*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101538*0 + 3*54*FLEN/8, x4, x1, x2)

inst_33847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x22000001; valaddr_reg:x3; val_offset:101541*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101541*0 + 3*55*FLEN/8, x4, x1, x2)

inst_33848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x22000003; valaddr_reg:x3; val_offset:101544*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101544*0 + 3*56*FLEN/8, x4, x1, x2)

inst_33849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x22000007; valaddr_reg:x3; val_offset:101547*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101547*0 + 3*57*FLEN/8, x4, x1, x2)

inst_33850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x2200000f; valaddr_reg:x3; val_offset:101550*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101550*0 + 3*58*FLEN/8, x4, x1, x2)

inst_33851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x2200001f; valaddr_reg:x3; val_offset:101553*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101553*0 + 3*59*FLEN/8, x4, x1, x2)

inst_33852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x2200003f; valaddr_reg:x3; val_offset:101556*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101556*0 + 3*60*FLEN/8, x4, x1, x2)

inst_33853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x2200007f; valaddr_reg:x3; val_offset:101559*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101559*0 + 3*61*FLEN/8, x4, x1, x2)

inst_33854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x220000ff; valaddr_reg:x3; val_offset:101562*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101562*0 + 3*62*FLEN/8, x4, x1, x2)

inst_33855:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x220001ff; valaddr_reg:x3; val_offset:101565*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101565*0 + 3*63*FLEN/8, x4, x1, x2)

inst_33856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x220003ff; valaddr_reg:x3; val_offset:101568*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101568*0 + 3*64*FLEN/8, x4, x1, x2)

inst_33857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x220007ff; valaddr_reg:x3; val_offset:101571*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101571*0 + 3*65*FLEN/8, x4, x1, x2)

inst_33858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x22000fff; valaddr_reg:x3; val_offset:101574*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101574*0 + 3*66*FLEN/8, x4, x1, x2)

inst_33859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x22001fff; valaddr_reg:x3; val_offset:101577*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101577*0 + 3*67*FLEN/8, x4, x1, x2)

inst_33860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x22003fff; valaddr_reg:x3; val_offset:101580*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101580*0 + 3*68*FLEN/8, x4, x1, x2)

inst_33861:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x22007fff; valaddr_reg:x3; val_offset:101583*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101583*0 + 3*69*FLEN/8, x4, x1, x2)

inst_33862:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x2200ffff; valaddr_reg:x3; val_offset:101586*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101586*0 + 3*70*FLEN/8, x4, x1, x2)

inst_33863:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x2201ffff; valaddr_reg:x3; val_offset:101589*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101589*0 + 3*71*FLEN/8, x4, x1, x2)

inst_33864:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x2203ffff; valaddr_reg:x3; val_offset:101592*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101592*0 + 3*72*FLEN/8, x4, x1, x2)

inst_33865:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x2207ffff; valaddr_reg:x3; val_offset:101595*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101595*0 + 3*73*FLEN/8, x4, x1, x2)

inst_33866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x220fffff; valaddr_reg:x3; val_offset:101598*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101598*0 + 3*74*FLEN/8, x4, x1, x2)

inst_33867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x221fffff; valaddr_reg:x3; val_offset:101601*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101601*0 + 3*75*FLEN/8, x4, x1, x2)

inst_33868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x223fffff; valaddr_reg:x3; val_offset:101604*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101604*0 + 3*76*FLEN/8, x4, x1, x2)

inst_33869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x22400000; valaddr_reg:x3; val_offset:101607*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101607*0 + 3*77*FLEN/8, x4, x1, x2)

inst_33870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x22600000; valaddr_reg:x3; val_offset:101610*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101610*0 + 3*78*FLEN/8, x4, x1, x2)

inst_33871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x22700000; valaddr_reg:x3; val_offset:101613*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101613*0 + 3*79*FLEN/8, x4, x1, x2)

inst_33872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x22780000; valaddr_reg:x3; val_offset:101616*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101616*0 + 3*80*FLEN/8, x4, x1, x2)

inst_33873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227c0000; valaddr_reg:x3; val_offset:101619*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101619*0 + 3*81*FLEN/8, x4, x1, x2)

inst_33874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227e0000; valaddr_reg:x3; val_offset:101622*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101622*0 + 3*82*FLEN/8, x4, x1, x2)

inst_33875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227f0000; valaddr_reg:x3; val_offset:101625*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101625*0 + 3*83*FLEN/8, x4, x1, x2)

inst_33876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227f8000; valaddr_reg:x3; val_offset:101628*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101628*0 + 3*84*FLEN/8, x4, x1, x2)

inst_33877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227fc000; valaddr_reg:x3; val_offset:101631*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101631*0 + 3*85*FLEN/8, x4, x1, x2)

inst_33878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227fe000; valaddr_reg:x3; val_offset:101634*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101634*0 + 3*86*FLEN/8, x4, x1, x2)

inst_33879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227ff000; valaddr_reg:x3; val_offset:101637*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101637*0 + 3*87*FLEN/8, x4, x1, x2)

inst_33880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227ff800; valaddr_reg:x3; val_offset:101640*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101640*0 + 3*88*FLEN/8, x4, x1, x2)

inst_33881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227ffc00; valaddr_reg:x3; val_offset:101643*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101643*0 + 3*89*FLEN/8, x4, x1, x2)

inst_33882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227ffe00; valaddr_reg:x3; val_offset:101646*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101646*0 + 3*90*FLEN/8, x4, x1, x2)

inst_33883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227fff00; valaddr_reg:x3; val_offset:101649*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101649*0 + 3*91*FLEN/8, x4, x1, x2)

inst_33884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227fff80; valaddr_reg:x3; val_offset:101652*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101652*0 + 3*92*FLEN/8, x4, x1, x2)

inst_33885:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227fffc0; valaddr_reg:x3; val_offset:101655*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101655*0 + 3*93*FLEN/8, x4, x1, x2)

inst_33886:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227fffe0; valaddr_reg:x3; val_offset:101658*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101658*0 + 3*94*FLEN/8, x4, x1, x2)

inst_33887:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227ffff0; valaddr_reg:x3; val_offset:101661*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101661*0 + 3*95*FLEN/8, x4, x1, x2)

inst_33888:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227ffff8; valaddr_reg:x3; val_offset:101664*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101664*0 + 3*96*FLEN/8, x4, x1, x2)

inst_33889:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227ffffc; valaddr_reg:x3; val_offset:101667*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101667*0 + 3*97*FLEN/8, x4, x1, x2)

inst_33890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227ffffe; valaddr_reg:x3; val_offset:101670*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101670*0 + 3*98*FLEN/8, x4, x1, x2)

inst_33891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x44 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x227fffff; valaddr_reg:x3; val_offset:101673*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101673*0 + 3*99*FLEN/8, x4, x1, x2)

inst_33892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3f800001; valaddr_reg:x3; val_offset:101676*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101676*0 + 3*100*FLEN/8, x4, x1, x2)

inst_33893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3f800003; valaddr_reg:x3; val_offset:101679*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101679*0 + 3*101*FLEN/8, x4, x1, x2)

inst_33894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3f800007; valaddr_reg:x3; val_offset:101682*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101682*0 + 3*102*FLEN/8, x4, x1, x2)

inst_33895:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3f999999; valaddr_reg:x3; val_offset:101685*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101685*0 + 3*103*FLEN/8, x4, x1, x2)

inst_33896:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:101688*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101688*0 + 3*104*FLEN/8, x4, x1, x2)

inst_33897:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:101691*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101691*0 + 3*105*FLEN/8, x4, x1, x2)

inst_33898:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:101694*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101694*0 + 3*106*FLEN/8, x4, x1, x2)

inst_33899:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:101697*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101697*0 + 3*107*FLEN/8, x4, x1, x2)

inst_33900:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:101700*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101700*0 + 3*108*FLEN/8, x4, x1, x2)

inst_33901:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:101703*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101703*0 + 3*109*FLEN/8, x4, x1, x2)

inst_33902:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:101706*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101706*0 + 3*110*FLEN/8, x4, x1, x2)

inst_33903:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:101709*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101709*0 + 3*111*FLEN/8, x4, x1, x2)

inst_33904:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:101712*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101712*0 + 3*112*FLEN/8, x4, x1, x2)

inst_33905:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:101715*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101715*0 + 3*113*FLEN/8, x4, x1, x2)

inst_33906:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:101718*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101718*0 + 3*114*FLEN/8, x4, x1, x2)

inst_33907:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x292241 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x306f5d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f292241; op2val:0x306f5d;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:101721*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101721*0 + 3*115*FLEN/8, x4, x1, x2)

inst_33908:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x800001; valaddr_reg:x3; val_offset:101724*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101724*0 + 3*116*FLEN/8, x4, x1, x2)

inst_33909:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x800003; valaddr_reg:x3; val_offset:101727*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101727*0 + 3*117*FLEN/8, x4, x1, x2)

inst_33910:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x800007; valaddr_reg:x3; val_offset:101730*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101730*0 + 3*118*FLEN/8, x4, x1, x2)

inst_33911:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x999999; valaddr_reg:x3; val_offset:101733*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101733*0 + 3*119*FLEN/8, x4, x1, x2)

inst_33912:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0xa49249; valaddr_reg:x3; val_offset:101736*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101736*0 + 3*120*FLEN/8, x4, x1, x2)

inst_33913:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0xb33333; valaddr_reg:x3; val_offset:101739*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101739*0 + 3*121*FLEN/8, x4, x1, x2)

inst_33914:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0xb6db6d; valaddr_reg:x3; val_offset:101742*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101742*0 + 3*122*FLEN/8, x4, x1, x2)

inst_33915:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0xbbbbbb; valaddr_reg:x3; val_offset:101745*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101745*0 + 3*123*FLEN/8, x4, x1, x2)

inst_33916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0xc44444; valaddr_reg:x3; val_offset:101748*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101748*0 + 3*124*FLEN/8, x4, x1, x2)

inst_33917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0xcccccc; valaddr_reg:x3; val_offset:101751*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101751*0 + 3*125*FLEN/8, x4, x1, x2)

inst_33918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0xdb6db6; valaddr_reg:x3; val_offset:101754*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101754*0 + 3*126*FLEN/8, x4, x1, x2)

inst_33919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0xe66666; valaddr_reg:x3; val_offset:101757*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101757*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_33920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0xedb6db; valaddr_reg:x3; val_offset:101760*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101760*0 + 3*128*FLEN/8, x4, x1, x2)

inst_33921:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0xfffff8; valaddr_reg:x3; val_offset:101763*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101763*0 + 3*129*FLEN/8, x4, x1, x2)

inst_33922:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0xfffffc; valaddr_reg:x3; val_offset:101766*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101766*0 + 3*130*FLEN/8, x4, x1, x2)

inst_33923:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0xfffffe; valaddr_reg:x3; val_offset:101769*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101769*0 + 3*131*FLEN/8, x4, x1, x2)

inst_33924:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x7000000; valaddr_reg:x3; val_offset:101772*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101772*0 + 3*132*FLEN/8, x4, x1, x2)

inst_33925:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x7000001; valaddr_reg:x3; val_offset:101775*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101775*0 + 3*133*FLEN/8, x4, x1, x2)

inst_33926:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x7000003; valaddr_reg:x3; val_offset:101778*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101778*0 + 3*134*FLEN/8, x4, x1, x2)

inst_33927:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x7000007; valaddr_reg:x3; val_offset:101781*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101781*0 + 3*135*FLEN/8, x4, x1, x2)

inst_33928:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x700000f; valaddr_reg:x3; val_offset:101784*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101784*0 + 3*136*FLEN/8, x4, x1, x2)

inst_33929:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x700001f; valaddr_reg:x3; val_offset:101787*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101787*0 + 3*137*FLEN/8, x4, x1, x2)

inst_33930:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x700003f; valaddr_reg:x3; val_offset:101790*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101790*0 + 3*138*FLEN/8, x4, x1, x2)

inst_33931:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x700007f; valaddr_reg:x3; val_offset:101793*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101793*0 + 3*139*FLEN/8, x4, x1, x2)

inst_33932:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x70000ff; valaddr_reg:x3; val_offset:101796*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101796*0 + 3*140*FLEN/8, x4, x1, x2)

inst_33933:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x70001ff; valaddr_reg:x3; val_offset:101799*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101799*0 + 3*141*FLEN/8, x4, x1, x2)

inst_33934:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x70003ff; valaddr_reg:x3; val_offset:101802*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101802*0 + 3*142*FLEN/8, x4, x1, x2)

inst_33935:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x70007ff; valaddr_reg:x3; val_offset:101805*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101805*0 + 3*143*FLEN/8, x4, x1, x2)

inst_33936:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x7000fff; valaddr_reg:x3; val_offset:101808*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101808*0 + 3*144*FLEN/8, x4, x1, x2)

inst_33937:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x7001fff; valaddr_reg:x3; val_offset:101811*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101811*0 + 3*145*FLEN/8, x4, x1, x2)

inst_33938:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x7003fff; valaddr_reg:x3; val_offset:101814*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101814*0 + 3*146*FLEN/8, x4, x1, x2)

inst_33939:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x7007fff; valaddr_reg:x3; val_offset:101817*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101817*0 + 3*147*FLEN/8, x4, x1, x2)

inst_33940:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x700ffff; valaddr_reg:x3; val_offset:101820*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101820*0 + 3*148*FLEN/8, x4, x1, x2)

inst_33941:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x701ffff; valaddr_reg:x3; val_offset:101823*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101823*0 + 3*149*FLEN/8, x4, x1, x2)

inst_33942:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x703ffff; valaddr_reg:x3; val_offset:101826*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101826*0 + 3*150*FLEN/8, x4, x1, x2)

inst_33943:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x707ffff; valaddr_reg:x3; val_offset:101829*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101829*0 + 3*151*FLEN/8, x4, x1, x2)

inst_33944:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x70fffff; valaddr_reg:x3; val_offset:101832*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101832*0 + 3*152*FLEN/8, x4, x1, x2)

inst_33945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x71fffff; valaddr_reg:x3; val_offset:101835*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101835*0 + 3*153*FLEN/8, x4, x1, x2)

inst_33946:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x73fffff; valaddr_reg:x3; val_offset:101838*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101838*0 + 3*154*FLEN/8, x4, x1, x2)

inst_33947:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x7400000; valaddr_reg:x3; val_offset:101841*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101841*0 + 3*155*FLEN/8, x4, x1, x2)

inst_33948:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x7600000; valaddr_reg:x3; val_offset:101844*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101844*0 + 3*156*FLEN/8, x4, x1, x2)

inst_33949:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x7700000; valaddr_reg:x3; val_offset:101847*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101847*0 + 3*157*FLEN/8, x4, x1, x2)

inst_33950:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x7780000; valaddr_reg:x3; val_offset:101850*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101850*0 + 3*158*FLEN/8, x4, x1, x2)

inst_33951:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77c0000; valaddr_reg:x3; val_offset:101853*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101853*0 + 3*159*FLEN/8, x4, x1, x2)

inst_33952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77e0000; valaddr_reg:x3; val_offset:101856*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101856*0 + 3*160*FLEN/8, x4, x1, x2)

inst_33953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77f0000; valaddr_reg:x3; val_offset:101859*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101859*0 + 3*161*FLEN/8, x4, x1, x2)

inst_33954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77f8000; valaddr_reg:x3; val_offset:101862*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101862*0 + 3*162*FLEN/8, x4, x1, x2)

inst_33955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77fc000; valaddr_reg:x3; val_offset:101865*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101865*0 + 3*163*FLEN/8, x4, x1, x2)

inst_33956:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77fe000; valaddr_reg:x3; val_offset:101868*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101868*0 + 3*164*FLEN/8, x4, x1, x2)

inst_33957:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77ff000; valaddr_reg:x3; val_offset:101871*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101871*0 + 3*165*FLEN/8, x4, x1, x2)

inst_33958:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77ff800; valaddr_reg:x3; val_offset:101874*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101874*0 + 3*166*FLEN/8, x4, x1, x2)

inst_33959:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77ffc00; valaddr_reg:x3; val_offset:101877*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101877*0 + 3*167*FLEN/8, x4, x1, x2)

inst_33960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77ffe00; valaddr_reg:x3; val_offset:101880*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101880*0 + 3*168*FLEN/8, x4, x1, x2)

inst_33961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77fff00; valaddr_reg:x3; val_offset:101883*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101883*0 + 3*169*FLEN/8, x4, x1, x2)

inst_33962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77fff80; valaddr_reg:x3; val_offset:101886*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101886*0 + 3*170*FLEN/8, x4, x1, x2)

inst_33963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77fffc0; valaddr_reg:x3; val_offset:101889*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101889*0 + 3*171*FLEN/8, x4, x1, x2)

inst_33964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77fffe0; valaddr_reg:x3; val_offset:101892*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101892*0 + 3*172*FLEN/8, x4, x1, x2)

inst_33965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77ffff0; valaddr_reg:x3; val_offset:101895*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101895*0 + 3*173*FLEN/8, x4, x1, x2)

inst_33966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77ffff8; valaddr_reg:x3; val_offset:101898*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101898*0 + 3*174*FLEN/8, x4, x1, x2)

inst_33967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77ffffc; valaddr_reg:x3; val_offset:101901*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101901*0 + 3*175*FLEN/8, x4, x1, x2)

inst_33968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77ffffe; valaddr_reg:x3; val_offset:101904*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101904*0 + 3*176*FLEN/8, x4, x1, x2)

inst_33969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x299a74 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x0e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f299a74; op2val:0x0;
op3val:0x77fffff; valaddr_reg:x3; val_offset:101907*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101907*0 + 3*177*FLEN/8, x4, x1, x2)

inst_33970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3f800001; valaddr_reg:x3; val_offset:101910*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101910*0 + 3*178*FLEN/8, x4, x1, x2)

inst_33971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3f800003; valaddr_reg:x3; val_offset:101913*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101913*0 + 3*179*FLEN/8, x4, x1, x2)

inst_33972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3f800007; valaddr_reg:x3; val_offset:101916*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101916*0 + 3*180*FLEN/8, x4, x1, x2)

inst_33973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3f999999; valaddr_reg:x3; val_offset:101919*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101919*0 + 3*181*FLEN/8, x4, x1, x2)

inst_33974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:101922*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101922*0 + 3*182*FLEN/8, x4, x1, x2)

inst_33975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:101925*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101925*0 + 3*183*FLEN/8, x4, x1, x2)

inst_33976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:101928*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101928*0 + 3*184*FLEN/8, x4, x1, x2)

inst_33977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:101931*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101931*0 + 3*185*FLEN/8, x4, x1, x2)

inst_33978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:101934*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101934*0 + 3*186*FLEN/8, x4, x1, x2)

inst_33979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:101937*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101937*0 + 3*187*FLEN/8, x4, x1, x2)

inst_33980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:101940*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101940*0 + 3*188*FLEN/8, x4, x1, x2)

inst_33981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:101943*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101943*0 + 3*189*FLEN/8, x4, x1, x2)

inst_33982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:101946*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101946*0 + 3*190*FLEN/8, x4, x1, x2)

inst_33983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:101949*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101949*0 + 3*191*FLEN/8, x4, x1, x2)

inst_33984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:101952*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101952*0 + 3*192*FLEN/8, x4, x1, x2)

inst_33985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:101955*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101955*0 + 3*193*FLEN/8, x4, x1, x2)

inst_33986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a000000; valaddr_reg:x3; val_offset:101958*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101958*0 + 3*194*FLEN/8, x4, x1, x2)

inst_33987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a000001; valaddr_reg:x3; val_offset:101961*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101961*0 + 3*195*FLEN/8, x4, x1, x2)

inst_33988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a000003; valaddr_reg:x3; val_offset:101964*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101964*0 + 3*196*FLEN/8, x4, x1, x2)

inst_33989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a000007; valaddr_reg:x3; val_offset:101967*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101967*0 + 3*197*FLEN/8, x4, x1, x2)

inst_33990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a00000f; valaddr_reg:x3; val_offset:101970*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101970*0 + 3*198*FLEN/8, x4, x1, x2)

inst_33991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a00001f; valaddr_reg:x3; val_offset:101973*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101973*0 + 3*199*FLEN/8, x4, x1, x2)

inst_33992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a00003f; valaddr_reg:x3; val_offset:101976*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101976*0 + 3*200*FLEN/8, x4, x1, x2)

inst_33993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a00007f; valaddr_reg:x3; val_offset:101979*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101979*0 + 3*201*FLEN/8, x4, x1, x2)

inst_33994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a0000ff; valaddr_reg:x3; val_offset:101982*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101982*0 + 3*202*FLEN/8, x4, x1, x2)

inst_33995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a0001ff; valaddr_reg:x3; val_offset:101985*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101985*0 + 3*203*FLEN/8, x4, x1, x2)

inst_33996:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a0003ff; valaddr_reg:x3; val_offset:101988*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101988*0 + 3*204*FLEN/8, x4, x1, x2)

inst_33997:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a0007ff; valaddr_reg:x3; val_offset:101991*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101991*0 + 3*205*FLEN/8, x4, x1, x2)

inst_33998:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a000fff; valaddr_reg:x3; val_offset:101994*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101994*0 + 3*206*FLEN/8, x4, x1, x2)

inst_33999:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a001fff; valaddr_reg:x3; val_offset:101997*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 101997*0 + 3*207*FLEN/8, x4, x1, x2)

inst_34000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a003fff; valaddr_reg:x3; val_offset:102000*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102000*0 + 3*208*FLEN/8, x4, x1, x2)

inst_34001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a007fff; valaddr_reg:x3; val_offset:102003*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102003*0 + 3*209*FLEN/8, x4, x1, x2)

inst_34002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a00ffff; valaddr_reg:x3; val_offset:102006*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102006*0 + 3*210*FLEN/8, x4, x1, x2)

inst_34003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a01ffff; valaddr_reg:x3; val_offset:102009*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102009*0 + 3*211*FLEN/8, x4, x1, x2)

inst_34004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a03ffff; valaddr_reg:x3; val_offset:102012*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102012*0 + 3*212*FLEN/8, x4, x1, x2)

inst_34005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a07ffff; valaddr_reg:x3; val_offset:102015*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102015*0 + 3*213*FLEN/8, x4, x1, x2)

inst_34006:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a0fffff; valaddr_reg:x3; val_offset:102018*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102018*0 + 3*214*FLEN/8, x4, x1, x2)

inst_34007:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a1fffff; valaddr_reg:x3; val_offset:102021*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102021*0 + 3*215*FLEN/8, x4, x1, x2)

inst_34008:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a3fffff; valaddr_reg:x3; val_offset:102024*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102024*0 + 3*216*FLEN/8, x4, x1, x2)

inst_34009:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a400000; valaddr_reg:x3; val_offset:102027*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102027*0 + 3*217*FLEN/8, x4, x1, x2)

inst_34010:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a600000; valaddr_reg:x3; val_offset:102030*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102030*0 + 3*218*FLEN/8, x4, x1, x2)

inst_34011:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a700000; valaddr_reg:x3; val_offset:102033*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102033*0 + 3*219*FLEN/8, x4, x1, x2)

inst_34012:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a780000; valaddr_reg:x3; val_offset:102036*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102036*0 + 3*220*FLEN/8, x4, x1, x2)

inst_34013:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7c0000; valaddr_reg:x3; val_offset:102039*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102039*0 + 3*221*FLEN/8, x4, x1, x2)

inst_34014:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7e0000; valaddr_reg:x3; val_offset:102042*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102042*0 + 3*222*FLEN/8, x4, x1, x2)

inst_34015:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7f0000; valaddr_reg:x3; val_offset:102045*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102045*0 + 3*223*FLEN/8, x4, x1, x2)

inst_34016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7f8000; valaddr_reg:x3; val_offset:102048*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102048*0 + 3*224*FLEN/8, x4, x1, x2)

inst_34017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7fc000; valaddr_reg:x3; val_offset:102051*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102051*0 + 3*225*FLEN/8, x4, x1, x2)

inst_34018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7fe000; valaddr_reg:x3; val_offset:102054*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102054*0 + 3*226*FLEN/8, x4, x1, x2)

inst_34019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7ff000; valaddr_reg:x3; val_offset:102057*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102057*0 + 3*227*FLEN/8, x4, x1, x2)

inst_34020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7ff800; valaddr_reg:x3; val_offset:102060*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102060*0 + 3*228*FLEN/8, x4, x1, x2)

inst_34021:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7ffc00; valaddr_reg:x3; val_offset:102063*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102063*0 + 3*229*FLEN/8, x4, x1, x2)

inst_34022:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7ffe00; valaddr_reg:x3; val_offset:102066*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102066*0 + 3*230*FLEN/8, x4, x1, x2)

inst_34023:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7fff00; valaddr_reg:x3; val_offset:102069*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102069*0 + 3*231*FLEN/8, x4, x1, x2)

inst_34024:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7fff80; valaddr_reg:x3; val_offset:102072*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102072*0 + 3*232*FLEN/8, x4, x1, x2)

inst_34025:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7fffc0; valaddr_reg:x3; val_offset:102075*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102075*0 + 3*233*FLEN/8, x4, x1, x2)

inst_34026:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7fffe0; valaddr_reg:x3; val_offset:102078*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102078*0 + 3*234*FLEN/8, x4, x1, x2)

inst_34027:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7ffff0; valaddr_reg:x3; val_offset:102081*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102081*0 + 3*235*FLEN/8, x4, x1, x2)

inst_34028:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7ffff8; valaddr_reg:x3; val_offset:102084*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102084*0 + 3*236*FLEN/8, x4, x1, x2)

inst_34029:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7ffffc; valaddr_reg:x3; val_offset:102087*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102087*0 + 3*237*FLEN/8, x4, x1, x2)

inst_34030:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7ffffe; valaddr_reg:x3; val_offset:102090*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102090*0 + 3*238*FLEN/8, x4, x1, x2)

inst_34031:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x29e684 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x30376a and fs3 == 0 and fe3 == 0x94 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f29e684; op2val:0x30376a;
op3val:0x4a7fffff; valaddr_reg:x3; val_offset:102093*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102093*0 + 3*239*FLEN/8, x4, x1, x2)

inst_34032:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:102096*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102096*0 + 3*240*FLEN/8, x4, x1, x2)

inst_34033:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:102099*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102099*0 + 3*241*FLEN/8, x4, x1, x2)

inst_34034:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:102102*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102102*0 + 3*242*FLEN/8, x4, x1, x2)

inst_34035:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:102105*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102105*0 + 3*243*FLEN/8, x4, x1, x2)

inst_34036:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:102108*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102108*0 + 3*244*FLEN/8, x4, x1, x2)

inst_34037:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:102111*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102111*0 + 3*245*FLEN/8, x4, x1, x2)

inst_34038:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:102114*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102114*0 + 3*246*FLEN/8, x4, x1, x2)

inst_34039:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:102117*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102117*0 + 3*247*FLEN/8, x4, x1, x2)

inst_34040:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:102120*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102120*0 + 3*248*FLEN/8, x4, x1, x2)

inst_34041:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:102123*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102123*0 + 3*249*FLEN/8, x4, x1, x2)

inst_34042:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:102126*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102126*0 + 3*250*FLEN/8, x4, x1, x2)

inst_34043:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:102129*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102129*0 + 3*251*FLEN/8, x4, x1, x2)

inst_34044:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:102132*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102132*0 + 3*252*FLEN/8, x4, x1, x2)

inst_34045:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:102135*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102135*0 + 3*253*FLEN/8, x4, x1, x2)

inst_34046:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:102138*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102138*0 + 3*254*FLEN/8, x4, x1, x2)

inst_34047:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:102141*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102141*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_34048:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3000000; valaddr_reg:x3; val_offset:102144*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102144*0 + 3*256*FLEN/8, x4, x1, x2)

inst_34049:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3000001; valaddr_reg:x3; val_offset:102147*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102147*0 + 3*257*FLEN/8, x4, x1, x2)

inst_34050:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3000003; valaddr_reg:x3; val_offset:102150*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102150*0 + 3*258*FLEN/8, x4, x1, x2)

inst_34051:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3000007; valaddr_reg:x3; val_offset:102153*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102153*0 + 3*259*FLEN/8, x4, x1, x2)

inst_34052:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x300000f; valaddr_reg:x3; val_offset:102156*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102156*0 + 3*260*FLEN/8, x4, x1, x2)

inst_34053:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x300001f; valaddr_reg:x3; val_offset:102159*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102159*0 + 3*261*FLEN/8, x4, x1, x2)

inst_34054:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x300003f; valaddr_reg:x3; val_offset:102162*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102162*0 + 3*262*FLEN/8, x4, x1, x2)

inst_34055:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x300007f; valaddr_reg:x3; val_offset:102165*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102165*0 + 3*263*FLEN/8, x4, x1, x2)

inst_34056:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x30000ff; valaddr_reg:x3; val_offset:102168*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102168*0 + 3*264*FLEN/8, x4, x1, x2)

inst_34057:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x30001ff; valaddr_reg:x3; val_offset:102171*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102171*0 + 3*265*FLEN/8, x4, x1, x2)

inst_34058:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x30003ff; valaddr_reg:x3; val_offset:102174*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102174*0 + 3*266*FLEN/8, x4, x1, x2)

inst_34059:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x30007ff; valaddr_reg:x3; val_offset:102177*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102177*0 + 3*267*FLEN/8, x4, x1, x2)

inst_34060:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3000fff; valaddr_reg:x3; val_offset:102180*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102180*0 + 3*268*FLEN/8, x4, x1, x2)

inst_34061:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3001fff; valaddr_reg:x3; val_offset:102183*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102183*0 + 3*269*FLEN/8, x4, x1, x2)

inst_34062:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3003fff; valaddr_reg:x3; val_offset:102186*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102186*0 + 3*270*FLEN/8, x4, x1, x2)

inst_34063:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3007fff; valaddr_reg:x3; val_offset:102189*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102189*0 + 3*271*FLEN/8, x4, x1, x2)

inst_34064:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x300ffff; valaddr_reg:x3; val_offset:102192*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102192*0 + 3*272*FLEN/8, x4, x1, x2)

inst_34065:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x301ffff; valaddr_reg:x3; val_offset:102195*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102195*0 + 3*273*FLEN/8, x4, x1, x2)

inst_34066:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x303ffff; valaddr_reg:x3; val_offset:102198*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102198*0 + 3*274*FLEN/8, x4, x1, x2)

inst_34067:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x307ffff; valaddr_reg:x3; val_offset:102201*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102201*0 + 3*275*FLEN/8, x4, x1, x2)

inst_34068:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x30fffff; valaddr_reg:x3; val_offset:102204*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102204*0 + 3*276*FLEN/8, x4, x1, x2)

inst_34069:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x31fffff; valaddr_reg:x3; val_offset:102207*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102207*0 + 3*277*FLEN/8, x4, x1, x2)

inst_34070:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x33fffff; valaddr_reg:x3; val_offset:102210*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102210*0 + 3*278*FLEN/8, x4, x1, x2)

inst_34071:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3400000; valaddr_reg:x3; val_offset:102213*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102213*0 + 3*279*FLEN/8, x4, x1, x2)

inst_34072:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3600000; valaddr_reg:x3; val_offset:102216*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102216*0 + 3*280*FLEN/8, x4, x1, x2)

inst_34073:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3700000; valaddr_reg:x3; val_offset:102219*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102219*0 + 3*281*FLEN/8, x4, x1, x2)

inst_34074:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x3780000; valaddr_reg:x3; val_offset:102222*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102222*0 + 3*282*FLEN/8, x4, x1, x2)

inst_34075:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37c0000; valaddr_reg:x3; val_offset:102225*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102225*0 + 3*283*FLEN/8, x4, x1, x2)

inst_34076:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37e0000; valaddr_reg:x3; val_offset:102228*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102228*0 + 3*284*FLEN/8, x4, x1, x2)

inst_34077:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37f0000; valaddr_reg:x3; val_offset:102231*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102231*0 + 3*285*FLEN/8, x4, x1, x2)

inst_34078:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37f8000; valaddr_reg:x3; val_offset:102234*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102234*0 + 3*286*FLEN/8, x4, x1, x2)

inst_34079:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37fc000; valaddr_reg:x3; val_offset:102237*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102237*0 + 3*287*FLEN/8, x4, x1, x2)

inst_34080:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37fe000; valaddr_reg:x3; val_offset:102240*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102240*0 + 3*288*FLEN/8, x4, x1, x2)

inst_34081:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37ff000; valaddr_reg:x3; val_offset:102243*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102243*0 + 3*289*FLEN/8, x4, x1, x2)

inst_34082:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37ff800; valaddr_reg:x3; val_offset:102246*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102246*0 + 3*290*FLEN/8, x4, x1, x2)

inst_34083:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37ffc00; valaddr_reg:x3; val_offset:102249*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102249*0 + 3*291*FLEN/8, x4, x1, x2)

inst_34084:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37ffe00; valaddr_reg:x3; val_offset:102252*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102252*0 + 3*292*FLEN/8, x4, x1, x2)

inst_34085:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37fff00; valaddr_reg:x3; val_offset:102255*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102255*0 + 3*293*FLEN/8, x4, x1, x2)

inst_34086:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37fff80; valaddr_reg:x3; val_offset:102258*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102258*0 + 3*294*FLEN/8, x4, x1, x2)

inst_34087:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37fffc0; valaddr_reg:x3; val_offset:102261*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102261*0 + 3*295*FLEN/8, x4, x1, x2)

inst_34088:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37fffe0; valaddr_reg:x3; val_offset:102264*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102264*0 + 3*296*FLEN/8, x4, x1, x2)

inst_34089:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37ffff0; valaddr_reg:x3; val_offset:102267*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102267*0 + 3*297*FLEN/8, x4, x1, x2)

inst_34090:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37ffff8; valaddr_reg:x3; val_offset:102270*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102270*0 + 3*298*FLEN/8, x4, x1, x2)

inst_34091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37ffffc; valaddr_reg:x3; val_offset:102273*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102273*0 + 3*299*FLEN/8, x4, x1, x2)

inst_34092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37ffffe; valaddr_reg:x3; val_offset:102276*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102276*0 + 3*300*FLEN/8, x4, x1, x2)

inst_34093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2a691c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x06 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2a691c; op2val:0x0;
op3val:0x37fffff; valaddr_reg:x3; val_offset:102279*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102279*0 + 3*301*FLEN/8, x4, x1, x2)

inst_34094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:102282*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102282*0 + 3*302*FLEN/8, x4, x1, x2)

inst_34095:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:102285*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102285*0 + 3*303*FLEN/8, x4, x1, x2)

inst_34096:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:102288*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102288*0 + 3*304*FLEN/8, x4, x1, x2)

inst_34097:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x199999; valaddr_reg:x3; val_offset:102291*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102291*0 + 3*305*FLEN/8, x4, x1, x2)

inst_34098:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x249249; valaddr_reg:x3; val_offset:102294*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102294*0 + 3*306*FLEN/8, x4, x1, x2)

inst_34099:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x333333; valaddr_reg:x3; val_offset:102297*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102297*0 + 3*307*FLEN/8, x4, x1, x2)

inst_34100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x36db6d; valaddr_reg:x3; val_offset:102300*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102300*0 + 3*308*FLEN/8, x4, x1, x2)

inst_34101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x3bbbbb; valaddr_reg:x3; val_offset:102303*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102303*0 + 3*309*FLEN/8, x4, x1, x2)

inst_34102:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x444444; valaddr_reg:x3; val_offset:102306*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102306*0 + 3*310*FLEN/8, x4, x1, x2)

inst_34103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x4ccccc; valaddr_reg:x3; val_offset:102309*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102309*0 + 3*311*FLEN/8, x4, x1, x2)

inst_34104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x5b6db6; valaddr_reg:x3; val_offset:102312*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102312*0 + 3*312*FLEN/8, x4, x1, x2)

inst_34105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x666666; valaddr_reg:x3; val_offset:102315*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102315*0 + 3*313*FLEN/8, x4, x1, x2)

inst_34106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x6db6db; valaddr_reg:x3; val_offset:102318*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102318*0 + 3*314*FLEN/8, x4, x1, x2)

inst_34107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x7ffff8; valaddr_reg:x3; val_offset:102321*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102321*0 + 3*315*FLEN/8, x4, x1, x2)

inst_34108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x7ffffc; valaddr_reg:x3; val_offset:102324*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102324*0 + 3*316*FLEN/8, x4, x1, x2)

inst_34109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0x7ffffe; valaddr_reg:x3; val_offset:102327*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102327*0 + 3*317*FLEN/8, x4, x1, x2)

inst_34110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd800000; valaddr_reg:x3; val_offset:102330*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102330*0 + 3*318*FLEN/8, x4, x1, x2)

inst_34111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd800001; valaddr_reg:x3; val_offset:102333*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102333*0 + 3*319*FLEN/8, x4, x1, x2)

inst_34112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd800003; valaddr_reg:x3; val_offset:102336*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102336*0 + 3*320*FLEN/8, x4, x1, x2)

inst_34113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd800007; valaddr_reg:x3; val_offset:102339*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102339*0 + 3*321*FLEN/8, x4, x1, x2)

inst_34114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd80000f; valaddr_reg:x3; val_offset:102342*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102342*0 + 3*322*FLEN/8, x4, x1, x2)

inst_34115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd80001f; valaddr_reg:x3; val_offset:102345*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102345*0 + 3*323*FLEN/8, x4, x1, x2)

inst_34116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd80003f; valaddr_reg:x3; val_offset:102348*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102348*0 + 3*324*FLEN/8, x4, x1, x2)

inst_34117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd80007f; valaddr_reg:x3; val_offset:102351*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102351*0 + 3*325*FLEN/8, x4, x1, x2)

inst_34118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd8000ff; valaddr_reg:x3; val_offset:102354*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102354*0 + 3*326*FLEN/8, x4, x1, x2)

inst_34119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd8001ff; valaddr_reg:x3; val_offset:102357*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102357*0 + 3*327*FLEN/8, x4, x1, x2)

inst_34120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd8003ff; valaddr_reg:x3; val_offset:102360*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102360*0 + 3*328*FLEN/8, x4, x1, x2)

inst_34121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd8007ff; valaddr_reg:x3; val_offset:102363*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102363*0 + 3*329*FLEN/8, x4, x1, x2)

inst_34122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd800fff; valaddr_reg:x3; val_offset:102366*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102366*0 + 3*330*FLEN/8, x4, x1, x2)

inst_34123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd801fff; valaddr_reg:x3; val_offset:102369*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102369*0 + 3*331*FLEN/8, x4, x1, x2)

inst_34124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd803fff; valaddr_reg:x3; val_offset:102372*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102372*0 + 3*332*FLEN/8, x4, x1, x2)

inst_34125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd807fff; valaddr_reg:x3; val_offset:102375*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102375*0 + 3*333*FLEN/8, x4, x1, x2)

inst_34126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd80ffff; valaddr_reg:x3; val_offset:102378*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102378*0 + 3*334*FLEN/8, x4, x1, x2)

inst_34127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd81ffff; valaddr_reg:x3; val_offset:102381*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102381*0 + 3*335*FLEN/8, x4, x1, x2)

inst_34128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd83ffff; valaddr_reg:x3; val_offset:102384*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102384*0 + 3*336*FLEN/8, x4, x1, x2)

inst_34129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd87ffff; valaddr_reg:x3; val_offset:102387*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102387*0 + 3*337*FLEN/8, x4, x1, x2)

inst_34130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd8fffff; valaddr_reg:x3; val_offset:102390*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102390*0 + 3*338*FLEN/8, x4, x1, x2)

inst_34131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xd9fffff; valaddr_reg:x3; val_offset:102393*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102393*0 + 3*339*FLEN/8, x4, x1, x2)

inst_34132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdbfffff; valaddr_reg:x3; val_offset:102396*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102396*0 + 3*340*FLEN/8, x4, x1, x2)

inst_34133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdc00000; valaddr_reg:x3; val_offset:102399*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102399*0 + 3*341*FLEN/8, x4, x1, x2)

inst_34134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xde00000; valaddr_reg:x3; val_offset:102402*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102402*0 + 3*342*FLEN/8, x4, x1, x2)

inst_34135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdf00000; valaddr_reg:x3; val_offset:102405*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102405*0 + 3*343*FLEN/8, x4, x1, x2)

inst_34136:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdf80000; valaddr_reg:x3; val_offset:102408*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102408*0 + 3*344*FLEN/8, x4, x1, x2)

inst_34137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdfc0000; valaddr_reg:x3; val_offset:102411*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102411*0 + 3*345*FLEN/8, x4, x1, x2)

inst_34138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdfe0000; valaddr_reg:x3; val_offset:102414*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102414*0 + 3*346*FLEN/8, x4, x1, x2)

inst_34139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdff0000; valaddr_reg:x3; val_offset:102417*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102417*0 + 3*347*FLEN/8, x4, x1, x2)

inst_34140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdff8000; valaddr_reg:x3; val_offset:102420*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102420*0 + 3*348*FLEN/8, x4, x1, x2)

inst_34141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdffc000; valaddr_reg:x3; val_offset:102423*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102423*0 + 3*349*FLEN/8, x4, x1, x2)

inst_34142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdffe000; valaddr_reg:x3; val_offset:102426*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102426*0 + 3*350*FLEN/8, x4, x1, x2)

inst_34143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdfff000; valaddr_reg:x3; val_offset:102429*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102429*0 + 3*351*FLEN/8, x4, x1, x2)

inst_34144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdfff800; valaddr_reg:x3; val_offset:102432*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102432*0 + 3*352*FLEN/8, x4, x1, x2)

inst_34145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdfffc00; valaddr_reg:x3; val_offset:102435*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102435*0 + 3*353*FLEN/8, x4, x1, x2)

inst_34146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdfffe00; valaddr_reg:x3; val_offset:102438*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102438*0 + 3*354*FLEN/8, x4, x1, x2)

inst_34147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdffff00; valaddr_reg:x3; val_offset:102441*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102441*0 + 3*355*FLEN/8, x4, x1, x2)

inst_34148:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdffff80; valaddr_reg:x3; val_offset:102444*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102444*0 + 3*356*FLEN/8, x4, x1, x2)

inst_34149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdffffc0; valaddr_reg:x3; val_offset:102447*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102447*0 + 3*357*FLEN/8, x4, x1, x2)

inst_34150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdffffe0; valaddr_reg:x3; val_offset:102450*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102450*0 + 3*358*FLEN/8, x4, x1, x2)

inst_34151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdfffff0; valaddr_reg:x3; val_offset:102453*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102453*0 + 3*359*FLEN/8, x4, x1, x2)

inst_34152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdfffff8; valaddr_reg:x3; val_offset:102456*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102456*0 + 3*360*FLEN/8, x4, x1, x2)

inst_34153:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdfffffc; valaddr_reg:x3; val_offset:102459*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102459*0 + 3*361*FLEN/8, x4, x1, x2)

inst_34154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdfffffe; valaddr_reg:x3; val_offset:102462*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102462*0 + 3*362*FLEN/8, x4, x1, x2)

inst_34155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2ac43c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 0 and fe3 == 0x1b and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2ac43c; op2val:0x0;
op3val:0xdffffff; valaddr_reg:x3; val_offset:102465*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102465*0 + 3*363*FLEN/8, x4, x1, x2)

inst_34156:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80800001; valaddr_reg:x3; val_offset:102468*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102468*0 + 3*364*FLEN/8, x4, x1, x2)

inst_34157:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80800003; valaddr_reg:x3; val_offset:102471*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102471*0 + 3*365*FLEN/8, x4, x1, x2)

inst_34158:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80800007; valaddr_reg:x3; val_offset:102474*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102474*0 + 3*366*FLEN/8, x4, x1, x2)

inst_34159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80999999; valaddr_reg:x3; val_offset:102477*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102477*0 + 3*367*FLEN/8, x4, x1, x2)

inst_34160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80a49249; valaddr_reg:x3; val_offset:102480*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102480*0 + 3*368*FLEN/8, x4, x1, x2)

inst_34161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80b33333; valaddr_reg:x3; val_offset:102483*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102483*0 + 3*369*FLEN/8, x4, x1, x2)

inst_34162:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80b6db6d; valaddr_reg:x3; val_offset:102486*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102486*0 + 3*370*FLEN/8, x4, x1, x2)

inst_34163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80bbbbbb; valaddr_reg:x3; val_offset:102489*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102489*0 + 3*371*FLEN/8, x4, x1, x2)

inst_34164:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80c44444; valaddr_reg:x3; val_offset:102492*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102492*0 + 3*372*FLEN/8, x4, x1, x2)

inst_34165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80cccccc; valaddr_reg:x3; val_offset:102495*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102495*0 + 3*373*FLEN/8, x4, x1, x2)

inst_34166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80db6db6; valaddr_reg:x3; val_offset:102498*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102498*0 + 3*374*FLEN/8, x4, x1, x2)

inst_34167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80e66666; valaddr_reg:x3; val_offset:102501*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102501*0 + 3*375*FLEN/8, x4, x1, x2)

inst_34168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80edb6db; valaddr_reg:x3; val_offset:102504*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102504*0 + 3*376*FLEN/8, x4, x1, x2)

inst_34169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80fffff8; valaddr_reg:x3; val_offset:102507*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102507*0 + 3*377*FLEN/8, x4, x1, x2)

inst_34170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80fffffc; valaddr_reg:x3; val_offset:102510*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102510*0 + 3*378*FLEN/8, x4, x1, x2)

inst_34171:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x01 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x80fffffe; valaddr_reg:x3; val_offset:102513*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102513*0 + 3*379*FLEN/8, x4, x1, x2)

inst_34172:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83800000; valaddr_reg:x3; val_offset:102516*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102516*0 + 3*380*FLEN/8, x4, x1, x2)

inst_34173:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83800001; valaddr_reg:x3; val_offset:102519*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102519*0 + 3*381*FLEN/8, x4, x1, x2)

inst_34174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83800003; valaddr_reg:x3; val_offset:102522*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102522*0 + 3*382*FLEN/8, x4, x1, x2)

inst_34175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83800007; valaddr_reg:x3; val_offset:102525*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102525*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_34176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x8380000f; valaddr_reg:x3; val_offset:102528*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102528*0 + 3*384*FLEN/8, x4, x1, x2)

inst_34177:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x8380001f; valaddr_reg:x3; val_offset:102531*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102531*0 + 3*385*FLEN/8, x4, x1, x2)

inst_34178:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x8380003f; valaddr_reg:x3; val_offset:102534*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102534*0 + 3*386*FLEN/8, x4, x1, x2)

inst_34179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x8380007f; valaddr_reg:x3; val_offset:102537*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102537*0 + 3*387*FLEN/8, x4, x1, x2)

inst_34180:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x838000ff; valaddr_reg:x3; val_offset:102540*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102540*0 + 3*388*FLEN/8, x4, x1, x2)

inst_34181:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x838001ff; valaddr_reg:x3; val_offset:102543*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102543*0 + 3*389*FLEN/8, x4, x1, x2)

inst_34182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x838003ff; valaddr_reg:x3; val_offset:102546*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102546*0 + 3*390*FLEN/8, x4, x1, x2)

inst_34183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x838007ff; valaddr_reg:x3; val_offset:102549*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102549*0 + 3*391*FLEN/8, x4, x1, x2)

inst_34184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83800fff; valaddr_reg:x3; val_offset:102552*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102552*0 + 3*392*FLEN/8, x4, x1, x2)

inst_34185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83801fff; valaddr_reg:x3; val_offset:102555*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102555*0 + 3*393*FLEN/8, x4, x1, x2)

inst_34186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83803fff; valaddr_reg:x3; val_offset:102558*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102558*0 + 3*394*FLEN/8, x4, x1, x2)

inst_34187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83807fff; valaddr_reg:x3; val_offset:102561*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102561*0 + 3*395*FLEN/8, x4, x1, x2)

inst_34188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x8380ffff; valaddr_reg:x3; val_offset:102564*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102564*0 + 3*396*FLEN/8, x4, x1, x2)

inst_34189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x8381ffff; valaddr_reg:x3; val_offset:102567*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102567*0 + 3*397*FLEN/8, x4, x1, x2)

inst_34190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x8383ffff; valaddr_reg:x3; val_offset:102570*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102570*0 + 3*398*FLEN/8, x4, x1, x2)

inst_34191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x8387ffff; valaddr_reg:x3; val_offset:102573*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102573*0 + 3*399*FLEN/8, x4, x1, x2)

inst_34192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x838fffff; valaddr_reg:x3; val_offset:102576*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102576*0 + 3*400*FLEN/8, x4, x1, x2)

inst_34193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x839fffff; valaddr_reg:x3; val_offset:102579*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102579*0 + 3*401*FLEN/8, x4, x1, x2)

inst_34194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83bfffff; valaddr_reg:x3; val_offset:102582*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102582*0 + 3*402*FLEN/8, x4, x1, x2)

inst_34195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83c00000; valaddr_reg:x3; val_offset:102585*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102585*0 + 3*403*FLEN/8, x4, x1, x2)

inst_34196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83e00000; valaddr_reg:x3; val_offset:102588*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102588*0 + 3*404*FLEN/8, x4, x1, x2)

inst_34197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83f00000; valaddr_reg:x3; val_offset:102591*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102591*0 + 3*405*FLEN/8, x4, x1, x2)

inst_34198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83f80000; valaddr_reg:x3; val_offset:102594*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102594*0 + 3*406*FLEN/8, x4, x1, x2)

inst_34199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83fc0000; valaddr_reg:x3; val_offset:102597*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102597*0 + 3*407*FLEN/8, x4, x1, x2)

inst_34200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83fe0000; valaddr_reg:x3; val_offset:102600*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102600*0 + 3*408*FLEN/8, x4, x1, x2)

inst_34201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83ff0000; valaddr_reg:x3; val_offset:102603*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102603*0 + 3*409*FLEN/8, x4, x1, x2)

inst_34202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83ff8000; valaddr_reg:x3; val_offset:102606*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102606*0 + 3*410*FLEN/8, x4, x1, x2)

inst_34203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83ffc000; valaddr_reg:x3; val_offset:102609*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102609*0 + 3*411*FLEN/8, x4, x1, x2)

inst_34204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83ffe000; valaddr_reg:x3; val_offset:102612*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102612*0 + 3*412*FLEN/8, x4, x1, x2)

inst_34205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83fff000; valaddr_reg:x3; val_offset:102615*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102615*0 + 3*413*FLEN/8, x4, x1, x2)

inst_34206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83fff800; valaddr_reg:x3; val_offset:102618*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102618*0 + 3*414*FLEN/8, x4, x1, x2)

inst_34207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83fffc00; valaddr_reg:x3; val_offset:102621*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102621*0 + 3*415*FLEN/8, x4, x1, x2)

inst_34208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83fffe00; valaddr_reg:x3; val_offset:102624*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102624*0 + 3*416*FLEN/8, x4, x1, x2)

inst_34209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83ffff00; valaddr_reg:x3; val_offset:102627*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102627*0 + 3*417*FLEN/8, x4, x1, x2)

inst_34210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83ffff80; valaddr_reg:x3; val_offset:102630*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102630*0 + 3*418*FLEN/8, x4, x1, x2)

inst_34211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83ffffc0; valaddr_reg:x3; val_offset:102633*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102633*0 + 3*419*FLEN/8, x4, x1, x2)

inst_34212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83ffffe0; valaddr_reg:x3; val_offset:102636*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102636*0 + 3*420*FLEN/8, x4, x1, x2)

inst_34213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83fffff0; valaddr_reg:x3; val_offset:102639*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102639*0 + 3*421*FLEN/8, x4, x1, x2)

inst_34214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83fffff8; valaddr_reg:x3; val_offset:102642*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102642*0 + 3*422*FLEN/8, x4, x1, x2)

inst_34215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83fffffc; valaddr_reg:x3; val_offset:102645*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102645*0 + 3*423*FLEN/8, x4, x1, x2)

inst_34216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83fffffe; valaddr_reg:x3; val_offset:102648*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102648*0 + 3*424*FLEN/8, x4, x1, x2)

inst_34217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2add4f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2add4f; op2val:0x80000000;
op3val:0x83ffffff; valaddr_reg:x3; val_offset:102651*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102651*0 + 3*425*FLEN/8, x4, x1, x2)

inst_34218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x70000000; valaddr_reg:x3; val_offset:102654*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102654*0 + 3*426*FLEN/8, x4, x1, x2)

inst_34219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x70000001; valaddr_reg:x3; val_offset:102657*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102657*0 + 3*427*FLEN/8, x4, x1, x2)

inst_34220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x70000003; valaddr_reg:x3; val_offset:102660*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102660*0 + 3*428*FLEN/8, x4, x1, x2)

inst_34221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x70000007; valaddr_reg:x3; val_offset:102663*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102663*0 + 3*429*FLEN/8, x4, x1, x2)

inst_34222:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7000000f; valaddr_reg:x3; val_offset:102666*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102666*0 + 3*430*FLEN/8, x4, x1, x2)

inst_34223:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7000001f; valaddr_reg:x3; val_offset:102669*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102669*0 + 3*431*FLEN/8, x4, x1, x2)

inst_34224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7000003f; valaddr_reg:x3; val_offset:102672*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102672*0 + 3*432*FLEN/8, x4, x1, x2)

inst_34225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7000007f; valaddr_reg:x3; val_offset:102675*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102675*0 + 3*433*FLEN/8, x4, x1, x2)

inst_34226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x700000ff; valaddr_reg:x3; val_offset:102678*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102678*0 + 3*434*FLEN/8, x4, x1, x2)

inst_34227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x700001ff; valaddr_reg:x3; val_offset:102681*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102681*0 + 3*435*FLEN/8, x4, x1, x2)

inst_34228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x700003ff; valaddr_reg:x3; val_offset:102684*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102684*0 + 3*436*FLEN/8, x4, x1, x2)

inst_34229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x700007ff; valaddr_reg:x3; val_offset:102687*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102687*0 + 3*437*FLEN/8, x4, x1, x2)

inst_34230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x70000fff; valaddr_reg:x3; val_offset:102690*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102690*0 + 3*438*FLEN/8, x4, x1, x2)

inst_34231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x70001fff; valaddr_reg:x3; val_offset:102693*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102693*0 + 3*439*FLEN/8, x4, x1, x2)

inst_34232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x70003fff; valaddr_reg:x3; val_offset:102696*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102696*0 + 3*440*FLEN/8, x4, x1, x2)

inst_34233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x70007fff; valaddr_reg:x3; val_offset:102699*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102699*0 + 3*441*FLEN/8, x4, x1, x2)

inst_34234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7000ffff; valaddr_reg:x3; val_offset:102702*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102702*0 + 3*442*FLEN/8, x4, x1, x2)

inst_34235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7001ffff; valaddr_reg:x3; val_offset:102705*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102705*0 + 3*443*FLEN/8, x4, x1, x2)

inst_34236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7003ffff; valaddr_reg:x3; val_offset:102708*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102708*0 + 3*444*FLEN/8, x4, x1, x2)

inst_34237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7007ffff; valaddr_reg:x3; val_offset:102711*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102711*0 + 3*445*FLEN/8, x4, x1, x2)

inst_34238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x700fffff; valaddr_reg:x3; val_offset:102714*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102714*0 + 3*446*FLEN/8, x4, x1, x2)

inst_34239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x701fffff; valaddr_reg:x3; val_offset:102717*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102717*0 + 3*447*FLEN/8, x4, x1, x2)

inst_34240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x703fffff; valaddr_reg:x3; val_offset:102720*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102720*0 + 3*448*FLEN/8, x4, x1, x2)

inst_34241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x70400000; valaddr_reg:x3; val_offset:102723*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102723*0 + 3*449*FLEN/8, x4, x1, x2)

inst_34242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x70600000; valaddr_reg:x3; val_offset:102726*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102726*0 + 3*450*FLEN/8, x4, x1, x2)

inst_34243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x70700000; valaddr_reg:x3; val_offset:102729*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102729*0 + 3*451*FLEN/8, x4, x1, x2)

inst_34244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x70780000; valaddr_reg:x3; val_offset:102732*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102732*0 + 3*452*FLEN/8, x4, x1, x2)

inst_34245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707c0000; valaddr_reg:x3; val_offset:102735*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102735*0 + 3*453*FLEN/8, x4, x1, x2)

inst_34246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707e0000; valaddr_reg:x3; val_offset:102738*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102738*0 + 3*454*FLEN/8, x4, x1, x2)

inst_34247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707f0000; valaddr_reg:x3; val_offset:102741*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102741*0 + 3*455*FLEN/8, x4, x1, x2)

inst_34248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707f8000; valaddr_reg:x3; val_offset:102744*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102744*0 + 3*456*FLEN/8, x4, x1, x2)

inst_34249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707fc000; valaddr_reg:x3; val_offset:102747*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102747*0 + 3*457*FLEN/8, x4, x1, x2)

inst_34250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707fe000; valaddr_reg:x3; val_offset:102750*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102750*0 + 3*458*FLEN/8, x4, x1, x2)

inst_34251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707ff000; valaddr_reg:x3; val_offset:102753*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102753*0 + 3*459*FLEN/8, x4, x1, x2)

inst_34252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707ff800; valaddr_reg:x3; val_offset:102756*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102756*0 + 3*460*FLEN/8, x4, x1, x2)

inst_34253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707ffc00; valaddr_reg:x3; val_offset:102759*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102759*0 + 3*461*FLEN/8, x4, x1, x2)

inst_34254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707ffe00; valaddr_reg:x3; val_offset:102762*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102762*0 + 3*462*FLEN/8, x4, x1, x2)

inst_34255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707fff00; valaddr_reg:x3; val_offset:102765*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102765*0 + 3*463*FLEN/8, x4, x1, x2)

inst_34256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707fff80; valaddr_reg:x3; val_offset:102768*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102768*0 + 3*464*FLEN/8, x4, x1, x2)

inst_34257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707fffc0; valaddr_reg:x3; val_offset:102771*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102771*0 + 3*465*FLEN/8, x4, x1, x2)

inst_34258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707fffe0; valaddr_reg:x3; val_offset:102774*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102774*0 + 3*466*FLEN/8, x4, x1, x2)

inst_34259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707ffff0; valaddr_reg:x3; val_offset:102777*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102777*0 + 3*467*FLEN/8, x4, x1, x2)

inst_34260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707ffff8; valaddr_reg:x3; val_offset:102780*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102780*0 + 3*468*FLEN/8, x4, x1, x2)

inst_34261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707ffffc; valaddr_reg:x3; val_offset:102783*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102783*0 + 3*469*FLEN/8, x4, x1, x2)

inst_34262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707ffffe; valaddr_reg:x3; val_offset:102786*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102786*0 + 3*470*FLEN/8, x4, x1, x2)

inst_34263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xe0 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x707fffff; valaddr_reg:x3; val_offset:102789*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102789*0 + 3*471*FLEN/8, x4, x1, x2)

inst_34264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f000001; valaddr_reg:x3; val_offset:102792*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102792*0 + 3*472*FLEN/8, x4, x1, x2)

inst_34265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f000003; valaddr_reg:x3; val_offset:102795*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102795*0 + 3*473*FLEN/8, x4, x1, x2)

inst_34266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f000007; valaddr_reg:x3; val_offset:102798*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102798*0 + 3*474*FLEN/8, x4, x1, x2)

inst_34267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f199999; valaddr_reg:x3; val_offset:102801*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102801*0 + 3*475*FLEN/8, x4, x1, x2)

inst_34268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f249249; valaddr_reg:x3; val_offset:102804*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102804*0 + 3*476*FLEN/8, x4, x1, x2)

inst_34269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f333333; valaddr_reg:x3; val_offset:102807*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102807*0 + 3*477*FLEN/8, x4, x1, x2)

inst_34270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f36db6d; valaddr_reg:x3; val_offset:102810*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102810*0 + 3*478*FLEN/8, x4, x1, x2)

inst_34271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f3bbbbb; valaddr_reg:x3; val_offset:102813*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102813*0 + 3*479*FLEN/8, x4, x1, x2)

inst_34272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f444444; valaddr_reg:x3; val_offset:102816*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102816*0 + 3*480*FLEN/8, x4, x1, x2)

inst_34273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f4ccccc; valaddr_reg:x3; val_offset:102819*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102819*0 + 3*481*FLEN/8, x4, x1, x2)

inst_34274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f5b6db6; valaddr_reg:x3; val_offset:102822*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102822*0 + 3*482*FLEN/8, x4, x1, x2)

inst_34275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f666666; valaddr_reg:x3; val_offset:102825*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102825*0 + 3*483*FLEN/8, x4, x1, x2)

inst_34276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f6db6db; valaddr_reg:x3; val_offset:102828*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102828*0 + 3*484*FLEN/8, x4, x1, x2)

inst_34277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f7ffff8; valaddr_reg:x3; val_offset:102831*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102831*0 + 3*485*FLEN/8, x4, x1, x2)

inst_34278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f7ffffc; valaddr_reg:x3; val_offset:102834*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102834*0 + 3*486*FLEN/8, x4, x1, x2)

inst_34279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2bf98b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x3e8a20 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2bf98b; op2val:0x3fbe8a20;
op3val:0x7f7ffffe; valaddr_reg:x3; val_offset:102837*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102837*0 + 3*487*FLEN/8, x4, x1, x2)

inst_34280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf000000; valaddr_reg:x3; val_offset:102840*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102840*0 + 3*488*FLEN/8, x4, x1, x2)

inst_34281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf000001; valaddr_reg:x3; val_offset:102843*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102843*0 + 3*489*FLEN/8, x4, x1, x2)

inst_34282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf000003; valaddr_reg:x3; val_offset:102846*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102846*0 + 3*490*FLEN/8, x4, x1, x2)

inst_34283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf000007; valaddr_reg:x3; val_offset:102849*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102849*0 + 3*491*FLEN/8, x4, x1, x2)

inst_34284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf00000f; valaddr_reg:x3; val_offset:102852*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102852*0 + 3*492*FLEN/8, x4, x1, x2)

inst_34285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf00001f; valaddr_reg:x3; val_offset:102855*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102855*0 + 3*493*FLEN/8, x4, x1, x2)

inst_34286:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf00003f; valaddr_reg:x3; val_offset:102858*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102858*0 + 3*494*FLEN/8, x4, x1, x2)

inst_34287:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf00007f; valaddr_reg:x3; val_offset:102861*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102861*0 + 3*495*FLEN/8, x4, x1, x2)

inst_34288:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf0000ff; valaddr_reg:x3; val_offset:102864*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102864*0 + 3*496*FLEN/8, x4, x1, x2)

inst_34289:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf0001ff; valaddr_reg:x3; val_offset:102867*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102867*0 + 3*497*FLEN/8, x4, x1, x2)

inst_34290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf0003ff; valaddr_reg:x3; val_offset:102870*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102870*0 + 3*498*FLEN/8, x4, x1, x2)

inst_34291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf0007ff; valaddr_reg:x3; val_offset:102873*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102873*0 + 3*499*FLEN/8, x4, x1, x2)

inst_34292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf000fff; valaddr_reg:x3; val_offset:102876*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102876*0 + 3*500*FLEN/8, x4, x1, x2)

inst_34293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf001fff; valaddr_reg:x3; val_offset:102879*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102879*0 + 3*501*FLEN/8, x4, x1, x2)

inst_34294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf003fff; valaddr_reg:x3; val_offset:102882*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102882*0 + 3*502*FLEN/8, x4, x1, x2)

inst_34295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf007fff; valaddr_reg:x3; val_offset:102885*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102885*0 + 3*503*FLEN/8, x4, x1, x2)

inst_34296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf00ffff; valaddr_reg:x3; val_offset:102888*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102888*0 + 3*504*FLEN/8, x4, x1, x2)

inst_34297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf01ffff; valaddr_reg:x3; val_offset:102891*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102891*0 + 3*505*FLEN/8, x4, x1, x2)

inst_34298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf03ffff; valaddr_reg:x3; val_offset:102894*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102894*0 + 3*506*FLEN/8, x4, x1, x2)

inst_34299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf07ffff; valaddr_reg:x3; val_offset:102897*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102897*0 + 3*507*FLEN/8, x4, x1, x2)

inst_34300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf0fffff; valaddr_reg:x3; val_offset:102900*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102900*0 + 3*508*FLEN/8, x4, x1, x2)

inst_34301:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf1fffff; valaddr_reg:x3; val_offset:102903*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102903*0 + 3*509*FLEN/8, x4, x1, x2)

inst_34302:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf3fffff; valaddr_reg:x3; val_offset:102906*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102906*0 + 3*510*FLEN/8, x4, x1, x2)

inst_34303:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf400000; valaddr_reg:x3; val_offset:102909*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102909*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_34304:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf600000; valaddr_reg:x3; val_offset:102912*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102912*0 + 3*512*FLEN/8, x4, x1, x2)

inst_34305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf700000; valaddr_reg:x3; val_offset:102915*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102915*0 + 3*513*FLEN/8, x4, x1, x2)

inst_34306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf780000; valaddr_reg:x3; val_offset:102918*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102918*0 + 3*514*FLEN/8, x4, x1, x2)

inst_34307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7c0000; valaddr_reg:x3; val_offset:102921*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102921*0 + 3*515*FLEN/8, x4, x1, x2)

inst_34308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7e0000; valaddr_reg:x3; val_offset:102924*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102924*0 + 3*516*FLEN/8, x4, x1, x2)

inst_34309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7f0000; valaddr_reg:x3; val_offset:102927*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102927*0 + 3*517*FLEN/8, x4, x1, x2)

inst_34310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7f8000; valaddr_reg:x3; val_offset:102930*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102930*0 + 3*518*FLEN/8, x4, x1, x2)

inst_34311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7fc000; valaddr_reg:x3; val_offset:102933*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102933*0 + 3*519*FLEN/8, x4, x1, x2)

inst_34312:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7fe000; valaddr_reg:x3; val_offset:102936*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102936*0 + 3*520*FLEN/8, x4, x1, x2)

inst_34313:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7ff000; valaddr_reg:x3; val_offset:102939*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102939*0 + 3*521*FLEN/8, x4, x1, x2)

inst_34314:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7ff800; valaddr_reg:x3; val_offset:102942*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102942*0 + 3*522*FLEN/8, x4, x1, x2)

inst_34315:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7ffc00; valaddr_reg:x3; val_offset:102945*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102945*0 + 3*523*FLEN/8, x4, x1, x2)

inst_34316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7ffe00; valaddr_reg:x3; val_offset:102948*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102948*0 + 3*524*FLEN/8, x4, x1, x2)

inst_34317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7fff00; valaddr_reg:x3; val_offset:102951*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102951*0 + 3*525*FLEN/8, x4, x1, x2)

inst_34318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7fff80; valaddr_reg:x3; val_offset:102954*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102954*0 + 3*526*FLEN/8, x4, x1, x2)

inst_34319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7fffc0; valaddr_reg:x3; val_offset:102957*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102957*0 + 3*527*FLEN/8, x4, x1, x2)

inst_34320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7fffe0; valaddr_reg:x3; val_offset:102960*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102960*0 + 3*528*FLEN/8, x4, x1, x2)

inst_34321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7ffff0; valaddr_reg:x3; val_offset:102963*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102963*0 + 3*529*FLEN/8, x4, x1, x2)

inst_34322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7ffff8; valaddr_reg:x3; val_offset:102966*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102966*0 + 3*530*FLEN/8, x4, x1, x2)

inst_34323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7ffffc; valaddr_reg:x3; val_offset:102969*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102969*0 + 3*531*FLEN/8, x4, x1, x2)

inst_34324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7ffffe; valaddr_reg:x3; val_offset:102972*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102972*0 + 3*532*FLEN/8, x4, x1, x2)

inst_34325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x5e and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xaf7fffff; valaddr_reg:x3; val_offset:102975*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102975*0 + 3*533*FLEN/8, x4, x1, x2)

inst_34326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbf800001; valaddr_reg:x3; val_offset:102978*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102978*0 + 3*534*FLEN/8, x4, x1, x2)

inst_34327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbf800003; valaddr_reg:x3; val_offset:102981*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102981*0 + 3*535*FLEN/8, x4, x1, x2)

inst_34328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbf800007; valaddr_reg:x3; val_offset:102984*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102984*0 + 3*536*FLEN/8, x4, x1, x2)

inst_34329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbf999999; valaddr_reg:x3; val_offset:102987*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102987*0 + 3*537*FLEN/8, x4, x1, x2)

inst_34330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:102990*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102990*0 + 3*538*FLEN/8, x4, x1, x2)

inst_34331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:102993*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102993*0 + 3*539*FLEN/8, x4, x1, x2)

inst_34332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:102996*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102996*0 + 3*540*FLEN/8, x4, x1, x2)

inst_34333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:102999*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 102999*0 + 3*541*FLEN/8, x4, x1, x2)

inst_34334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:103002*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103002*0 + 3*542*FLEN/8, x4, x1, x2)

inst_34335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:103005*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103005*0 + 3*543*FLEN/8, x4, x1, x2)

inst_34336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:103008*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103008*0 + 3*544*FLEN/8, x4, x1, x2)

inst_34337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:103011*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103011*0 + 3*545*FLEN/8, x4, x1, x2)

inst_34338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:103014*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103014*0 + 3*546*FLEN/8, x4, x1, x2)

inst_34339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:103017*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103017*0 + 3*547*FLEN/8, x4, x1, x2)

inst_34340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:103020*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103020*0 + 3*548*FLEN/8, x4, x1, x2)

inst_34341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c2411 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f96c3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c2411; op2val:0x802f96c3;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:103023*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103023*0 + 3*549*FLEN/8, x4, x1, x2)

inst_34342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a000000; valaddr_reg:x3; val_offset:103026*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103026*0 + 3*550*FLEN/8, x4, x1, x2)

inst_34343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a000001; valaddr_reg:x3; val_offset:103029*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103029*0 + 3*551*FLEN/8, x4, x1, x2)

inst_34344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a000003; valaddr_reg:x3; val_offset:103032*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103032*0 + 3*552*FLEN/8, x4, x1, x2)

inst_34345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a000007; valaddr_reg:x3; val_offset:103035*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103035*0 + 3*553*FLEN/8, x4, x1, x2)

inst_34346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a00000f; valaddr_reg:x3; val_offset:103038*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103038*0 + 3*554*FLEN/8, x4, x1, x2)

inst_34347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a00001f; valaddr_reg:x3; val_offset:103041*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103041*0 + 3*555*FLEN/8, x4, x1, x2)

inst_34348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a00003f; valaddr_reg:x3; val_offset:103044*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103044*0 + 3*556*FLEN/8, x4, x1, x2)

inst_34349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a00007f; valaddr_reg:x3; val_offset:103047*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103047*0 + 3*557*FLEN/8, x4, x1, x2)

inst_34350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a0000ff; valaddr_reg:x3; val_offset:103050*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103050*0 + 3*558*FLEN/8, x4, x1, x2)

inst_34351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a0001ff; valaddr_reg:x3; val_offset:103053*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103053*0 + 3*559*FLEN/8, x4, x1, x2)

inst_34352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a0003ff; valaddr_reg:x3; val_offset:103056*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103056*0 + 3*560*FLEN/8, x4, x1, x2)

inst_34353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a0007ff; valaddr_reg:x3; val_offset:103059*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103059*0 + 3*561*FLEN/8, x4, x1, x2)

inst_34354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a000fff; valaddr_reg:x3; val_offset:103062*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103062*0 + 3*562*FLEN/8, x4, x1, x2)

inst_34355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a001fff; valaddr_reg:x3; val_offset:103065*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103065*0 + 3*563*FLEN/8, x4, x1, x2)

inst_34356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a003fff; valaddr_reg:x3; val_offset:103068*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103068*0 + 3*564*FLEN/8, x4, x1, x2)

inst_34357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a007fff; valaddr_reg:x3; val_offset:103071*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103071*0 + 3*565*FLEN/8, x4, x1, x2)

inst_34358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a00ffff; valaddr_reg:x3; val_offset:103074*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103074*0 + 3*566*FLEN/8, x4, x1, x2)

inst_34359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a01ffff; valaddr_reg:x3; val_offset:103077*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103077*0 + 3*567*FLEN/8, x4, x1, x2)

inst_34360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a03ffff; valaddr_reg:x3; val_offset:103080*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103080*0 + 3*568*FLEN/8, x4, x1, x2)

inst_34361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a07ffff; valaddr_reg:x3; val_offset:103083*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103083*0 + 3*569*FLEN/8, x4, x1, x2)

inst_34362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a0fffff; valaddr_reg:x3; val_offset:103086*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103086*0 + 3*570*FLEN/8, x4, x1, x2)

inst_34363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a1fffff; valaddr_reg:x3; val_offset:103089*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103089*0 + 3*571*FLEN/8, x4, x1, x2)

inst_34364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a3fffff; valaddr_reg:x3; val_offset:103092*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103092*0 + 3*572*FLEN/8, x4, x1, x2)

inst_34365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a400000; valaddr_reg:x3; val_offset:103095*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103095*0 + 3*573*FLEN/8, x4, x1, x2)

inst_34366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a600000; valaddr_reg:x3; val_offset:103098*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103098*0 + 3*574*FLEN/8, x4, x1, x2)

inst_34367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a700000; valaddr_reg:x3; val_offset:103101*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103101*0 + 3*575*FLEN/8, x4, x1, x2)

inst_34368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a780000; valaddr_reg:x3; val_offset:103104*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103104*0 + 3*576*FLEN/8, x4, x1, x2)

inst_34369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7c0000; valaddr_reg:x3; val_offset:103107*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103107*0 + 3*577*FLEN/8, x4, x1, x2)

inst_34370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7e0000; valaddr_reg:x3; val_offset:103110*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103110*0 + 3*578*FLEN/8, x4, x1, x2)

inst_34371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7f0000; valaddr_reg:x3; val_offset:103113*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103113*0 + 3*579*FLEN/8, x4, x1, x2)

inst_34372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7f8000; valaddr_reg:x3; val_offset:103116*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103116*0 + 3*580*FLEN/8, x4, x1, x2)

inst_34373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7fc000; valaddr_reg:x3; val_offset:103119*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103119*0 + 3*581*FLEN/8, x4, x1, x2)

inst_34374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7fe000; valaddr_reg:x3; val_offset:103122*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103122*0 + 3*582*FLEN/8, x4, x1, x2)

inst_34375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7ff000; valaddr_reg:x3; val_offset:103125*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103125*0 + 3*583*FLEN/8, x4, x1, x2)

inst_34376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7ff800; valaddr_reg:x3; val_offset:103128*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103128*0 + 3*584*FLEN/8, x4, x1, x2)

inst_34377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7ffc00; valaddr_reg:x3; val_offset:103131*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103131*0 + 3*585*FLEN/8, x4, x1, x2)

inst_34378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7ffe00; valaddr_reg:x3; val_offset:103134*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103134*0 + 3*586*FLEN/8, x4, x1, x2)

inst_34379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7fff00; valaddr_reg:x3; val_offset:103137*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103137*0 + 3*587*FLEN/8, x4, x1, x2)

inst_34380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7fff80; valaddr_reg:x3; val_offset:103140*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103140*0 + 3*588*FLEN/8, x4, x1, x2)

inst_34381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7fffc0; valaddr_reg:x3; val_offset:103143*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103143*0 + 3*589*FLEN/8, x4, x1, x2)

inst_34382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7fffe0; valaddr_reg:x3; val_offset:103146*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103146*0 + 3*590*FLEN/8, x4, x1, x2)

inst_34383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7ffff0; valaddr_reg:x3; val_offset:103149*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103149*0 + 3*591*FLEN/8, x4, x1, x2)

inst_34384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7ffff8; valaddr_reg:x3; val_offset:103152*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103152*0 + 3*592*FLEN/8, x4, x1, x2)

inst_34385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7ffffc; valaddr_reg:x3; val_offset:103155*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103155*0 + 3*593*FLEN/8, x4, x1, x2)

inst_34386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7ffffe; valaddr_reg:x3; val_offset:103158*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103158*0 + 3*594*FLEN/8, x4, x1, x2)

inst_34387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x54 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x2a7fffff; valaddr_reg:x3; val_offset:103161*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103161*0 + 3*595*FLEN/8, x4, x1, x2)

inst_34388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3f800001; valaddr_reg:x3; val_offset:103164*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103164*0 + 3*596*FLEN/8, x4, x1, x2)

inst_34389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3f800003; valaddr_reg:x3; val_offset:103167*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103167*0 + 3*597*FLEN/8, x4, x1, x2)

inst_34390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3f800007; valaddr_reg:x3; val_offset:103170*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103170*0 + 3*598*FLEN/8, x4, x1, x2)

inst_34391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3f999999; valaddr_reg:x3; val_offset:103173*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103173*0 + 3*599*FLEN/8, x4, x1, x2)

inst_34392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3fa49249; valaddr_reg:x3; val_offset:103176*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103176*0 + 3*600*FLEN/8, x4, x1, x2)

inst_34393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3fb33333; valaddr_reg:x3; val_offset:103179*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103179*0 + 3*601*FLEN/8, x4, x1, x2)

inst_34394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3fb6db6d; valaddr_reg:x3; val_offset:103182*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103182*0 + 3*602*FLEN/8, x4, x1, x2)

inst_34395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3fbbbbbb; valaddr_reg:x3; val_offset:103185*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103185*0 + 3*603*FLEN/8, x4, x1, x2)

inst_34396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3fc44444; valaddr_reg:x3; val_offset:103188*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103188*0 + 3*604*FLEN/8, x4, x1, x2)

inst_34397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3fcccccc; valaddr_reg:x3; val_offset:103191*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103191*0 + 3*605*FLEN/8, x4, x1, x2)

inst_34398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3fdb6db6; valaddr_reg:x3; val_offset:103194*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103194*0 + 3*606*FLEN/8, x4, x1, x2)

inst_34399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3fe66666; valaddr_reg:x3; val_offset:103197*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103197*0 + 3*607*FLEN/8, x4, x1, x2)

inst_34400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3fedb6db; valaddr_reg:x3; val_offset:103200*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103200*0 + 3*608*FLEN/8, x4, x1, x2)

inst_34401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3ffffff8; valaddr_reg:x3; val_offset:103203*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103203*0 + 3*609*FLEN/8, x4, x1, x2)

inst_34402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3ffffffc; valaddr_reg:x3; val_offset:103206*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103206*0 + 3*610*FLEN/8, x4, x1, x2)

inst_34403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2c289c and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f9582 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2c289c; op2val:0x2f9582;
op3val:0x3ffffffe; valaddr_reg:x3; val_offset:103209*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103209*0 + 3*611*FLEN/8, x4, x1, x2)

inst_34404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb800000; valaddr_reg:x3; val_offset:103212*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103212*0 + 3*612*FLEN/8, x4, x1, x2)

inst_34405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb800001; valaddr_reg:x3; val_offset:103215*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103215*0 + 3*613*FLEN/8, x4, x1, x2)

inst_34406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb800003; valaddr_reg:x3; val_offset:103218*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103218*0 + 3*614*FLEN/8, x4, x1, x2)

inst_34407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb800007; valaddr_reg:x3; val_offset:103221*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103221*0 + 3*615*FLEN/8, x4, x1, x2)

inst_34408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb80000f; valaddr_reg:x3; val_offset:103224*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103224*0 + 3*616*FLEN/8, x4, x1, x2)

inst_34409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb80001f; valaddr_reg:x3; val_offset:103227*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103227*0 + 3*617*FLEN/8, x4, x1, x2)

inst_34410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb80003f; valaddr_reg:x3; val_offset:103230*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103230*0 + 3*618*FLEN/8, x4, x1, x2)

inst_34411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb80007f; valaddr_reg:x3; val_offset:103233*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103233*0 + 3*619*FLEN/8, x4, x1, x2)

inst_34412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb8000ff; valaddr_reg:x3; val_offset:103236*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103236*0 + 3*620*FLEN/8, x4, x1, x2)

inst_34413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb8001ff; valaddr_reg:x3; val_offset:103239*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103239*0 + 3*621*FLEN/8, x4, x1, x2)

inst_34414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb8003ff; valaddr_reg:x3; val_offset:103242*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103242*0 + 3*622*FLEN/8, x4, x1, x2)

inst_34415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb8007ff; valaddr_reg:x3; val_offset:103245*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103245*0 + 3*623*FLEN/8, x4, x1, x2)

inst_34416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb800fff; valaddr_reg:x3; val_offset:103248*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103248*0 + 3*624*FLEN/8, x4, x1, x2)

inst_34417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb801fff; valaddr_reg:x3; val_offset:103251*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103251*0 + 3*625*FLEN/8, x4, x1, x2)

inst_34418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb803fff; valaddr_reg:x3; val_offset:103254*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103254*0 + 3*626*FLEN/8, x4, x1, x2)

inst_34419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb807fff; valaddr_reg:x3; val_offset:103257*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103257*0 + 3*627*FLEN/8, x4, x1, x2)

inst_34420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb80ffff; valaddr_reg:x3; val_offset:103260*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103260*0 + 3*628*FLEN/8, x4, x1, x2)

inst_34421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb81ffff; valaddr_reg:x3; val_offset:103263*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103263*0 + 3*629*FLEN/8, x4, x1, x2)

inst_34422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb83ffff; valaddr_reg:x3; val_offset:103266*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103266*0 + 3*630*FLEN/8, x4, x1, x2)

inst_34423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb87ffff; valaddr_reg:x3; val_offset:103269*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103269*0 + 3*631*FLEN/8, x4, x1, x2)

inst_34424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb8fffff; valaddr_reg:x3; val_offset:103272*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103272*0 + 3*632*FLEN/8, x4, x1, x2)

inst_34425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xeb9fffff; valaddr_reg:x3; val_offset:103275*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103275*0 + 3*633*FLEN/8, x4, x1, x2)

inst_34426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebbfffff; valaddr_reg:x3; val_offset:103278*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103278*0 + 3*634*FLEN/8, x4, x1, x2)

inst_34427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebc00000; valaddr_reg:x3; val_offset:103281*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103281*0 + 3*635*FLEN/8, x4, x1, x2)

inst_34428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebe00000; valaddr_reg:x3; val_offset:103284*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103284*0 + 3*636*FLEN/8, x4, x1, x2)

inst_34429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebf00000; valaddr_reg:x3; val_offset:103287*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103287*0 + 3*637*FLEN/8, x4, x1, x2)

inst_34430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebf80000; valaddr_reg:x3; val_offset:103290*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103290*0 + 3*638*FLEN/8, x4, x1, x2)

inst_34431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebfc0000; valaddr_reg:x3; val_offset:103293*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103293*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_34432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebfe0000; valaddr_reg:x3; val_offset:103296*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103296*0 + 3*640*FLEN/8, x4, x1, x2)

inst_34433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebff0000; valaddr_reg:x3; val_offset:103299*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103299*0 + 3*641*FLEN/8, x4, x1, x2)

inst_34434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebff8000; valaddr_reg:x3; val_offset:103302*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103302*0 + 3*642*FLEN/8, x4, x1, x2)

inst_34435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebffc000; valaddr_reg:x3; val_offset:103305*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103305*0 + 3*643*FLEN/8, x4, x1, x2)

inst_34436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebffe000; valaddr_reg:x3; val_offset:103308*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103308*0 + 3*644*FLEN/8, x4, x1, x2)

inst_34437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebfff000; valaddr_reg:x3; val_offset:103311*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103311*0 + 3*645*FLEN/8, x4, x1, x2)

inst_34438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebfff800; valaddr_reg:x3; val_offset:103314*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103314*0 + 3*646*FLEN/8, x4, x1, x2)

inst_34439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebfffc00; valaddr_reg:x3; val_offset:103317*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103317*0 + 3*647*FLEN/8, x4, x1, x2)

inst_34440:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebfffe00; valaddr_reg:x3; val_offset:103320*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103320*0 + 3*648*FLEN/8, x4, x1, x2)

inst_34441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebffff00; valaddr_reg:x3; val_offset:103323*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103323*0 + 3*649*FLEN/8, x4, x1, x2)

inst_34442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebffff80; valaddr_reg:x3; val_offset:103326*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103326*0 + 3*650*FLEN/8, x4, x1, x2)

inst_34443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebffffc0; valaddr_reg:x3; val_offset:103329*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103329*0 + 3*651*FLEN/8, x4, x1, x2)

inst_34444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebffffe0; valaddr_reg:x3; val_offset:103332*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103332*0 + 3*652*FLEN/8, x4, x1, x2)

inst_34445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebfffff0; valaddr_reg:x3; val_offset:103335*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103335*0 + 3*653*FLEN/8, x4, x1, x2)

inst_34446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebfffff8; valaddr_reg:x3; val_offset:103338*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103338*0 + 3*654*FLEN/8, x4, x1, x2)

inst_34447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebfffffc; valaddr_reg:x3; val_offset:103341*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103341*0 + 3*655*FLEN/8, x4, x1, x2)

inst_34448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebfffffe; valaddr_reg:x3; val_offset:103344*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103344*0 + 3*656*FLEN/8, x4, x1, x2)

inst_34449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xd7 and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xebffffff; valaddr_reg:x3; val_offset:103347*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103347*0 + 3*657*FLEN/8, x4, x1, x2)

inst_34450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff000001; valaddr_reg:x3; val_offset:103350*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103350*0 + 3*658*FLEN/8, x4, x1, x2)

inst_34451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff000003; valaddr_reg:x3; val_offset:103353*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103353*0 + 3*659*FLEN/8, x4, x1, x2)

inst_34452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff000007; valaddr_reg:x3; val_offset:103356*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103356*0 + 3*660*FLEN/8, x4, x1, x2)

inst_34453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff199999; valaddr_reg:x3; val_offset:103359*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103359*0 + 3*661*FLEN/8, x4, x1, x2)

inst_34454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff249249; valaddr_reg:x3; val_offset:103362*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103362*0 + 3*662*FLEN/8, x4, x1, x2)

inst_34455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff333333; valaddr_reg:x3; val_offset:103365*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103365*0 + 3*663*FLEN/8, x4, x1, x2)

inst_34456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff36db6d; valaddr_reg:x3; val_offset:103368*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103368*0 + 3*664*FLEN/8, x4, x1, x2)

inst_34457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff3bbbbb; valaddr_reg:x3; val_offset:103371*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103371*0 + 3*665*FLEN/8, x4, x1, x2)

inst_34458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff444444; valaddr_reg:x3; val_offset:103374*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103374*0 + 3*666*FLEN/8, x4, x1, x2)

inst_34459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff4ccccc; valaddr_reg:x3; val_offset:103377*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103377*0 + 3*667*FLEN/8, x4, x1, x2)

inst_34460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff5b6db6; valaddr_reg:x3; val_offset:103380*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103380*0 + 3*668*FLEN/8, x4, x1, x2)

inst_34461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff666666; valaddr_reg:x3; val_offset:103383*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103383*0 + 3*669*FLEN/8, x4, x1, x2)

inst_34462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff6db6db; valaddr_reg:x3; val_offset:103386*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103386*0 + 3*670*FLEN/8, x4, x1, x2)

inst_34463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff7ffff8; valaddr_reg:x3; val_offset:103389*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103389*0 + 3*671*FLEN/8, x4, x1, x2)

inst_34464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff7ffffc; valaddr_reg:x3; val_offset:103392*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103392*0 + 3*672*FLEN/8, x4, x1, x2)

inst_34465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cafdc and fs2 == 1 and fe2 == 0x7f and fm2 == 0x3dc0f5 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cafdc; op2val:0xbfbdc0f5;
op3val:0xff7ffffe; valaddr_reg:x3; val_offset:103395*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103395*0 + 3*673*FLEN/8, x4, x1, x2)

inst_34466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf800000; valaddr_reg:x3; val_offset:103398*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103398*0 + 3*674*FLEN/8, x4, x1, x2)

inst_34467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf800001; valaddr_reg:x3; val_offset:103401*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103401*0 + 3*675*FLEN/8, x4, x1, x2)

inst_34468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf800003; valaddr_reg:x3; val_offset:103404*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103404*0 + 3*676*FLEN/8, x4, x1, x2)

inst_34469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf800007; valaddr_reg:x3; val_offset:103407*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103407*0 + 3*677*FLEN/8, x4, x1, x2)

inst_34470:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf80000f; valaddr_reg:x3; val_offset:103410*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103410*0 + 3*678*FLEN/8, x4, x1, x2)

inst_34471:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf80001f; valaddr_reg:x3; val_offset:103413*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103413*0 + 3*679*FLEN/8, x4, x1, x2)

inst_34472:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf80003f; valaddr_reg:x3; val_offset:103416*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103416*0 + 3*680*FLEN/8, x4, x1, x2)

inst_34473:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf80007f; valaddr_reg:x3; val_offset:103419*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103419*0 + 3*681*FLEN/8, x4, x1, x2)

inst_34474:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf8000ff; valaddr_reg:x3; val_offset:103422*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103422*0 + 3*682*FLEN/8, x4, x1, x2)

inst_34475:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf8001ff; valaddr_reg:x3; val_offset:103425*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103425*0 + 3*683*FLEN/8, x4, x1, x2)

inst_34476:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf8003ff; valaddr_reg:x3; val_offset:103428*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103428*0 + 3*684*FLEN/8, x4, x1, x2)

inst_34477:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf8007ff; valaddr_reg:x3; val_offset:103431*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103431*0 + 3*685*FLEN/8, x4, x1, x2)

inst_34478:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf800fff; valaddr_reg:x3; val_offset:103434*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103434*0 + 3*686*FLEN/8, x4, x1, x2)

inst_34479:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf801fff; valaddr_reg:x3; val_offset:103437*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103437*0 + 3*687*FLEN/8, x4, x1, x2)

inst_34480:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf803fff; valaddr_reg:x3; val_offset:103440*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103440*0 + 3*688*FLEN/8, x4, x1, x2)

inst_34481:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf807fff; valaddr_reg:x3; val_offset:103443*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103443*0 + 3*689*FLEN/8, x4, x1, x2)

inst_34482:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x00ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf80ffff; valaddr_reg:x3; val_offset:103446*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103446*0 + 3*690*FLEN/8, x4, x1, x2)

inst_34483:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x01ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf81ffff; valaddr_reg:x3; val_offset:103449*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103449*0 + 3*691*FLEN/8, x4, x1, x2)

inst_34484:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x03ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf83ffff; valaddr_reg:x3; val_offset:103452*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103452*0 + 3*692*FLEN/8, x4, x1, x2)

inst_34485:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x07ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf87ffff; valaddr_reg:x3; val_offset:103455*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103455*0 + 3*693*FLEN/8, x4, x1, x2)

inst_34486:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x0fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf8fffff; valaddr_reg:x3; val_offset:103458*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103458*0 + 3*694*FLEN/8, x4, x1, x2)

inst_34487:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x1fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaf9fffff; valaddr_reg:x3; val_offset:103461*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103461*0 + 3*695*FLEN/8, x4, x1, x2)

inst_34488:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x3fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xafbfffff; valaddr_reg:x3; val_offset:103464*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103464*0 + 3*696*FLEN/8, x4, x1, x2)

inst_34489:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x400000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xafc00000; valaddr_reg:x3; val_offset:103467*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103467*0 + 3*697*FLEN/8, x4, x1, x2)

inst_34490:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x600000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xafe00000; valaddr_reg:x3; val_offset:103470*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103470*0 + 3*698*FLEN/8, x4, x1, x2)

inst_34491:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x700000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaff00000; valaddr_reg:x3; val_offset:103473*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103473*0 + 3*699*FLEN/8, x4, x1, x2)

inst_34492:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x780000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaff80000; valaddr_reg:x3; val_offset:103476*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103476*0 + 3*700*FLEN/8, x4, x1, x2)

inst_34493:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7c0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaffc0000; valaddr_reg:x3; val_offset:103479*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103479*0 + 3*701*FLEN/8, x4, x1, x2)

inst_34494:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7e0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaffe0000; valaddr_reg:x3; val_offset:103482*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103482*0 + 3*702*FLEN/8, x4, x1, x2)

inst_34495:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7f0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xafff0000; valaddr_reg:x3; val_offset:103485*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103485*0 + 3*703*FLEN/8, x4, x1, x2)

inst_34496:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7f8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xafff8000; valaddr_reg:x3; val_offset:103488*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103488*0 + 3*704*FLEN/8, x4, x1, x2)

inst_34497:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7fc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xafffc000; valaddr_reg:x3; val_offset:103491*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103491*0 + 3*705*FLEN/8, x4, x1, x2)

inst_34498:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7fe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xafffe000; valaddr_reg:x3; val_offset:103494*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103494*0 + 3*706*FLEN/8, x4, x1, x2)

inst_34499:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7ff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaffff000; valaddr_reg:x3; val_offset:103497*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103497*0 + 3*707*FLEN/8, x4, x1, x2)

inst_34500:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7ff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaffff800; valaddr_reg:x3; val_offset:103500*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103500*0 + 3*708*FLEN/8, x4, x1, x2)

inst_34501:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7ffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaffffc00; valaddr_reg:x3; val_offset:103503*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103503*0 + 3*709*FLEN/8, x4, x1, x2)

inst_34502:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7ffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaffffe00; valaddr_reg:x3; val_offset:103506*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103506*0 + 3*710*FLEN/8, x4, x1, x2)

inst_34503:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7fff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xafffff00; valaddr_reg:x3; val_offset:103509*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103509*0 + 3*711*FLEN/8, x4, x1, x2)

inst_34504:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7fff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xafffff80; valaddr_reg:x3; val_offset:103512*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103512*0 + 3*712*FLEN/8, x4, x1, x2)

inst_34505:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7fffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xafffffc0; valaddr_reg:x3; val_offset:103515*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103515*0 + 3*713*FLEN/8, x4, x1, x2)

inst_34506:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7fffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xafffffe0; valaddr_reg:x3; val_offset:103518*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103518*0 + 3*714*FLEN/8, x4, x1, x2)

inst_34507:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7ffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaffffff0; valaddr_reg:x3; val_offset:103521*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103521*0 + 3*715*FLEN/8, x4, x1, x2)

inst_34508:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaffffff8; valaddr_reg:x3; val_offset:103524*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103524*0 + 3*716*FLEN/8, x4, x1, x2)

inst_34509:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaffffffc; valaddr_reg:x3; val_offset:103527*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103527*0 + 3*717*FLEN/8, x4, x1, x2)

inst_34510:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xaffffffe; valaddr_reg:x3; val_offset:103530*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103530*0 + 3*718*FLEN/8, x4, x1, x2)

inst_34511:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x5f and fm3 == 0x7fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xafffffff; valaddr_reg:x3; val_offset:103533*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103533*0 + 3*719*FLEN/8, x4, x1, x2)

inst_34512:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbf800001; valaddr_reg:x3; val_offset:103536*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103536*0 + 3*720*FLEN/8, x4, x1, x2)

inst_34513:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbf800003; valaddr_reg:x3; val_offset:103539*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103539*0 + 3*721*FLEN/8, x4, x1, x2)

inst_34514:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbf800007; valaddr_reg:x3; val_offset:103542*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103542*0 + 3*722*FLEN/8, x4, x1, x2)

inst_34515:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbf999999; valaddr_reg:x3; val_offset:103545*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103545*0 + 3*723*FLEN/8, x4, x1, x2)

inst_34516:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbfa49249; valaddr_reg:x3; val_offset:103548*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103548*0 + 3*724*FLEN/8, x4, x1, x2)

inst_34517:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbfb33333; valaddr_reg:x3; val_offset:103551*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103551*0 + 3*725*FLEN/8, x4, x1, x2)

inst_34518:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbfb6db6d; valaddr_reg:x3; val_offset:103554*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103554*0 + 3*726*FLEN/8, x4, x1, x2)

inst_34519:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbfbbbbbb; valaddr_reg:x3; val_offset:103557*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103557*0 + 3*727*FLEN/8, x4, x1, x2)

inst_34520:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbfc44444; valaddr_reg:x3; val_offset:103560*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103560*0 + 3*728*FLEN/8, x4, x1, x2)

inst_34521:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbfcccccc; valaddr_reg:x3; val_offset:103563*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103563*0 + 3*729*FLEN/8, x4, x1, x2)

inst_34522:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbfdb6db6; valaddr_reg:x3; val_offset:103566*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103566*0 + 3*730*FLEN/8, x4, x1, x2)

inst_34523:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbfe66666; valaddr_reg:x3; val_offset:103569*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103569*0 + 3*731*FLEN/8, x4, x1, x2)

inst_34524:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbfedb6db; valaddr_reg:x3; val_offset:103572*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103572*0 + 3*732*FLEN/8, x4, x1, x2)

inst_34525:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbffffff8; valaddr_reg:x3; val_offset:103575*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103575*0 + 3*733*FLEN/8, x4, x1, x2)

inst_34526:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbffffffc; valaddr_reg:x3; val_offset:103578*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103578*0 + 3*734*FLEN/8, x4, x1, x2)

inst_34527:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cbcd0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f6cae and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cbcd0; op2val:0x802f6cae;
op3val:0xbffffffe; valaddr_reg:x3; val_offset:103581*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103581*0 + 3*735*FLEN/8, x4, x1, x2)

inst_34528:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x3; val_offset:103584*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103584*0 + 3*736*FLEN/8, x4, x1, x2)

inst_34529:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x3; val_offset:103587*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103587*0 + 3*737*FLEN/8, x4, x1, x2)

inst_34530:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x3; val_offset:103590*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103590*0 + 3*738*FLEN/8, x4, x1, x2)

inst_34531:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x3; val_offset:103593*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103593*0 + 3*739*FLEN/8, x4, x1, x2)

inst_34532:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x3; val_offset:103596*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103596*0 + 3*740*FLEN/8, x4, x1, x2)

inst_34533:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x3; val_offset:103599*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103599*0 + 3*741*FLEN/8, x4, x1, x2)

inst_34534:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x3; val_offset:103602*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103602*0 + 3*742*FLEN/8, x4, x1, x2)

inst_34535:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x3; val_offset:103605*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103605*0 + 3*743*FLEN/8, x4, x1, x2)

inst_34536:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x3; val_offset:103608*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103608*0 + 3*744*FLEN/8, x4, x1, x2)

inst_34537:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x3; val_offset:103611*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103611*0 + 3*745*FLEN/8, x4, x1, x2)

inst_34538:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x3; val_offset:103614*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103614*0 + 3*746*FLEN/8, x4, x1, x2)

inst_34539:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x3; val_offset:103617*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103617*0 + 3*747*FLEN/8, x4, x1, x2)

inst_34540:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x3; val_offset:103620*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103620*0 + 3*748*FLEN/8, x4, x1, x2)

inst_34541:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x3; val_offset:103623*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103623*0 + 3*749*FLEN/8, x4, x1, x2)

inst_34542:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x3; val_offset:103626*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103626*0 + 3*750*FLEN/8, x4, x1, x2)

inst_34543:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x3; val_offset:103629*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103629*0 + 3*751*FLEN/8, x4, x1, x2)

inst_34544:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d800000; valaddr_reg:x3; val_offset:103632*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103632*0 + 3*752*FLEN/8, x4, x1, x2)

inst_34545:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d800001; valaddr_reg:x3; val_offset:103635*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103635*0 + 3*753*FLEN/8, x4, x1, x2)

inst_34546:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d800003; valaddr_reg:x3; val_offset:103638*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103638*0 + 3*754*FLEN/8, x4, x1, x2)

inst_34547:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d800007; valaddr_reg:x3; val_offset:103641*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103641*0 + 3*755*FLEN/8, x4, x1, x2)

inst_34548:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d80000f; valaddr_reg:x3; val_offset:103644*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103644*0 + 3*756*FLEN/8, x4, x1, x2)

inst_34549:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d80001f; valaddr_reg:x3; val_offset:103647*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103647*0 + 3*757*FLEN/8, x4, x1, x2)

inst_34550:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d80003f; valaddr_reg:x3; val_offset:103650*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103650*0 + 3*758*FLEN/8, x4, x1, x2)

inst_34551:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x00007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d80007f; valaddr_reg:x3; val_offset:103653*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103653*0 + 3*759*FLEN/8, x4, x1, x2)

inst_34552:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d8000ff; valaddr_reg:x3; val_offset:103656*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103656*0 + 3*760*FLEN/8, x4, x1, x2)

inst_34553:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d8001ff; valaddr_reg:x3; val_offset:103659*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103659*0 + 3*761*FLEN/8, x4, x1, x2)

inst_34554:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d8003ff; valaddr_reg:x3; val_offset:103662*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103662*0 + 3*762*FLEN/8, x4, x1, x2)

inst_34555:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x0007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d8007ff; valaddr_reg:x3; val_offset:103665*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103665*0 + 3*763*FLEN/8, x4, x1, x2)

inst_34556:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d800fff; valaddr_reg:x3; val_offset:103668*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103668*0 + 3*764*FLEN/8, x4, x1, x2)

inst_34557:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d801fff; valaddr_reg:x3; val_offset:103671*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103671*0 + 3*765*FLEN/8, x4, x1, x2)

inst_34558:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d803fff; valaddr_reg:x3; val_offset:103674*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103674*0 + 3*766*FLEN/8, x4, x1, x2)

inst_34559:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cc100 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x1b and fm3 == 0x007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.s ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x7f2cc100; op2val:0x80000000;
op3val:0x8d807fff; valaddr_reg:x3; val_offset:103677*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, f31, f30, f29, f28, dyn, 0, 0, x3, 103677*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa48000ff759852287,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa48001ff759852543,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa48003ff759853055,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa48007ff759854079,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4800fff759856127,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4801fff759860223,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4803fff759868415,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4807fff759884799,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa480ffff759917567,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa481ffff759983103,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa483ffff760114175,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa487ffff760376319,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa48fffff760900607,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa49fffff761949183,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4bfffff764046335,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4c00000764046336,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4e00000766143488,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4f00000767192064,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4f80000767716352,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4fc0000767978496,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4fe0000768109568,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4ff0000768175104,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4ff8000768207872,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4ffc000768224256,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4ffe000768232448,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4fff000768236544,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4fff800768238592,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4fffc00768239616,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4fffe00768240128,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4ffff00768240384,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4ffff80768240512,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4ffffc0768240576,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4ffffe0768240608,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4fffff0768240624,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4fffff8768240632,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4fffffc768240636,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4fffffe768240638,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xa4ffffff768240639,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbf800001212836865,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbf800003212836867,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbf800007212836871,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbf999999214514585,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbfa49249215233609,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbfb33333216192307,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbfb6db6d216431981,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbfbbbbbb216751547,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbfc44444217310788,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbfcccccc217870028,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbfdb6db6218828726,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbfe66666219547750,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbfedb6db220027099,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbffffff8221225464,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbffffffc221225468,32,FLEN)
NAN_BOXED(0x7f28f4b0133390512,32,FLEN)
NAN_BOXED(0x80307c6d150661229,32,FLEN)
NAN_BOXED(0xbffffffe221225470,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2200000070425344,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2200000170425345,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2200000370425347,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2200000770425351,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2200000f70425359,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2200001f70425375,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2200003f70425407,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2200007f70425471,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x220000ff70425599,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x220001ff70425855,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x220003ff70426367,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x220007ff70427391,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x22000fff70429439,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x22001fff70433535,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x22003fff70441727,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x22007fff70458111,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2200ffff70490879,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2201ffff70556415,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2203ffff70687487,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2207ffff70949631,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x220fffff71473919,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x221fffff72522495,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x223fffff74619647,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2240000074619648,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2260000076716800,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2270000077765376,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x2278000078289664,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227c000078551808,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227e000078682880,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227f000078748416,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227f800078781184,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227fc00078797568,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227fe00078805760,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227ff00078809856,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227ff80078811904,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227ffc0078812928,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227ffe0078813440,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227fff0078813696,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227fff8078813824,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227fffc078813888,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227fffe078813920,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227ffff078813936,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227ffff878813944,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227ffffc78813948,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227ffffe78813950,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x227fffff78813951,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3f800001065353217,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3f800003065353219,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3f800007065353223,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3f999999067030937,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3fa49249067749961,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3fb33333068708659,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3fb6db6d068948333,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3fbbbbbb069267899,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3fc44444069827140,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3fcccccc070386380,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3fdb6db6071345078,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3fe66666072064102,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3fedb6db072543451,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3ffffff8073741816,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3ffffffc073741820,32,FLEN)
NAN_BOXED(0x7f292241133402177,32,FLEN)
NAN_BOXED(0x306f5d174237,32,FLEN)
NAN_BOXED(0x3ffffffe073741822,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x800001388609,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x800003388611,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x800007388615,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x9999990066329,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xa492490785353,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xb333331744051,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xb6db6d1983725,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xbbbbbb2303291,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xc444442862532,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xcccccc3421772,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdb6db64380470,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xe666665099494,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xedb6db5578843,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xfffff86777208,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xfffffc6777212,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xfffffe6777214,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x700000017440512,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x700000117440513,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x700000317440515,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x700000717440519,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x700000f17440527,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x700001f17440543,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x700003f17440575,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x700007f17440639,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x70000ff17440767,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x70001ff17441023,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x70003ff17441535,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x70007ff17442559,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7000fff17444607,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7001fff17448703,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7003fff17456895,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7007fff17473279,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x700ffff17506047,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x701ffff17571583,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x703ffff17702655,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x707ffff17964799,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x70fffff18489087,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x71fffff19537663,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x73fffff21634815,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x740000021634816,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x760000023731968,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x770000024780544,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x778000025304832,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77c000025566976,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77e000025698048,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77f000025763584,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77f800025796352,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77fc00025812736,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77fe00025820928,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77ff00025825024,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77ff80025827072,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77ffc0025828096,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77ffe0025828608,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77fff0025828864,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77fff8025828992,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77fffc025829056,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77fffe025829088,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77ffff025829104,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77ffff825829112,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77ffffc25829116,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77ffffe25829118,32,FLEN)
NAN_BOXED(0x7f299a74133432948,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x77fffff25829119,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3f800001065353217,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3f800003065353219,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3f800007065353223,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3f999999067030937,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3fa49249067749961,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3fb33333068708659,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3fb6db6d068948333,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3fbbbbbb069267899,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3fc44444069827140,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3fcccccc070386380,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3fdb6db6071345078,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3fe66666072064102,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3fedb6db072543451,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3ffffff8073741816,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3ffffffc073741820,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x3ffffffe073741822,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a000000241513984,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a000001241513985,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a000003241513987,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a000007241513991,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a00000f241513999,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a00001f241514015,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a00003f241514047,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a00007f241514111,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a0000ff241514239,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a0001ff241514495,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a0003ff241515007,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a0007ff241516031,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a000fff241518079,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a001fff241522175,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a003fff241530367,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a007fff241546751,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a00ffff241579519,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a01ffff241645055,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a03ffff241776127,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a07ffff242038271,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a0fffff242562559,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a1fffff243611135,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a3fffff245708287,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a400000245708288,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a600000247805440,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a700000248854016,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a780000249378304,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7c0000249640448,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7e0000249771520,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7f0000249837056,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7f8000249869824,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7fc000249886208,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7fe000249894400,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7ff000249898496,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7ff800249900544,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7ffc00249901568,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7ffe00249902080,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7fff00249902336,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7fff80249902464,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7fffc0249902528,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7fffe0249902560,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7ffff0249902576,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7ffff8249902584,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7ffffc249902588,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7ffffe249902590,32,FLEN)
NAN_BOXED(0x7f29e684133452420,32,FLEN)
NAN_BOXED(0x30376a159914,32,FLEN)
NAN_BOXED(0x4a7fffff249902591,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x1,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x3,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x199999677721,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x249249396745,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x333333355443,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x36db6d595117,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x3bbbbb914683,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x444444473924,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x4ccccc033164,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x5b6db6991862,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x666666710886,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x6db6db190235,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ffff8388600,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ffffc388604,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ffffe388606,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x30000000331648,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x30000010331649,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x30000030331651,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x30000070331655,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x300000f0331663,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x300001f0331679,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x300003f0331711,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x300007f0331775,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x30000ff0331903,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x30001ff0332159,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x30003ff0332671,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x30007ff0333695,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x3000fff0335743,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x3001fff0339839,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x3003fff0348031,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x3007fff0364415,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x300ffff0397183,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x301ffff0462719,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x303ffff0593791,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x307ffff0855935,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x30fffff1380223,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x31fffff2428799,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x33fffff4525951,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x34000004525952,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x36000006623104,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37000007671680,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37800008195968,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37c00008458112,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37e00008589184,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37f00008654720,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37f80008687488,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37fc0008703872,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37fe0008712064,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37ff0008716160,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37ff8008718208,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37ffc008719232,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37ffe008719744,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37fff008720000,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37fff808720128,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37fffc08720192,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37fffe08720224,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37ffff08720240,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37ffff88720248,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37ffffc8720252,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37ffffe8720254,32,FLEN)
NAN_BOXED(0x7f2a691c133485852,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x37fffff8720255,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x1,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x3,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x199999677721,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x249249396745,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x333333355443,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x36db6d595117,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x3bbbbb914683,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x444444473924,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x4ccccc033164,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x5b6db6991862,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x666666710886,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x6db6db190235,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ffff8388600,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ffffc388604,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0x7ffffe388606,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd80000026492416,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd80000126492417,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd80000326492419,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd80000726492423,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd80000f26492431,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd80001f26492447,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd80003f26492479,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd80007f26492543,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd8000ff26492671,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd8001ff26492927,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd8003ff26493439,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd8007ff26494463,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd800fff26496511,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd801fff26500607,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd803fff26508799,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd807fff26525183,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd80ffff26557951,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd81ffff26623487,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd83ffff26754559,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd87ffff27016703,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd8fffff27540991,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xd9fffff28589567,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdbfffff30686719,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdc0000030686720,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xde0000032783872,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdf0000033832448,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdf8000034356736,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdfc000034618880,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdfe000034749952,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdff000034815488,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdff800034848256,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdffc00034864640,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdffe00034872832,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdfff00034876928,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdfff80034878976,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdfffc0034880000,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdfffe0034880512,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdffff0034880768,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdffff8034880896,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdffffc034880960,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdffffe034880992,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdfffff034881008,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdfffff834881016,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdfffffc34881020,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdfffffe34881022,32,FLEN)
NAN_BOXED(0x7f2ac43c133509180,32,FLEN)
NAN_BOXED(0x0,32,FLEN)
NAN_BOXED(0xdffffff34881023,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80800001155872257,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80800003155872259,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80800007155872263,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80999999157549977,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80a49249158269001,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80b33333159227699,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80b6db6d159467373,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80bbbbbb159786939,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80c44444160346180,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80cccccc160905420,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80db6db6161864118,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80e66666162583142,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80edb6db163062491,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80fffff8164260856,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80fffffc164260860,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80fffffe164260862,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83800000206203904,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83800001206203905,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83800003206203907,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83800007206203911,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8380000f206203919,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8380001f206203935,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8380003f206203967,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8380007f206204031,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x838000ff206204159,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x838001ff206204415,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x838003ff206204927,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x838007ff206205951,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83800fff206207999,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83801fff206212095,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83803fff206220287,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83807fff206236671,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8380ffff206269439,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8381ffff206334975,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8383ffff206466047,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8387ffff206728191,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x838fffff207252479,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x839fffff208301055,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83bfffff210398207,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83c00000210398208,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83e00000212495360,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83f00000213543936,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83f80000214068224,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83fc0000214330368,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83fe0000214461440,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83ff0000214526976,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83ff8000214559744,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83ffc000214576128,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83ffe000214584320,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83fff000214588416,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83fff800214590464,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83fffc00214591488,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83fffe00214592000,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83ffff00214592256,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83ffff80214592384,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83ffffc0214592448,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83ffffe0214592480,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83fffff0214592496,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83fffff8214592504,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83fffffc214592508,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83fffffe214592510,32,FLEN)
NAN_BOXED(0x7f2add4f133515599,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x83ffffff214592511,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x70000000879048192,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x70000001879048193,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x70000003879048195,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x70000007879048199,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7000000f879048207,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7000001f879048223,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7000003f879048255,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7000007f879048319,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x700000ff879048447,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x700001ff879048703,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x700003ff879049215,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x700007ff879050239,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x70000fff879052287,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x70001fff879056383,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x70003fff879064575,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x70007fff879080959,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7000ffff879113727,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7001ffff879179263,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7003ffff879310335,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7007ffff879572479,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x700fffff880096767,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x701fffff881145343,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x703fffff883242495,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x70400000883242496,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x70600000885339648,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x70700000886388224,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x70780000886912512,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707c0000887174656,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707e0000887305728,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707f0000887371264,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707f8000887404032,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707fc000887420416,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707fe000887428608,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707ff000887432704,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707ff800887434752,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707ffc00887435776,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707ffe00887436288,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707fff00887436544,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707fff80887436672,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707fffc0887436736,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707fffe0887436768,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707ffff0887436784,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707ffff8887436792,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707ffffc887436796,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707ffffe887436798,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x707fffff887436799,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f000001130706433,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f000003130706435,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f000007130706439,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f199999132384153,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f249249133103177,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f333333134061875,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f36db6d134301549,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f3bbbbb134621115,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f444444135180356,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f4ccccc135739596,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f5b6db6136698294,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f666666137417318,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f6db6db137896667,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f7ffff8139095032,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f7ffffc139095036,32,FLEN)
NAN_BOXED(0x7f2bf98b133588363,32,FLEN)
NAN_BOXED(0x3fbe8a20069451808,32,FLEN)
NAN_BOXED(0x7f7ffffe139095038,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf000000936012800,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf000001936012801,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf000003936012803,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf000007936012807,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf00000f936012815,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf00001f936012831,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf00003f936012863,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf00007f936012927,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf0000ff936013055,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf0001ff936013311,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf0003ff936013823,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf0007ff936014847,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf000fff936016895,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf001fff936020991,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf003fff936029183,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf007fff936045567,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf00ffff936078335,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf01ffff936143871,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf03ffff936274943,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf07ffff936537087,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf0fffff937061375,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf1fffff938109951,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf3fffff940207103,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf400000940207104,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf600000942304256,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf700000943352832,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf780000943877120,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7c0000944139264,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7e0000944270336,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7f0000944335872,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7f8000944368640,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7fc000944385024,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7fe000944393216,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7ff000944397312,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7ff800944399360,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7ffc00944400384,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7ffe00944400896,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7fff00944401152,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7fff80944401280,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7fffc0944401344,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7fffe0944401376,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7ffff0944401392,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7ffff8944401400,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7ffffc944401404,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7ffffe944401406,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xaf7fffff944401407,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbf800001212836865,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbf800003212836867,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbf800007212836871,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbf999999214514585,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbfa49249215233609,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbfb33333216192307,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbfb6db6d216431981,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbfbbbbbb216751547,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbfc44444217310788,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbfcccccc217870028,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbfdb6db6218828726,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbfe66666219547750,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbfedb6db220027099,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbffffff8221225464,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbffffffc221225468,32,FLEN)
NAN_BOXED(0x7f2c2411133599249,32,FLEN)
NAN_BOXED(0x802f96c3150602435,32,FLEN)
NAN_BOXED(0xbffffffe221225470,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a00000004643072,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a00000104643073,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a00000304643075,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a00000704643079,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a00000f04643087,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a00001f04643103,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a00003f04643135,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a00007f04643199,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a0000ff04643327,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a0001ff04643583,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a0003ff04644095,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a0007ff04645119,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a000fff04647167,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a001fff04651263,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a003fff04659455,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a007fff04675839,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a00ffff04708607,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a01ffff04774143,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a03ffff04905215,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a07ffff05167359,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a0fffff05691647,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a1fffff06740223,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a3fffff08837375,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a40000008837376,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a60000010934528,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a70000011983104,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a78000012507392,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7c000012769536,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7e000012900608,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7f000012966144,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7f800012998912,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7fc00013015296,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7fe00013023488,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7ff00013027584,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7ff80013029632,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7ffc0013030656,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7ffe0013031168,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7fff0013031424,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7fff8013031552,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7fffc013031616,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7fffe013031648,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7ffff013031664,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7ffff813031672,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7ffffc13031676,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7ffffe13031678,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x2a7fffff13031679,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3f800001065353217,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3f800003065353219,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3f800007065353223,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3f999999067030937,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3fa49249067749961,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3fb33333068708659,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3fb6db6d068948333,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3fbbbbbb069267899,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3fc44444069827140,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3fcccccc070386380,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3fdb6db6071345078,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3fe66666072064102,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3fedb6db072543451,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3ffffff8073741816,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3ffffffc073741820,32,FLEN)
NAN_BOXED(0x7f2c289c133600412,32,FLEN)
NAN_BOXED(0x2f9582118466,32,FLEN)
NAN_BOXED(0x3ffffffe073741822,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb800000951034368,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb800001951034369,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb800003951034371,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb800007951034375,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb80000f951034383,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb80001f951034399,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb80003f951034431,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb80007f951034495,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb8000ff951034623,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb8001ff951034879,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb8003ff951035391,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb8007ff951036415,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb800fff951038463,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb801fff951042559,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb803fff951050751,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb807fff951067135,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb80ffff951099903,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb81ffff951165439,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb83ffff951296511,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb87ffff951558655,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb8fffff952082943,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xeb9fffff953131519,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebbfffff955228671,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebc00000955228672,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebe00000957325824,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebf00000958374400,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebf80000958898688,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebfc0000959160832,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebfe0000959291904,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebff0000959357440,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebff8000959390208,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebffc000959406592,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebffe000959414784,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebfff000959418880,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebfff800959420928,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebfffc00959421952,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebfffe00959422464,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebffff00959422720,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebffff80959422848,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebffffc0959422912,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebffffe0959422944,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebfffff0959422960,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebfffff8959422968,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebfffffc959422972,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebfffffe959422974,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xebffffff959422975,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff000001278190081,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff000003278190083,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff000007278190087,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff199999279867801,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff249249280586825,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff333333281545523,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff36db6d281785197,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff3bbbbb282104763,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff444444282664004,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff4ccccc283223244,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff5b6db6284181942,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff666666284900966,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff6db6db285380315,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff7ffff8286578680,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff7ffffc286578684,32,FLEN)
NAN_BOXED(0x7f2cafdc133635036,32,FLEN)
NAN_BOXED(0xbfbdc0f5216883957,32,FLEN)
NAN_BOXED(0xff7ffffe286578686,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf800000944401408,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf800001944401409,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf800003944401411,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf800007944401415,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf80000f944401423,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf80001f944401439,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf80003f944401471,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf80007f944401535,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf8000ff944401663,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf8001ff944401919,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf8003ff944402431,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf8007ff944403455,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf800fff944405503,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf801fff944409599,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf803fff944417791,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf807fff944434175,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf80ffff944466943,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf81ffff944532479,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf83ffff944663551,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf87ffff944925695,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf8fffff945449983,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaf9fffff946498559,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xafbfffff948595711,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xafc00000948595712,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xafe00000950692864,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaff00000951741440,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaff80000952265728,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaffc0000952527872,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaffe0000952658944,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xafff0000952724480,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xafff8000952757248,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xafffc000952773632,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xafffe000952781824,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaffff000952785920,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaffff800952787968,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaffffc00952788992,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaffffe00952789504,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xafffff00952789760,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xafffff80952789888,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xafffffc0952789952,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xafffffe0952789984,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaffffff0952790000,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaffffff8952790008,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaffffffc952790012,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xaffffffe952790014,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xafffffff952790015,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbf800001212836865,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbf800003212836867,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbf800007212836871,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbf999999214514585,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbfa49249215233609,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbfb33333216192307,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbfb6db6d216431981,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbfbbbbbb216751547,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbfc44444217310788,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbfcccccc217870028,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbfdb6db6218828726,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbfe66666219547750,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbfedb6db220027099,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbffffff8221225464,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbffffffc221225468,32,FLEN)
NAN_BOXED(0x7f2cbcd0133638352,32,FLEN)
NAN_BOXED(0x802f6cae150591662,32,FLEN)
NAN_BOXED(0xbffffffe221225470,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80000001147483649,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80000003147483651,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80000007147483655,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80199999149161369,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80249249149880393,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80333333150839091,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8036db6d151078765,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x803bbbbb151398331,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80444444151957572,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x804ccccc152516812,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x805b6db6153475510,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x80666666154194534,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x806db6db154673883,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x807ffff8155872248,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x807ffffc155872252,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x807ffffe155872254,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d800000373976064,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d800001373976065,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d800003373976067,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d800007373976071,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d80000f373976079,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d80001f373976095,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d80003f373976127,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d80007f373976191,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d8000ff373976319,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d8001ff373976575,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d8003ff373977087,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d8007ff373978111,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d800fff373980159,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d801fff373984255,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d803fff373992447,32,FLEN)
NAN_BOXED(0x7f2cc100133639424,32,FLEN)
NAN_BOXED(0x80000000147483648,32,FLEN)
NAN_BOXED(0x8d807fff374008831,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
