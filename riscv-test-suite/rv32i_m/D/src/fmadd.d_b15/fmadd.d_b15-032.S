
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_23808:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6000003fffffff; valaddr_reg:x3; val_offset:71424*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71424*0 + 3*0*FLEN/8, x4, x1, x2)

inst_23809:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6000007fffffff; valaddr_reg:x3; val_offset:71427*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71427*0 + 3*1*FLEN/8, x4, x1, x2)

inst_23810:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb600000ffffffff; valaddr_reg:x3; val_offset:71430*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71430*0 + 3*2*FLEN/8, x4, x1, x2)

inst_23811:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb600001ffffffff; valaddr_reg:x3; val_offset:71433*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71433*0 + 3*3*FLEN/8, x4, x1, x2)

inst_23812:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb600003ffffffff; valaddr_reg:x3; val_offset:71436*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71436*0 + 3*4*FLEN/8, x4, x1, x2)

inst_23813:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb600007ffffffff; valaddr_reg:x3; val_offset:71439*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71439*0 + 3*5*FLEN/8, x4, x1, x2)

inst_23814:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb60000fffffffff; valaddr_reg:x3; val_offset:71442*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71442*0 + 3*6*FLEN/8, x4, x1, x2)

inst_23815:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb60001fffffffff; valaddr_reg:x3; val_offset:71445*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71445*0 + 3*7*FLEN/8, x4, x1, x2)

inst_23816:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb60003fffffffff; valaddr_reg:x3; val_offset:71448*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71448*0 + 3*8*FLEN/8, x4, x1, x2)

inst_23817:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb60007fffffffff; valaddr_reg:x3; val_offset:71451*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71451*0 + 3*9*FLEN/8, x4, x1, x2)

inst_23818:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6000ffffffffff; valaddr_reg:x3; val_offset:71454*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71454*0 + 3*10*FLEN/8, x4, x1, x2)

inst_23819:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6001ffffffffff; valaddr_reg:x3; val_offset:71457*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71457*0 + 3*11*FLEN/8, x4, x1, x2)

inst_23820:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6003ffffffffff; valaddr_reg:x3; val_offset:71460*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71460*0 + 3*12*FLEN/8, x4, x1, x2)

inst_23821:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6007ffffffffff; valaddr_reg:x3; val_offset:71463*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71463*0 + 3*13*FLEN/8, x4, x1, x2)

inst_23822:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb600fffffffffff; valaddr_reg:x3; val_offset:71466*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71466*0 + 3*14*FLEN/8, x4, x1, x2)

inst_23823:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb601fffffffffff; valaddr_reg:x3; val_offset:71469*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71469*0 + 3*15*FLEN/8, x4, x1, x2)

inst_23824:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb603fffffffffff; valaddr_reg:x3; val_offset:71472*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71472*0 + 3*16*FLEN/8, x4, x1, x2)

inst_23825:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb607fffffffffff; valaddr_reg:x3; val_offset:71475*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71475*0 + 3*17*FLEN/8, x4, x1, x2)

inst_23826:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb60ffffffffffff; valaddr_reg:x3; val_offset:71478*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71478*0 + 3*18*FLEN/8, x4, x1, x2)

inst_23827:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb61ffffffffffff; valaddr_reg:x3; val_offset:71481*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71481*0 + 3*19*FLEN/8, x4, x1, x2)

inst_23828:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb63ffffffffffff; valaddr_reg:x3; val_offset:71484*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71484*0 + 3*20*FLEN/8, x4, x1, x2)

inst_23829:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb67ffffffffffff; valaddr_reg:x3; val_offset:71487*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71487*0 + 3*21*FLEN/8, x4, x1, x2)

inst_23830:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb68000000000000; valaddr_reg:x3; val_offset:71490*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71490*0 + 3*22*FLEN/8, x4, x1, x2)

inst_23831:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6c000000000000; valaddr_reg:x3; val_offset:71493*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71493*0 + 3*23*FLEN/8, x4, x1, x2)

inst_23832:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6e000000000000; valaddr_reg:x3; val_offset:71496*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71496*0 + 3*24*FLEN/8, x4, x1, x2)

inst_23833:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6f000000000000; valaddr_reg:x3; val_offset:71499*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71499*0 + 3*25*FLEN/8, x4, x1, x2)

inst_23834:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6f800000000000; valaddr_reg:x3; val_offset:71502*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71502*0 + 3*26*FLEN/8, x4, x1, x2)

inst_23835:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fc00000000000; valaddr_reg:x3; val_offset:71505*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71505*0 + 3*27*FLEN/8, x4, x1, x2)

inst_23836:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fe00000000000; valaddr_reg:x3; val_offset:71508*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71508*0 + 3*28*FLEN/8, x4, x1, x2)

inst_23837:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ff00000000000; valaddr_reg:x3; val_offset:71511*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71511*0 + 3*29*FLEN/8, x4, x1, x2)

inst_23838:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ff80000000000; valaddr_reg:x3; val_offset:71514*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71514*0 + 3*30*FLEN/8, x4, x1, x2)

inst_23839:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffc0000000000; valaddr_reg:x3; val_offset:71517*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71517*0 + 3*31*FLEN/8, x4, x1, x2)

inst_23840:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffe0000000000; valaddr_reg:x3; val_offset:71520*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71520*0 + 3*32*FLEN/8, x4, x1, x2)

inst_23841:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fff0000000000; valaddr_reg:x3; val_offset:71523*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71523*0 + 3*33*FLEN/8, x4, x1, x2)

inst_23842:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fff8000000000; valaddr_reg:x3; val_offset:71526*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71526*0 + 3*34*FLEN/8, x4, x1, x2)

inst_23843:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffc000000000; valaddr_reg:x3; val_offset:71529*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71529*0 + 3*35*FLEN/8, x4, x1, x2)

inst_23844:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffe000000000; valaddr_reg:x3; val_offset:71532*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71532*0 + 3*36*FLEN/8, x4, x1, x2)

inst_23845:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffff000000000; valaddr_reg:x3; val_offset:71535*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71535*0 + 3*37*FLEN/8, x4, x1, x2)

inst_23846:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffff800000000; valaddr_reg:x3; val_offset:71538*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71538*0 + 3*38*FLEN/8, x4, x1, x2)

inst_23847:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffc00000000; valaddr_reg:x3; val_offset:71541*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71541*0 + 3*39*FLEN/8, x4, x1, x2)

inst_23848:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffe00000000; valaddr_reg:x3; val_offset:71544*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71544*0 + 3*40*FLEN/8, x4, x1, x2)

inst_23849:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffff00000000; valaddr_reg:x3; val_offset:71547*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71547*0 + 3*41*FLEN/8, x4, x1, x2)

inst_23850:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffff80000000; valaddr_reg:x3; val_offset:71550*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71550*0 + 3*42*FLEN/8, x4, x1, x2)

inst_23851:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffc0000000; valaddr_reg:x3; val_offset:71553*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71553*0 + 3*43*FLEN/8, x4, x1, x2)

inst_23852:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffe0000000; valaddr_reg:x3; val_offset:71556*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71556*0 + 3*44*FLEN/8, x4, x1, x2)

inst_23853:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffff0000000; valaddr_reg:x3; val_offset:71559*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71559*0 + 3*45*FLEN/8, x4, x1, x2)

inst_23854:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffff8000000; valaddr_reg:x3; val_offset:71562*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71562*0 + 3*46*FLEN/8, x4, x1, x2)

inst_23855:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffc000000; valaddr_reg:x3; val_offset:71565*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71565*0 + 3*47*FLEN/8, x4, x1, x2)

inst_23856:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffe000000; valaddr_reg:x3; val_offset:71568*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71568*0 + 3*48*FLEN/8, x4, x1, x2)

inst_23857:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffff000000; valaddr_reg:x3; val_offset:71571*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71571*0 + 3*49*FLEN/8, x4, x1, x2)

inst_23858:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffff800000; valaddr_reg:x3; val_offset:71574*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71574*0 + 3*50*FLEN/8, x4, x1, x2)

inst_23859:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffffc00000; valaddr_reg:x3; val_offset:71577*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71577*0 + 3*51*FLEN/8, x4, x1, x2)

inst_23860:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffffe00000; valaddr_reg:x3; val_offset:71580*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71580*0 + 3*52*FLEN/8, x4, x1, x2)

inst_23861:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffff00000; valaddr_reg:x3; val_offset:71583*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71583*0 + 3*53*FLEN/8, x4, x1, x2)

inst_23862:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffff80000; valaddr_reg:x3; val_offset:71586*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71586*0 + 3*54*FLEN/8, x4, x1, x2)

inst_23863:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffffc0000; valaddr_reg:x3; val_offset:71589*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71589*0 + 3*55*FLEN/8, x4, x1, x2)

inst_23864:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffffe0000; valaddr_reg:x3; val_offset:71592*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71592*0 + 3*56*FLEN/8, x4, x1, x2)

inst_23865:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffffff0000; valaddr_reg:x3; val_offset:71595*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71595*0 + 3*57*FLEN/8, x4, x1, x2)

inst_23866:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffffff8000; valaddr_reg:x3; val_offset:71598*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71598*0 + 3*58*FLEN/8, x4, x1, x2)

inst_23867:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffffffc000; valaddr_reg:x3; val_offset:71601*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71601*0 + 3*59*FLEN/8, x4, x1, x2)

inst_23868:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffffffe000; valaddr_reg:x3; val_offset:71604*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71604*0 + 3*60*FLEN/8, x4, x1, x2)

inst_23869:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffffff000; valaddr_reg:x3; val_offset:71607*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71607*0 + 3*61*FLEN/8, x4, x1, x2)

inst_23870:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffffff800; valaddr_reg:x3; val_offset:71610*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71610*0 + 3*62*FLEN/8, x4, x1, x2)

inst_23871:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffffffc00; valaddr_reg:x3; val_offset:71613*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71613*0 + 3*63*FLEN/8, x4, x1, x2)

inst_23872:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffffffe00; valaddr_reg:x3; val_offset:71616*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71616*0 + 3*64*FLEN/8, x4, x1, x2)

inst_23873:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffffffff00; valaddr_reg:x3; val_offset:71619*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71619*0 + 3*65*FLEN/8, x4, x1, x2)

inst_23874:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffffffff80; valaddr_reg:x3; val_offset:71622*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71622*0 + 3*66*FLEN/8, x4, x1, x2)

inst_23875:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffffffffc0; valaddr_reg:x3; val_offset:71625*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71625*0 + 3*67*FLEN/8, x4, x1, x2)

inst_23876:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffffffffe0; valaddr_reg:x3; val_offset:71628*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71628*0 + 3*68*FLEN/8, x4, x1, x2)

inst_23877:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffffffff0; valaddr_reg:x3; val_offset:71631*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71631*0 + 3*69*FLEN/8, x4, x1, x2)

inst_23878:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffffffff8; valaddr_reg:x3; val_offset:71634*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71634*0 + 3*70*FLEN/8, x4, x1, x2)

inst_23879:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffffffffc; valaddr_reg:x3; val_offset:71637*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71637*0 + 3*71*FLEN/8, x4, x1, x2)

inst_23880:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6ffffffffffffe; valaddr_reg:x3; val_offset:71640*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71640*0 + 3*72*FLEN/8, x4, x1, x2)

inst_23881:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3b6 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbb6fffffffffffff; valaddr_reg:x3; val_offset:71643*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71643*0 + 3*73*FLEN/8, x4, x1, x2)

inst_23882:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:71646*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71646*0 + 3*74*FLEN/8, x4, x1, x2)

inst_23883:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:71649*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71649*0 + 3*75*FLEN/8, x4, x1, x2)

inst_23884:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:71652*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71652*0 + 3*76*FLEN/8, x4, x1, x2)

inst_23885:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:71655*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71655*0 + 3*77*FLEN/8, x4, x1, x2)

inst_23886:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:71658*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71658*0 + 3*78*FLEN/8, x4, x1, x2)

inst_23887:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:71661*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71661*0 + 3*79*FLEN/8, x4, x1, x2)

inst_23888:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:71664*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71664*0 + 3*80*FLEN/8, x4, x1, x2)

inst_23889:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:71667*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71667*0 + 3*81*FLEN/8, x4, x1, x2)

inst_23890:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:71670*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71670*0 + 3*82*FLEN/8, x4, x1, x2)

inst_23891:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:71673*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71673*0 + 3*83*FLEN/8, x4, x1, x2)

inst_23892:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:71676*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71676*0 + 3*84*FLEN/8, x4, x1, x2)

inst_23893:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:71679*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71679*0 + 3*85*FLEN/8, x4, x1, x2)

inst_23894:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:71682*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71682*0 + 3*86*FLEN/8, x4, x1, x2)

inst_23895:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:71685*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71685*0 + 3*87*FLEN/8, x4, x1, x2)

inst_23896:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:71688*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71688*0 + 3*88*FLEN/8, x4, x1, x2)

inst_23897:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:71691*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71691*0 + 3*89*FLEN/8, x4, x1, x2)

inst_23898:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:71694*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71694*0 + 3*90*FLEN/8, x4, x1, x2)

inst_23899:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:71697*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71697*0 + 3*91*FLEN/8, x4, x1, x2)

inst_23900:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:71700*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71700*0 + 3*92*FLEN/8, x4, x1, x2)

inst_23901:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:71703*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71703*0 + 3*93*FLEN/8, x4, x1, x2)

inst_23902:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:71706*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71706*0 + 3*94*FLEN/8, x4, x1, x2)

inst_23903:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa8693ca418657 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x34d528b428334 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a8693ca418657; op2val:0x9fe34d528b428334;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:71709*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71709*0 + 3*95*FLEN/8, x4, x1, x2)

inst_23904:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:71712*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71712*0 + 3*96*FLEN/8, x4, x1, x2)

inst_23905:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:71715*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71715*0 + 3*97*FLEN/8, x4, x1, x2)

inst_23906:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:71718*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71718*0 + 3*98*FLEN/8, x4, x1, x2)

inst_23907:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:71721*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71721*0 + 3*99*FLEN/8, x4, x1, x2)

inst_23908:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:71724*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71724*0 + 3*100*FLEN/8, x4, x1, x2)

inst_23909:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:71727*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71727*0 + 3*101*FLEN/8, x4, x1, x2)

inst_23910:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:71730*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71730*0 + 3*102*FLEN/8, x4, x1, x2)

inst_23911:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:71733*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71733*0 + 3*103*FLEN/8, x4, x1, x2)

inst_23912:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:71736*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71736*0 + 3*104*FLEN/8, x4, x1, x2)

inst_23913:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:71739*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71739*0 + 3*105*FLEN/8, x4, x1, x2)

inst_23914:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:71742*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71742*0 + 3*106*FLEN/8, x4, x1, x2)

inst_23915:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:71745*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71745*0 + 3*107*FLEN/8, x4, x1, x2)

inst_23916:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:71748*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71748*0 + 3*108*FLEN/8, x4, x1, x2)

inst_23917:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:71751*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71751*0 + 3*109*FLEN/8, x4, x1, x2)

inst_23918:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:71754*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71754*0 + 3*110*FLEN/8, x4, x1, x2)

inst_23919:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:71757*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71757*0 + 3*111*FLEN/8, x4, x1, x2)

inst_23920:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:71760*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71760*0 + 3*112*FLEN/8, x4, x1, x2)

inst_23921:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:71763*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71763*0 + 3*113*FLEN/8, x4, x1, x2)

inst_23922:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:71766*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71766*0 + 3*114*FLEN/8, x4, x1, x2)

inst_23923:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:71769*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71769*0 + 3*115*FLEN/8, x4, x1, x2)

inst_23924:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:71772*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71772*0 + 3*116*FLEN/8, x4, x1, x2)

inst_23925:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:71775*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71775*0 + 3*117*FLEN/8, x4, x1, x2)

inst_23926:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000000000000; valaddr_reg:x3; val_offset:71778*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71778*0 + 3*118*FLEN/8, x4, x1, x2)

inst_23927:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000000000001; valaddr_reg:x3; val_offset:71781*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71781*0 + 3*119*FLEN/8, x4, x1, x2)

inst_23928:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000000000003; valaddr_reg:x3; val_offset:71784*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71784*0 + 3*120*FLEN/8, x4, x1, x2)

inst_23929:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000000000007; valaddr_reg:x3; val_offset:71787*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71787*0 + 3*121*FLEN/8, x4, x1, x2)

inst_23930:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000000000000f; valaddr_reg:x3; val_offset:71790*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71790*0 + 3*122*FLEN/8, x4, x1, x2)

inst_23931:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000000000001f; valaddr_reg:x3; val_offset:71793*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71793*0 + 3*123*FLEN/8, x4, x1, x2)

inst_23932:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000000000003f; valaddr_reg:x3; val_offset:71796*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71796*0 + 3*124*FLEN/8, x4, x1, x2)

inst_23933:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000000000007f; valaddr_reg:x3; val_offset:71799*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71799*0 + 3*125*FLEN/8, x4, x1, x2)

inst_23934:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000000000000ff; valaddr_reg:x3; val_offset:71802*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71802*0 + 3*126*FLEN/8, x4, x1, x2)

inst_23935:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000000000001ff; valaddr_reg:x3; val_offset:71805*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71805*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_23936:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000000000003ff; valaddr_reg:x3; val_offset:71808*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71808*0 + 3*128*FLEN/8, x4, x1, x2)

inst_23937:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000000000007ff; valaddr_reg:x3; val_offset:71811*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71811*0 + 3*129*FLEN/8, x4, x1, x2)

inst_23938:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000000000fff; valaddr_reg:x3; val_offset:71814*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71814*0 + 3*130*FLEN/8, x4, x1, x2)

inst_23939:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000000001fff; valaddr_reg:x3; val_offset:71817*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71817*0 + 3*131*FLEN/8, x4, x1, x2)

inst_23940:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000000003fff; valaddr_reg:x3; val_offset:71820*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71820*0 + 3*132*FLEN/8, x4, x1, x2)

inst_23941:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000000007fff; valaddr_reg:x3; val_offset:71823*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71823*0 + 3*133*FLEN/8, x4, x1, x2)

inst_23942:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000000000ffff; valaddr_reg:x3; val_offset:71826*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71826*0 + 3*134*FLEN/8, x4, x1, x2)

inst_23943:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000000001ffff; valaddr_reg:x3; val_offset:71829*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71829*0 + 3*135*FLEN/8, x4, x1, x2)

inst_23944:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000000003ffff; valaddr_reg:x3; val_offset:71832*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71832*0 + 3*136*FLEN/8, x4, x1, x2)

inst_23945:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000000007ffff; valaddr_reg:x3; val_offset:71835*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71835*0 + 3*137*FLEN/8, x4, x1, x2)

inst_23946:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000000000fffff; valaddr_reg:x3; val_offset:71838*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71838*0 + 3*138*FLEN/8, x4, x1, x2)

inst_23947:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000000001fffff; valaddr_reg:x3; val_offset:71841*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71841*0 + 3*139*FLEN/8, x4, x1, x2)

inst_23948:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000000003fffff; valaddr_reg:x3; val_offset:71844*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71844*0 + 3*140*FLEN/8, x4, x1, x2)

inst_23949:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000000007fffff; valaddr_reg:x3; val_offset:71847*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71847*0 + 3*141*FLEN/8, x4, x1, x2)

inst_23950:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000000ffffff; valaddr_reg:x3; val_offset:71850*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71850*0 + 3*142*FLEN/8, x4, x1, x2)

inst_23951:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000001ffffff; valaddr_reg:x3; val_offset:71853*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71853*0 + 3*143*FLEN/8, x4, x1, x2)

inst_23952:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000003ffffff; valaddr_reg:x3; val_offset:71856*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71856*0 + 3*144*FLEN/8, x4, x1, x2)

inst_23953:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000007ffffff; valaddr_reg:x3; val_offset:71859*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71859*0 + 3*145*FLEN/8, x4, x1, x2)

inst_23954:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000000fffffff; valaddr_reg:x3; val_offset:71862*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71862*0 + 3*146*FLEN/8, x4, x1, x2)

inst_23955:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000001fffffff; valaddr_reg:x3; val_offset:71865*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71865*0 + 3*147*FLEN/8, x4, x1, x2)

inst_23956:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000003fffffff; valaddr_reg:x3; val_offset:71868*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71868*0 + 3*148*FLEN/8, x4, x1, x2)

inst_23957:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000007fffffff; valaddr_reg:x3; val_offset:71871*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71871*0 + 3*149*FLEN/8, x4, x1, x2)

inst_23958:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000000ffffffff; valaddr_reg:x3; val_offset:71874*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71874*0 + 3*150*FLEN/8, x4, x1, x2)

inst_23959:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000001ffffffff; valaddr_reg:x3; val_offset:71877*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71877*0 + 3*151*FLEN/8, x4, x1, x2)

inst_23960:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000003ffffffff; valaddr_reg:x3; val_offset:71880*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71880*0 + 3*152*FLEN/8, x4, x1, x2)

inst_23961:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000007ffffffff; valaddr_reg:x3; val_offset:71883*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71883*0 + 3*153*FLEN/8, x4, x1, x2)

inst_23962:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200000fffffffff; valaddr_reg:x3; val_offset:71886*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71886*0 + 3*154*FLEN/8, x4, x1, x2)

inst_23963:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200001fffffffff; valaddr_reg:x3; val_offset:71889*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71889*0 + 3*155*FLEN/8, x4, x1, x2)

inst_23964:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200003fffffffff; valaddr_reg:x3; val_offset:71892*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71892*0 + 3*156*FLEN/8, x4, x1, x2)

inst_23965:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200007fffffffff; valaddr_reg:x3; val_offset:71895*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71895*0 + 3*157*FLEN/8, x4, x1, x2)

inst_23966:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820000ffffffffff; valaddr_reg:x3; val_offset:71898*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71898*0 + 3*158*FLEN/8, x4, x1, x2)

inst_23967:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820001ffffffffff; valaddr_reg:x3; val_offset:71901*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71901*0 + 3*159*FLEN/8, x4, x1, x2)

inst_23968:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820003ffffffffff; valaddr_reg:x3; val_offset:71904*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71904*0 + 3*160*FLEN/8, x4, x1, x2)

inst_23969:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820007ffffffffff; valaddr_reg:x3; val_offset:71907*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71907*0 + 3*161*FLEN/8, x4, x1, x2)

inst_23970:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82000fffffffffff; valaddr_reg:x3; val_offset:71910*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71910*0 + 3*162*FLEN/8, x4, x1, x2)

inst_23971:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82001fffffffffff; valaddr_reg:x3; val_offset:71913*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71913*0 + 3*163*FLEN/8, x4, x1, x2)

inst_23972:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82003fffffffffff; valaddr_reg:x3; val_offset:71916*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71916*0 + 3*164*FLEN/8, x4, x1, x2)

inst_23973:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x82007fffffffffff; valaddr_reg:x3; val_offset:71919*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71919*0 + 3*165*FLEN/8, x4, x1, x2)

inst_23974:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8200ffffffffffff; valaddr_reg:x3; val_offset:71922*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71922*0 + 3*166*FLEN/8, x4, x1, x2)

inst_23975:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8201ffffffffffff; valaddr_reg:x3; val_offset:71925*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71925*0 + 3*167*FLEN/8, x4, x1, x2)

inst_23976:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8203ffffffffffff; valaddr_reg:x3; val_offset:71928*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71928*0 + 3*168*FLEN/8, x4, x1, x2)

inst_23977:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8207ffffffffffff; valaddr_reg:x3; val_offset:71931*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71931*0 + 3*169*FLEN/8, x4, x1, x2)

inst_23978:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x8208000000000000; valaddr_reg:x3; val_offset:71934*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71934*0 + 3*170*FLEN/8, x4, x1, x2)

inst_23979:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820c000000000000; valaddr_reg:x3; val_offset:71937*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71937*0 + 3*171*FLEN/8, x4, x1, x2)

inst_23980:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820e000000000000; valaddr_reg:x3; val_offset:71940*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71940*0 + 3*172*FLEN/8, x4, x1, x2)

inst_23981:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820f000000000000; valaddr_reg:x3; val_offset:71943*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71943*0 + 3*173*FLEN/8, x4, x1, x2)

inst_23982:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820f800000000000; valaddr_reg:x3; val_offset:71946*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71946*0 + 3*174*FLEN/8, x4, x1, x2)

inst_23983:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fc00000000000; valaddr_reg:x3; val_offset:71949*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71949*0 + 3*175*FLEN/8, x4, x1, x2)

inst_23984:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fe00000000000; valaddr_reg:x3; val_offset:71952*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71952*0 + 3*176*FLEN/8, x4, x1, x2)

inst_23985:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ff00000000000; valaddr_reg:x3; val_offset:71955*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71955*0 + 3*177*FLEN/8, x4, x1, x2)

inst_23986:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ff80000000000; valaddr_reg:x3; val_offset:71958*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71958*0 + 3*178*FLEN/8, x4, x1, x2)

inst_23987:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffc0000000000; valaddr_reg:x3; val_offset:71961*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71961*0 + 3*179*FLEN/8, x4, x1, x2)

inst_23988:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffe0000000000; valaddr_reg:x3; val_offset:71964*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71964*0 + 3*180*FLEN/8, x4, x1, x2)

inst_23989:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fff0000000000; valaddr_reg:x3; val_offset:71967*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71967*0 + 3*181*FLEN/8, x4, x1, x2)

inst_23990:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fff8000000000; valaddr_reg:x3; val_offset:71970*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71970*0 + 3*182*FLEN/8, x4, x1, x2)

inst_23991:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffc000000000; valaddr_reg:x3; val_offset:71973*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71973*0 + 3*183*FLEN/8, x4, x1, x2)

inst_23992:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffe000000000; valaddr_reg:x3; val_offset:71976*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71976*0 + 3*184*FLEN/8, x4, x1, x2)

inst_23993:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffff000000000; valaddr_reg:x3; val_offset:71979*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71979*0 + 3*185*FLEN/8, x4, x1, x2)

inst_23994:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffff800000000; valaddr_reg:x3; val_offset:71982*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71982*0 + 3*186*FLEN/8, x4, x1, x2)

inst_23995:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffc00000000; valaddr_reg:x3; val_offset:71985*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71985*0 + 3*187*FLEN/8, x4, x1, x2)

inst_23996:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffe00000000; valaddr_reg:x3; val_offset:71988*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71988*0 + 3*188*FLEN/8, x4, x1, x2)

inst_23997:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffff00000000; valaddr_reg:x3; val_offset:71991*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71991*0 + 3*189*FLEN/8, x4, x1, x2)

inst_23998:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffff80000000; valaddr_reg:x3; val_offset:71994*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71994*0 + 3*190*FLEN/8, x4, x1, x2)

inst_23999:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffc0000000; valaddr_reg:x3; val_offset:71997*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 71997*0 + 3*191*FLEN/8, x4, x1, x2)

inst_24000:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffe0000000; valaddr_reg:x3; val_offset:72000*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72000*0 + 3*192*FLEN/8, x4, x1, x2)

inst_24001:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffff0000000; valaddr_reg:x3; val_offset:72003*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72003*0 + 3*193*FLEN/8, x4, x1, x2)

inst_24002:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffff8000000; valaddr_reg:x3; val_offset:72006*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72006*0 + 3*194*FLEN/8, x4, x1, x2)

inst_24003:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffc000000; valaddr_reg:x3; val_offset:72009*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72009*0 + 3*195*FLEN/8, x4, x1, x2)

inst_24004:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffe000000; valaddr_reg:x3; val_offset:72012*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72012*0 + 3*196*FLEN/8, x4, x1, x2)

inst_24005:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffff000000; valaddr_reg:x3; val_offset:72015*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72015*0 + 3*197*FLEN/8, x4, x1, x2)

inst_24006:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffff800000; valaddr_reg:x3; val_offset:72018*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72018*0 + 3*198*FLEN/8, x4, x1, x2)

inst_24007:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffffc00000; valaddr_reg:x3; val_offset:72021*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72021*0 + 3*199*FLEN/8, x4, x1, x2)

inst_24008:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffffe00000; valaddr_reg:x3; val_offset:72024*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72024*0 + 3*200*FLEN/8, x4, x1, x2)

inst_24009:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffff00000; valaddr_reg:x3; val_offset:72027*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72027*0 + 3*201*FLEN/8, x4, x1, x2)

inst_24010:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffff80000; valaddr_reg:x3; val_offset:72030*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72030*0 + 3*202*FLEN/8, x4, x1, x2)

inst_24011:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffffc0000; valaddr_reg:x3; val_offset:72033*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72033*0 + 3*203*FLEN/8, x4, x1, x2)

inst_24012:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffffe0000; valaddr_reg:x3; val_offset:72036*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72036*0 + 3*204*FLEN/8, x4, x1, x2)

inst_24013:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffffff0000; valaddr_reg:x3; val_offset:72039*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72039*0 + 3*205*FLEN/8, x4, x1, x2)

inst_24014:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffffff8000; valaddr_reg:x3; val_offset:72042*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72042*0 + 3*206*FLEN/8, x4, x1, x2)

inst_24015:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffffffc000; valaddr_reg:x3; val_offset:72045*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72045*0 + 3*207*FLEN/8, x4, x1, x2)

inst_24016:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffffffe000; valaddr_reg:x3; val_offset:72048*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72048*0 + 3*208*FLEN/8, x4, x1, x2)

inst_24017:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffffff000; valaddr_reg:x3; val_offset:72051*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72051*0 + 3*209*FLEN/8, x4, x1, x2)

inst_24018:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffffff800; valaddr_reg:x3; val_offset:72054*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72054*0 + 3*210*FLEN/8, x4, x1, x2)

inst_24019:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffffffc00; valaddr_reg:x3; val_offset:72057*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72057*0 + 3*211*FLEN/8, x4, x1, x2)

inst_24020:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffffffe00; valaddr_reg:x3; val_offset:72060*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72060*0 + 3*212*FLEN/8, x4, x1, x2)

inst_24021:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffffffff00; valaddr_reg:x3; val_offset:72063*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72063*0 + 3*213*FLEN/8, x4, x1, x2)

inst_24022:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffffffff80; valaddr_reg:x3; val_offset:72066*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72066*0 + 3*214*FLEN/8, x4, x1, x2)

inst_24023:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffffffffc0; valaddr_reg:x3; val_offset:72069*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72069*0 + 3*215*FLEN/8, x4, x1, x2)

inst_24024:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffffffffe0; valaddr_reg:x3; val_offset:72072*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72072*0 + 3*216*FLEN/8, x4, x1, x2)

inst_24025:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffffffff0; valaddr_reg:x3; val_offset:72075*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72075*0 + 3*217*FLEN/8, x4, x1, x2)

inst_24026:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffffffff8; valaddr_reg:x3; val_offset:72078*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72078*0 + 3*218*FLEN/8, x4, x1, x2)

inst_24027:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffffffffc; valaddr_reg:x3; val_offset:72081*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72081*0 + 3*219*FLEN/8, x4, x1, x2)

inst_24028:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820ffffffffffffe; valaddr_reg:x3; val_offset:72084*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72084*0 + 3*220*FLEN/8, x4, x1, x2)

inst_24029:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xa9f06400d3d17 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8a9f06400d3d17; op2val:0x8000;
op3val:0x820fffffffffffff; valaddr_reg:x3; val_offset:72087*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72087*0 + 3*221*FLEN/8, x4, x1, x2)

inst_24030:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:72090*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72090*0 + 3*222*FLEN/8, x4, x1, x2)

inst_24031:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:72093*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72093*0 + 3*223*FLEN/8, x4, x1, x2)

inst_24032:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:72096*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72096*0 + 3*224*FLEN/8, x4, x1, x2)

inst_24033:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:72099*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72099*0 + 3*225*FLEN/8, x4, x1, x2)

inst_24034:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:72102*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72102*0 + 3*226*FLEN/8, x4, x1, x2)

inst_24035:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:72105*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72105*0 + 3*227*FLEN/8, x4, x1, x2)

inst_24036:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:72108*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72108*0 + 3*228*FLEN/8, x4, x1, x2)

inst_24037:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:72111*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72111*0 + 3*229*FLEN/8, x4, x1, x2)

inst_24038:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:72114*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72114*0 + 3*230*FLEN/8, x4, x1, x2)

inst_24039:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:72117*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72117*0 + 3*231*FLEN/8, x4, x1, x2)

inst_24040:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:72120*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72120*0 + 3*232*FLEN/8, x4, x1, x2)

inst_24041:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:72123*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72123*0 + 3*233*FLEN/8, x4, x1, x2)

inst_24042:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:72126*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72126*0 + 3*234*FLEN/8, x4, x1, x2)

inst_24043:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:72129*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72129*0 + 3*235*FLEN/8, x4, x1, x2)

inst_24044:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:72132*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72132*0 + 3*236*FLEN/8, x4, x1, x2)

inst_24045:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:72135*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72135*0 + 3*237*FLEN/8, x4, x1, x2)

inst_24046:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:72138*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72138*0 + 3*238*FLEN/8, x4, x1, x2)

inst_24047:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:72141*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72141*0 + 3*239*FLEN/8, x4, x1, x2)

inst_24048:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:72144*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72144*0 + 3*240*FLEN/8, x4, x1, x2)

inst_24049:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:72147*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72147*0 + 3*241*FLEN/8, x4, x1, x2)

inst_24050:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:72150*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72150*0 + 3*242*FLEN/8, x4, x1, x2)

inst_24051:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:72153*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72153*0 + 3*243*FLEN/8, x4, x1, x2)

inst_24052:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000000000000; valaddr_reg:x3; val_offset:72156*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72156*0 + 3*244*FLEN/8, x4, x1, x2)

inst_24053:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000000000001; valaddr_reg:x3; val_offset:72159*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72159*0 + 3*245*FLEN/8, x4, x1, x2)

inst_24054:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000000000003; valaddr_reg:x3; val_offset:72162*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72162*0 + 3*246*FLEN/8, x4, x1, x2)

inst_24055:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000000000007; valaddr_reg:x3; val_offset:72165*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72165*0 + 3*247*FLEN/8, x4, x1, x2)

inst_24056:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000000000000f; valaddr_reg:x3; val_offset:72168*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72168*0 + 3*248*FLEN/8, x4, x1, x2)

inst_24057:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000000000001f; valaddr_reg:x3; val_offset:72171*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72171*0 + 3*249*FLEN/8, x4, x1, x2)

inst_24058:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000000000003f; valaddr_reg:x3; val_offset:72174*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72174*0 + 3*250*FLEN/8, x4, x1, x2)

inst_24059:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000000000007f; valaddr_reg:x3; val_offset:72177*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72177*0 + 3*251*FLEN/8, x4, x1, x2)

inst_24060:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600000000000ff; valaddr_reg:x3; val_offset:72180*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72180*0 + 3*252*FLEN/8, x4, x1, x2)

inst_24061:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600000000001ff; valaddr_reg:x3; val_offset:72183*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72183*0 + 3*253*FLEN/8, x4, x1, x2)

inst_24062:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600000000003ff; valaddr_reg:x3; val_offset:72186*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72186*0 + 3*254*FLEN/8, x4, x1, x2)

inst_24063:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600000000007ff; valaddr_reg:x3; val_offset:72189*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72189*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_24064:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000000000fff; valaddr_reg:x3; val_offset:72192*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72192*0 + 3*256*FLEN/8, x4, x1, x2)

inst_24065:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000000001fff; valaddr_reg:x3; val_offset:72195*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72195*0 + 3*257*FLEN/8, x4, x1, x2)

inst_24066:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000000003fff; valaddr_reg:x3; val_offset:72198*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72198*0 + 3*258*FLEN/8, x4, x1, x2)

inst_24067:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000000007fff; valaddr_reg:x3; val_offset:72201*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72201*0 + 3*259*FLEN/8, x4, x1, x2)

inst_24068:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000000000ffff; valaddr_reg:x3; val_offset:72204*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72204*0 + 3*260*FLEN/8, x4, x1, x2)

inst_24069:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000000001ffff; valaddr_reg:x3; val_offset:72207*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72207*0 + 3*261*FLEN/8, x4, x1, x2)

inst_24070:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000000003ffff; valaddr_reg:x3; val_offset:72210*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72210*0 + 3*262*FLEN/8, x4, x1, x2)

inst_24071:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000000007ffff; valaddr_reg:x3; val_offset:72213*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72213*0 + 3*263*FLEN/8, x4, x1, x2)

inst_24072:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600000000fffff; valaddr_reg:x3; val_offset:72216*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72216*0 + 3*264*FLEN/8, x4, x1, x2)

inst_24073:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600000001fffff; valaddr_reg:x3; val_offset:72219*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72219*0 + 3*265*FLEN/8, x4, x1, x2)

inst_24074:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600000003fffff; valaddr_reg:x3; val_offset:72222*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72222*0 + 3*266*FLEN/8, x4, x1, x2)

inst_24075:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600000007fffff; valaddr_reg:x3; val_offset:72225*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72225*0 + 3*267*FLEN/8, x4, x1, x2)

inst_24076:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000000ffffff; valaddr_reg:x3; val_offset:72228*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72228*0 + 3*268*FLEN/8, x4, x1, x2)

inst_24077:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000001ffffff; valaddr_reg:x3; val_offset:72231*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72231*0 + 3*269*FLEN/8, x4, x1, x2)

inst_24078:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000003ffffff; valaddr_reg:x3; val_offset:72234*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72234*0 + 3*270*FLEN/8, x4, x1, x2)

inst_24079:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000007ffffff; valaddr_reg:x3; val_offset:72237*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72237*0 + 3*271*FLEN/8, x4, x1, x2)

inst_24080:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000000fffffff; valaddr_reg:x3; val_offset:72240*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72240*0 + 3*272*FLEN/8, x4, x1, x2)

inst_24081:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000001fffffff; valaddr_reg:x3; val_offset:72243*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72243*0 + 3*273*FLEN/8, x4, x1, x2)

inst_24082:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000003fffffff; valaddr_reg:x3; val_offset:72246*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72246*0 + 3*274*FLEN/8, x4, x1, x2)

inst_24083:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000007fffffff; valaddr_reg:x3; val_offset:72249*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72249*0 + 3*275*FLEN/8, x4, x1, x2)

inst_24084:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600000ffffffff; valaddr_reg:x3; val_offset:72252*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72252*0 + 3*276*FLEN/8, x4, x1, x2)

inst_24085:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600001ffffffff; valaddr_reg:x3; val_offset:72255*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72255*0 + 3*277*FLEN/8, x4, x1, x2)

inst_24086:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600003ffffffff; valaddr_reg:x3; val_offset:72258*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72258*0 + 3*278*FLEN/8, x4, x1, x2)

inst_24087:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600007ffffffff; valaddr_reg:x3; val_offset:72261*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72261*0 + 3*279*FLEN/8, x4, x1, x2)

inst_24088:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60000fffffffff; valaddr_reg:x3; val_offset:72264*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72264*0 + 3*280*FLEN/8, x4, x1, x2)

inst_24089:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60001fffffffff; valaddr_reg:x3; val_offset:72267*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72267*0 + 3*281*FLEN/8, x4, x1, x2)

inst_24090:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60003fffffffff; valaddr_reg:x3; val_offset:72270*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72270*0 + 3*282*FLEN/8, x4, x1, x2)

inst_24091:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60007fffffffff; valaddr_reg:x3; val_offset:72273*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72273*0 + 3*283*FLEN/8, x4, x1, x2)

inst_24092:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6000ffffffffff; valaddr_reg:x3; val_offset:72276*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72276*0 + 3*284*FLEN/8, x4, x1, x2)

inst_24093:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6001ffffffffff; valaddr_reg:x3; val_offset:72279*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72279*0 + 3*285*FLEN/8, x4, x1, x2)

inst_24094:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6003ffffffffff; valaddr_reg:x3; val_offset:72282*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72282*0 + 3*286*FLEN/8, x4, x1, x2)

inst_24095:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6007ffffffffff; valaddr_reg:x3; val_offset:72285*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72285*0 + 3*287*FLEN/8, x4, x1, x2)

inst_24096:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x600fffffffffff; valaddr_reg:x3; val_offset:72288*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72288*0 + 3*288*FLEN/8, x4, x1, x2)

inst_24097:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x601fffffffffff; valaddr_reg:x3; val_offset:72291*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72291*0 + 3*289*FLEN/8, x4, x1, x2)

inst_24098:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x603fffffffffff; valaddr_reg:x3; val_offset:72294*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72294*0 + 3*290*FLEN/8, x4, x1, x2)

inst_24099:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x607fffffffffff; valaddr_reg:x3; val_offset:72297*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72297*0 + 3*291*FLEN/8, x4, x1, x2)

inst_24100:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x60ffffffffffff; valaddr_reg:x3; val_offset:72300*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72300*0 + 3*292*FLEN/8, x4, x1, x2)

inst_24101:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x61ffffffffffff; valaddr_reg:x3; val_offset:72303*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72303*0 + 3*293*FLEN/8, x4, x1, x2)

inst_24102:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x63ffffffffffff; valaddr_reg:x3; val_offset:72306*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72306*0 + 3*294*FLEN/8, x4, x1, x2)

inst_24103:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x67ffffffffffff; valaddr_reg:x3; val_offset:72309*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72309*0 + 3*295*FLEN/8, x4, x1, x2)

inst_24104:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x68000000000000; valaddr_reg:x3; val_offset:72312*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72312*0 + 3*296*FLEN/8, x4, x1, x2)

inst_24105:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6c000000000000; valaddr_reg:x3; val_offset:72315*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72315*0 + 3*297*FLEN/8, x4, x1, x2)

inst_24106:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6e000000000000; valaddr_reg:x3; val_offset:72318*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72318*0 + 3*298*FLEN/8, x4, x1, x2)

inst_24107:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6f000000000000; valaddr_reg:x3; val_offset:72321*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72321*0 + 3*299*FLEN/8, x4, x1, x2)

inst_24108:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6f800000000000; valaddr_reg:x3; val_offset:72324*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72324*0 + 3*300*FLEN/8, x4, x1, x2)

inst_24109:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fc00000000000; valaddr_reg:x3; val_offset:72327*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72327*0 + 3*301*FLEN/8, x4, x1, x2)

inst_24110:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fe00000000000; valaddr_reg:x3; val_offset:72330*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72330*0 + 3*302*FLEN/8, x4, x1, x2)

inst_24111:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ff00000000000; valaddr_reg:x3; val_offset:72333*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72333*0 + 3*303*FLEN/8, x4, x1, x2)

inst_24112:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ff80000000000; valaddr_reg:x3; val_offset:72336*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72336*0 + 3*304*FLEN/8, x4, x1, x2)

inst_24113:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffc0000000000; valaddr_reg:x3; val_offset:72339*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72339*0 + 3*305*FLEN/8, x4, x1, x2)

inst_24114:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffe0000000000; valaddr_reg:x3; val_offset:72342*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72342*0 + 3*306*FLEN/8, x4, x1, x2)

inst_24115:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fff0000000000; valaddr_reg:x3; val_offset:72345*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72345*0 + 3*307*FLEN/8, x4, x1, x2)

inst_24116:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fff8000000000; valaddr_reg:x3; val_offset:72348*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72348*0 + 3*308*FLEN/8, x4, x1, x2)

inst_24117:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffc000000000; valaddr_reg:x3; val_offset:72351*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72351*0 + 3*309*FLEN/8, x4, x1, x2)

inst_24118:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffe000000000; valaddr_reg:x3; val_offset:72354*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72354*0 + 3*310*FLEN/8, x4, x1, x2)

inst_24119:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffff000000000; valaddr_reg:x3; val_offset:72357*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72357*0 + 3*311*FLEN/8, x4, x1, x2)

inst_24120:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffff800000000; valaddr_reg:x3; val_offset:72360*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72360*0 + 3*312*FLEN/8, x4, x1, x2)

inst_24121:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffc00000000; valaddr_reg:x3; val_offset:72363*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72363*0 + 3*313*FLEN/8, x4, x1, x2)

inst_24122:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffe00000000; valaddr_reg:x3; val_offset:72366*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72366*0 + 3*314*FLEN/8, x4, x1, x2)

inst_24123:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffff00000000; valaddr_reg:x3; val_offset:72369*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72369*0 + 3*315*FLEN/8, x4, x1, x2)

inst_24124:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffff80000000; valaddr_reg:x3; val_offset:72372*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72372*0 + 3*316*FLEN/8, x4, x1, x2)

inst_24125:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffc0000000; valaddr_reg:x3; val_offset:72375*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72375*0 + 3*317*FLEN/8, x4, x1, x2)

inst_24126:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffe0000000; valaddr_reg:x3; val_offset:72378*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72378*0 + 3*318*FLEN/8, x4, x1, x2)

inst_24127:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffff0000000; valaddr_reg:x3; val_offset:72381*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72381*0 + 3*319*FLEN/8, x4, x1, x2)

inst_24128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffff8000000; valaddr_reg:x3; val_offset:72384*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72384*0 + 3*320*FLEN/8, x4, x1, x2)

inst_24129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffc000000; valaddr_reg:x3; val_offset:72387*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72387*0 + 3*321*FLEN/8, x4, x1, x2)

inst_24130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffe000000; valaddr_reg:x3; val_offset:72390*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72390*0 + 3*322*FLEN/8, x4, x1, x2)

inst_24131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffff000000; valaddr_reg:x3; val_offset:72393*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72393*0 + 3*323*FLEN/8, x4, x1, x2)

inst_24132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffff800000; valaddr_reg:x3; val_offset:72396*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72396*0 + 3*324*FLEN/8, x4, x1, x2)

inst_24133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffffc00000; valaddr_reg:x3; val_offset:72399*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72399*0 + 3*325*FLEN/8, x4, x1, x2)

inst_24134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffffe00000; valaddr_reg:x3; val_offset:72402*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72402*0 + 3*326*FLEN/8, x4, x1, x2)

inst_24135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffff00000; valaddr_reg:x3; val_offset:72405*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72405*0 + 3*327*FLEN/8, x4, x1, x2)

inst_24136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffff80000; valaddr_reg:x3; val_offset:72408*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72408*0 + 3*328*FLEN/8, x4, x1, x2)

inst_24137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffffc0000; valaddr_reg:x3; val_offset:72411*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72411*0 + 3*329*FLEN/8, x4, x1, x2)

inst_24138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffffe0000; valaddr_reg:x3; val_offset:72414*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72414*0 + 3*330*FLEN/8, x4, x1, x2)

inst_24139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffffff0000; valaddr_reg:x3; val_offset:72417*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72417*0 + 3*331*FLEN/8, x4, x1, x2)

inst_24140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffffff8000; valaddr_reg:x3; val_offset:72420*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72420*0 + 3*332*FLEN/8, x4, x1, x2)

inst_24141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffffffc000; valaddr_reg:x3; val_offset:72423*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72423*0 + 3*333*FLEN/8, x4, x1, x2)

inst_24142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffffffe000; valaddr_reg:x3; val_offset:72426*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72426*0 + 3*334*FLEN/8, x4, x1, x2)

inst_24143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffffff000; valaddr_reg:x3; val_offset:72429*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72429*0 + 3*335*FLEN/8, x4, x1, x2)

inst_24144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffffff800; valaddr_reg:x3; val_offset:72432*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72432*0 + 3*336*FLEN/8, x4, x1, x2)

inst_24145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffffffc00; valaddr_reg:x3; val_offset:72435*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72435*0 + 3*337*FLEN/8, x4, x1, x2)

inst_24146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffffffe00; valaddr_reg:x3; val_offset:72438*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72438*0 + 3*338*FLEN/8, x4, x1, x2)

inst_24147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffffffff00; valaddr_reg:x3; val_offset:72441*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72441*0 + 3*339*FLEN/8, x4, x1, x2)

inst_24148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffffffff80; valaddr_reg:x3; val_offset:72444*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72444*0 + 3*340*FLEN/8, x4, x1, x2)

inst_24149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffffffffc0; valaddr_reg:x3; val_offset:72447*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72447*0 + 3*341*FLEN/8, x4, x1, x2)

inst_24150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffffffffe0; valaddr_reg:x3; val_offset:72450*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72450*0 + 3*342*FLEN/8, x4, x1, x2)

inst_24151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffffffff0; valaddr_reg:x3; val_offset:72453*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72453*0 + 3*343*FLEN/8, x4, x1, x2)

inst_24152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffffffff8; valaddr_reg:x3; val_offset:72456*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72456*0 + 3*344*FLEN/8, x4, x1, x2)

inst_24153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffffffffc; valaddr_reg:x3; val_offset:72459*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72459*0 + 3*345*FLEN/8, x4, x1, x2)

inst_24154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6ffffffffffffe; valaddr_reg:x3; val_offset:72462*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72462*0 + 3*346*FLEN/8, x4, x1, x2)

inst_24155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xabc1fbe90f79b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8abc1fbe90f79b; op2val:0x0;
op3val:0x6fffffffffffff; valaddr_reg:x3; val_offset:72465*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72465*0 + 3*347*FLEN/8, x4, x1, x2)

inst_24156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:72468*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72468*0 + 3*348*FLEN/8, x4, x1, x2)

inst_24157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:72471*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72471*0 + 3*349*FLEN/8, x4, x1, x2)

inst_24158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:72474*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72474*0 + 3*350*FLEN/8, x4, x1, x2)

inst_24159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:72477*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72477*0 + 3*351*FLEN/8, x4, x1, x2)

inst_24160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:72480*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72480*0 + 3*352*FLEN/8, x4, x1, x2)

inst_24161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:72483*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72483*0 + 3*353*FLEN/8, x4, x1, x2)

inst_24162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:72486*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72486*0 + 3*354*FLEN/8, x4, x1, x2)

inst_24163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:72489*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72489*0 + 3*355*FLEN/8, x4, x1, x2)

inst_24164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:72492*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72492*0 + 3*356*FLEN/8, x4, x1, x2)

inst_24165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:72495*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72495*0 + 3*357*FLEN/8, x4, x1, x2)

inst_24166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:72498*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72498*0 + 3*358*FLEN/8, x4, x1, x2)

inst_24167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:72501*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72501*0 + 3*359*FLEN/8, x4, x1, x2)

inst_24168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:72504*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72504*0 + 3*360*FLEN/8, x4, x1, x2)

inst_24169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:72507*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72507*0 + 3*361*FLEN/8, x4, x1, x2)

inst_24170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:72510*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72510*0 + 3*362*FLEN/8, x4, x1, x2)

inst_24171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:72513*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72513*0 + 3*363*FLEN/8, x4, x1, x2)

inst_24172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:72516*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72516*0 + 3*364*FLEN/8, x4, x1, x2)

inst_24173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:72519*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72519*0 + 3*365*FLEN/8, x4, x1, x2)

inst_24174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:72522*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72522*0 + 3*366*FLEN/8, x4, x1, x2)

inst_24175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:72525*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72525*0 + 3*367*FLEN/8, x4, x1, x2)

inst_24176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:72528*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72528*0 + 3*368*FLEN/8, x4, x1, x2)

inst_24177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:72531*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72531*0 + 3*369*FLEN/8, x4, x1, x2)

inst_24178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000000000000; valaddr_reg:x3; val_offset:72534*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72534*0 + 3*370*FLEN/8, x4, x1, x2)

inst_24179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000000000001; valaddr_reg:x3; val_offset:72537*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72537*0 + 3*371*FLEN/8, x4, x1, x2)

inst_24180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000000000003; valaddr_reg:x3; val_offset:72540*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72540*0 + 3*372*FLEN/8, x4, x1, x2)

inst_24181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000000000007; valaddr_reg:x3; val_offset:72543*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72543*0 + 3*373*FLEN/8, x4, x1, x2)

inst_24182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000000000000f; valaddr_reg:x3; val_offset:72546*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72546*0 + 3*374*FLEN/8, x4, x1, x2)

inst_24183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000000000001f; valaddr_reg:x3; val_offset:72549*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72549*0 + 3*375*FLEN/8, x4, x1, x2)

inst_24184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000000000003f; valaddr_reg:x3; val_offset:72552*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72552*0 + 3*376*FLEN/8, x4, x1, x2)

inst_24185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000000000007f; valaddr_reg:x3; val_offset:72555*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72555*0 + 3*377*FLEN/8, x4, x1, x2)

inst_24186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00000000000ff; valaddr_reg:x3; val_offset:72558*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72558*0 + 3*378*FLEN/8, x4, x1, x2)

inst_24187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00000000001ff; valaddr_reg:x3; val_offset:72561*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72561*0 + 3*379*FLEN/8, x4, x1, x2)

inst_24188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00000000003ff; valaddr_reg:x3; val_offset:72564*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72564*0 + 3*380*FLEN/8, x4, x1, x2)

inst_24189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00000000007ff; valaddr_reg:x3; val_offset:72567*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72567*0 + 3*381*FLEN/8, x4, x1, x2)

inst_24190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000000000fff; valaddr_reg:x3; val_offset:72570*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72570*0 + 3*382*FLEN/8, x4, x1, x2)

inst_24191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000000001fff; valaddr_reg:x3; val_offset:72573*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72573*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_24192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000000003fff; valaddr_reg:x3; val_offset:72576*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72576*0 + 3*384*FLEN/8, x4, x1, x2)

inst_24193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000000007fff; valaddr_reg:x3; val_offset:72579*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72579*0 + 3*385*FLEN/8, x4, x1, x2)

inst_24194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000000000ffff; valaddr_reg:x3; val_offset:72582*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72582*0 + 3*386*FLEN/8, x4, x1, x2)

inst_24195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000000001ffff; valaddr_reg:x3; val_offset:72585*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72585*0 + 3*387*FLEN/8, x4, x1, x2)

inst_24196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000000003ffff; valaddr_reg:x3; val_offset:72588*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72588*0 + 3*388*FLEN/8, x4, x1, x2)

inst_24197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000000007ffff; valaddr_reg:x3; val_offset:72591*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72591*0 + 3*389*FLEN/8, x4, x1, x2)

inst_24198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00000000fffff; valaddr_reg:x3; val_offset:72594*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72594*0 + 3*390*FLEN/8, x4, x1, x2)

inst_24199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00000001fffff; valaddr_reg:x3; val_offset:72597*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72597*0 + 3*391*FLEN/8, x4, x1, x2)

inst_24200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00000003fffff; valaddr_reg:x3; val_offset:72600*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72600*0 + 3*392*FLEN/8, x4, x1, x2)

inst_24201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00000007fffff; valaddr_reg:x3; val_offset:72603*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72603*0 + 3*393*FLEN/8, x4, x1, x2)

inst_24202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000000ffffff; valaddr_reg:x3; val_offset:72606*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72606*0 + 3*394*FLEN/8, x4, x1, x2)

inst_24203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000001ffffff; valaddr_reg:x3; val_offset:72609*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72609*0 + 3*395*FLEN/8, x4, x1, x2)

inst_24204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000003ffffff; valaddr_reg:x3; val_offset:72612*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72612*0 + 3*396*FLEN/8, x4, x1, x2)

inst_24205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000007ffffff; valaddr_reg:x3; val_offset:72615*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72615*0 + 3*397*FLEN/8, x4, x1, x2)

inst_24206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000000fffffff; valaddr_reg:x3; val_offset:72618*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72618*0 + 3*398*FLEN/8, x4, x1, x2)

inst_24207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000001fffffff; valaddr_reg:x3; val_offset:72621*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72621*0 + 3*399*FLEN/8, x4, x1, x2)

inst_24208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000003fffffff; valaddr_reg:x3; val_offset:72624*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72624*0 + 3*400*FLEN/8, x4, x1, x2)

inst_24209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000007fffffff; valaddr_reg:x3; val_offset:72627*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72627*0 + 3*401*FLEN/8, x4, x1, x2)

inst_24210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00000ffffffff; valaddr_reg:x3; val_offset:72630*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72630*0 + 3*402*FLEN/8, x4, x1, x2)

inst_24211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00001ffffffff; valaddr_reg:x3; val_offset:72633*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72633*0 + 3*403*FLEN/8, x4, x1, x2)

inst_24212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00003ffffffff; valaddr_reg:x3; val_offset:72636*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72636*0 + 3*404*FLEN/8, x4, x1, x2)

inst_24213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00007ffffffff; valaddr_reg:x3; val_offset:72639*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72639*0 + 3*405*FLEN/8, x4, x1, x2)

inst_24214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0000fffffffff; valaddr_reg:x3; val_offset:72642*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72642*0 + 3*406*FLEN/8, x4, x1, x2)

inst_24215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0001fffffffff; valaddr_reg:x3; val_offset:72645*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72645*0 + 3*407*FLEN/8, x4, x1, x2)

inst_24216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0003fffffffff; valaddr_reg:x3; val_offset:72648*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72648*0 + 3*408*FLEN/8, x4, x1, x2)

inst_24217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0007fffffffff; valaddr_reg:x3; val_offset:72651*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72651*0 + 3*409*FLEN/8, x4, x1, x2)

inst_24218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b000ffffffffff; valaddr_reg:x3; val_offset:72654*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72654*0 + 3*410*FLEN/8, x4, x1, x2)

inst_24219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b001ffffffffff; valaddr_reg:x3; val_offset:72657*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72657*0 + 3*411*FLEN/8, x4, x1, x2)

inst_24220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b003ffffffffff; valaddr_reg:x3; val_offset:72660*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72660*0 + 3*412*FLEN/8, x4, x1, x2)

inst_24221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b007ffffffffff; valaddr_reg:x3; val_offset:72663*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72663*0 + 3*413*FLEN/8, x4, x1, x2)

inst_24222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b00fffffffffff; valaddr_reg:x3; val_offset:72666*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72666*0 + 3*414*FLEN/8, x4, x1, x2)

inst_24223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b01fffffffffff; valaddr_reg:x3; val_offset:72669*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72669*0 + 3*415*FLEN/8, x4, x1, x2)

inst_24224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b03fffffffffff; valaddr_reg:x3; val_offset:72672*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72672*0 + 3*416*FLEN/8, x4, x1, x2)

inst_24225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b07fffffffffff; valaddr_reg:x3; val_offset:72675*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72675*0 + 3*417*FLEN/8, x4, x1, x2)

inst_24226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b0ffffffffffff; valaddr_reg:x3; val_offset:72678*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72678*0 + 3*418*FLEN/8, x4, x1, x2)

inst_24227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b1ffffffffffff; valaddr_reg:x3; val_offset:72681*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72681*0 + 3*419*FLEN/8, x4, x1, x2)

inst_24228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b3ffffffffffff; valaddr_reg:x3; val_offset:72684*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72684*0 + 3*420*FLEN/8, x4, x1, x2)

inst_24229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b7ffffffffffff; valaddr_reg:x3; val_offset:72687*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72687*0 + 3*421*FLEN/8, x4, x1, x2)

inst_24230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83b8000000000000; valaddr_reg:x3; val_offset:72690*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72690*0 + 3*422*FLEN/8, x4, x1, x2)

inst_24231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bc000000000000; valaddr_reg:x3; val_offset:72693*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72693*0 + 3*423*FLEN/8, x4, x1, x2)

inst_24232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83be000000000000; valaddr_reg:x3; val_offset:72696*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72696*0 + 3*424*FLEN/8, x4, x1, x2)

inst_24233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bf000000000000; valaddr_reg:x3; val_offset:72699*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72699*0 + 3*425*FLEN/8, x4, x1, x2)

inst_24234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bf800000000000; valaddr_reg:x3; val_offset:72702*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72702*0 + 3*426*FLEN/8, x4, x1, x2)

inst_24235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfc00000000000; valaddr_reg:x3; val_offset:72705*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72705*0 + 3*427*FLEN/8, x4, x1, x2)

inst_24236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfe00000000000; valaddr_reg:x3; val_offset:72708*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72708*0 + 3*428*FLEN/8, x4, x1, x2)

inst_24237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bff00000000000; valaddr_reg:x3; val_offset:72711*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72711*0 + 3*429*FLEN/8, x4, x1, x2)

inst_24238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bff80000000000; valaddr_reg:x3; val_offset:72714*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72714*0 + 3*430*FLEN/8, x4, x1, x2)

inst_24239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffc0000000000; valaddr_reg:x3; val_offset:72717*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72717*0 + 3*431*FLEN/8, x4, x1, x2)

inst_24240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffe0000000000; valaddr_reg:x3; val_offset:72720*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72720*0 + 3*432*FLEN/8, x4, x1, x2)

inst_24241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfff0000000000; valaddr_reg:x3; val_offset:72723*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72723*0 + 3*433*FLEN/8, x4, x1, x2)

inst_24242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfff8000000000; valaddr_reg:x3; val_offset:72726*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72726*0 + 3*434*FLEN/8, x4, x1, x2)

inst_24243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffc000000000; valaddr_reg:x3; val_offset:72729*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72729*0 + 3*435*FLEN/8, x4, x1, x2)

inst_24244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffe000000000; valaddr_reg:x3; val_offset:72732*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72732*0 + 3*436*FLEN/8, x4, x1, x2)

inst_24245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffff000000000; valaddr_reg:x3; val_offset:72735*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72735*0 + 3*437*FLEN/8, x4, x1, x2)

inst_24246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffff800000000; valaddr_reg:x3; val_offset:72738*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72738*0 + 3*438*FLEN/8, x4, x1, x2)

inst_24247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffc00000000; valaddr_reg:x3; val_offset:72741*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72741*0 + 3*439*FLEN/8, x4, x1, x2)

inst_24248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffe00000000; valaddr_reg:x3; val_offset:72744*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72744*0 + 3*440*FLEN/8, x4, x1, x2)

inst_24249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffff00000000; valaddr_reg:x3; val_offset:72747*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72747*0 + 3*441*FLEN/8, x4, x1, x2)

inst_24250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffff80000000; valaddr_reg:x3; val_offset:72750*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72750*0 + 3*442*FLEN/8, x4, x1, x2)

inst_24251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffc0000000; valaddr_reg:x3; val_offset:72753*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72753*0 + 3*443*FLEN/8, x4, x1, x2)

inst_24252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffe0000000; valaddr_reg:x3; val_offset:72756*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72756*0 + 3*444*FLEN/8, x4, x1, x2)

inst_24253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffff0000000; valaddr_reg:x3; val_offset:72759*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72759*0 + 3*445*FLEN/8, x4, x1, x2)

inst_24254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffff8000000; valaddr_reg:x3; val_offset:72762*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72762*0 + 3*446*FLEN/8, x4, x1, x2)

inst_24255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffc000000; valaddr_reg:x3; val_offset:72765*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72765*0 + 3*447*FLEN/8, x4, x1, x2)

inst_24256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffe000000; valaddr_reg:x3; val_offset:72768*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72768*0 + 3*448*FLEN/8, x4, x1, x2)

inst_24257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffff000000; valaddr_reg:x3; val_offset:72771*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72771*0 + 3*449*FLEN/8, x4, x1, x2)

inst_24258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffff800000; valaddr_reg:x3; val_offset:72774*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72774*0 + 3*450*FLEN/8, x4, x1, x2)

inst_24259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffffc00000; valaddr_reg:x3; val_offset:72777*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72777*0 + 3*451*FLEN/8, x4, x1, x2)

inst_24260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffffe00000; valaddr_reg:x3; val_offset:72780*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72780*0 + 3*452*FLEN/8, x4, x1, x2)

inst_24261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffff00000; valaddr_reg:x3; val_offset:72783*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72783*0 + 3*453*FLEN/8, x4, x1, x2)

inst_24262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffff80000; valaddr_reg:x3; val_offset:72786*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72786*0 + 3*454*FLEN/8, x4, x1, x2)

inst_24263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffffc0000; valaddr_reg:x3; val_offset:72789*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72789*0 + 3*455*FLEN/8, x4, x1, x2)

inst_24264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffffe0000; valaddr_reg:x3; val_offset:72792*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72792*0 + 3*456*FLEN/8, x4, x1, x2)

inst_24265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffffff0000; valaddr_reg:x3; val_offset:72795*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72795*0 + 3*457*FLEN/8, x4, x1, x2)

inst_24266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffffff8000; valaddr_reg:x3; val_offset:72798*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72798*0 + 3*458*FLEN/8, x4, x1, x2)

inst_24267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffffffc000; valaddr_reg:x3; val_offset:72801*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72801*0 + 3*459*FLEN/8, x4, x1, x2)

inst_24268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffffffe000; valaddr_reg:x3; val_offset:72804*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72804*0 + 3*460*FLEN/8, x4, x1, x2)

inst_24269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffffff000; valaddr_reg:x3; val_offset:72807*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72807*0 + 3*461*FLEN/8, x4, x1, x2)

inst_24270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffffff800; valaddr_reg:x3; val_offset:72810*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72810*0 + 3*462*FLEN/8, x4, x1, x2)

inst_24271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffffffc00; valaddr_reg:x3; val_offset:72813*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72813*0 + 3*463*FLEN/8, x4, x1, x2)

inst_24272:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffffffe00; valaddr_reg:x3; val_offset:72816*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72816*0 + 3*464*FLEN/8, x4, x1, x2)

inst_24273:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffffffff00; valaddr_reg:x3; val_offset:72819*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72819*0 + 3*465*FLEN/8, x4, x1, x2)

inst_24274:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffffffff80; valaddr_reg:x3; val_offset:72822*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72822*0 + 3*466*FLEN/8, x4, x1, x2)

inst_24275:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffffffffc0; valaddr_reg:x3; val_offset:72825*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72825*0 + 3*467*FLEN/8, x4, x1, x2)

inst_24276:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffffffffe0; valaddr_reg:x3; val_offset:72828*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72828*0 + 3*468*FLEN/8, x4, x1, x2)

inst_24277:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffffffff0; valaddr_reg:x3; val_offset:72831*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72831*0 + 3*469*FLEN/8, x4, x1, x2)

inst_24278:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffffffff8; valaddr_reg:x3; val_offset:72834*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72834*0 + 3*470*FLEN/8, x4, x1, x2)

inst_24279:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffffffffc; valaddr_reg:x3; val_offset:72837*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72837*0 + 3*471*FLEN/8, x4, x1, x2)

inst_24280:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bffffffffffffe; valaddr_reg:x3; val_offset:72840*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72840*0 + 3*472*FLEN/8, x4, x1, x2)

inst_24281:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xaf42bcba26d83 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8af42bcba26d83; op2val:0x8000;
op3val:0x83bfffffffffffff; valaddr_reg:x3; val_offset:72843*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72843*0 + 3*473*FLEN/8, x4, x1, x2)

inst_24282:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000000000000; valaddr_reg:x3; val_offset:72846*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72846*0 + 3*474*FLEN/8, x4, x1, x2)

inst_24283:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000000000001; valaddr_reg:x3; val_offset:72849*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72849*0 + 3*475*FLEN/8, x4, x1, x2)

inst_24284:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000000000003; valaddr_reg:x3; val_offset:72852*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72852*0 + 3*476*FLEN/8, x4, x1, x2)

inst_24285:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000000000007; valaddr_reg:x3; val_offset:72855*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72855*0 + 3*477*FLEN/8, x4, x1, x2)

inst_24286:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000000000000f; valaddr_reg:x3; val_offset:72858*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72858*0 + 3*478*FLEN/8, x4, x1, x2)

inst_24287:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000000000001f; valaddr_reg:x3; val_offset:72861*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72861*0 + 3*479*FLEN/8, x4, x1, x2)

inst_24288:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000000000003f; valaddr_reg:x3; val_offset:72864*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72864*0 + 3*480*FLEN/8, x4, x1, x2)

inst_24289:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000000000007f; valaddr_reg:x3; val_offset:72867*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72867*0 + 3*481*FLEN/8, x4, x1, x2)

inst_24290:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900000000000ff; valaddr_reg:x3; val_offset:72870*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72870*0 + 3*482*FLEN/8, x4, x1, x2)

inst_24291:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900000000001ff; valaddr_reg:x3; val_offset:72873*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72873*0 + 3*483*FLEN/8, x4, x1, x2)

inst_24292:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900000000003ff; valaddr_reg:x3; val_offset:72876*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72876*0 + 3*484*FLEN/8, x4, x1, x2)

inst_24293:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900000000007ff; valaddr_reg:x3; val_offset:72879*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72879*0 + 3*485*FLEN/8, x4, x1, x2)

inst_24294:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000000000fff; valaddr_reg:x3; val_offset:72882*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72882*0 + 3*486*FLEN/8, x4, x1, x2)

inst_24295:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000000001fff; valaddr_reg:x3; val_offset:72885*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72885*0 + 3*487*FLEN/8, x4, x1, x2)

inst_24296:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000000003fff; valaddr_reg:x3; val_offset:72888*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72888*0 + 3*488*FLEN/8, x4, x1, x2)

inst_24297:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000000007fff; valaddr_reg:x3; val_offset:72891*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72891*0 + 3*489*FLEN/8, x4, x1, x2)

inst_24298:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000000000ffff; valaddr_reg:x3; val_offset:72894*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72894*0 + 3*490*FLEN/8, x4, x1, x2)

inst_24299:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000000001ffff; valaddr_reg:x3; val_offset:72897*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72897*0 + 3*491*FLEN/8, x4, x1, x2)

inst_24300:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000000003ffff; valaddr_reg:x3; val_offset:72900*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72900*0 + 3*492*FLEN/8, x4, x1, x2)

inst_24301:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000000007ffff; valaddr_reg:x3; val_offset:72903*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72903*0 + 3*493*FLEN/8, x4, x1, x2)

inst_24302:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900000000fffff; valaddr_reg:x3; val_offset:72906*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72906*0 + 3*494*FLEN/8, x4, x1, x2)

inst_24303:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900000001fffff; valaddr_reg:x3; val_offset:72909*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72909*0 + 3*495*FLEN/8, x4, x1, x2)

inst_24304:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900000003fffff; valaddr_reg:x3; val_offset:72912*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72912*0 + 3*496*FLEN/8, x4, x1, x2)

inst_24305:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900000007fffff; valaddr_reg:x3; val_offset:72915*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72915*0 + 3*497*FLEN/8, x4, x1, x2)

inst_24306:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000000ffffff; valaddr_reg:x3; val_offset:72918*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72918*0 + 3*498*FLEN/8, x4, x1, x2)

inst_24307:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000001ffffff; valaddr_reg:x3; val_offset:72921*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72921*0 + 3*499*FLEN/8, x4, x1, x2)

inst_24308:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000003ffffff; valaddr_reg:x3; val_offset:72924*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72924*0 + 3*500*FLEN/8, x4, x1, x2)

inst_24309:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000007ffffff; valaddr_reg:x3; val_offset:72927*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72927*0 + 3*501*FLEN/8, x4, x1, x2)

inst_24310:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000000fffffff; valaddr_reg:x3; val_offset:72930*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72930*0 + 3*502*FLEN/8, x4, x1, x2)

inst_24311:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000001fffffff; valaddr_reg:x3; val_offset:72933*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72933*0 + 3*503*FLEN/8, x4, x1, x2)

inst_24312:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000003fffffff; valaddr_reg:x3; val_offset:72936*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72936*0 + 3*504*FLEN/8, x4, x1, x2)

inst_24313:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000007fffffff; valaddr_reg:x3; val_offset:72939*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72939*0 + 3*505*FLEN/8, x4, x1, x2)

inst_24314:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900000ffffffff; valaddr_reg:x3; val_offset:72942*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72942*0 + 3*506*FLEN/8, x4, x1, x2)

inst_24315:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900001ffffffff; valaddr_reg:x3; val_offset:72945*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72945*0 + 3*507*FLEN/8, x4, x1, x2)

inst_24316:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900003ffffffff; valaddr_reg:x3; val_offset:72948*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72948*0 + 3*508*FLEN/8, x4, x1, x2)

inst_24317:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900007ffffffff; valaddr_reg:x3; val_offset:72951*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72951*0 + 3*509*FLEN/8, x4, x1, x2)

inst_24318:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90000fffffffff; valaddr_reg:x3; val_offset:72954*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72954*0 + 3*510*FLEN/8, x4, x1, x2)

inst_24319:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90001fffffffff; valaddr_reg:x3; val_offset:72957*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72957*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_24320:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90003fffffffff; valaddr_reg:x3; val_offset:72960*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72960*0 + 3*512*FLEN/8, x4, x1, x2)

inst_24321:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90007fffffffff; valaddr_reg:x3; val_offset:72963*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72963*0 + 3*513*FLEN/8, x4, x1, x2)

inst_24322:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9000ffffffffff; valaddr_reg:x3; val_offset:72966*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72966*0 + 3*514*FLEN/8, x4, x1, x2)

inst_24323:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9001ffffffffff; valaddr_reg:x3; val_offset:72969*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72969*0 + 3*515*FLEN/8, x4, x1, x2)

inst_24324:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9003ffffffffff; valaddr_reg:x3; val_offset:72972*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72972*0 + 3*516*FLEN/8, x4, x1, x2)

inst_24325:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9007ffffffffff; valaddr_reg:x3; val_offset:72975*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72975*0 + 3*517*FLEN/8, x4, x1, x2)

inst_24326:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb900fffffffffff; valaddr_reg:x3; val_offset:72978*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72978*0 + 3*518*FLEN/8, x4, x1, x2)

inst_24327:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb901fffffffffff; valaddr_reg:x3; val_offset:72981*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72981*0 + 3*519*FLEN/8, x4, x1, x2)

inst_24328:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb903fffffffffff; valaddr_reg:x3; val_offset:72984*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72984*0 + 3*520*FLEN/8, x4, x1, x2)

inst_24329:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb907fffffffffff; valaddr_reg:x3; val_offset:72987*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72987*0 + 3*521*FLEN/8, x4, x1, x2)

inst_24330:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb90ffffffffffff; valaddr_reg:x3; val_offset:72990*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72990*0 + 3*522*FLEN/8, x4, x1, x2)

inst_24331:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb91ffffffffffff; valaddr_reg:x3; val_offset:72993*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72993*0 + 3*523*FLEN/8, x4, x1, x2)

inst_24332:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb93ffffffffffff; valaddr_reg:x3; val_offset:72996*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72996*0 + 3*524*FLEN/8, x4, x1, x2)

inst_24333:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb97ffffffffffff; valaddr_reg:x3; val_offset:72999*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 72999*0 + 3*525*FLEN/8, x4, x1, x2)

inst_24334:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb98000000000000; valaddr_reg:x3; val_offset:73002*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73002*0 + 3*526*FLEN/8, x4, x1, x2)

inst_24335:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9c000000000000; valaddr_reg:x3; val_offset:73005*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73005*0 + 3*527*FLEN/8, x4, x1, x2)

inst_24336:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9e000000000000; valaddr_reg:x3; val_offset:73008*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73008*0 + 3*528*FLEN/8, x4, x1, x2)

inst_24337:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9f000000000000; valaddr_reg:x3; val_offset:73011*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73011*0 + 3*529*FLEN/8, x4, x1, x2)

inst_24338:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9f800000000000; valaddr_reg:x3; val_offset:73014*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73014*0 + 3*530*FLEN/8, x4, x1, x2)

inst_24339:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fc00000000000; valaddr_reg:x3; val_offset:73017*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73017*0 + 3*531*FLEN/8, x4, x1, x2)

inst_24340:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fe00000000000; valaddr_reg:x3; val_offset:73020*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73020*0 + 3*532*FLEN/8, x4, x1, x2)

inst_24341:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ff00000000000; valaddr_reg:x3; val_offset:73023*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73023*0 + 3*533*FLEN/8, x4, x1, x2)

inst_24342:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ff80000000000; valaddr_reg:x3; val_offset:73026*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73026*0 + 3*534*FLEN/8, x4, x1, x2)

inst_24343:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffc0000000000; valaddr_reg:x3; val_offset:73029*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73029*0 + 3*535*FLEN/8, x4, x1, x2)

inst_24344:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffe0000000000; valaddr_reg:x3; val_offset:73032*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73032*0 + 3*536*FLEN/8, x4, x1, x2)

inst_24345:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fff0000000000; valaddr_reg:x3; val_offset:73035*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73035*0 + 3*537*FLEN/8, x4, x1, x2)

inst_24346:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fff8000000000; valaddr_reg:x3; val_offset:73038*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73038*0 + 3*538*FLEN/8, x4, x1, x2)

inst_24347:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffc000000000; valaddr_reg:x3; val_offset:73041*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73041*0 + 3*539*FLEN/8, x4, x1, x2)

inst_24348:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffe000000000; valaddr_reg:x3; val_offset:73044*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73044*0 + 3*540*FLEN/8, x4, x1, x2)

inst_24349:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffff000000000; valaddr_reg:x3; val_offset:73047*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73047*0 + 3*541*FLEN/8, x4, x1, x2)

inst_24350:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffff800000000; valaddr_reg:x3; val_offset:73050*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73050*0 + 3*542*FLEN/8, x4, x1, x2)

inst_24351:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffc00000000; valaddr_reg:x3; val_offset:73053*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73053*0 + 3*543*FLEN/8, x4, x1, x2)

inst_24352:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffe00000000; valaddr_reg:x3; val_offset:73056*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73056*0 + 3*544*FLEN/8, x4, x1, x2)

inst_24353:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffff00000000; valaddr_reg:x3; val_offset:73059*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73059*0 + 3*545*FLEN/8, x4, x1, x2)

inst_24354:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffff80000000; valaddr_reg:x3; val_offset:73062*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73062*0 + 3*546*FLEN/8, x4, x1, x2)

inst_24355:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffc0000000; valaddr_reg:x3; val_offset:73065*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73065*0 + 3*547*FLEN/8, x4, x1, x2)

inst_24356:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffe0000000; valaddr_reg:x3; val_offset:73068*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73068*0 + 3*548*FLEN/8, x4, x1, x2)

inst_24357:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffff0000000; valaddr_reg:x3; val_offset:73071*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73071*0 + 3*549*FLEN/8, x4, x1, x2)

inst_24358:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffff8000000; valaddr_reg:x3; val_offset:73074*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73074*0 + 3*550*FLEN/8, x4, x1, x2)

inst_24359:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffc000000; valaddr_reg:x3; val_offset:73077*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73077*0 + 3*551*FLEN/8, x4, x1, x2)

inst_24360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffe000000; valaddr_reg:x3; val_offset:73080*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73080*0 + 3*552*FLEN/8, x4, x1, x2)

inst_24361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffff000000; valaddr_reg:x3; val_offset:73083*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73083*0 + 3*553*FLEN/8, x4, x1, x2)

inst_24362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffff800000; valaddr_reg:x3; val_offset:73086*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73086*0 + 3*554*FLEN/8, x4, x1, x2)

inst_24363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffffc00000; valaddr_reg:x3; val_offset:73089*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73089*0 + 3*555*FLEN/8, x4, x1, x2)

inst_24364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffffe00000; valaddr_reg:x3; val_offset:73092*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73092*0 + 3*556*FLEN/8, x4, x1, x2)

inst_24365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffff00000; valaddr_reg:x3; val_offset:73095*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73095*0 + 3*557*FLEN/8, x4, x1, x2)

inst_24366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffff80000; valaddr_reg:x3; val_offset:73098*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73098*0 + 3*558*FLEN/8, x4, x1, x2)

inst_24367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffffc0000; valaddr_reg:x3; val_offset:73101*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73101*0 + 3*559*FLEN/8, x4, x1, x2)

inst_24368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffffe0000; valaddr_reg:x3; val_offset:73104*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73104*0 + 3*560*FLEN/8, x4, x1, x2)

inst_24369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffffff0000; valaddr_reg:x3; val_offset:73107*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73107*0 + 3*561*FLEN/8, x4, x1, x2)

inst_24370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffffff8000; valaddr_reg:x3; val_offset:73110*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73110*0 + 3*562*FLEN/8, x4, x1, x2)

inst_24371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffffffc000; valaddr_reg:x3; val_offset:73113*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73113*0 + 3*563*FLEN/8, x4, x1, x2)

inst_24372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffffffe000; valaddr_reg:x3; val_offset:73116*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73116*0 + 3*564*FLEN/8, x4, x1, x2)

inst_24373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffffff000; valaddr_reg:x3; val_offset:73119*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73119*0 + 3*565*FLEN/8, x4, x1, x2)

inst_24374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffffff800; valaddr_reg:x3; val_offset:73122*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73122*0 + 3*566*FLEN/8, x4, x1, x2)

inst_24375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffffffc00; valaddr_reg:x3; val_offset:73125*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73125*0 + 3*567*FLEN/8, x4, x1, x2)

inst_24376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffffffe00; valaddr_reg:x3; val_offset:73128*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73128*0 + 3*568*FLEN/8, x4, x1, x2)

inst_24377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffffffff00; valaddr_reg:x3; val_offset:73131*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73131*0 + 3*569*FLEN/8, x4, x1, x2)

inst_24378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffffffff80; valaddr_reg:x3; val_offset:73134*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73134*0 + 3*570*FLEN/8, x4, x1, x2)

inst_24379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffffffffc0; valaddr_reg:x3; val_offset:73137*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73137*0 + 3*571*FLEN/8, x4, x1, x2)

inst_24380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffffffffe0; valaddr_reg:x3; val_offset:73140*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73140*0 + 3*572*FLEN/8, x4, x1, x2)

inst_24381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffffffff0; valaddr_reg:x3; val_offset:73143*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73143*0 + 3*573*FLEN/8, x4, x1, x2)

inst_24382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffffffff8; valaddr_reg:x3; val_offset:73146*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73146*0 + 3*574*FLEN/8, x4, x1, x2)

inst_24383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffffffffc; valaddr_reg:x3; val_offset:73149*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73149*0 + 3*575*FLEN/8, x4, x1, x2)

inst_24384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9ffffffffffffe; valaddr_reg:x3; val_offset:73152*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73152*0 + 3*576*FLEN/8, x4, x1, x2)

inst_24385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3b9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbb9fffffffffffff; valaddr_reg:x3; val_offset:73155*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73155*0 + 3*577*FLEN/8, x4, x1, x2)

inst_24386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:73158*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73158*0 + 3*578*FLEN/8, x4, x1, x2)

inst_24387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:73161*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73161*0 + 3*579*FLEN/8, x4, x1, x2)

inst_24388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:73164*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73164*0 + 3*580*FLEN/8, x4, x1, x2)

inst_24389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:73167*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73167*0 + 3*581*FLEN/8, x4, x1, x2)

inst_24390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:73170*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73170*0 + 3*582*FLEN/8, x4, x1, x2)

inst_24391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:73173*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73173*0 + 3*583*FLEN/8, x4, x1, x2)

inst_24392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:73176*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73176*0 + 3*584*FLEN/8, x4, x1, x2)

inst_24393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:73179*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73179*0 + 3*585*FLEN/8, x4, x1, x2)

inst_24394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:73182*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73182*0 + 3*586*FLEN/8, x4, x1, x2)

inst_24395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:73185*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73185*0 + 3*587*FLEN/8, x4, x1, x2)

inst_24396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:73188*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73188*0 + 3*588*FLEN/8, x4, x1, x2)

inst_24397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:73191*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73191*0 + 3*589*FLEN/8, x4, x1, x2)

inst_24398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:73194*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73194*0 + 3*590*FLEN/8, x4, x1, x2)

inst_24399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:73197*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73197*0 + 3*591*FLEN/8, x4, x1, x2)

inst_24400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:73200*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73200*0 + 3*592*FLEN/8, x4, x1, x2)

inst_24401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:73203*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73203*0 + 3*593*FLEN/8, x4, x1, x2)

inst_24402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:73206*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73206*0 + 3*594*FLEN/8, x4, x1, x2)

inst_24403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:73209*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73209*0 + 3*595*FLEN/8, x4, x1, x2)

inst_24404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:73212*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73212*0 + 3*596*FLEN/8, x4, x1, x2)

inst_24405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:73215*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73215*0 + 3*597*FLEN/8, x4, x1, x2)

inst_24406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:73218*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73218*0 + 3*598*FLEN/8, x4, x1, x2)

inst_24407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xba26d39f98217 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0x2870f6d5fa7a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8ba26d39f98217; op2val:0x9fe2870f6d5fa7a7;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:73221*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73221*0 + 3*599*FLEN/8, x4, x1, x2)

inst_24408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:73224*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73224*0 + 3*600*FLEN/8, x4, x1, x2)

inst_24409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:73227*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73227*0 + 3*601*FLEN/8, x4, x1, x2)

inst_24410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:73230*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73230*0 + 3*602*FLEN/8, x4, x1, x2)

inst_24411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:73233*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73233*0 + 3*603*FLEN/8, x4, x1, x2)

inst_24412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:73236*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73236*0 + 3*604*FLEN/8, x4, x1, x2)

inst_24413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:73239*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73239*0 + 3*605*FLEN/8, x4, x1, x2)

inst_24414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:73242*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73242*0 + 3*606*FLEN/8, x4, x1, x2)

inst_24415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:73245*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73245*0 + 3*607*FLEN/8, x4, x1, x2)

inst_24416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:73248*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73248*0 + 3*608*FLEN/8, x4, x1, x2)

inst_24417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:73251*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73251*0 + 3*609*FLEN/8, x4, x1, x2)

inst_24418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:73254*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73254*0 + 3*610*FLEN/8, x4, x1, x2)

inst_24419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:73257*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73257*0 + 3*611*FLEN/8, x4, x1, x2)

inst_24420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:73260*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73260*0 + 3*612*FLEN/8, x4, x1, x2)

inst_24421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:73263*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73263*0 + 3*613*FLEN/8, x4, x1, x2)

inst_24422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:73266*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73266*0 + 3*614*FLEN/8, x4, x1, x2)

inst_24423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:73269*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73269*0 + 3*615*FLEN/8, x4, x1, x2)

inst_24424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:73272*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73272*0 + 3*616*FLEN/8, x4, x1, x2)

inst_24425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:73275*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73275*0 + 3*617*FLEN/8, x4, x1, x2)

inst_24426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:73278*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73278*0 + 3*618*FLEN/8, x4, x1, x2)

inst_24427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:73281*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73281*0 + 3*619*FLEN/8, x4, x1, x2)

inst_24428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:73284*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73284*0 + 3*620*FLEN/8, x4, x1, x2)

inst_24429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:73287*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73287*0 + 3*621*FLEN/8, x4, x1, x2)

inst_24430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000000000000; valaddr_reg:x3; val_offset:73290*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73290*0 + 3*622*FLEN/8, x4, x1, x2)

inst_24431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000000000001; valaddr_reg:x3; val_offset:73293*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73293*0 + 3*623*FLEN/8, x4, x1, x2)

inst_24432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000000000003; valaddr_reg:x3; val_offset:73296*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73296*0 + 3*624*FLEN/8, x4, x1, x2)

inst_24433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000000000007; valaddr_reg:x3; val_offset:73299*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73299*0 + 3*625*FLEN/8, x4, x1, x2)

inst_24434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000000000000f; valaddr_reg:x3; val_offset:73302*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73302*0 + 3*626*FLEN/8, x4, x1, x2)

inst_24435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000000000001f; valaddr_reg:x3; val_offset:73305*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73305*0 + 3*627*FLEN/8, x4, x1, x2)

inst_24436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000000000003f; valaddr_reg:x3; val_offset:73308*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73308*0 + 3*628*FLEN/8, x4, x1, x2)

inst_24437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000000000007f; valaddr_reg:x3; val_offset:73311*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73311*0 + 3*629*FLEN/8, x4, x1, x2)

inst_24438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800000000000ff; valaddr_reg:x3; val_offset:73314*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73314*0 + 3*630*FLEN/8, x4, x1, x2)

inst_24439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800000000001ff; valaddr_reg:x3; val_offset:73317*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73317*0 + 3*631*FLEN/8, x4, x1, x2)

inst_24440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800000000003ff; valaddr_reg:x3; val_offset:73320*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73320*0 + 3*632*FLEN/8, x4, x1, x2)

inst_24441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800000000007ff; valaddr_reg:x3; val_offset:73323*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73323*0 + 3*633*FLEN/8, x4, x1, x2)

inst_24442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000000000fff; valaddr_reg:x3; val_offset:73326*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73326*0 + 3*634*FLEN/8, x4, x1, x2)

inst_24443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000000001fff; valaddr_reg:x3; val_offset:73329*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73329*0 + 3*635*FLEN/8, x4, x1, x2)

inst_24444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000000003fff; valaddr_reg:x3; val_offset:73332*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73332*0 + 3*636*FLEN/8, x4, x1, x2)

inst_24445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000000007fff; valaddr_reg:x3; val_offset:73335*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73335*0 + 3*637*FLEN/8, x4, x1, x2)

inst_24446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000000000ffff; valaddr_reg:x3; val_offset:73338*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73338*0 + 3*638*FLEN/8, x4, x1, x2)

inst_24447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000000001ffff; valaddr_reg:x3; val_offset:73341*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73341*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_24448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000000003ffff; valaddr_reg:x3; val_offset:73344*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73344*0 + 3*640*FLEN/8, x4, x1, x2)

inst_24449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000000007ffff; valaddr_reg:x3; val_offset:73347*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73347*0 + 3*641*FLEN/8, x4, x1, x2)

inst_24450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800000000fffff; valaddr_reg:x3; val_offset:73350*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73350*0 + 3*642*FLEN/8, x4, x1, x2)

inst_24451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800000001fffff; valaddr_reg:x3; val_offset:73353*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73353*0 + 3*643*FLEN/8, x4, x1, x2)

inst_24452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800000003fffff; valaddr_reg:x3; val_offset:73356*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73356*0 + 3*644*FLEN/8, x4, x1, x2)

inst_24453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800000007fffff; valaddr_reg:x3; val_offset:73359*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73359*0 + 3*645*FLEN/8, x4, x1, x2)

inst_24454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000000ffffff; valaddr_reg:x3; val_offset:73362*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73362*0 + 3*646*FLEN/8, x4, x1, x2)

inst_24455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000001ffffff; valaddr_reg:x3; val_offset:73365*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73365*0 + 3*647*FLEN/8, x4, x1, x2)

inst_24456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000003ffffff; valaddr_reg:x3; val_offset:73368*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73368*0 + 3*648*FLEN/8, x4, x1, x2)

inst_24457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000007ffffff; valaddr_reg:x3; val_offset:73371*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73371*0 + 3*649*FLEN/8, x4, x1, x2)

inst_24458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000000fffffff; valaddr_reg:x3; val_offset:73374*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73374*0 + 3*650*FLEN/8, x4, x1, x2)

inst_24459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000001fffffff; valaddr_reg:x3; val_offset:73377*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73377*0 + 3*651*FLEN/8, x4, x1, x2)

inst_24460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000003fffffff; valaddr_reg:x3; val_offset:73380*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73380*0 + 3*652*FLEN/8, x4, x1, x2)

inst_24461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000007fffffff; valaddr_reg:x3; val_offset:73383*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73383*0 + 3*653*FLEN/8, x4, x1, x2)

inst_24462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800000ffffffff; valaddr_reg:x3; val_offset:73386*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73386*0 + 3*654*FLEN/8, x4, x1, x2)

inst_24463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800001ffffffff; valaddr_reg:x3; val_offset:73389*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73389*0 + 3*655*FLEN/8, x4, x1, x2)

inst_24464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800003ffffffff; valaddr_reg:x3; val_offset:73392*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73392*0 + 3*656*FLEN/8, x4, x1, x2)

inst_24465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800007ffffffff; valaddr_reg:x3; val_offset:73395*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73395*0 + 3*657*FLEN/8, x4, x1, x2)

inst_24466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80000fffffffff; valaddr_reg:x3; val_offset:73398*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73398*0 + 3*658*FLEN/8, x4, x1, x2)

inst_24467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80001fffffffff; valaddr_reg:x3; val_offset:73401*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73401*0 + 3*659*FLEN/8, x4, x1, x2)

inst_24468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80003fffffffff; valaddr_reg:x3; val_offset:73404*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73404*0 + 3*660*FLEN/8, x4, x1, x2)

inst_24469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80007fffffffff; valaddr_reg:x3; val_offset:73407*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73407*0 + 3*661*FLEN/8, x4, x1, x2)

inst_24470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8000ffffffffff; valaddr_reg:x3; val_offset:73410*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73410*0 + 3*662*FLEN/8, x4, x1, x2)

inst_24471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8001ffffffffff; valaddr_reg:x3; val_offset:73413*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73413*0 + 3*663*FLEN/8, x4, x1, x2)

inst_24472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8003ffffffffff; valaddr_reg:x3; val_offset:73416*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73416*0 + 3*664*FLEN/8, x4, x1, x2)

inst_24473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8007ffffffffff; valaddr_reg:x3; val_offset:73419*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73419*0 + 3*665*FLEN/8, x4, x1, x2)

inst_24474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x800fffffffffff; valaddr_reg:x3; val_offset:73422*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73422*0 + 3*666*FLEN/8, x4, x1, x2)

inst_24475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x801fffffffffff; valaddr_reg:x3; val_offset:73425*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73425*0 + 3*667*FLEN/8, x4, x1, x2)

inst_24476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x803fffffffffff; valaddr_reg:x3; val_offset:73428*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73428*0 + 3*668*FLEN/8, x4, x1, x2)

inst_24477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x807fffffffffff; valaddr_reg:x3; val_offset:73431*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73431*0 + 3*669*FLEN/8, x4, x1, x2)

inst_24478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x80ffffffffffff; valaddr_reg:x3; val_offset:73434*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73434*0 + 3*670*FLEN/8, x4, x1, x2)

inst_24479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x81ffffffffffff; valaddr_reg:x3; val_offset:73437*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73437*0 + 3*671*FLEN/8, x4, x1, x2)

inst_24480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x83ffffffffffff; valaddr_reg:x3; val_offset:73440*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73440*0 + 3*672*FLEN/8, x4, x1, x2)

inst_24481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x87ffffffffffff; valaddr_reg:x3; val_offset:73443*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73443*0 + 3*673*FLEN/8, x4, x1, x2)

inst_24482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x88000000000000; valaddr_reg:x3; val_offset:73446*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73446*0 + 3*674*FLEN/8, x4, x1, x2)

inst_24483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8c000000000000; valaddr_reg:x3; val_offset:73449*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73449*0 + 3*675*FLEN/8, x4, x1, x2)

inst_24484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8e000000000000; valaddr_reg:x3; val_offset:73452*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73452*0 + 3*676*FLEN/8, x4, x1, x2)

inst_24485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8f000000000000; valaddr_reg:x3; val_offset:73455*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73455*0 + 3*677*FLEN/8, x4, x1, x2)

inst_24486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8f800000000000; valaddr_reg:x3; val_offset:73458*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73458*0 + 3*678*FLEN/8, x4, x1, x2)

inst_24487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fc00000000000; valaddr_reg:x3; val_offset:73461*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73461*0 + 3*679*FLEN/8, x4, x1, x2)

inst_24488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fe00000000000; valaddr_reg:x3; val_offset:73464*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73464*0 + 3*680*FLEN/8, x4, x1, x2)

inst_24489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ff00000000000; valaddr_reg:x3; val_offset:73467*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73467*0 + 3*681*FLEN/8, x4, x1, x2)

inst_24490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ff80000000000; valaddr_reg:x3; val_offset:73470*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73470*0 + 3*682*FLEN/8, x4, x1, x2)

inst_24491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffc0000000000; valaddr_reg:x3; val_offset:73473*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73473*0 + 3*683*FLEN/8, x4, x1, x2)

inst_24492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffe0000000000; valaddr_reg:x3; val_offset:73476*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73476*0 + 3*684*FLEN/8, x4, x1, x2)

inst_24493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fff0000000000; valaddr_reg:x3; val_offset:73479*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73479*0 + 3*685*FLEN/8, x4, x1, x2)

inst_24494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fff8000000000; valaddr_reg:x3; val_offset:73482*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73482*0 + 3*686*FLEN/8, x4, x1, x2)

inst_24495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffc000000000; valaddr_reg:x3; val_offset:73485*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73485*0 + 3*687*FLEN/8, x4, x1, x2)

inst_24496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffe000000000; valaddr_reg:x3; val_offset:73488*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73488*0 + 3*688*FLEN/8, x4, x1, x2)

inst_24497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffff000000000; valaddr_reg:x3; val_offset:73491*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73491*0 + 3*689*FLEN/8, x4, x1, x2)

inst_24498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffff800000000; valaddr_reg:x3; val_offset:73494*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73494*0 + 3*690*FLEN/8, x4, x1, x2)

inst_24499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffc00000000; valaddr_reg:x3; val_offset:73497*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73497*0 + 3*691*FLEN/8, x4, x1, x2)

inst_24500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffe00000000; valaddr_reg:x3; val_offset:73500*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73500*0 + 3*692*FLEN/8, x4, x1, x2)

inst_24501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffff00000000; valaddr_reg:x3; val_offset:73503*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73503*0 + 3*693*FLEN/8, x4, x1, x2)

inst_24502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffff80000000; valaddr_reg:x3; val_offset:73506*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73506*0 + 3*694*FLEN/8, x4, x1, x2)

inst_24503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffc0000000; valaddr_reg:x3; val_offset:73509*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73509*0 + 3*695*FLEN/8, x4, x1, x2)

inst_24504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffe0000000; valaddr_reg:x3; val_offset:73512*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73512*0 + 3*696*FLEN/8, x4, x1, x2)

inst_24505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffff0000000; valaddr_reg:x3; val_offset:73515*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73515*0 + 3*697*FLEN/8, x4, x1, x2)

inst_24506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffff8000000; valaddr_reg:x3; val_offset:73518*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73518*0 + 3*698*FLEN/8, x4, x1, x2)

inst_24507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffc000000; valaddr_reg:x3; val_offset:73521*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73521*0 + 3*699*FLEN/8, x4, x1, x2)

inst_24508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffe000000; valaddr_reg:x3; val_offset:73524*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73524*0 + 3*700*FLEN/8, x4, x1, x2)

inst_24509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffff000000; valaddr_reg:x3; val_offset:73527*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73527*0 + 3*701*FLEN/8, x4, x1, x2)

inst_24510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffff800000; valaddr_reg:x3; val_offset:73530*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73530*0 + 3*702*FLEN/8, x4, x1, x2)

inst_24511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffffc00000; valaddr_reg:x3; val_offset:73533*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73533*0 + 3*703*FLEN/8, x4, x1, x2)

inst_24512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffffe00000; valaddr_reg:x3; val_offset:73536*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73536*0 + 3*704*FLEN/8, x4, x1, x2)

inst_24513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffff00000; valaddr_reg:x3; val_offset:73539*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73539*0 + 3*705*FLEN/8, x4, x1, x2)

inst_24514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffff80000; valaddr_reg:x3; val_offset:73542*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73542*0 + 3*706*FLEN/8, x4, x1, x2)

inst_24515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffffc0000; valaddr_reg:x3; val_offset:73545*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73545*0 + 3*707*FLEN/8, x4, x1, x2)

inst_24516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffffe0000; valaddr_reg:x3; val_offset:73548*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73548*0 + 3*708*FLEN/8, x4, x1, x2)

inst_24517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffffff0000; valaddr_reg:x3; val_offset:73551*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73551*0 + 3*709*FLEN/8, x4, x1, x2)

inst_24518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffffff8000; valaddr_reg:x3; val_offset:73554*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73554*0 + 3*710*FLEN/8, x4, x1, x2)

inst_24519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffffffc000; valaddr_reg:x3; val_offset:73557*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73557*0 + 3*711*FLEN/8, x4, x1, x2)

inst_24520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffffffe000; valaddr_reg:x3; val_offset:73560*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73560*0 + 3*712*FLEN/8, x4, x1, x2)

inst_24521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffffff000; valaddr_reg:x3; val_offset:73563*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73563*0 + 3*713*FLEN/8, x4, x1, x2)

inst_24522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffffff800; valaddr_reg:x3; val_offset:73566*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73566*0 + 3*714*FLEN/8, x4, x1, x2)

inst_24523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffffffc00; valaddr_reg:x3; val_offset:73569*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73569*0 + 3*715*FLEN/8, x4, x1, x2)

inst_24524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffffffe00; valaddr_reg:x3; val_offset:73572*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73572*0 + 3*716*FLEN/8, x4, x1, x2)

inst_24525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffffffff00; valaddr_reg:x3; val_offset:73575*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73575*0 + 3*717*FLEN/8, x4, x1, x2)

inst_24526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffffffff80; valaddr_reg:x3; val_offset:73578*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73578*0 + 3*718*FLEN/8, x4, x1, x2)

inst_24527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffffffffc0; valaddr_reg:x3; val_offset:73581*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73581*0 + 3*719*FLEN/8, x4, x1, x2)

inst_24528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffffffffe0; valaddr_reg:x3; val_offset:73584*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73584*0 + 3*720*FLEN/8, x4, x1, x2)

inst_24529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffffffff0; valaddr_reg:x3; val_offset:73587*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73587*0 + 3*721*FLEN/8, x4, x1, x2)

inst_24530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffffffff8; valaddr_reg:x3; val_offset:73590*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73590*0 + 3*722*FLEN/8, x4, x1, x2)

inst_24531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffffffffc; valaddr_reg:x3; val_offset:73593*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73593*0 + 3*723*FLEN/8, x4, x1, x2)

inst_24532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8ffffffffffffe; valaddr_reg:x3; val_offset:73596*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73596*0 + 3*724*FLEN/8, x4, x1, x2)

inst_24533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbf5ee68133283 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bf5ee68133283; op2val:0x0;
op3val:0x8fffffffffffff; valaddr_reg:x3; val_offset:73599*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73599*0 + 3*725*FLEN/8, x4, x1, x2)

inst_24534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:73602*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73602*0 + 3*726*FLEN/8, x4, x1, x2)

inst_24535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:73605*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73605*0 + 3*727*FLEN/8, x4, x1, x2)

inst_24536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:73608*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73608*0 + 3*728*FLEN/8, x4, x1, x2)

inst_24537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:73611*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73611*0 + 3*729*FLEN/8, x4, x1, x2)

inst_24538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:73614*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73614*0 + 3*730*FLEN/8, x4, x1, x2)

inst_24539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:73617*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73617*0 + 3*731*FLEN/8, x4, x1, x2)

inst_24540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:73620*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73620*0 + 3*732*FLEN/8, x4, x1, x2)

inst_24541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:73623*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73623*0 + 3*733*FLEN/8, x4, x1, x2)

inst_24542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:73626*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73626*0 + 3*734*FLEN/8, x4, x1, x2)

inst_24543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:73629*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73629*0 + 3*735*FLEN/8, x4, x1, x2)

inst_24544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:73632*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73632*0 + 3*736*FLEN/8, x4, x1, x2)

inst_24545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:73635*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73635*0 + 3*737*FLEN/8, x4, x1, x2)

inst_24546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:73638*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73638*0 + 3*738*FLEN/8, x4, x1, x2)

inst_24547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:73641*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73641*0 + 3*739*FLEN/8, x4, x1, x2)

inst_24548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:73644*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73644*0 + 3*740*FLEN/8, x4, x1, x2)

inst_24549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:73647*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73647*0 + 3*741*FLEN/8, x4, x1, x2)

inst_24550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:73650*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73650*0 + 3*742*FLEN/8, x4, x1, x2)

inst_24551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:73653*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73653*0 + 3*743*FLEN/8, x4, x1, x2)

inst_24552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:73656*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73656*0 + 3*744*FLEN/8, x4, x1, x2)

inst_24553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:73659*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73659*0 + 3*745*FLEN/8, x4, x1, x2)

inst_24554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:73662*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73662*0 + 3*746*FLEN/8, x4, x1, x2)

inst_24555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:73665*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73665*0 + 3*747*FLEN/8, x4, x1, x2)

inst_24556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c0000000000000; valaddr_reg:x3; val_offset:73668*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73668*0 + 3*748*FLEN/8, x4, x1, x2)

inst_24557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c0000000000001; valaddr_reg:x3; val_offset:73671*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73671*0 + 3*749*FLEN/8, x4, x1, x2)

inst_24558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c0000000000003; valaddr_reg:x3; val_offset:73674*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73674*0 + 3*750*FLEN/8, x4, x1, x2)

inst_24559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c0000000000007; valaddr_reg:x3; val_offset:73677*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73677*0 + 3*751*FLEN/8, x4, x1, x2)

inst_24560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c000000000000f; valaddr_reg:x3; val_offset:73680*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73680*0 + 3*752*FLEN/8, x4, x1, x2)

inst_24561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c000000000001f; valaddr_reg:x3; val_offset:73683*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73683*0 + 3*753*FLEN/8, x4, x1, x2)

inst_24562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c000000000003f; valaddr_reg:x3; val_offset:73686*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73686*0 + 3*754*FLEN/8, x4, x1, x2)

inst_24563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c000000000007f; valaddr_reg:x3; val_offset:73689*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73689*0 + 3*755*FLEN/8, x4, x1, x2)

inst_24564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c00000000000ff; valaddr_reg:x3; val_offset:73692*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73692*0 + 3*756*FLEN/8, x4, x1, x2)

inst_24565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c00000000001ff; valaddr_reg:x3; val_offset:73695*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73695*0 + 3*757*FLEN/8, x4, x1, x2)

inst_24566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c00000000003ff; valaddr_reg:x3; val_offset:73698*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73698*0 + 3*758*FLEN/8, x4, x1, x2)

inst_24567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c00000000007ff; valaddr_reg:x3; val_offset:73701*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73701*0 + 3*759*FLEN/8, x4, x1, x2)

inst_24568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c0000000000fff; valaddr_reg:x3; val_offset:73704*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73704*0 + 3*760*FLEN/8, x4, x1, x2)

inst_24569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c0000000001fff; valaddr_reg:x3; val_offset:73707*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73707*0 + 3*761*FLEN/8, x4, x1, x2)

inst_24570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c0000000003fff; valaddr_reg:x3; val_offset:73710*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73710*0 + 3*762*FLEN/8, x4, x1, x2)

inst_24571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c0000000007fff; valaddr_reg:x3; val_offset:73713*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73713*0 + 3*763*FLEN/8, x4, x1, x2)

inst_24572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c000000000ffff; valaddr_reg:x3; val_offset:73716*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73716*0 + 3*764*FLEN/8, x4, x1, x2)

inst_24573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c000000001ffff; valaddr_reg:x3; val_offset:73719*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73719*0 + 3*765*FLEN/8, x4, x1, x2)

inst_24574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c000000003ffff; valaddr_reg:x3; val_offset:73722*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73722*0 + 3*766*FLEN/8, x4, x1, x2)

inst_24575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0xbff7b54c6e6f7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8bff7b54c6e6f7; op2val:0x0;
op3val:0x2c000000007ffff; valaddr_reg:x3; val_offset:73725*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 73725*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6000003fffffff3501791683930488831,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6000007fffffff3501791685004230655,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb600000ffffffff3501791687151714303,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb600001ffffffff3501791691446681599,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb600003ffffffff3501791700036616191,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb600007ffffffff3501791717216485375,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb60000fffffffff3501791751576223743,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb60001fffffffff3501791820295700479,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb60003fffffffff3501791957734653951,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb60007fffffffff3501792232612560895,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6000ffffffffff3501792782368374783,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6001ffffffffff3501793881880002559,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6003ffffffffff3501796080903258111,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6007ffffffffff3501800478949769215,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb600fffffffffff3501809275042791423,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb601fffffffffff3501826867228835839,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb603fffffffffff3501862051600924671,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb607fffffffffff3501932420345102335,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb60ffffffffffff3502073157833457663,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb61ffffffffffff3502354632810168319,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb63ffffffffffff3502917582763589631,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb67ffffffffffff3504043482670432255,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb680000000000003504043482670432256,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6c0000000000003505169382577274880,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6e0000000000003505732332530696192,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6f0000000000003506013807507406848,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6f8000000000003506154544995762176,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fc000000000003506224913739939840,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fe000000000003506260098112028672,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ff000000000003506277690298073088,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ff800000000003506286486391095296,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffc00000000003506290884437606400,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffe00000000003506293083460861952,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fff00000000003506294182972489728,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fff80000000003506294732728303616,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffc0000000003506295007606210560,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffe0000000003506295145045164032,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffff0000000003506295213764640768,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffff8000000003506295248124379136,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffc000000003506295265304248320,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffe000000003506295273894182912,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffff000000003506295278189150208,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffff800000003506295280336633856,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffc00000003506295281410375680,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffe00000003506295281947246592,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffff00000003506295282215682048,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffff80000003506295282349899776,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffc0000003506295282417008640,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffe0000003506295282450563072,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffff0000003506295282467340288,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffff8000003506295282475728896,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffffc000003506295282479923200,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffffe000003506295282482020352,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffff000003506295282483068928,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffff800003506295282483593216,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffffc00003506295282483855360,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffffe00003506295282483986432,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffffff00003506295282484051968,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffffff80003506295282484084736,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffffffc0003506295282484101120,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffffffe0003506295282484109312,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffffff0003506295282484113408,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffffff8003506295282484115456,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffffffc003506295282484116480,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffffffe003506295282484116992,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffffffff003506295282484117248,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffffffff803506295282484117376,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffffffffc03506295282484117440,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffffffffe03506295282484117472,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffffffff03506295282484117488,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffffffff83506295282484117496,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffffffffc3506295282484117500,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6ffffffffffffe3506295282484117502,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbb6fffffffffffff3506295282484117503,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf800000000000013799029258263199745,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf800000000000033799029258263199747,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf800000000000073799029258263199751,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf8000000000000f3799029258263199759,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf8000000000001f3799029258263199775,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf8000000000003f3799029258263199807,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf833333333333333799929978188673843,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf849249249249243800316001013877028,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf866666666666663800830698114147942,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf86db6db6db6db63800959372389215670,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf877777777777773801130938089305975,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf888888888888883801431178064464008,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf899999999999993801731418039622041,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf8b6db6db6db6db3802246115139892955,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf8ccccccccccccc3802632137965096140,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf8db6db6db6db6d3802889486515231597,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf8fffffffffffc03803532857890570176,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf8fffffffffffe03803532857890570208,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf8ffffffffffff03803532857890570224,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf8ffffffffffff83803532857890570232,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf8ffffffffffffc3803532857890570236,64,FLEN)
NAN_BOXED(0x5f8a8693ca418657884462949700830807,64,FLEN)
NAN_BOXED(0x9fe34d528b4283341521137288662909748,64,FLEN)
NAN_BOXED(0xbf8ffffffffffffe3803532857890570238,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000001223372036854775809,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000003223372036854775811,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000007223372036854775815,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000000f223372036854775823,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000001f223372036854775839,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000003f223372036854775871,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8003333333333333224272756780249907,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8004924924924924224658779605453092,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8006666666666666225173476705724006,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8006db6db6db6db6225302150980791734,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8007777777777777225473716680882039,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8008888888888888225773956656040072,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8009999999999999226074196631198105,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800b6db6db6db6db226588893731469019,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ccccccccccccc226974916556672204,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800db6db6db6db6d227232265106807661,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800fffffffffffc0227875636482146240,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800fffffffffffe0227875636482146272,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffff0227875636482146288,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffff8227875636482146296,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffffc227875636482146300,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffffe227875636482146302,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000000000000367487224930631680,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000000000001367487224930631681,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000000000003367487224930631683,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000000000007367487224930631687,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000000000000f367487224930631695,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000000000001f367487224930631711,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000000000003f367487224930631743,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000000000007f367487224930631807,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000000000000ff367487224930631935,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000000000001ff367487224930632191,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000000000003ff367487224930632703,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000000000007ff367487224930633727,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000000000fff367487224930635775,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000000001fff367487224930639871,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000000003fff367487224930648063,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000000007fff367487224930664447,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000000000ffff367487224930697215,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000000001ffff367487224930762751,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000000003ffff367487224930893823,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000000007ffff367487224931155967,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000000000fffff367487224931680255,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000000001fffff367487224932728831,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000000003fffff367487224934825983,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000000007fffff367487224939020287,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000000ffffff367487224947408895,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000001ffffff367487224964186111,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000003ffffff367487224997740543,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000007ffffff367487225064849407,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000000fffffff367487225199067135,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000001fffffff367487225467502591,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000003fffffff367487226004373503,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000007fffffff367487227078115327,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000000ffffffff367487229225598975,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000001ffffffff367487233520566271,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000003ffffffff367487242110500863,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000007ffffffff367487259290370047,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200000fffffffff367487293650108415,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200001fffffffff367487362369585151,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200003fffffffff367487499808538623,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200007fffffffff367487774686445567,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820000ffffffffff367488324442259455,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820001ffffffffff367489423953887231,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820003ffffffffff367491622977142783,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820007ffffffffff367496021023653887,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82000fffffffffff367504817116676095,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82001fffffffffff367522409302720511,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82003fffffffffff367557593674809343,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82007fffffffffff367627962418987007,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8200ffffffffffff367768699907342335,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8201ffffffffffff368050174884052991,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8203ffffffffffff368613124837474303,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8207ffffffffffff369739024744316927,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8208000000000000369739024744316928,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820c000000000000370864924651159552,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820e000000000000371427874604580864,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820f000000000000371709349581291520,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820f800000000000371850087069646848,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fc00000000000371920455813824512,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fe00000000000371955640185913344,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ff00000000000371973232371957760,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ff80000000000371982028464979968,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffc0000000000371986426511491072,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffe0000000000371988625534746624,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fff0000000000371989725046374400,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fff8000000000371990274802188288,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffc000000000371990549680095232,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffe000000000371990687119048704,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffff000000000371990755838525440,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffff800000000371990790198263808,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffc00000000371990807378132992,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffe00000000371990815968067584,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffff00000000371990820263034880,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffff80000000371990822410518528,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffc0000000371990823484260352,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffe0000000371990824021131264,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffff0000000371990824289566720,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffff8000000371990824423784448,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffc000000371990824490893312,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffe000000371990824524447744,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffff000000371990824541224960,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffff800000371990824549613568,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffffc00000371990824553807872,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffffe00000371990824555905024,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffff00000371990824556953600,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffff80000371990824557477888,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffffc0000371990824557740032,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffffe0000371990824557871104,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffffff0000371990824557936640,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffffff8000371990824557969408,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffffffc000371990824557985792,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffffffe000371990824557993984,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffffff000371990824557998080,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffffff800371990824558000128,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffffffc00371990824558001152,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffffffe00371990824558001664,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffffffff00371990824558001920,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffffffff80371990824558002048,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffffffffc0371990824558002112,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffffffffe0371990824558002144,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffffffff0371990824558002160,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffffffff8371990824558002168,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffffffffc371990824558002172,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820ffffffffffffe371990824558002174,64,FLEN)
NAN_BOXED(0x5f8a9f06400d3d17884489829582454039,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x820fffffffffffff371990824558002175,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x10000000000001503599627370497,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x10000000000003503599627370499,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x10000000000007503599627370503,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1000000000000f503599627370511,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1000000000001f503599627370527,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1000000000003f503599627370559,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x13333333333333404319552844595,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x14924924924924790342378047780,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x16666666666666305039478318694,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x16db6db6db6db6433713753386422,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x17777777777777605279453476727,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x18888888888888905519428634760,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x19999999999999205759403792793,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1b6db6db6db6db720456504063707,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ccccccccccccc106479329266892,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1db6db6db6db6d363827879402349,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1fffffffffffc0007199254740928,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1fffffffffffe0007199254740960,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ffffffffffff0007199254740976,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ffffffffffff8007199254740984,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ffffffffffffc007199254740988,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1ffffffffffffe007199254740990,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000000000007021597764222976,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000000000017021597764222977,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000000000037021597764222979,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000000000077021597764222983,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000000000000f7021597764222991,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000000000001f7021597764223007,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000000000003f7021597764223039,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000000000007f7021597764223103,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000000000ff7021597764223231,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000000001ff7021597764223487,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000000003ff7021597764223999,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000000007ff7021597764225023,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60000000000fff7021597764227071,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60000000001fff7021597764231167,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60000000003fff7021597764239359,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60000000007fff7021597764255743,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000000000ffff7021597764288511,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000000001ffff7021597764354047,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000000003ffff7021597764485119,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000000007ffff7021597764747263,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000000fffff7021597765271551,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000001fffff7021597766320127,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000003fffff7021597768417279,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000007fffff7021597772611583,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60000000ffffff7021597781000191,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60000001ffffff7021597797777407,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60000003ffffff7021597831331839,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60000007ffffff7021597898440703,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000000fffffff7021598032658431,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000001fffffff7021598301093887,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000003fffffff7021598837964799,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000007fffffff7021599911706623,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600000ffffffff7021602059190271,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600001ffffffff7021606354157567,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600003ffffffff7021614944092159,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600007ffffffff7021632123961343,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60000fffffffff7021666483699711,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60001fffffffff7021735203176447,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60003fffffffff7021872642129919,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60007fffffffff7022147520036863,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6000ffffffffff7022697275850751,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6001ffffffffff7023796787478527,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6003ffffffffff7025995810734079,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6007ffffffffff7030393857245183,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x600fffffffffff7039189950267391,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x601fffffffffff7056782136311807,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x603fffffffffff7091966508400639,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x607fffffffffff7162335252578303,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x60ffffffffffff7303072740933631,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x61ffffffffffff7584547717644287,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x63ffffffffffff8147497671065599,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x67ffffffffffff9273397577908223,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x680000000000009273397577908224,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6c0000000000000399297484750848,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6e0000000000000962247438172160,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6f0000000000001243722414882816,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6f8000000000001384459903238144,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fc000000000001454828647415808,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fe000000000001490013019504640,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ff000000000001507605205549056,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ff800000000001516401298571264,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffc00000000001520799345082368,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffe00000000001522998368337920,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fff00000000001524097879965696,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fff80000000001524647635779584,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffc0000000001524922513686528,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffe0000000001525059952640000,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffff0000000001525128672116736,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffff8000000001525163031855104,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffc000000001525180211724288,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffe000000001525188801658880,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffff000000001525193096626176,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffff800000001525195244109824,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffc00000001525196317851648,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffe00000001525196854722560,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffff00000001525197123158016,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffff80000001525197257375744,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffc0000001525197324484608,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffe0000001525197358039040,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffff0000001525197374816256,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffff8000001525197383204864,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffffc000001525197387399168,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffffe000001525197389496320,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffff000001525197390544896,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffff800001525197391069184,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffffc00001525197391331328,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffffe00001525197391462400,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffffff00001525197391527936,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffffff80001525197391560704,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffffffc0001525197391577088,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffffffe0001525197391585280,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffffff0001525197391589376,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffffff8001525197391591424,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffffffc001525197391592448,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffffffe001525197391592960,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffffffff001525197391593216,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffffffff801525197391593344,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffffffffc01525197391593408,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffffffffe01525197391593440,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffffffff01525197391593456,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffffffff81525197391593464,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffffffffc1525197391593468,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6ffffffffffffe1525197391593470,64,FLEN)
NAN_BOXED(0x5f8abc1fbe90f79b884521824916404123,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6fffffffffffff1525197391593471,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000001223372036854775809,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000003223372036854775811,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000007223372036854775815,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000000f223372036854775823,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000001f223372036854775839,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000003f223372036854775871,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8003333333333333224272756780249907,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8004924924924924224658779605453092,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8006666666666666225173476705724006,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8006db6db6db6db6225302150980791734,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8007777777777777225473716680882039,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8008888888888888225773956656040072,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8009999999999999226074196631198105,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800b6db6db6db6db226588893731469019,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ccccccccccccc226974916556672204,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800db6db6db6db6d227232265106807661,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800fffffffffffc0227875636482146240,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800fffffffffffe0227875636482146272,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffff0227875636482146288,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffff8227875636482146296,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffffc227875636482146300,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffffe227875636482146302,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000000000000489084414869635072,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000000000001489084414869635073,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000000000003489084414869635075,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000000000007489084414869635079,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000000000000f489084414869635087,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000000000001f489084414869635103,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000000000003f489084414869635135,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000000000007f489084414869635199,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00000000000ff489084414869635327,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00000000001ff489084414869635583,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00000000003ff489084414869636095,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00000000007ff489084414869637119,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000000000fff489084414869639167,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000000001fff489084414869643263,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000000003fff489084414869651455,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000000007fff489084414869667839,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000000000ffff489084414869700607,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000000001ffff489084414869766143,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000000003ffff489084414869897215,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000000007ffff489084414870159359,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00000000fffff489084414870683647,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00000001fffff489084414871732223,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00000003fffff489084414873829375,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00000007fffff489084414878023679,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000000ffffff489084414886412287,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000001ffffff489084414903189503,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000003ffffff489084414936743935,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000007ffffff489084415003852799,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000000fffffff489084415138070527,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000001fffffff489084415406505983,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000003fffffff489084415943376895,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000007fffffff489084417017118719,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00000ffffffff489084419164602367,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00001ffffffff489084423459569663,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00003ffffffff489084432049504255,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00007ffffffff489084449229373439,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0000fffffffff489084483589111807,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0001fffffffff489084552308588543,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0003fffffffff489084689747542015,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0007fffffffff489084964625448959,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b000ffffffffff489085514381262847,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b001ffffffffff489086613892890623,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b003ffffffffff489088812916146175,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b007ffffffffff489093210962657279,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b00fffffffffff489102007055679487,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b01fffffffffff489119599241723903,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b03fffffffffff489154783613812735,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b07fffffffffff489225152357990399,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b0ffffffffffff489365889846345727,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b1ffffffffffff489647364823056383,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b3ffffffffffff490210314776477695,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b7ffffffffffff491336214683320319,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83b8000000000000491336214683320320,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bc000000000000492462114590162944,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83be000000000000493025064543584256,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bf000000000000493306539520294912,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bf800000000000493447277008650240,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfc00000000000493517645752827904,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfe00000000000493552830124916736,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bff00000000000493570422310961152,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bff80000000000493579218403983360,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffc0000000000493583616450494464,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffe0000000000493585815473750016,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfff0000000000493586914985377792,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfff8000000000493587464741191680,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffc000000000493587739619098624,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffe000000000493587877058052096,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffff000000000493587945777528832,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffff800000000493587980137267200,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffc00000000493587997317136384,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffe00000000493588005907070976,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffff00000000493588010202038272,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffff80000000493588012349521920,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffc0000000493588013423263744,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffe0000000493588013960134656,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffff0000000493588014228570112,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffff8000000493588014362787840,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffc000000493588014429896704,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffe000000493588014463451136,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffff000000493588014480228352,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffff800000493588014488616960,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffffc00000493588014492811264,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffffe00000493588014494908416,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffff00000493588014495956992,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffff80000493588014496481280,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffffc0000493588014496743424,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffffe0000493588014496874496,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffffff0000493588014496940032,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffffff8000493588014496972800,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffffffc000493588014496989184,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffffffe000493588014496997376,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffffff000493588014497001472,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffffff800493588014497003520,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffffffc00493588014497004544,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffffffe00493588014497005056,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffffffff00493588014497005312,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffffffff80493588014497005440,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffffffffc0493588014497005504,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffffffffe0493588014497005536,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffffffff0493588014497005552,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffffffff8493588014497005560,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffffffffc493588014497005564,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bffffffffffffe493588014497005566,64,FLEN)
NAN_BOXED(0x5f8af42bcba26d83884583449326415235,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x83bfffffffffffff493588014497005567,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000000000003515302481738858496,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000000000013515302481738858497,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000000000033515302481738858499,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000000000073515302481738858503,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000000000000f3515302481738858511,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000000000001f3515302481738858527,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000000000003f3515302481738858559,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000000000007f3515302481738858623,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000000000ff3515302481738858751,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000000001ff3515302481738859007,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000000003ff3515302481738859519,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000000007ff3515302481738860543,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90000000000fff3515302481738862591,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90000000001fff3515302481738866687,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90000000003fff3515302481738874879,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90000000007fff3515302481738891263,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000000000ffff3515302481738924031,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000000001ffff3515302481738989567,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000000003ffff3515302481739120639,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000000007ffff3515302481739382783,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000000fffff3515302481739907071,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000001fffff3515302481740955647,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000003fffff3515302481743052799,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000007fffff3515302481747247103,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90000000ffffff3515302481755635711,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90000001ffffff3515302481772412927,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90000003ffffff3515302481805967359,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90000007ffffff3515302481873076223,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000000fffffff3515302482007293951,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000001fffffff3515302482275729407,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000003fffffff3515302482812600319,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000007fffffff3515302483886342143,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900000ffffffff3515302486033825791,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900001ffffffff3515302490328793087,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900003ffffffff3515302498918727679,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900007ffffffff3515302516098596863,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90000fffffffff3515302550458335231,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90001fffffffff3515302619177811967,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90003fffffffff3515302756616765439,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90007fffffffff3515303031494672383,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9000ffffffffff3515303581250486271,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9001ffffffffff3515304680762114047,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9003ffffffffff3515306879785369599,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9007ffffffffff3515311277831880703,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb900fffffffffff3515320073924902911,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb901fffffffffff3515337666110947327,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb903fffffffffff3515372850483036159,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb907fffffffffff3515443219227213823,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb90ffffffffffff3515583956715569151,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb91ffffffffffff3515865431692279807,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb93ffffffffffff3516428381645701119,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb97ffffffffffff3517554281552543743,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb980000000000003517554281552543744,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9c0000000000003518680181459386368,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9e0000000000003519243131412807680,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9f0000000000003519524606389518336,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9f8000000000003519665343877873664,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fc000000000003519735712622051328,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fe000000000003519770896994140160,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ff000000000003519788489180184576,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ff800000000003519797285273206784,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffc00000000003519801683319717888,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffe00000000003519803882342973440,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fff00000000003519804981854601216,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fff80000000003519805531610415104,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffc0000000003519805806488322048,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffe0000000003519805943927275520,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffff0000000003519806012646752256,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffff8000000003519806047006490624,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffc000000003519806064186359808,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffe000000003519806072776294400,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffff000000003519806077071261696,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffff800000003519806079218745344,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffc00000003519806080292487168,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffe00000003519806080829358080,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffff00000003519806081097793536,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffff80000003519806081232011264,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffc0000003519806081299120128,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffe0000003519806081332674560,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffff0000003519806081349451776,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffff8000003519806081357840384,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffffc000003519806081362034688,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffffe000003519806081364131840,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffff000003519806081365180416,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffff800003519806081365704704,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffffc00003519806081365966848,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffffe00003519806081366097920,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffffff00003519806081366163456,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffffff80003519806081366196224,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffffffc0003519806081366212608,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffffffe0003519806081366220800,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffffff0003519806081366224896,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffffff8003519806081366226944,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffffffc003519806081366227968,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffffffe003519806081366228480,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffffffff003519806081366228736,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffffffff803519806081366228864,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffffffffc03519806081366228928,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffffffffe03519806081366228960,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffffffff03519806081366228976,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffffffff83519806081366228984,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffffffffc3519806081366228988,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9ffffffffffffe3519806081366228990,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbb9fffffffffffff3519806081366228991,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf800000000000013799029258263199745,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf800000000000033799029258263199747,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf800000000000073799029258263199751,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf8000000000000f3799029258263199759,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf8000000000001f3799029258263199775,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf8000000000003f3799029258263199807,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf833333333333333799929978188673843,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf849249249249243800316001013877028,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf866666666666663800830698114147942,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf86db6db6db6db63800959372389215670,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf877777777777773801130938089305975,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf888888888888883801431178064464008,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf899999999999993801731418039622041,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf8b6db6db6db6db3802246115139892955,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf8ccccccccccccc3802632137965096140,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf8db6db6db6db6d3802889486515231597,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf8fffffffffffc03803532857890570176,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf8fffffffffffe03803532857890570208,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf8ffffffffffff03803532857890570224,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf8ffffffffffff83803532857890570232,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf8ffffffffffffc3803532857890570236,64,FLEN)
NAN_BOXED(0x5f8ba26d39f98217884775045373723159,64,FLEN)
NAN_BOXED(0x9fe2870f6d5fa7a71520919297096394663,64,FLEN)
NAN_BOXED(0xbf8ffffffffffffe3803532857890570238,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xf5,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1f1,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f3,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x333333333333300719925474099,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4924924924924286742750677284,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6666666666666801439850948198,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6db6db6db6db6930114126015926,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7777777777777101679826106231,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8888888888888401919801264264,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x9999999999999702159776422297,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb6db6db6db6db216856876693211,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xccccccccccccc602879701896396,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xdb6db6db6db6d860228252031853,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffc0503599627370432,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffe0503599627370464,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff0503599627370480,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff8503599627370488,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffc503599627370492,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffe503599627370494,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000000000006028797018963968,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000000000016028797018963969,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000000000036028797018963971,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000000000076028797018963975,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000000000000f6028797018963983,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000000000001f6028797018963999,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000000000003f6028797018964031,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000000000007f6028797018964095,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000000000ff6028797018964223,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000000001ff6028797018964479,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000000003ff6028797018964991,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000000007ff6028797018966015,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80000000000fff6028797018968063,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80000000001fff6028797018972159,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80000000003fff6028797018980351,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80000000007fff6028797018996735,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000000000ffff6028797019029503,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000000001ffff6028797019095039,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000000003ffff6028797019226111,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000000007ffff6028797019488255,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000000fffff6028797020012543,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000001fffff6028797021061119,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000003fffff6028797023158271,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000007fffff6028797027352575,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80000000ffffff6028797035741183,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80000001ffffff6028797052518399,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80000003ffffff6028797086072831,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80000007ffffff6028797153181695,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000000fffffff6028797287399423,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000001fffffff6028797555834879,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000003fffffff6028798092705791,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000007fffffff6028799166447615,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800000ffffffff6028801313931263,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800001ffffffff6028805608898559,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800003ffffffff6028814198833151,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800007ffffffff6028831378702335,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80000fffffffff6028865738440703,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80001fffffffff6028934457917439,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80003fffffffff6029071896870911,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80007fffffffff6029346774777855,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8000ffffffffff6029896530591743,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8001ffffffffff6030996042219519,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8003ffffffffff6033195065475071,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8007ffffffffff6037593111986175,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x800fffffffffff6046389205008383,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x801fffffffffff6063981391052799,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x803fffffffffff6099165763141631,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x807fffffffffff6169534507319295,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x80ffffffffffff6310271995674623,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x81ffffffffffff6591746972385279,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x83ffffffffffff7154696925806591,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x87ffffffffffff8280596832649215,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x880000000000008280596832649216,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8c0000000000009406496739491840,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8e0000000000009969446692913152,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8f0000000000000250921669623808,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8f8000000000000391659157979136,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fc000000000000462027902156800,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fe000000000000497212274245632,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ff000000000000514804460290048,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ff800000000000523600553312256,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffc00000000000527998599823360,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffe00000000000530197623078912,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fff00000000000531297134706688,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fff80000000000531846890520576,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffc0000000000532121768427520,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffe0000000000532259207380992,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffff0000000000532327926857728,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffff8000000000532362286596096,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffc000000000532379466465280,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffe000000000532388056399872,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffff000000000532392351367168,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffff800000000532394498850816,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffc00000000532395572592640,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffe00000000532396109463552,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffff00000000532396377899008,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffff80000000532396512116736,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffc0000000532396579225600,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffe0000000532396612780032,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffff0000000532396629557248,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffff8000000532396637945856,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffffc000000532396642140160,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffffe000000532396644237312,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffff000000532396645285888,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffff800000532396645810176,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffffc00000532396646072320,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffffe00000532396646203392,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffffff00000532396646268928,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffffff80000532396646301696,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffffffc0000532396646318080,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffffffe0000532396646326272,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffffff0000532396646330368,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffffff8000532396646332416,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffffffc000532396646333440,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffffffe000532396646333952,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffffffff000532396646334208,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffffffff800532396646334336,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffffffffc00532396646334400,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffffffffe00532396646334432,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffffffff00532396646334448,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffffffff80532396646334456,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffffffffc0532396646334460,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8ffffffffffffe0532396646334462,64,FLEN)
NAN_BOXED(0x5f8bf5ee68133283884866859663045251,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8fffffffffffff0532396646334463,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xf5,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1f1,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f3,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x333333333333300719925474099,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4924924924924286742750677284,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6666666666666801439850948198,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6db6db6db6db6930114126015926,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7777777777777101679826106231,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8888888888888401919801264264,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x9999999999999702159776422297,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb6db6db6db6db216856876693211,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xccccccccccccc602879701896396,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xdb6db6db6db6d860228252031853,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffc0503599627370432,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffe0503599627370464,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff0503599627370480,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff8503599627370488,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffc503599627370492,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffe503599627370494,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c000000000000098158383604301824,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c000000000000198158383604301825,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c000000000000398158383604301827,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c000000000000798158383604301831,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c000000000000f98158383604301839,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c000000000001f98158383604301855,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c000000000003f98158383604301887,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c000000000007f98158383604301951,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c00000000000ff98158383604302079,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c00000000001ff98158383604302335,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c00000000003ff98158383604302847,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c00000000007ff98158383604303871,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c0000000000fff98158383604305919,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c0000000001fff98158383604310015,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c0000000003fff98158383604318207,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c0000000007fff98158383604334591,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c000000000ffff98158383604367359,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c000000001ffff98158383604432895,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c000000003ffff98158383604563967,64,FLEN)
NAN_BOXED(0x5f8bff7b54c6e6f7884877360534316791,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x2c000000007ffff98158383604826111,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
