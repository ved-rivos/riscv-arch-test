
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_11520:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21f800000000000; valaddr_reg:x3; val_offset:34560*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34560*0 + 3*0*FLEN/8, x4, x1, x2)

inst_11521:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fc00000000000; valaddr_reg:x3; val_offset:34563*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34563*0 + 3*1*FLEN/8, x4, x1, x2)

inst_11522:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fe00000000000; valaddr_reg:x3; val_offset:34566*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34566*0 + 3*2*FLEN/8, x4, x1, x2)

inst_11523:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ff00000000000; valaddr_reg:x3; val_offset:34569*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34569*0 + 3*3*FLEN/8, x4, x1, x2)

inst_11524:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ff80000000000; valaddr_reg:x3; val_offset:34572*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34572*0 + 3*4*FLEN/8, x4, x1, x2)

inst_11525:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffc0000000000; valaddr_reg:x3; val_offset:34575*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34575*0 + 3*5*FLEN/8, x4, x1, x2)

inst_11526:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffe0000000000; valaddr_reg:x3; val_offset:34578*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34578*0 + 3*6*FLEN/8, x4, x1, x2)

inst_11527:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fff0000000000; valaddr_reg:x3; val_offset:34581*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34581*0 + 3*7*FLEN/8, x4, x1, x2)

inst_11528:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fff8000000000; valaddr_reg:x3; val_offset:34584*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34584*0 + 3*8*FLEN/8, x4, x1, x2)

inst_11529:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffc000000000; valaddr_reg:x3; val_offset:34587*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34587*0 + 3*9*FLEN/8, x4, x1, x2)

inst_11530:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffe000000000; valaddr_reg:x3; val_offset:34590*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34590*0 + 3*10*FLEN/8, x4, x1, x2)

inst_11531:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffff000000000; valaddr_reg:x3; val_offset:34593*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34593*0 + 3*11*FLEN/8, x4, x1, x2)

inst_11532:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffff800000000; valaddr_reg:x3; val_offset:34596*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34596*0 + 3*12*FLEN/8, x4, x1, x2)

inst_11533:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffc00000000; valaddr_reg:x3; val_offset:34599*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34599*0 + 3*13*FLEN/8, x4, x1, x2)

inst_11534:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffe00000000; valaddr_reg:x3; val_offset:34602*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34602*0 + 3*14*FLEN/8, x4, x1, x2)

inst_11535:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffff00000000; valaddr_reg:x3; val_offset:34605*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34605*0 + 3*15*FLEN/8, x4, x1, x2)

inst_11536:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffff80000000; valaddr_reg:x3; val_offset:34608*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34608*0 + 3*16*FLEN/8, x4, x1, x2)

inst_11537:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffc0000000; valaddr_reg:x3; val_offset:34611*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34611*0 + 3*17*FLEN/8, x4, x1, x2)

inst_11538:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffe0000000; valaddr_reg:x3; val_offset:34614*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34614*0 + 3*18*FLEN/8, x4, x1, x2)

inst_11539:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffff0000000; valaddr_reg:x3; val_offset:34617*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34617*0 + 3*19*FLEN/8, x4, x1, x2)

inst_11540:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffff8000000; valaddr_reg:x3; val_offset:34620*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34620*0 + 3*20*FLEN/8, x4, x1, x2)

inst_11541:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffc000000; valaddr_reg:x3; val_offset:34623*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34623*0 + 3*21*FLEN/8, x4, x1, x2)

inst_11542:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffe000000; valaddr_reg:x3; val_offset:34626*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34626*0 + 3*22*FLEN/8, x4, x1, x2)

inst_11543:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffff000000; valaddr_reg:x3; val_offset:34629*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34629*0 + 3*23*FLEN/8, x4, x1, x2)

inst_11544:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffff800000; valaddr_reg:x3; val_offset:34632*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34632*0 + 3*24*FLEN/8, x4, x1, x2)

inst_11545:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffffc00000; valaddr_reg:x3; val_offset:34635*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34635*0 + 3*25*FLEN/8, x4, x1, x2)

inst_11546:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffffe00000; valaddr_reg:x3; val_offset:34638*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34638*0 + 3*26*FLEN/8, x4, x1, x2)

inst_11547:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffff00000; valaddr_reg:x3; val_offset:34641*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34641*0 + 3*27*FLEN/8, x4, x1, x2)

inst_11548:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffff80000; valaddr_reg:x3; val_offset:34644*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34644*0 + 3*28*FLEN/8, x4, x1, x2)

inst_11549:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffffc0000; valaddr_reg:x3; val_offset:34647*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34647*0 + 3*29*FLEN/8, x4, x1, x2)

inst_11550:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffffe0000; valaddr_reg:x3; val_offset:34650*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34650*0 + 3*30*FLEN/8, x4, x1, x2)

inst_11551:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffffff0000; valaddr_reg:x3; val_offset:34653*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34653*0 + 3*31*FLEN/8, x4, x1, x2)

inst_11552:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffffff8000; valaddr_reg:x3; val_offset:34656*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34656*0 + 3*32*FLEN/8, x4, x1, x2)

inst_11553:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffffffc000; valaddr_reg:x3; val_offset:34659*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34659*0 + 3*33*FLEN/8, x4, x1, x2)

inst_11554:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffffffe000; valaddr_reg:x3; val_offset:34662*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34662*0 + 3*34*FLEN/8, x4, x1, x2)

inst_11555:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffffff000; valaddr_reg:x3; val_offset:34665*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34665*0 + 3*35*FLEN/8, x4, x1, x2)

inst_11556:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffffff800; valaddr_reg:x3; val_offset:34668*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34668*0 + 3*36*FLEN/8, x4, x1, x2)

inst_11557:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffffffc00; valaddr_reg:x3; val_offset:34671*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34671*0 + 3*37*FLEN/8, x4, x1, x2)

inst_11558:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffffffe00; valaddr_reg:x3; val_offset:34674*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34674*0 + 3*38*FLEN/8, x4, x1, x2)

inst_11559:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffffffff00; valaddr_reg:x3; val_offset:34677*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34677*0 + 3*39*FLEN/8, x4, x1, x2)

inst_11560:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffffffff80; valaddr_reg:x3; val_offset:34680*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34680*0 + 3*40*FLEN/8, x4, x1, x2)

inst_11561:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffffffffc0; valaddr_reg:x3; val_offset:34683*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34683*0 + 3*41*FLEN/8, x4, x1, x2)

inst_11562:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffffffffe0; valaddr_reg:x3; val_offset:34686*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34686*0 + 3*42*FLEN/8, x4, x1, x2)

inst_11563:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffffffff0; valaddr_reg:x3; val_offset:34689*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34689*0 + 3*43*FLEN/8, x4, x1, x2)

inst_11564:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffffffff8; valaddr_reg:x3; val_offset:34692*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34692*0 + 3*44*FLEN/8, x4, x1, x2)

inst_11565:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffffffffc; valaddr_reg:x3; val_offset:34695*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34695*0 + 3*45*FLEN/8, x4, x1, x2)

inst_11566:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21ffffffffffffe; valaddr_reg:x3; val_offset:34698*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34698*0 + 3*46*FLEN/8, x4, x1, x2)

inst_11567:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7e0aa3707d217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x021 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77e0aa3707d217; op2val:0x0;
op3val:0x21fffffffffffff; valaddr_reg:x3; val_offset:34701*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34701*0 + 3*47*FLEN/8, x4, x1, x2)

inst_11568:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:34704*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34704*0 + 3*48*FLEN/8, x4, x1, x2)

inst_11569:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:34707*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34707*0 + 3*49*FLEN/8, x4, x1, x2)

inst_11570:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:34710*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34710*0 + 3*50*FLEN/8, x4, x1, x2)

inst_11571:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:34713*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34713*0 + 3*51*FLEN/8, x4, x1, x2)

inst_11572:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:34716*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34716*0 + 3*52*FLEN/8, x4, x1, x2)

inst_11573:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:34719*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34719*0 + 3*53*FLEN/8, x4, x1, x2)

inst_11574:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:34722*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34722*0 + 3*54*FLEN/8, x4, x1, x2)

inst_11575:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:34725*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34725*0 + 3*55*FLEN/8, x4, x1, x2)

inst_11576:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:34728*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34728*0 + 3*56*FLEN/8, x4, x1, x2)

inst_11577:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:34731*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34731*0 + 3*57*FLEN/8, x4, x1, x2)

inst_11578:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:34734*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34734*0 + 3*58*FLEN/8, x4, x1, x2)

inst_11579:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:34737*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34737*0 + 3*59*FLEN/8, x4, x1, x2)

inst_11580:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:34740*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34740*0 + 3*60*FLEN/8, x4, x1, x2)

inst_11581:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:34743*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34743*0 + 3*61*FLEN/8, x4, x1, x2)

inst_11582:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:34746*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34746*0 + 3*62*FLEN/8, x4, x1, x2)

inst_11583:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:34749*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34749*0 + 3*63*FLEN/8, x4, x1, x2)

inst_11584:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:34752*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34752*0 + 3*64*FLEN/8, x4, x1, x2)

inst_11585:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:34755*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34755*0 + 3*65*FLEN/8, x4, x1, x2)

inst_11586:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:34758*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34758*0 + 3*66*FLEN/8, x4, x1, x2)

inst_11587:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:34761*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34761*0 + 3*67*FLEN/8, x4, x1, x2)

inst_11588:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:34764*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34764*0 + 3*68*FLEN/8, x4, x1, x2)

inst_11589:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:34767*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34767*0 + 3*69*FLEN/8, x4, x1, x2)

inst_11590:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000000000000; valaddr_reg:x3; val_offset:34770*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34770*0 + 3*70*FLEN/8, x4, x1, x2)

inst_11591:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000000000001; valaddr_reg:x3; val_offset:34773*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34773*0 + 3*71*FLEN/8, x4, x1, x2)

inst_11592:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000000000003; valaddr_reg:x3; val_offset:34776*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34776*0 + 3*72*FLEN/8, x4, x1, x2)

inst_11593:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000000000007; valaddr_reg:x3; val_offset:34779*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34779*0 + 3*73*FLEN/8, x4, x1, x2)

inst_11594:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000000000000f; valaddr_reg:x3; val_offset:34782*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34782*0 + 3*74*FLEN/8, x4, x1, x2)

inst_11595:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000000000001f; valaddr_reg:x3; val_offset:34785*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34785*0 + 3*75*FLEN/8, x4, x1, x2)

inst_11596:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000000000003f; valaddr_reg:x3; val_offset:34788*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34788*0 + 3*76*FLEN/8, x4, x1, x2)

inst_11597:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000000000007f; valaddr_reg:x3; val_offset:34791*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34791*0 + 3*77*FLEN/8, x4, x1, x2)

inst_11598:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00000000000ff; valaddr_reg:x3; val_offset:34794*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34794*0 + 3*78*FLEN/8, x4, x1, x2)

inst_11599:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00000000001ff; valaddr_reg:x3; val_offset:34797*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34797*0 + 3*79*FLEN/8, x4, x1, x2)

inst_11600:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00000000003ff; valaddr_reg:x3; val_offset:34800*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34800*0 + 3*80*FLEN/8, x4, x1, x2)

inst_11601:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00000000007ff; valaddr_reg:x3; val_offset:34803*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34803*0 + 3*81*FLEN/8, x4, x1, x2)

inst_11602:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000000000fff; valaddr_reg:x3; val_offset:34806*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34806*0 + 3*82*FLEN/8, x4, x1, x2)

inst_11603:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000000001fff; valaddr_reg:x3; val_offset:34809*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34809*0 + 3*83*FLEN/8, x4, x1, x2)

inst_11604:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000000003fff; valaddr_reg:x3; val_offset:34812*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34812*0 + 3*84*FLEN/8, x4, x1, x2)

inst_11605:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000000007fff; valaddr_reg:x3; val_offset:34815*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34815*0 + 3*85*FLEN/8, x4, x1, x2)

inst_11606:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000000000ffff; valaddr_reg:x3; val_offset:34818*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34818*0 + 3*86*FLEN/8, x4, x1, x2)

inst_11607:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000000001ffff; valaddr_reg:x3; val_offset:34821*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34821*0 + 3*87*FLEN/8, x4, x1, x2)

inst_11608:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000000003ffff; valaddr_reg:x3; val_offset:34824*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34824*0 + 3*88*FLEN/8, x4, x1, x2)

inst_11609:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000000007ffff; valaddr_reg:x3; val_offset:34827*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34827*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11610:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00000000fffff; valaddr_reg:x3; val_offset:34830*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34830*0 + 3*90*FLEN/8, x4, x1, x2)

inst_11611:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00000001fffff; valaddr_reg:x3; val_offset:34833*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34833*0 + 3*91*FLEN/8, x4, x1, x2)

inst_11612:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00000003fffff; valaddr_reg:x3; val_offset:34836*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34836*0 + 3*92*FLEN/8, x4, x1, x2)

inst_11613:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00000007fffff; valaddr_reg:x3; val_offset:34839*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34839*0 + 3*93*FLEN/8, x4, x1, x2)

inst_11614:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000000ffffff; valaddr_reg:x3; val_offset:34842*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34842*0 + 3*94*FLEN/8, x4, x1, x2)

inst_11615:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000001ffffff; valaddr_reg:x3; val_offset:34845*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34845*0 + 3*95*FLEN/8, x4, x1, x2)

inst_11616:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000003ffffff; valaddr_reg:x3; val_offset:34848*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34848*0 + 3*96*FLEN/8, x4, x1, x2)

inst_11617:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000007ffffff; valaddr_reg:x3; val_offset:34851*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34851*0 + 3*97*FLEN/8, x4, x1, x2)

inst_11618:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000000fffffff; valaddr_reg:x3; val_offset:34854*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34854*0 + 3*98*FLEN/8, x4, x1, x2)

inst_11619:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000001fffffff; valaddr_reg:x3; val_offset:34857*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34857*0 + 3*99*FLEN/8, x4, x1, x2)

inst_11620:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000003fffffff; valaddr_reg:x3; val_offset:34860*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34860*0 + 3*100*FLEN/8, x4, x1, x2)

inst_11621:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000007fffffff; valaddr_reg:x3; val_offset:34863*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34863*0 + 3*101*FLEN/8, x4, x1, x2)

inst_11622:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00000ffffffff; valaddr_reg:x3; val_offset:34866*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34866*0 + 3*102*FLEN/8, x4, x1, x2)

inst_11623:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00001ffffffff; valaddr_reg:x3; val_offset:34869*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34869*0 + 3*103*FLEN/8, x4, x1, x2)

inst_11624:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00003ffffffff; valaddr_reg:x3; val_offset:34872*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34872*0 + 3*104*FLEN/8, x4, x1, x2)

inst_11625:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00007ffffffff; valaddr_reg:x3; val_offset:34875*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34875*0 + 3*105*FLEN/8, x4, x1, x2)

inst_11626:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0000fffffffff; valaddr_reg:x3; val_offset:34878*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34878*0 + 3*106*FLEN/8, x4, x1, x2)

inst_11627:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0001fffffffff; valaddr_reg:x3; val_offset:34881*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34881*0 + 3*107*FLEN/8, x4, x1, x2)

inst_11628:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0003fffffffff; valaddr_reg:x3; val_offset:34884*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34884*0 + 3*108*FLEN/8, x4, x1, x2)

inst_11629:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0007fffffffff; valaddr_reg:x3; val_offset:34887*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34887*0 + 3*109*FLEN/8, x4, x1, x2)

inst_11630:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c000ffffffffff; valaddr_reg:x3; val_offset:34890*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34890*0 + 3*110*FLEN/8, x4, x1, x2)

inst_11631:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c001ffffffffff; valaddr_reg:x3; val_offset:34893*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34893*0 + 3*111*FLEN/8, x4, x1, x2)

inst_11632:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c003ffffffffff; valaddr_reg:x3; val_offset:34896*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34896*0 + 3*112*FLEN/8, x4, x1, x2)

inst_11633:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c007ffffffffff; valaddr_reg:x3; val_offset:34899*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34899*0 + 3*113*FLEN/8, x4, x1, x2)

inst_11634:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c00fffffffffff; valaddr_reg:x3; val_offset:34902*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34902*0 + 3*114*FLEN/8, x4, x1, x2)

inst_11635:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c01fffffffffff; valaddr_reg:x3; val_offset:34905*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34905*0 + 3*115*FLEN/8, x4, x1, x2)

inst_11636:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c03fffffffffff; valaddr_reg:x3; val_offset:34908*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34908*0 + 3*116*FLEN/8, x4, x1, x2)

inst_11637:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c07fffffffffff; valaddr_reg:x3; val_offset:34911*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34911*0 + 3*117*FLEN/8, x4, x1, x2)

inst_11638:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c0ffffffffffff; valaddr_reg:x3; val_offset:34914*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34914*0 + 3*118*FLEN/8, x4, x1, x2)

inst_11639:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c1ffffffffffff; valaddr_reg:x3; val_offset:34917*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34917*0 + 3*119*FLEN/8, x4, x1, x2)

inst_11640:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c3ffffffffffff; valaddr_reg:x3; val_offset:34920*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34920*0 + 3*120*FLEN/8, x4, x1, x2)

inst_11641:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c7ffffffffffff; valaddr_reg:x3; val_offset:34923*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34923*0 + 3*121*FLEN/8, x4, x1, x2)

inst_11642:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92c8000000000000; valaddr_reg:x3; val_offset:34926*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34926*0 + 3*122*FLEN/8, x4, x1, x2)

inst_11643:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cc000000000000; valaddr_reg:x3; val_offset:34929*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34929*0 + 3*123*FLEN/8, x4, x1, x2)

inst_11644:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92ce000000000000; valaddr_reg:x3; val_offset:34932*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34932*0 + 3*124*FLEN/8, x4, x1, x2)

inst_11645:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cf000000000000; valaddr_reg:x3; val_offset:34935*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34935*0 + 3*125*FLEN/8, x4, x1, x2)

inst_11646:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cf800000000000; valaddr_reg:x3; val_offset:34938*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34938*0 + 3*126*FLEN/8, x4, x1, x2)

inst_11647:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfc00000000000; valaddr_reg:x3; val_offset:34941*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34941*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_11648:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfe00000000000; valaddr_reg:x3; val_offset:34944*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34944*0 + 3*128*FLEN/8, x4, x1, x2)

inst_11649:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cff00000000000; valaddr_reg:x3; val_offset:34947*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34947*0 + 3*129*FLEN/8, x4, x1, x2)

inst_11650:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cff80000000000; valaddr_reg:x3; val_offset:34950*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34950*0 + 3*130*FLEN/8, x4, x1, x2)

inst_11651:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffc0000000000; valaddr_reg:x3; val_offset:34953*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34953*0 + 3*131*FLEN/8, x4, x1, x2)

inst_11652:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffe0000000000; valaddr_reg:x3; val_offset:34956*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34956*0 + 3*132*FLEN/8, x4, x1, x2)

inst_11653:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfff0000000000; valaddr_reg:x3; val_offset:34959*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34959*0 + 3*133*FLEN/8, x4, x1, x2)

inst_11654:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfff8000000000; valaddr_reg:x3; val_offset:34962*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34962*0 + 3*134*FLEN/8, x4, x1, x2)

inst_11655:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffc000000000; valaddr_reg:x3; val_offset:34965*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34965*0 + 3*135*FLEN/8, x4, x1, x2)

inst_11656:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffe000000000; valaddr_reg:x3; val_offset:34968*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34968*0 + 3*136*FLEN/8, x4, x1, x2)

inst_11657:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffff000000000; valaddr_reg:x3; val_offset:34971*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34971*0 + 3*137*FLEN/8, x4, x1, x2)

inst_11658:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffff800000000; valaddr_reg:x3; val_offset:34974*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34974*0 + 3*138*FLEN/8, x4, x1, x2)

inst_11659:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffc00000000; valaddr_reg:x3; val_offset:34977*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34977*0 + 3*139*FLEN/8, x4, x1, x2)

inst_11660:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffe00000000; valaddr_reg:x3; val_offset:34980*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34980*0 + 3*140*FLEN/8, x4, x1, x2)

inst_11661:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffff00000000; valaddr_reg:x3; val_offset:34983*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34983*0 + 3*141*FLEN/8, x4, x1, x2)

inst_11662:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffff80000000; valaddr_reg:x3; val_offset:34986*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34986*0 + 3*142*FLEN/8, x4, x1, x2)

inst_11663:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffc0000000; valaddr_reg:x3; val_offset:34989*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34989*0 + 3*143*FLEN/8, x4, x1, x2)

inst_11664:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffe0000000; valaddr_reg:x3; val_offset:34992*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34992*0 + 3*144*FLEN/8, x4, x1, x2)

inst_11665:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffff0000000; valaddr_reg:x3; val_offset:34995*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34995*0 + 3*145*FLEN/8, x4, x1, x2)

inst_11666:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffff8000000; valaddr_reg:x3; val_offset:34998*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34998*0 + 3*146*FLEN/8, x4, x1, x2)

inst_11667:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffc000000; valaddr_reg:x3; val_offset:35001*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35001*0 + 3*147*FLEN/8, x4, x1, x2)

inst_11668:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffe000000; valaddr_reg:x3; val_offset:35004*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35004*0 + 3*148*FLEN/8, x4, x1, x2)

inst_11669:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffff000000; valaddr_reg:x3; val_offset:35007*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35007*0 + 3*149*FLEN/8, x4, x1, x2)

inst_11670:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffff800000; valaddr_reg:x3; val_offset:35010*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35010*0 + 3*150*FLEN/8, x4, x1, x2)

inst_11671:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffffc00000; valaddr_reg:x3; val_offset:35013*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35013*0 + 3*151*FLEN/8, x4, x1, x2)

inst_11672:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffffe00000; valaddr_reg:x3; val_offset:35016*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35016*0 + 3*152*FLEN/8, x4, x1, x2)

inst_11673:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffff00000; valaddr_reg:x3; val_offset:35019*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35019*0 + 3*153*FLEN/8, x4, x1, x2)

inst_11674:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffff80000; valaddr_reg:x3; val_offset:35022*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35022*0 + 3*154*FLEN/8, x4, x1, x2)

inst_11675:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffffc0000; valaddr_reg:x3; val_offset:35025*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35025*0 + 3*155*FLEN/8, x4, x1, x2)

inst_11676:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffffe0000; valaddr_reg:x3; val_offset:35028*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35028*0 + 3*156*FLEN/8, x4, x1, x2)

inst_11677:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffffff0000; valaddr_reg:x3; val_offset:35031*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35031*0 + 3*157*FLEN/8, x4, x1, x2)

inst_11678:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffffff8000; valaddr_reg:x3; val_offset:35034*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35034*0 + 3*158*FLEN/8, x4, x1, x2)

inst_11679:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffffffc000; valaddr_reg:x3; val_offset:35037*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35037*0 + 3*159*FLEN/8, x4, x1, x2)

inst_11680:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffffffe000; valaddr_reg:x3; val_offset:35040*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35040*0 + 3*160*FLEN/8, x4, x1, x2)

inst_11681:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffffff000; valaddr_reg:x3; val_offset:35043*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35043*0 + 3*161*FLEN/8, x4, x1, x2)

inst_11682:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffffff800; valaddr_reg:x3; val_offset:35046*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35046*0 + 3*162*FLEN/8, x4, x1, x2)

inst_11683:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffffffc00; valaddr_reg:x3; val_offset:35049*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35049*0 + 3*163*FLEN/8, x4, x1, x2)

inst_11684:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffffffe00; valaddr_reg:x3; val_offset:35052*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35052*0 + 3*164*FLEN/8, x4, x1, x2)

inst_11685:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffffffff00; valaddr_reg:x3; val_offset:35055*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35055*0 + 3*165*FLEN/8, x4, x1, x2)

inst_11686:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffffffff80; valaddr_reg:x3; val_offset:35058*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35058*0 + 3*166*FLEN/8, x4, x1, x2)

inst_11687:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffffffffc0; valaddr_reg:x3; val_offset:35061*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35061*0 + 3*167*FLEN/8, x4, x1, x2)

inst_11688:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffffffffe0; valaddr_reg:x3; val_offset:35064*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35064*0 + 3*168*FLEN/8, x4, x1, x2)

inst_11689:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffffffff0; valaddr_reg:x3; val_offset:35067*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35067*0 + 3*169*FLEN/8, x4, x1, x2)

inst_11690:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffffffff8; valaddr_reg:x3; val_offset:35070*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35070*0 + 3*170*FLEN/8, x4, x1, x2)

inst_11691:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffffffffc; valaddr_reg:x3; val_offset:35073*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35073*0 + 3*171*FLEN/8, x4, x1, x2)

inst_11692:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cffffffffffffe; valaddr_reg:x3; val_offset:35076*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35076*0 + 3*172*FLEN/8, x4, x1, x2)

inst_11693:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x7ee0eb8d7cc7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x12c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f77ee0eb8d7cc7f; op2val:0x8000;
op3val:0x92cfffffffffffff; valaddr_reg:x3; val_offset:35079*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35079*0 + 3*173*FLEN/8, x4, x1, x2)

inst_11694:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:35082*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35082*0 + 3*174*FLEN/8, x4, x1, x2)

inst_11695:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:35085*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35085*0 + 3*175*FLEN/8, x4, x1, x2)

inst_11696:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:35088*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35088*0 + 3*176*FLEN/8, x4, x1, x2)

inst_11697:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:35091*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35091*0 + 3*177*FLEN/8, x4, x1, x2)

inst_11698:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:35094*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35094*0 + 3*178*FLEN/8, x4, x1, x2)

inst_11699:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:35097*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35097*0 + 3*179*FLEN/8, x4, x1, x2)

inst_11700:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:35100*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35100*0 + 3*180*FLEN/8, x4, x1, x2)

inst_11701:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:35103*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35103*0 + 3*181*FLEN/8, x4, x1, x2)

inst_11702:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:35106*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35106*0 + 3*182*FLEN/8, x4, x1, x2)

inst_11703:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:35109*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35109*0 + 3*183*FLEN/8, x4, x1, x2)

inst_11704:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:35112*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35112*0 + 3*184*FLEN/8, x4, x1, x2)

inst_11705:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:35115*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35115*0 + 3*185*FLEN/8, x4, x1, x2)

inst_11706:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:35118*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35118*0 + 3*186*FLEN/8, x4, x1, x2)

inst_11707:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:35121*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35121*0 + 3*187*FLEN/8, x4, x1, x2)

inst_11708:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:35124*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35124*0 + 3*188*FLEN/8, x4, x1, x2)

inst_11709:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:35127*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35127*0 + 3*189*FLEN/8, x4, x1, x2)

inst_11710:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:35130*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35130*0 + 3*190*FLEN/8, x4, x1, x2)

inst_11711:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:35133*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35133*0 + 3*191*FLEN/8, x4, x1, x2)

inst_11712:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:35136*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35136*0 + 3*192*FLEN/8, x4, x1, x2)

inst_11713:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:35139*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35139*0 + 3*193*FLEN/8, x4, x1, x2)

inst_11714:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:35142*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35142*0 + 3*194*FLEN/8, x4, x1, x2)

inst_11715:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:35145*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35145*0 + 3*195*FLEN/8, x4, x1, x2)

inst_11716:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000000000000; valaddr_reg:x3; val_offset:35148*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35148*0 + 3*196*FLEN/8, x4, x1, x2)

inst_11717:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000000000001; valaddr_reg:x3; val_offset:35151*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35151*0 + 3*197*FLEN/8, x4, x1, x2)

inst_11718:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000000000003; valaddr_reg:x3; val_offset:35154*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35154*0 + 3*198*FLEN/8, x4, x1, x2)

inst_11719:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000000000007; valaddr_reg:x3; val_offset:35157*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35157*0 + 3*199*FLEN/8, x4, x1, x2)

inst_11720:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000000000000f; valaddr_reg:x3; val_offset:35160*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35160*0 + 3*200*FLEN/8, x4, x1, x2)

inst_11721:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000000000001f; valaddr_reg:x3; val_offset:35163*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35163*0 + 3*201*FLEN/8, x4, x1, x2)

inst_11722:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000000000003f; valaddr_reg:x3; val_offset:35166*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35166*0 + 3*202*FLEN/8, x4, x1, x2)

inst_11723:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000000000007f; valaddr_reg:x3; val_offset:35169*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35169*0 + 3*203*FLEN/8, x4, x1, x2)

inst_11724:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00000000000ff; valaddr_reg:x3; val_offset:35172*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35172*0 + 3*204*FLEN/8, x4, x1, x2)

inst_11725:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00000000001ff; valaddr_reg:x3; val_offset:35175*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35175*0 + 3*205*FLEN/8, x4, x1, x2)

inst_11726:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00000000003ff; valaddr_reg:x3; val_offset:35178*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35178*0 + 3*206*FLEN/8, x4, x1, x2)

inst_11727:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00000000007ff; valaddr_reg:x3; val_offset:35181*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35181*0 + 3*207*FLEN/8, x4, x1, x2)

inst_11728:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000000000fff; valaddr_reg:x3; val_offset:35184*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35184*0 + 3*208*FLEN/8, x4, x1, x2)

inst_11729:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000000001fff; valaddr_reg:x3; val_offset:35187*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35187*0 + 3*209*FLEN/8, x4, x1, x2)

inst_11730:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000000003fff; valaddr_reg:x3; val_offset:35190*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35190*0 + 3*210*FLEN/8, x4, x1, x2)

inst_11731:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000000007fff; valaddr_reg:x3; val_offset:35193*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35193*0 + 3*211*FLEN/8, x4, x1, x2)

inst_11732:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000000000ffff; valaddr_reg:x3; val_offset:35196*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35196*0 + 3*212*FLEN/8, x4, x1, x2)

inst_11733:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000000001ffff; valaddr_reg:x3; val_offset:35199*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35199*0 + 3*213*FLEN/8, x4, x1, x2)

inst_11734:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000000003ffff; valaddr_reg:x3; val_offset:35202*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35202*0 + 3*214*FLEN/8, x4, x1, x2)

inst_11735:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000000007ffff; valaddr_reg:x3; val_offset:35205*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35205*0 + 3*215*FLEN/8, x4, x1, x2)

inst_11736:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00000000fffff; valaddr_reg:x3; val_offset:35208*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35208*0 + 3*216*FLEN/8, x4, x1, x2)

inst_11737:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00000001fffff; valaddr_reg:x3; val_offset:35211*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35211*0 + 3*217*FLEN/8, x4, x1, x2)

inst_11738:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00000003fffff; valaddr_reg:x3; val_offset:35214*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35214*0 + 3*218*FLEN/8, x4, x1, x2)

inst_11739:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00000007fffff; valaddr_reg:x3; val_offset:35217*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35217*0 + 3*219*FLEN/8, x4, x1, x2)

inst_11740:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000000ffffff; valaddr_reg:x3; val_offset:35220*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35220*0 + 3*220*FLEN/8, x4, x1, x2)

inst_11741:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000001ffffff; valaddr_reg:x3; val_offset:35223*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35223*0 + 3*221*FLEN/8, x4, x1, x2)

inst_11742:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000003ffffff; valaddr_reg:x3; val_offset:35226*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35226*0 + 3*222*FLEN/8, x4, x1, x2)

inst_11743:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000007ffffff; valaddr_reg:x3; val_offset:35229*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35229*0 + 3*223*FLEN/8, x4, x1, x2)

inst_11744:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000000fffffff; valaddr_reg:x3; val_offset:35232*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35232*0 + 3*224*FLEN/8, x4, x1, x2)

inst_11745:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000001fffffff; valaddr_reg:x3; val_offset:35235*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35235*0 + 3*225*FLEN/8, x4, x1, x2)

inst_11746:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000003fffffff; valaddr_reg:x3; val_offset:35238*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35238*0 + 3*226*FLEN/8, x4, x1, x2)

inst_11747:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000007fffffff; valaddr_reg:x3; val_offset:35241*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35241*0 + 3*227*FLEN/8, x4, x1, x2)

inst_11748:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00000ffffffff; valaddr_reg:x3; val_offset:35244*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35244*0 + 3*228*FLEN/8, x4, x1, x2)

inst_11749:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00001ffffffff; valaddr_reg:x3; val_offset:35247*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35247*0 + 3*229*FLEN/8, x4, x1, x2)

inst_11750:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00003ffffffff; valaddr_reg:x3; val_offset:35250*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35250*0 + 3*230*FLEN/8, x4, x1, x2)

inst_11751:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00007ffffffff; valaddr_reg:x3; val_offset:35253*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35253*0 + 3*231*FLEN/8, x4, x1, x2)

inst_11752:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0000fffffffff; valaddr_reg:x3; val_offset:35256*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35256*0 + 3*232*FLEN/8, x4, x1, x2)

inst_11753:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0001fffffffff; valaddr_reg:x3; val_offset:35259*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35259*0 + 3*233*FLEN/8, x4, x1, x2)

inst_11754:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0003fffffffff; valaddr_reg:x3; val_offset:35262*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35262*0 + 3*234*FLEN/8, x4, x1, x2)

inst_11755:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0007fffffffff; valaddr_reg:x3; val_offset:35265*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35265*0 + 3*235*FLEN/8, x4, x1, x2)

inst_11756:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb000ffffffffff; valaddr_reg:x3; val_offset:35268*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35268*0 + 3*236*FLEN/8, x4, x1, x2)

inst_11757:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb001ffffffffff; valaddr_reg:x3; val_offset:35271*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35271*0 + 3*237*FLEN/8, x4, x1, x2)

inst_11758:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb003ffffffffff; valaddr_reg:x3; val_offset:35274*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35274*0 + 3*238*FLEN/8, x4, x1, x2)

inst_11759:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb007ffffffffff; valaddr_reg:x3; val_offset:35277*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35277*0 + 3*239*FLEN/8, x4, x1, x2)

inst_11760:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb00fffffffffff; valaddr_reg:x3; val_offset:35280*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35280*0 + 3*240*FLEN/8, x4, x1, x2)

inst_11761:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb01fffffffffff; valaddr_reg:x3; val_offset:35283*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35283*0 + 3*241*FLEN/8, x4, x1, x2)

inst_11762:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb03fffffffffff; valaddr_reg:x3; val_offset:35286*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35286*0 + 3*242*FLEN/8, x4, x1, x2)

inst_11763:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb07fffffffffff; valaddr_reg:x3; val_offset:35289*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35289*0 + 3*243*FLEN/8, x4, x1, x2)

inst_11764:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb0ffffffffffff; valaddr_reg:x3; val_offset:35292*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35292*0 + 3*244*FLEN/8, x4, x1, x2)

inst_11765:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb1ffffffffffff; valaddr_reg:x3; val_offset:35295*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35295*0 + 3*245*FLEN/8, x4, x1, x2)

inst_11766:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb3ffffffffffff; valaddr_reg:x3; val_offset:35298*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35298*0 + 3*246*FLEN/8, x4, x1, x2)

inst_11767:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb7ffffffffffff; valaddr_reg:x3; val_offset:35301*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35301*0 + 3*247*FLEN/8, x4, x1, x2)

inst_11768:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xb8000000000000; valaddr_reg:x3; val_offset:35304*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35304*0 + 3*248*FLEN/8, x4, x1, x2)

inst_11769:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbc000000000000; valaddr_reg:x3; val_offset:35307*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35307*0 + 3*249*FLEN/8, x4, x1, x2)

inst_11770:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbe000000000000; valaddr_reg:x3; val_offset:35310*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35310*0 + 3*250*FLEN/8, x4, x1, x2)

inst_11771:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbf000000000000; valaddr_reg:x3; val_offset:35313*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35313*0 + 3*251*FLEN/8, x4, x1, x2)

inst_11772:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbf800000000000; valaddr_reg:x3; val_offset:35316*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35316*0 + 3*252*FLEN/8, x4, x1, x2)

inst_11773:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfc00000000000; valaddr_reg:x3; val_offset:35319*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35319*0 + 3*253*FLEN/8, x4, x1, x2)

inst_11774:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfe00000000000; valaddr_reg:x3; val_offset:35322*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35322*0 + 3*254*FLEN/8, x4, x1, x2)

inst_11775:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbff00000000000; valaddr_reg:x3; val_offset:35325*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35325*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_11776:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbff80000000000; valaddr_reg:x3; val_offset:35328*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35328*0 + 3*256*FLEN/8, x4, x1, x2)

inst_11777:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffc0000000000; valaddr_reg:x3; val_offset:35331*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35331*0 + 3*257*FLEN/8, x4, x1, x2)

inst_11778:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffe0000000000; valaddr_reg:x3; val_offset:35334*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35334*0 + 3*258*FLEN/8, x4, x1, x2)

inst_11779:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfff0000000000; valaddr_reg:x3; val_offset:35337*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35337*0 + 3*259*FLEN/8, x4, x1, x2)

inst_11780:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfff8000000000; valaddr_reg:x3; val_offset:35340*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35340*0 + 3*260*FLEN/8, x4, x1, x2)

inst_11781:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffc000000000; valaddr_reg:x3; val_offset:35343*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35343*0 + 3*261*FLEN/8, x4, x1, x2)

inst_11782:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffe000000000; valaddr_reg:x3; val_offset:35346*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35346*0 + 3*262*FLEN/8, x4, x1, x2)

inst_11783:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffff000000000; valaddr_reg:x3; val_offset:35349*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35349*0 + 3*263*FLEN/8, x4, x1, x2)

inst_11784:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffff800000000; valaddr_reg:x3; val_offset:35352*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35352*0 + 3*264*FLEN/8, x4, x1, x2)

inst_11785:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffc00000000; valaddr_reg:x3; val_offset:35355*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35355*0 + 3*265*FLEN/8, x4, x1, x2)

inst_11786:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffe00000000; valaddr_reg:x3; val_offset:35358*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35358*0 + 3*266*FLEN/8, x4, x1, x2)

inst_11787:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffff00000000; valaddr_reg:x3; val_offset:35361*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35361*0 + 3*267*FLEN/8, x4, x1, x2)

inst_11788:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffff80000000; valaddr_reg:x3; val_offset:35364*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35364*0 + 3*268*FLEN/8, x4, x1, x2)

inst_11789:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffc0000000; valaddr_reg:x3; val_offset:35367*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35367*0 + 3*269*FLEN/8, x4, x1, x2)

inst_11790:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffe0000000; valaddr_reg:x3; val_offset:35370*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35370*0 + 3*270*FLEN/8, x4, x1, x2)

inst_11791:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffff0000000; valaddr_reg:x3; val_offset:35373*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35373*0 + 3*271*FLEN/8, x4, x1, x2)

inst_11792:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffff8000000; valaddr_reg:x3; val_offset:35376*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35376*0 + 3*272*FLEN/8, x4, x1, x2)

inst_11793:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffc000000; valaddr_reg:x3; val_offset:35379*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35379*0 + 3*273*FLEN/8, x4, x1, x2)

inst_11794:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffe000000; valaddr_reg:x3; val_offset:35382*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35382*0 + 3*274*FLEN/8, x4, x1, x2)

inst_11795:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffff000000; valaddr_reg:x3; val_offset:35385*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35385*0 + 3*275*FLEN/8, x4, x1, x2)

inst_11796:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffff800000; valaddr_reg:x3; val_offset:35388*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35388*0 + 3*276*FLEN/8, x4, x1, x2)

inst_11797:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffffc00000; valaddr_reg:x3; val_offset:35391*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35391*0 + 3*277*FLEN/8, x4, x1, x2)

inst_11798:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffffe00000; valaddr_reg:x3; val_offset:35394*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35394*0 + 3*278*FLEN/8, x4, x1, x2)

inst_11799:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffff00000; valaddr_reg:x3; val_offset:35397*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35397*0 + 3*279*FLEN/8, x4, x1, x2)

inst_11800:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffff80000; valaddr_reg:x3; val_offset:35400*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35400*0 + 3*280*FLEN/8, x4, x1, x2)

inst_11801:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffffc0000; valaddr_reg:x3; val_offset:35403*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35403*0 + 3*281*FLEN/8, x4, x1, x2)

inst_11802:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffffe0000; valaddr_reg:x3; val_offset:35406*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35406*0 + 3*282*FLEN/8, x4, x1, x2)

inst_11803:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffffff0000; valaddr_reg:x3; val_offset:35409*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35409*0 + 3*283*FLEN/8, x4, x1, x2)

inst_11804:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffffff8000; valaddr_reg:x3; val_offset:35412*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35412*0 + 3*284*FLEN/8, x4, x1, x2)

inst_11805:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffffffc000; valaddr_reg:x3; val_offset:35415*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35415*0 + 3*285*FLEN/8, x4, x1, x2)

inst_11806:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffffffe000; valaddr_reg:x3; val_offset:35418*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35418*0 + 3*286*FLEN/8, x4, x1, x2)

inst_11807:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffffff000; valaddr_reg:x3; val_offset:35421*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35421*0 + 3*287*FLEN/8, x4, x1, x2)

inst_11808:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffffff800; valaddr_reg:x3; val_offset:35424*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35424*0 + 3*288*FLEN/8, x4, x1, x2)

inst_11809:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffffffc00; valaddr_reg:x3; val_offset:35427*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35427*0 + 3*289*FLEN/8, x4, x1, x2)

inst_11810:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffffffe00; valaddr_reg:x3; val_offset:35430*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35430*0 + 3*290*FLEN/8, x4, x1, x2)

inst_11811:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffffffff00; valaddr_reg:x3; val_offset:35433*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35433*0 + 3*291*FLEN/8, x4, x1, x2)

inst_11812:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffffffff80; valaddr_reg:x3; val_offset:35436*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35436*0 + 3*292*FLEN/8, x4, x1, x2)

inst_11813:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffffffffc0; valaddr_reg:x3; val_offset:35439*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35439*0 + 3*293*FLEN/8, x4, x1, x2)

inst_11814:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffffffffe0; valaddr_reg:x3; val_offset:35442*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35442*0 + 3*294*FLEN/8, x4, x1, x2)

inst_11815:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffffffff0; valaddr_reg:x3; val_offset:35445*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35445*0 + 3*295*FLEN/8, x4, x1, x2)

inst_11816:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffffffff8; valaddr_reg:x3; val_offset:35448*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35448*0 + 3*296*FLEN/8, x4, x1, x2)

inst_11817:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffffffffc; valaddr_reg:x3; val_offset:35451*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35451*0 + 3*297*FLEN/8, x4, x1, x2)

inst_11818:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbffffffffffffe; valaddr_reg:x3; val_offset:35454*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35454*0 + 3*298*FLEN/8, x4, x1, x2)

inst_11819:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x846d433c9adbf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7846d433c9adbf; op2val:0x0;
op3val:0xbfffffffffffff; valaddr_reg:x3; val_offset:35457*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35457*0 + 3*299*FLEN/8, x4, x1, x2)

inst_11820:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:35460*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35460*0 + 3*300*FLEN/8, x4, x1, x2)

inst_11821:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:35463*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35463*0 + 3*301*FLEN/8, x4, x1, x2)

inst_11822:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:35466*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35466*0 + 3*302*FLEN/8, x4, x1, x2)

inst_11823:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:35469*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35469*0 + 3*303*FLEN/8, x4, x1, x2)

inst_11824:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:35472*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35472*0 + 3*304*FLEN/8, x4, x1, x2)

inst_11825:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:35475*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35475*0 + 3*305*FLEN/8, x4, x1, x2)

inst_11826:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:35478*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35478*0 + 3*306*FLEN/8, x4, x1, x2)

inst_11827:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:35481*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35481*0 + 3*307*FLEN/8, x4, x1, x2)

inst_11828:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:35484*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35484*0 + 3*308*FLEN/8, x4, x1, x2)

inst_11829:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:35487*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35487*0 + 3*309*FLEN/8, x4, x1, x2)

inst_11830:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:35490*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35490*0 + 3*310*FLEN/8, x4, x1, x2)

inst_11831:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:35493*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35493*0 + 3*311*FLEN/8, x4, x1, x2)

inst_11832:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:35496*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35496*0 + 3*312*FLEN/8, x4, x1, x2)

inst_11833:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:35499*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35499*0 + 3*313*FLEN/8, x4, x1, x2)

inst_11834:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:35502*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35502*0 + 3*314*FLEN/8, x4, x1, x2)

inst_11835:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:35505*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35505*0 + 3*315*FLEN/8, x4, x1, x2)

inst_11836:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:35508*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35508*0 + 3*316*FLEN/8, x4, x1, x2)

inst_11837:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:35511*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35511*0 + 3*317*FLEN/8, x4, x1, x2)

inst_11838:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:35514*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35514*0 + 3*318*FLEN/8, x4, x1, x2)

inst_11839:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:35517*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35517*0 + 3*319*FLEN/8, x4, x1, x2)

inst_11840:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:35520*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35520*0 + 3*320*FLEN/8, x4, x1, x2)

inst_11841:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:35523*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35523*0 + 3*321*FLEN/8, x4, x1, x2)

inst_11842:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000000000000; valaddr_reg:x3; val_offset:35526*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35526*0 + 3*322*FLEN/8, x4, x1, x2)

inst_11843:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000000000001; valaddr_reg:x3; val_offset:35529*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35529*0 + 3*323*FLEN/8, x4, x1, x2)

inst_11844:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000000000003; valaddr_reg:x3; val_offset:35532*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35532*0 + 3*324*FLEN/8, x4, x1, x2)

inst_11845:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000000000007; valaddr_reg:x3; val_offset:35535*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35535*0 + 3*325*FLEN/8, x4, x1, x2)

inst_11846:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000000000000f; valaddr_reg:x3; val_offset:35538*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35538*0 + 3*326*FLEN/8, x4, x1, x2)

inst_11847:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000000000001f; valaddr_reg:x3; val_offset:35541*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35541*0 + 3*327*FLEN/8, x4, x1, x2)

inst_11848:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000000000003f; valaddr_reg:x3; val_offset:35544*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35544*0 + 3*328*FLEN/8, x4, x1, x2)

inst_11849:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000000000007f; valaddr_reg:x3; val_offset:35547*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35547*0 + 3*329*FLEN/8, x4, x1, x2)

inst_11850:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200000000000ff; valaddr_reg:x3; val_offset:35550*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35550*0 + 3*330*FLEN/8, x4, x1, x2)

inst_11851:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200000000001ff; valaddr_reg:x3; val_offset:35553*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35553*0 + 3*331*FLEN/8, x4, x1, x2)

inst_11852:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200000000003ff; valaddr_reg:x3; val_offset:35556*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35556*0 + 3*332*FLEN/8, x4, x1, x2)

inst_11853:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200000000007ff; valaddr_reg:x3; val_offset:35559*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35559*0 + 3*333*FLEN/8, x4, x1, x2)

inst_11854:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000000000fff; valaddr_reg:x3; val_offset:35562*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35562*0 + 3*334*FLEN/8, x4, x1, x2)

inst_11855:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000000001fff; valaddr_reg:x3; val_offset:35565*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35565*0 + 3*335*FLEN/8, x4, x1, x2)

inst_11856:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000000003fff; valaddr_reg:x3; val_offset:35568*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35568*0 + 3*336*FLEN/8, x4, x1, x2)

inst_11857:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000000007fff; valaddr_reg:x3; val_offset:35571*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35571*0 + 3*337*FLEN/8, x4, x1, x2)

inst_11858:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000000000ffff; valaddr_reg:x3; val_offset:35574*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35574*0 + 3*338*FLEN/8, x4, x1, x2)

inst_11859:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000000001ffff; valaddr_reg:x3; val_offset:35577*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35577*0 + 3*339*FLEN/8, x4, x1, x2)

inst_11860:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000000003ffff; valaddr_reg:x3; val_offset:35580*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35580*0 + 3*340*FLEN/8, x4, x1, x2)

inst_11861:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000000007ffff; valaddr_reg:x3; val_offset:35583*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35583*0 + 3*341*FLEN/8, x4, x1, x2)

inst_11862:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200000000fffff; valaddr_reg:x3; val_offset:35586*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35586*0 + 3*342*FLEN/8, x4, x1, x2)

inst_11863:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200000001fffff; valaddr_reg:x3; val_offset:35589*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35589*0 + 3*343*FLEN/8, x4, x1, x2)

inst_11864:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200000003fffff; valaddr_reg:x3; val_offset:35592*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35592*0 + 3*344*FLEN/8, x4, x1, x2)

inst_11865:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200000007fffff; valaddr_reg:x3; val_offset:35595*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35595*0 + 3*345*FLEN/8, x4, x1, x2)

inst_11866:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000000ffffff; valaddr_reg:x3; val_offset:35598*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35598*0 + 3*346*FLEN/8, x4, x1, x2)

inst_11867:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000001ffffff; valaddr_reg:x3; val_offset:35601*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35601*0 + 3*347*FLEN/8, x4, x1, x2)

inst_11868:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000003ffffff; valaddr_reg:x3; val_offset:35604*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35604*0 + 3*348*FLEN/8, x4, x1, x2)

inst_11869:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000007ffffff; valaddr_reg:x3; val_offset:35607*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35607*0 + 3*349*FLEN/8, x4, x1, x2)

inst_11870:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000000fffffff; valaddr_reg:x3; val_offset:35610*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35610*0 + 3*350*FLEN/8, x4, x1, x2)

inst_11871:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000001fffffff; valaddr_reg:x3; val_offset:35613*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35613*0 + 3*351*FLEN/8, x4, x1, x2)

inst_11872:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000003fffffff; valaddr_reg:x3; val_offset:35616*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35616*0 + 3*352*FLEN/8, x4, x1, x2)

inst_11873:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000007fffffff; valaddr_reg:x3; val_offset:35619*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35619*0 + 3*353*FLEN/8, x4, x1, x2)

inst_11874:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200000ffffffff; valaddr_reg:x3; val_offset:35622*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35622*0 + 3*354*FLEN/8, x4, x1, x2)

inst_11875:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200001ffffffff; valaddr_reg:x3; val_offset:35625*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35625*0 + 3*355*FLEN/8, x4, x1, x2)

inst_11876:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200003ffffffff; valaddr_reg:x3; val_offset:35628*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35628*0 + 3*356*FLEN/8, x4, x1, x2)

inst_11877:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200007ffffffff; valaddr_reg:x3; val_offset:35631*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35631*0 + 3*357*FLEN/8, x4, x1, x2)

inst_11878:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120000fffffffff; valaddr_reg:x3; val_offset:35634*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35634*0 + 3*358*FLEN/8, x4, x1, x2)

inst_11879:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120001fffffffff; valaddr_reg:x3; val_offset:35637*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35637*0 + 3*359*FLEN/8, x4, x1, x2)

inst_11880:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120003fffffffff; valaddr_reg:x3; val_offset:35640*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35640*0 + 3*360*FLEN/8, x4, x1, x2)

inst_11881:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120007fffffffff; valaddr_reg:x3; val_offset:35643*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35643*0 + 3*361*FLEN/8, x4, x1, x2)

inst_11882:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812000ffffffffff; valaddr_reg:x3; val_offset:35646*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35646*0 + 3*362*FLEN/8, x4, x1, x2)

inst_11883:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812001ffffffffff; valaddr_reg:x3; val_offset:35649*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35649*0 + 3*363*FLEN/8, x4, x1, x2)

inst_11884:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812003ffffffffff; valaddr_reg:x3; val_offset:35652*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35652*0 + 3*364*FLEN/8, x4, x1, x2)

inst_11885:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812007ffffffffff; valaddr_reg:x3; val_offset:35655*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35655*0 + 3*365*FLEN/8, x4, x1, x2)

inst_11886:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81200fffffffffff; valaddr_reg:x3; val_offset:35658*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35658*0 + 3*366*FLEN/8, x4, x1, x2)

inst_11887:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81201fffffffffff; valaddr_reg:x3; val_offset:35661*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35661*0 + 3*367*FLEN/8, x4, x1, x2)

inst_11888:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81203fffffffffff; valaddr_reg:x3; val_offset:35664*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35664*0 + 3*368*FLEN/8, x4, x1, x2)

inst_11889:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x81207fffffffffff; valaddr_reg:x3; val_offset:35667*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35667*0 + 3*369*FLEN/8, x4, x1, x2)

inst_11890:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8120ffffffffffff; valaddr_reg:x3; val_offset:35670*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35670*0 + 3*370*FLEN/8, x4, x1, x2)

inst_11891:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8121ffffffffffff; valaddr_reg:x3; val_offset:35673*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35673*0 + 3*371*FLEN/8, x4, x1, x2)

inst_11892:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8123ffffffffffff; valaddr_reg:x3; val_offset:35676*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35676*0 + 3*372*FLEN/8, x4, x1, x2)

inst_11893:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8127ffffffffffff; valaddr_reg:x3; val_offset:35679*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35679*0 + 3*373*FLEN/8, x4, x1, x2)

inst_11894:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x8128000000000000; valaddr_reg:x3; val_offset:35682*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35682*0 + 3*374*FLEN/8, x4, x1, x2)

inst_11895:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812c000000000000; valaddr_reg:x3; val_offset:35685*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35685*0 + 3*375*FLEN/8, x4, x1, x2)

inst_11896:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812e000000000000; valaddr_reg:x3; val_offset:35688*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35688*0 + 3*376*FLEN/8, x4, x1, x2)

inst_11897:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812f000000000000; valaddr_reg:x3; val_offset:35691*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35691*0 + 3*377*FLEN/8, x4, x1, x2)

inst_11898:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812f800000000000; valaddr_reg:x3; val_offset:35694*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35694*0 + 3*378*FLEN/8, x4, x1, x2)

inst_11899:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fc00000000000; valaddr_reg:x3; val_offset:35697*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35697*0 + 3*379*FLEN/8, x4, x1, x2)

inst_11900:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fe00000000000; valaddr_reg:x3; val_offset:35700*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35700*0 + 3*380*FLEN/8, x4, x1, x2)

inst_11901:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ff00000000000; valaddr_reg:x3; val_offset:35703*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35703*0 + 3*381*FLEN/8, x4, x1, x2)

inst_11902:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ff80000000000; valaddr_reg:x3; val_offset:35706*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35706*0 + 3*382*FLEN/8, x4, x1, x2)

inst_11903:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffc0000000000; valaddr_reg:x3; val_offset:35709*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35709*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_11904:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffe0000000000; valaddr_reg:x3; val_offset:35712*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35712*0 + 3*384*FLEN/8, x4, x1, x2)

inst_11905:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fff0000000000; valaddr_reg:x3; val_offset:35715*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35715*0 + 3*385*FLEN/8, x4, x1, x2)

inst_11906:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fff8000000000; valaddr_reg:x3; val_offset:35718*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35718*0 + 3*386*FLEN/8, x4, x1, x2)

inst_11907:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffc000000000; valaddr_reg:x3; val_offset:35721*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35721*0 + 3*387*FLEN/8, x4, x1, x2)

inst_11908:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffe000000000; valaddr_reg:x3; val_offset:35724*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35724*0 + 3*388*FLEN/8, x4, x1, x2)

inst_11909:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffff000000000; valaddr_reg:x3; val_offset:35727*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35727*0 + 3*389*FLEN/8, x4, x1, x2)

inst_11910:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffff800000000; valaddr_reg:x3; val_offset:35730*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35730*0 + 3*390*FLEN/8, x4, x1, x2)

inst_11911:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffc00000000; valaddr_reg:x3; val_offset:35733*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35733*0 + 3*391*FLEN/8, x4, x1, x2)

inst_11912:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffe00000000; valaddr_reg:x3; val_offset:35736*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35736*0 + 3*392*FLEN/8, x4, x1, x2)

inst_11913:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffff00000000; valaddr_reg:x3; val_offset:35739*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35739*0 + 3*393*FLEN/8, x4, x1, x2)

inst_11914:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffff80000000; valaddr_reg:x3; val_offset:35742*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35742*0 + 3*394*FLEN/8, x4, x1, x2)

inst_11915:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffc0000000; valaddr_reg:x3; val_offset:35745*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35745*0 + 3*395*FLEN/8, x4, x1, x2)

inst_11916:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffe0000000; valaddr_reg:x3; val_offset:35748*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35748*0 + 3*396*FLEN/8, x4, x1, x2)

inst_11917:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffff0000000; valaddr_reg:x3; val_offset:35751*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35751*0 + 3*397*FLEN/8, x4, x1, x2)

inst_11918:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffff8000000; valaddr_reg:x3; val_offset:35754*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35754*0 + 3*398*FLEN/8, x4, x1, x2)

inst_11919:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffc000000; valaddr_reg:x3; val_offset:35757*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35757*0 + 3*399*FLEN/8, x4, x1, x2)

inst_11920:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffe000000; valaddr_reg:x3; val_offset:35760*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35760*0 + 3*400*FLEN/8, x4, x1, x2)

inst_11921:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffff000000; valaddr_reg:x3; val_offset:35763*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35763*0 + 3*401*FLEN/8, x4, x1, x2)

inst_11922:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffff800000; valaddr_reg:x3; val_offset:35766*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35766*0 + 3*402*FLEN/8, x4, x1, x2)

inst_11923:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffffc00000; valaddr_reg:x3; val_offset:35769*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35769*0 + 3*403*FLEN/8, x4, x1, x2)

inst_11924:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffffe00000; valaddr_reg:x3; val_offset:35772*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35772*0 + 3*404*FLEN/8, x4, x1, x2)

inst_11925:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffff00000; valaddr_reg:x3; val_offset:35775*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35775*0 + 3*405*FLEN/8, x4, x1, x2)

inst_11926:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffff80000; valaddr_reg:x3; val_offset:35778*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35778*0 + 3*406*FLEN/8, x4, x1, x2)

inst_11927:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffffc0000; valaddr_reg:x3; val_offset:35781*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35781*0 + 3*407*FLEN/8, x4, x1, x2)

inst_11928:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffffe0000; valaddr_reg:x3; val_offset:35784*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35784*0 + 3*408*FLEN/8, x4, x1, x2)

inst_11929:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffffff0000; valaddr_reg:x3; val_offset:35787*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35787*0 + 3*409*FLEN/8, x4, x1, x2)

inst_11930:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffffff8000; valaddr_reg:x3; val_offset:35790*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35790*0 + 3*410*FLEN/8, x4, x1, x2)

inst_11931:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffffffc000; valaddr_reg:x3; val_offset:35793*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35793*0 + 3*411*FLEN/8, x4, x1, x2)

inst_11932:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffffffe000; valaddr_reg:x3; val_offset:35796*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35796*0 + 3*412*FLEN/8, x4, x1, x2)

inst_11933:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffffff000; valaddr_reg:x3; val_offset:35799*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35799*0 + 3*413*FLEN/8, x4, x1, x2)

inst_11934:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffffff800; valaddr_reg:x3; val_offset:35802*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35802*0 + 3*414*FLEN/8, x4, x1, x2)

inst_11935:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffffffc00; valaddr_reg:x3; val_offset:35805*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35805*0 + 3*415*FLEN/8, x4, x1, x2)

inst_11936:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffffffe00; valaddr_reg:x3; val_offset:35808*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35808*0 + 3*416*FLEN/8, x4, x1, x2)

inst_11937:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffffffff00; valaddr_reg:x3; val_offset:35811*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35811*0 + 3*417*FLEN/8, x4, x1, x2)

inst_11938:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffffffff80; valaddr_reg:x3; val_offset:35814*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35814*0 + 3*418*FLEN/8, x4, x1, x2)

inst_11939:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffffffffc0; valaddr_reg:x3; val_offset:35817*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35817*0 + 3*419*FLEN/8, x4, x1, x2)

inst_11940:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffffffffe0; valaddr_reg:x3; val_offset:35820*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35820*0 + 3*420*FLEN/8, x4, x1, x2)

inst_11941:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffffffff0; valaddr_reg:x3; val_offset:35823*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35823*0 + 3*421*FLEN/8, x4, x1, x2)

inst_11942:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffffffff8; valaddr_reg:x3; val_offset:35826*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35826*0 + 3*422*FLEN/8, x4, x1, x2)

inst_11943:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffffffffc; valaddr_reg:x3; val_offset:35829*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35829*0 + 3*423*FLEN/8, x4, x1, x2)

inst_11944:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812ffffffffffffe; valaddr_reg:x3; val_offset:35832*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35832*0 + 3*424*FLEN/8, x4, x1, x2)

inst_11945:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x94665da70c367 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f794665da70c367; op2val:0x8000;
op3val:0x812fffffffffffff; valaddr_reg:x3; val_offset:35835*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35835*0 + 3*425*FLEN/8, x4, x1, x2)

inst_11946:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:35838*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35838*0 + 3*426*FLEN/8, x4, x1, x2)

inst_11947:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:35841*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35841*0 + 3*427*FLEN/8, x4, x1, x2)

inst_11948:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:35844*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35844*0 + 3*428*FLEN/8, x4, x1, x2)

inst_11949:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:35847*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35847*0 + 3*429*FLEN/8, x4, x1, x2)

inst_11950:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:35850*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35850*0 + 3*430*FLEN/8, x4, x1, x2)

inst_11951:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:35853*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35853*0 + 3*431*FLEN/8, x4, x1, x2)

inst_11952:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:35856*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35856*0 + 3*432*FLEN/8, x4, x1, x2)

inst_11953:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:35859*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35859*0 + 3*433*FLEN/8, x4, x1, x2)

inst_11954:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:35862*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35862*0 + 3*434*FLEN/8, x4, x1, x2)

inst_11955:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:35865*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35865*0 + 3*435*FLEN/8, x4, x1, x2)

inst_11956:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:35868*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35868*0 + 3*436*FLEN/8, x4, x1, x2)

inst_11957:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:35871*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35871*0 + 3*437*FLEN/8, x4, x1, x2)

inst_11958:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:35874*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35874*0 + 3*438*FLEN/8, x4, x1, x2)

inst_11959:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:35877*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35877*0 + 3*439*FLEN/8, x4, x1, x2)

inst_11960:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:35880*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35880*0 + 3*440*FLEN/8, x4, x1, x2)

inst_11961:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:35883*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35883*0 + 3*441*FLEN/8, x4, x1, x2)

inst_11962:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:35886*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35886*0 + 3*442*FLEN/8, x4, x1, x2)

inst_11963:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:35889*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35889*0 + 3*443*FLEN/8, x4, x1, x2)

inst_11964:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:35892*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35892*0 + 3*444*FLEN/8, x4, x1, x2)

inst_11965:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:35895*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35895*0 + 3*445*FLEN/8, x4, x1, x2)

inst_11966:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:35898*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35898*0 + 3*446*FLEN/8, x4, x1, x2)

inst_11967:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:35901*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35901*0 + 3*447*FLEN/8, x4, x1, x2)

inst_11968:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000000000000; valaddr_reg:x3; val_offset:35904*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35904*0 + 3*448*FLEN/8, x4, x1, x2)

inst_11969:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000000000001; valaddr_reg:x3; val_offset:35907*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35907*0 + 3*449*FLEN/8, x4, x1, x2)

inst_11970:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000000000003; valaddr_reg:x3; val_offset:35910*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35910*0 + 3*450*FLEN/8, x4, x1, x2)

inst_11971:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000000000007; valaddr_reg:x3; val_offset:35913*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35913*0 + 3*451*FLEN/8, x4, x1, x2)

inst_11972:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000000000000f; valaddr_reg:x3; val_offset:35916*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35916*0 + 3*452*FLEN/8, x4, x1, x2)

inst_11973:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000000000001f; valaddr_reg:x3; val_offset:35919*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35919*0 + 3*453*FLEN/8, x4, x1, x2)

inst_11974:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000000000003f; valaddr_reg:x3; val_offset:35922*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35922*0 + 3*454*FLEN/8, x4, x1, x2)

inst_11975:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000000000007f; valaddr_reg:x3; val_offset:35925*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35925*0 + 3*455*FLEN/8, x4, x1, x2)

inst_11976:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200000000000ff; valaddr_reg:x3; val_offset:35928*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35928*0 + 3*456*FLEN/8, x4, x1, x2)

inst_11977:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200000000001ff; valaddr_reg:x3; val_offset:35931*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35931*0 + 3*457*FLEN/8, x4, x1, x2)

inst_11978:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200000000003ff; valaddr_reg:x3; val_offset:35934*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35934*0 + 3*458*FLEN/8, x4, x1, x2)

inst_11979:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200000000007ff; valaddr_reg:x3; val_offset:35937*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35937*0 + 3*459*FLEN/8, x4, x1, x2)

inst_11980:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000000000fff; valaddr_reg:x3; val_offset:35940*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35940*0 + 3*460*FLEN/8, x4, x1, x2)

inst_11981:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000000001fff; valaddr_reg:x3; val_offset:35943*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35943*0 + 3*461*FLEN/8, x4, x1, x2)

inst_11982:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000000003fff; valaddr_reg:x3; val_offset:35946*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35946*0 + 3*462*FLEN/8, x4, x1, x2)

inst_11983:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000000007fff; valaddr_reg:x3; val_offset:35949*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35949*0 + 3*463*FLEN/8, x4, x1, x2)

inst_11984:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000000000ffff; valaddr_reg:x3; val_offset:35952*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35952*0 + 3*464*FLEN/8, x4, x1, x2)

inst_11985:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000000001ffff; valaddr_reg:x3; val_offset:35955*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35955*0 + 3*465*FLEN/8, x4, x1, x2)

inst_11986:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000000003ffff; valaddr_reg:x3; val_offset:35958*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35958*0 + 3*466*FLEN/8, x4, x1, x2)

inst_11987:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000000007ffff; valaddr_reg:x3; val_offset:35961*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35961*0 + 3*467*FLEN/8, x4, x1, x2)

inst_11988:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200000000fffff; valaddr_reg:x3; val_offset:35964*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35964*0 + 3*468*FLEN/8, x4, x1, x2)

inst_11989:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200000001fffff; valaddr_reg:x3; val_offset:35967*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35967*0 + 3*469*FLEN/8, x4, x1, x2)

inst_11990:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200000003fffff; valaddr_reg:x3; val_offset:35970*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35970*0 + 3*470*FLEN/8, x4, x1, x2)

inst_11991:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200000007fffff; valaddr_reg:x3; val_offset:35973*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35973*0 + 3*471*FLEN/8, x4, x1, x2)

inst_11992:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000000ffffff; valaddr_reg:x3; val_offset:35976*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35976*0 + 3*472*FLEN/8, x4, x1, x2)

inst_11993:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000001ffffff; valaddr_reg:x3; val_offset:35979*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35979*0 + 3*473*FLEN/8, x4, x1, x2)

inst_11994:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000003ffffff; valaddr_reg:x3; val_offset:35982*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35982*0 + 3*474*FLEN/8, x4, x1, x2)

inst_11995:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000007ffffff; valaddr_reg:x3; val_offset:35985*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35985*0 + 3*475*FLEN/8, x4, x1, x2)

inst_11996:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000000fffffff; valaddr_reg:x3; val_offset:35988*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35988*0 + 3*476*FLEN/8, x4, x1, x2)

inst_11997:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000001fffffff; valaddr_reg:x3; val_offset:35991*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35991*0 + 3*477*FLEN/8, x4, x1, x2)

inst_11998:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000003fffffff; valaddr_reg:x3; val_offset:35994*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35994*0 + 3*478*FLEN/8, x4, x1, x2)

inst_11999:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000007fffffff; valaddr_reg:x3; val_offset:35997*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35997*0 + 3*479*FLEN/8, x4, x1, x2)

inst_12000:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200000ffffffff; valaddr_reg:x3; val_offset:36000*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36000*0 + 3*480*FLEN/8, x4, x1, x2)

inst_12001:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200001ffffffff; valaddr_reg:x3; val_offset:36003*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36003*0 + 3*481*FLEN/8, x4, x1, x2)

inst_12002:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200003ffffffff; valaddr_reg:x3; val_offset:36006*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36006*0 + 3*482*FLEN/8, x4, x1, x2)

inst_12003:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200007ffffffff; valaddr_reg:x3; val_offset:36009*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36009*0 + 3*483*FLEN/8, x4, x1, x2)

inst_12004:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120000fffffffff; valaddr_reg:x3; val_offset:36012*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36012*0 + 3*484*FLEN/8, x4, x1, x2)

inst_12005:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120001fffffffff; valaddr_reg:x3; val_offset:36015*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36015*0 + 3*485*FLEN/8, x4, x1, x2)

inst_12006:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120003fffffffff; valaddr_reg:x3; val_offset:36018*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36018*0 + 3*486*FLEN/8, x4, x1, x2)

inst_12007:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120007fffffffff; valaddr_reg:x3; val_offset:36021*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36021*0 + 3*487*FLEN/8, x4, x1, x2)

inst_12008:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12000ffffffffff; valaddr_reg:x3; val_offset:36024*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36024*0 + 3*488*FLEN/8, x4, x1, x2)

inst_12009:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12001ffffffffff; valaddr_reg:x3; val_offset:36027*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36027*0 + 3*489*FLEN/8, x4, x1, x2)

inst_12010:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12003ffffffffff; valaddr_reg:x3; val_offset:36030*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36030*0 + 3*490*FLEN/8, x4, x1, x2)

inst_12011:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12007ffffffffff; valaddr_reg:x3; val_offset:36033*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36033*0 + 3*491*FLEN/8, x4, x1, x2)

inst_12012:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1200fffffffffff; valaddr_reg:x3; val_offset:36036*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36036*0 + 3*492*FLEN/8, x4, x1, x2)

inst_12013:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1201fffffffffff; valaddr_reg:x3; val_offset:36039*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36039*0 + 3*493*FLEN/8, x4, x1, x2)

inst_12014:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1203fffffffffff; valaddr_reg:x3; val_offset:36042*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36042*0 + 3*494*FLEN/8, x4, x1, x2)

inst_12015:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x1207fffffffffff; valaddr_reg:x3; val_offset:36045*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36045*0 + 3*495*FLEN/8, x4, x1, x2)

inst_12016:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x120ffffffffffff; valaddr_reg:x3; val_offset:36048*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36048*0 + 3*496*FLEN/8, x4, x1, x2)

inst_12017:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x121ffffffffffff; valaddr_reg:x3; val_offset:36051*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36051*0 + 3*497*FLEN/8, x4, x1, x2)

inst_12018:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x123ffffffffffff; valaddr_reg:x3; val_offset:36054*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36054*0 + 3*498*FLEN/8, x4, x1, x2)

inst_12019:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x127ffffffffffff; valaddr_reg:x3; val_offset:36057*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36057*0 + 3*499*FLEN/8, x4, x1, x2)

inst_12020:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x128000000000000; valaddr_reg:x3; val_offset:36060*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36060*0 + 3*500*FLEN/8, x4, x1, x2)

inst_12021:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12c000000000000; valaddr_reg:x3; val_offset:36063*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36063*0 + 3*501*FLEN/8, x4, x1, x2)

inst_12022:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12e000000000000; valaddr_reg:x3; val_offset:36066*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36066*0 + 3*502*FLEN/8, x4, x1, x2)

inst_12023:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12f000000000000; valaddr_reg:x3; val_offset:36069*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36069*0 + 3*503*FLEN/8, x4, x1, x2)

inst_12024:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12f800000000000; valaddr_reg:x3; val_offset:36072*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36072*0 + 3*504*FLEN/8, x4, x1, x2)

inst_12025:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fc00000000000; valaddr_reg:x3; val_offset:36075*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36075*0 + 3*505*FLEN/8, x4, x1, x2)

inst_12026:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fe00000000000; valaddr_reg:x3; val_offset:36078*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36078*0 + 3*506*FLEN/8, x4, x1, x2)

inst_12027:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ff00000000000; valaddr_reg:x3; val_offset:36081*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36081*0 + 3*507*FLEN/8, x4, x1, x2)

inst_12028:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ff80000000000; valaddr_reg:x3; val_offset:36084*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36084*0 + 3*508*FLEN/8, x4, x1, x2)

inst_12029:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffc0000000000; valaddr_reg:x3; val_offset:36087*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36087*0 + 3*509*FLEN/8, x4, x1, x2)

inst_12030:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffe0000000000; valaddr_reg:x3; val_offset:36090*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36090*0 + 3*510*FLEN/8, x4, x1, x2)

inst_12031:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fff0000000000; valaddr_reg:x3; val_offset:36093*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36093*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_12032:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fff8000000000; valaddr_reg:x3; val_offset:36096*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36096*0 + 3*512*FLEN/8, x4, x1, x2)

inst_12033:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffc000000000; valaddr_reg:x3; val_offset:36099*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36099*0 + 3*513*FLEN/8, x4, x1, x2)

inst_12034:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffe000000000; valaddr_reg:x3; val_offset:36102*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36102*0 + 3*514*FLEN/8, x4, x1, x2)

inst_12035:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffff000000000; valaddr_reg:x3; val_offset:36105*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36105*0 + 3*515*FLEN/8, x4, x1, x2)

inst_12036:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffff800000000; valaddr_reg:x3; val_offset:36108*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36108*0 + 3*516*FLEN/8, x4, x1, x2)

inst_12037:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffc00000000; valaddr_reg:x3; val_offset:36111*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36111*0 + 3*517*FLEN/8, x4, x1, x2)

inst_12038:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffe00000000; valaddr_reg:x3; val_offset:36114*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36114*0 + 3*518*FLEN/8, x4, x1, x2)

inst_12039:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffff00000000; valaddr_reg:x3; val_offset:36117*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36117*0 + 3*519*FLEN/8, x4, x1, x2)

inst_12040:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffff80000000; valaddr_reg:x3; val_offset:36120*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36120*0 + 3*520*FLEN/8, x4, x1, x2)

inst_12041:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffc0000000; valaddr_reg:x3; val_offset:36123*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36123*0 + 3*521*FLEN/8, x4, x1, x2)

inst_12042:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffe0000000; valaddr_reg:x3; val_offset:36126*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36126*0 + 3*522*FLEN/8, x4, x1, x2)

inst_12043:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffff0000000; valaddr_reg:x3; val_offset:36129*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36129*0 + 3*523*FLEN/8, x4, x1, x2)

inst_12044:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffff8000000; valaddr_reg:x3; val_offset:36132*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36132*0 + 3*524*FLEN/8, x4, x1, x2)

inst_12045:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffc000000; valaddr_reg:x3; val_offset:36135*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36135*0 + 3*525*FLEN/8, x4, x1, x2)

inst_12046:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffe000000; valaddr_reg:x3; val_offset:36138*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36138*0 + 3*526*FLEN/8, x4, x1, x2)

inst_12047:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffff000000; valaddr_reg:x3; val_offset:36141*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36141*0 + 3*527*FLEN/8, x4, x1, x2)

inst_12048:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffff800000; valaddr_reg:x3; val_offset:36144*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36144*0 + 3*528*FLEN/8, x4, x1, x2)

inst_12049:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffffc00000; valaddr_reg:x3; val_offset:36147*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36147*0 + 3*529*FLEN/8, x4, x1, x2)

inst_12050:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffffe00000; valaddr_reg:x3; val_offset:36150*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36150*0 + 3*530*FLEN/8, x4, x1, x2)

inst_12051:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffff00000; valaddr_reg:x3; val_offset:36153*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36153*0 + 3*531*FLEN/8, x4, x1, x2)

inst_12052:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffff80000; valaddr_reg:x3; val_offset:36156*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36156*0 + 3*532*FLEN/8, x4, x1, x2)

inst_12053:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffffc0000; valaddr_reg:x3; val_offset:36159*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36159*0 + 3*533*FLEN/8, x4, x1, x2)

inst_12054:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffffe0000; valaddr_reg:x3; val_offset:36162*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36162*0 + 3*534*FLEN/8, x4, x1, x2)

inst_12055:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffffff0000; valaddr_reg:x3; val_offset:36165*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36165*0 + 3*535*FLEN/8, x4, x1, x2)

inst_12056:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffffff8000; valaddr_reg:x3; val_offset:36168*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36168*0 + 3*536*FLEN/8, x4, x1, x2)

inst_12057:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffffffc000; valaddr_reg:x3; val_offset:36171*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36171*0 + 3*537*FLEN/8, x4, x1, x2)

inst_12058:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffffffe000; valaddr_reg:x3; val_offset:36174*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36174*0 + 3*538*FLEN/8, x4, x1, x2)

inst_12059:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffffff000; valaddr_reg:x3; val_offset:36177*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36177*0 + 3*539*FLEN/8, x4, x1, x2)

inst_12060:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffffff800; valaddr_reg:x3; val_offset:36180*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36180*0 + 3*540*FLEN/8, x4, x1, x2)

inst_12061:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffffffc00; valaddr_reg:x3; val_offset:36183*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36183*0 + 3*541*FLEN/8, x4, x1, x2)

inst_12062:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffffffe00; valaddr_reg:x3; val_offset:36186*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36186*0 + 3*542*FLEN/8, x4, x1, x2)

inst_12063:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffffffff00; valaddr_reg:x3; val_offset:36189*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36189*0 + 3*543*FLEN/8, x4, x1, x2)

inst_12064:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffffffff80; valaddr_reg:x3; val_offset:36192*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36192*0 + 3*544*FLEN/8, x4, x1, x2)

inst_12065:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffffffffc0; valaddr_reg:x3; val_offset:36195*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36195*0 + 3*545*FLEN/8, x4, x1, x2)

inst_12066:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffffffffe0; valaddr_reg:x3; val_offset:36198*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36198*0 + 3*546*FLEN/8, x4, x1, x2)

inst_12067:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffffffff0; valaddr_reg:x3; val_offset:36201*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36201*0 + 3*547*FLEN/8, x4, x1, x2)

inst_12068:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffffffff8; valaddr_reg:x3; val_offset:36204*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36204*0 + 3*548*FLEN/8, x4, x1, x2)

inst_12069:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffffffffc; valaddr_reg:x3; val_offset:36207*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36207*0 + 3*549*FLEN/8, x4, x1, x2)

inst_12070:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12ffffffffffffe; valaddr_reg:x3; val_offset:36210*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36210*0 + 3*550*FLEN/8, x4, x1, x2)

inst_12071:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9488df75ac817 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79488df75ac817; op2val:0x0;
op3val:0x12fffffffffffff; valaddr_reg:x3; val_offset:36213*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36213*0 + 3*551*FLEN/8, x4, x1, x2)

inst_12072:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:36216*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36216*0 + 3*552*FLEN/8, x4, x1, x2)

inst_12073:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:36219*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36219*0 + 3*553*FLEN/8, x4, x1, x2)

inst_12074:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:36222*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36222*0 + 3*554*FLEN/8, x4, x1, x2)

inst_12075:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:36225*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36225*0 + 3*555*FLEN/8, x4, x1, x2)

inst_12076:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:36228*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36228*0 + 3*556*FLEN/8, x4, x1, x2)

inst_12077:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:36231*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36231*0 + 3*557*FLEN/8, x4, x1, x2)

inst_12078:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:36234*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36234*0 + 3*558*FLEN/8, x4, x1, x2)

inst_12079:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:36237*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36237*0 + 3*559*FLEN/8, x4, x1, x2)

inst_12080:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:36240*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36240*0 + 3*560*FLEN/8, x4, x1, x2)

inst_12081:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:36243*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36243*0 + 3*561*FLEN/8, x4, x1, x2)

inst_12082:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:36246*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36246*0 + 3*562*FLEN/8, x4, x1, x2)

inst_12083:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:36249*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36249*0 + 3*563*FLEN/8, x4, x1, x2)

inst_12084:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:36252*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36252*0 + 3*564*FLEN/8, x4, x1, x2)

inst_12085:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:36255*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36255*0 + 3*565*FLEN/8, x4, x1, x2)

inst_12086:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:36258*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36258*0 + 3*566*FLEN/8, x4, x1, x2)

inst_12087:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:36261*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36261*0 + 3*567*FLEN/8, x4, x1, x2)

inst_12088:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:36264*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36264*0 + 3*568*FLEN/8, x4, x1, x2)

inst_12089:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:36267*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36267*0 + 3*569*FLEN/8, x4, x1, x2)

inst_12090:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:36270*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36270*0 + 3*570*FLEN/8, x4, x1, x2)

inst_12091:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:36273*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36273*0 + 3*571*FLEN/8, x4, x1, x2)

inst_12092:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:36276*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36276*0 + 3*572*FLEN/8, x4, x1, x2)

inst_12093:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:36279*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36279*0 + 3*573*FLEN/8, x4, x1, x2)

inst_12094:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000000000000; valaddr_reg:x3; val_offset:36282*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36282*0 + 3*574*FLEN/8, x4, x1, x2)

inst_12095:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000000000001; valaddr_reg:x3; val_offset:36285*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36285*0 + 3*575*FLEN/8, x4, x1, x2)

inst_12096:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000000000003; valaddr_reg:x3; val_offset:36288*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36288*0 + 3*576*FLEN/8, x4, x1, x2)

inst_12097:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000000000007; valaddr_reg:x3; val_offset:36291*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36291*0 + 3*577*FLEN/8, x4, x1, x2)

inst_12098:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000000000000f; valaddr_reg:x3; val_offset:36294*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36294*0 + 3*578*FLEN/8, x4, x1, x2)

inst_12099:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000000000001f; valaddr_reg:x3; val_offset:36297*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36297*0 + 3*579*FLEN/8, x4, x1, x2)

inst_12100:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000000000003f; valaddr_reg:x3; val_offset:36300*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36300*0 + 3*580*FLEN/8, x4, x1, x2)

inst_12101:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000000000007f; valaddr_reg:x3; val_offset:36303*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36303*0 + 3*581*FLEN/8, x4, x1, x2)

inst_12102:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00000000000ff; valaddr_reg:x3; val_offset:36306*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36306*0 + 3*582*FLEN/8, x4, x1, x2)

inst_12103:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00000000001ff; valaddr_reg:x3; val_offset:36309*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36309*0 + 3*583*FLEN/8, x4, x1, x2)

inst_12104:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00000000003ff; valaddr_reg:x3; val_offset:36312*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36312*0 + 3*584*FLEN/8, x4, x1, x2)

inst_12105:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00000000007ff; valaddr_reg:x3; val_offset:36315*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36315*0 + 3*585*FLEN/8, x4, x1, x2)

inst_12106:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000000000fff; valaddr_reg:x3; val_offset:36318*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36318*0 + 3*586*FLEN/8, x4, x1, x2)

inst_12107:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000000001fff; valaddr_reg:x3; val_offset:36321*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36321*0 + 3*587*FLEN/8, x4, x1, x2)

inst_12108:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000000003fff; valaddr_reg:x3; val_offset:36324*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36324*0 + 3*588*FLEN/8, x4, x1, x2)

inst_12109:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000000007fff; valaddr_reg:x3; val_offset:36327*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36327*0 + 3*589*FLEN/8, x4, x1, x2)

inst_12110:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000000000ffff; valaddr_reg:x3; val_offset:36330*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36330*0 + 3*590*FLEN/8, x4, x1, x2)

inst_12111:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000000001ffff; valaddr_reg:x3; val_offset:36333*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36333*0 + 3*591*FLEN/8, x4, x1, x2)

inst_12112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000000003ffff; valaddr_reg:x3; val_offset:36336*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36336*0 + 3*592*FLEN/8, x4, x1, x2)

inst_12113:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000000007ffff; valaddr_reg:x3; val_offset:36339*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36339*0 + 3*593*FLEN/8, x4, x1, x2)

inst_12114:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00000000fffff; valaddr_reg:x3; val_offset:36342*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36342*0 + 3*594*FLEN/8, x4, x1, x2)

inst_12115:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00000001fffff; valaddr_reg:x3; val_offset:36345*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36345*0 + 3*595*FLEN/8, x4, x1, x2)

inst_12116:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00000003fffff; valaddr_reg:x3; val_offset:36348*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36348*0 + 3*596*FLEN/8, x4, x1, x2)

inst_12117:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00000007fffff; valaddr_reg:x3; val_offset:36351*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36351*0 + 3*597*FLEN/8, x4, x1, x2)

inst_12118:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000000ffffff; valaddr_reg:x3; val_offset:36354*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36354*0 + 3*598*FLEN/8, x4, x1, x2)

inst_12119:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000001ffffff; valaddr_reg:x3; val_offset:36357*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36357*0 + 3*599*FLEN/8, x4, x1, x2)

inst_12120:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000003ffffff; valaddr_reg:x3; val_offset:36360*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36360*0 + 3*600*FLEN/8, x4, x1, x2)

inst_12121:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000007ffffff; valaddr_reg:x3; val_offset:36363*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36363*0 + 3*601*FLEN/8, x4, x1, x2)

inst_12122:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000000fffffff; valaddr_reg:x3; val_offset:36366*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36366*0 + 3*602*FLEN/8, x4, x1, x2)

inst_12123:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000001fffffff; valaddr_reg:x3; val_offset:36369*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36369*0 + 3*603*FLEN/8, x4, x1, x2)

inst_12124:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000003fffffff; valaddr_reg:x3; val_offset:36372*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36372*0 + 3*604*FLEN/8, x4, x1, x2)

inst_12125:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000007fffffff; valaddr_reg:x3; val_offset:36375*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36375*0 + 3*605*FLEN/8, x4, x1, x2)

inst_12126:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00000ffffffff; valaddr_reg:x3; val_offset:36378*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36378*0 + 3*606*FLEN/8, x4, x1, x2)

inst_12127:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00001ffffffff; valaddr_reg:x3; val_offset:36381*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36381*0 + 3*607*FLEN/8, x4, x1, x2)

inst_12128:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00003ffffffff; valaddr_reg:x3; val_offset:36384*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36384*0 + 3*608*FLEN/8, x4, x1, x2)

inst_12129:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00007ffffffff; valaddr_reg:x3; val_offset:36387*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36387*0 + 3*609*FLEN/8, x4, x1, x2)

inst_12130:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0000fffffffff; valaddr_reg:x3; val_offset:36390*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36390*0 + 3*610*FLEN/8, x4, x1, x2)

inst_12131:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0001fffffffff; valaddr_reg:x3; val_offset:36393*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36393*0 + 3*611*FLEN/8, x4, x1, x2)

inst_12132:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0003fffffffff; valaddr_reg:x3; val_offset:36396*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36396*0 + 3*612*FLEN/8, x4, x1, x2)

inst_12133:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0007fffffffff; valaddr_reg:x3; val_offset:36399*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36399*0 + 3*613*FLEN/8, x4, x1, x2)

inst_12134:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f000ffffffffff; valaddr_reg:x3; val_offset:36402*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36402*0 + 3*614*FLEN/8, x4, x1, x2)

inst_12135:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f001ffffffffff; valaddr_reg:x3; val_offset:36405*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36405*0 + 3*615*FLEN/8, x4, x1, x2)

inst_12136:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f003ffffffffff; valaddr_reg:x3; val_offset:36408*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36408*0 + 3*616*FLEN/8, x4, x1, x2)

inst_12137:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f007ffffffffff; valaddr_reg:x3; val_offset:36411*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36411*0 + 3*617*FLEN/8, x4, x1, x2)

inst_12138:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f00fffffffffff; valaddr_reg:x3; val_offset:36414*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36414*0 + 3*618*FLEN/8, x4, x1, x2)

inst_12139:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f01fffffffffff; valaddr_reg:x3; val_offset:36417*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36417*0 + 3*619*FLEN/8, x4, x1, x2)

inst_12140:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f03fffffffffff; valaddr_reg:x3; val_offset:36420*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36420*0 + 3*620*FLEN/8, x4, x1, x2)

inst_12141:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f07fffffffffff; valaddr_reg:x3; val_offset:36423*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36423*0 + 3*621*FLEN/8, x4, x1, x2)

inst_12142:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f0ffffffffffff; valaddr_reg:x3; val_offset:36426*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36426*0 + 3*622*FLEN/8, x4, x1, x2)

inst_12143:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f1ffffffffffff; valaddr_reg:x3; val_offset:36429*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36429*0 + 3*623*FLEN/8, x4, x1, x2)

inst_12144:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f3ffffffffffff; valaddr_reg:x3; val_offset:36432*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36432*0 + 3*624*FLEN/8, x4, x1, x2)

inst_12145:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f7ffffffffffff; valaddr_reg:x3; val_offset:36435*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36435*0 + 3*625*FLEN/8, x4, x1, x2)

inst_12146:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82f8000000000000; valaddr_reg:x3; val_offset:36438*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36438*0 + 3*626*FLEN/8, x4, x1, x2)

inst_12147:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fc000000000000; valaddr_reg:x3; val_offset:36441*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36441*0 + 3*627*FLEN/8, x4, x1, x2)

inst_12148:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fe000000000000; valaddr_reg:x3; val_offset:36444*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36444*0 + 3*628*FLEN/8, x4, x1, x2)

inst_12149:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ff000000000000; valaddr_reg:x3; val_offset:36447*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36447*0 + 3*629*FLEN/8, x4, x1, x2)

inst_12150:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ff800000000000; valaddr_reg:x3; val_offset:36450*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36450*0 + 3*630*FLEN/8, x4, x1, x2)

inst_12151:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffc00000000000; valaddr_reg:x3; val_offset:36453*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36453*0 + 3*631*FLEN/8, x4, x1, x2)

inst_12152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffe00000000000; valaddr_reg:x3; val_offset:36456*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36456*0 + 3*632*FLEN/8, x4, x1, x2)

inst_12153:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fff00000000000; valaddr_reg:x3; val_offset:36459*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36459*0 + 3*633*FLEN/8, x4, x1, x2)

inst_12154:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fff80000000000; valaddr_reg:x3; val_offset:36462*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36462*0 + 3*634*FLEN/8, x4, x1, x2)

inst_12155:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffc0000000000; valaddr_reg:x3; val_offset:36465*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36465*0 + 3*635*FLEN/8, x4, x1, x2)

inst_12156:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffe0000000000; valaddr_reg:x3; val_offset:36468*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36468*0 + 3*636*FLEN/8, x4, x1, x2)

inst_12157:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffff0000000000; valaddr_reg:x3; val_offset:36471*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36471*0 + 3*637*FLEN/8, x4, x1, x2)

inst_12158:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffff8000000000; valaddr_reg:x3; val_offset:36474*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36474*0 + 3*638*FLEN/8, x4, x1, x2)

inst_12159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffc000000000; valaddr_reg:x3; val_offset:36477*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36477*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_12160:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffe000000000; valaddr_reg:x3; val_offset:36480*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36480*0 + 3*640*FLEN/8, x4, x1, x2)

inst_12161:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffff000000000; valaddr_reg:x3; val_offset:36483*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36483*0 + 3*641*FLEN/8, x4, x1, x2)

inst_12162:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffff800000000; valaddr_reg:x3; val_offset:36486*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36486*0 + 3*642*FLEN/8, x4, x1, x2)

inst_12163:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffc00000000; valaddr_reg:x3; val_offset:36489*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36489*0 + 3*643*FLEN/8, x4, x1, x2)

inst_12164:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffe00000000; valaddr_reg:x3; val_offset:36492*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36492*0 + 3*644*FLEN/8, x4, x1, x2)

inst_12165:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffff00000000; valaddr_reg:x3; val_offset:36495*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36495*0 + 3*645*FLEN/8, x4, x1, x2)

inst_12166:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffff80000000; valaddr_reg:x3; val_offset:36498*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36498*0 + 3*646*FLEN/8, x4, x1, x2)

inst_12167:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffc0000000; valaddr_reg:x3; val_offset:36501*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36501*0 + 3*647*FLEN/8, x4, x1, x2)

inst_12168:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffe0000000; valaddr_reg:x3; val_offset:36504*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36504*0 + 3*648*FLEN/8, x4, x1, x2)

inst_12169:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffff0000000; valaddr_reg:x3; val_offset:36507*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36507*0 + 3*649*FLEN/8, x4, x1, x2)

inst_12170:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffff8000000; valaddr_reg:x3; val_offset:36510*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36510*0 + 3*650*FLEN/8, x4, x1, x2)

inst_12171:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffc000000; valaddr_reg:x3; val_offset:36513*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36513*0 + 3*651*FLEN/8, x4, x1, x2)

inst_12172:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffe000000; valaddr_reg:x3; val_offset:36516*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36516*0 + 3*652*FLEN/8, x4, x1, x2)

inst_12173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffff000000; valaddr_reg:x3; val_offset:36519*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36519*0 + 3*653*FLEN/8, x4, x1, x2)

inst_12174:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffff800000; valaddr_reg:x3; val_offset:36522*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36522*0 + 3*654*FLEN/8, x4, x1, x2)

inst_12175:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffffc00000; valaddr_reg:x3; val_offset:36525*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36525*0 + 3*655*FLEN/8, x4, x1, x2)

inst_12176:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffffe00000; valaddr_reg:x3; val_offset:36528*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36528*0 + 3*656*FLEN/8, x4, x1, x2)

inst_12177:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffff00000; valaddr_reg:x3; val_offset:36531*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36531*0 + 3*657*FLEN/8, x4, x1, x2)

inst_12178:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffff80000; valaddr_reg:x3; val_offset:36534*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36534*0 + 3*658*FLEN/8, x4, x1, x2)

inst_12179:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffffc0000; valaddr_reg:x3; val_offset:36537*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36537*0 + 3*659*FLEN/8, x4, x1, x2)

inst_12180:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffffe0000; valaddr_reg:x3; val_offset:36540*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36540*0 + 3*660*FLEN/8, x4, x1, x2)

inst_12181:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffffff0000; valaddr_reg:x3; val_offset:36543*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36543*0 + 3*661*FLEN/8, x4, x1, x2)

inst_12182:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffffff8000; valaddr_reg:x3; val_offset:36546*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36546*0 + 3*662*FLEN/8, x4, x1, x2)

inst_12183:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffffffc000; valaddr_reg:x3; val_offset:36549*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36549*0 + 3*663*FLEN/8, x4, x1, x2)

inst_12184:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffffffe000; valaddr_reg:x3; val_offset:36552*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36552*0 + 3*664*FLEN/8, x4, x1, x2)

inst_12185:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffffff000; valaddr_reg:x3; val_offset:36555*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36555*0 + 3*665*FLEN/8, x4, x1, x2)

inst_12186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffffff800; valaddr_reg:x3; val_offset:36558*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36558*0 + 3*666*FLEN/8, x4, x1, x2)

inst_12187:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffffffc00; valaddr_reg:x3; val_offset:36561*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36561*0 + 3*667*FLEN/8, x4, x1, x2)

inst_12188:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffffffe00; valaddr_reg:x3; val_offset:36564*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36564*0 + 3*668*FLEN/8, x4, x1, x2)

inst_12189:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffffffff00; valaddr_reg:x3; val_offset:36567*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36567*0 + 3*669*FLEN/8, x4, x1, x2)

inst_12190:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffffffff80; valaddr_reg:x3; val_offset:36570*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36570*0 + 3*670*FLEN/8, x4, x1, x2)

inst_12191:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffffffffc0; valaddr_reg:x3; val_offset:36573*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36573*0 + 3*671*FLEN/8, x4, x1, x2)

inst_12192:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffffffffe0; valaddr_reg:x3; val_offset:36576*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36576*0 + 3*672*FLEN/8, x4, x1, x2)

inst_12193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffffffff0; valaddr_reg:x3; val_offset:36579*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36579*0 + 3*673*FLEN/8, x4, x1, x2)

inst_12194:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffffffff8; valaddr_reg:x3; val_offset:36582*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36582*0 + 3*674*FLEN/8, x4, x1, x2)

inst_12195:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffffffffc; valaddr_reg:x3; val_offset:36585*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36585*0 + 3*675*FLEN/8, x4, x1, x2)

inst_12196:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82fffffffffffffe; valaddr_reg:x3; val_offset:36588*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36588*0 + 3*676*FLEN/8, x4, x1, x2)

inst_12197:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9518f8585be77 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79518f8585be77; op2val:0x8000;
op3val:0x82ffffffffffffff; valaddr_reg:x3; val_offset:36591*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36591*0 + 3*677*FLEN/8, x4, x1, x2)

inst_12198:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:36594*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36594*0 + 3*678*FLEN/8, x4, x1, x2)

inst_12199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:36597*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36597*0 + 3*679*FLEN/8, x4, x1, x2)

inst_12200:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:36600*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36600*0 + 3*680*FLEN/8, x4, x1, x2)

inst_12201:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:36603*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36603*0 + 3*681*FLEN/8, x4, x1, x2)

inst_12202:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:36606*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36606*0 + 3*682*FLEN/8, x4, x1, x2)

inst_12203:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:36609*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36609*0 + 3*683*FLEN/8, x4, x1, x2)

inst_12204:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:36612*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36612*0 + 3*684*FLEN/8, x4, x1, x2)

inst_12205:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:36615*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36615*0 + 3*685*FLEN/8, x4, x1, x2)

inst_12206:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:36618*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36618*0 + 3*686*FLEN/8, x4, x1, x2)

inst_12207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:36621*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36621*0 + 3*687*FLEN/8, x4, x1, x2)

inst_12208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:36624*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36624*0 + 3*688*FLEN/8, x4, x1, x2)

inst_12209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:36627*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36627*0 + 3*689*FLEN/8, x4, x1, x2)

inst_12210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:36630*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36630*0 + 3*690*FLEN/8, x4, x1, x2)

inst_12211:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:36633*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36633*0 + 3*691*FLEN/8, x4, x1, x2)

inst_12212:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:36636*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36636*0 + 3*692*FLEN/8, x4, x1, x2)

inst_12213:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:36639*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36639*0 + 3*693*FLEN/8, x4, x1, x2)

inst_12214:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:36642*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36642*0 + 3*694*FLEN/8, x4, x1, x2)

inst_12215:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:36645*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36645*0 + 3*695*FLEN/8, x4, x1, x2)

inst_12216:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:36648*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36648*0 + 3*696*FLEN/8, x4, x1, x2)

inst_12217:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:36651*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36651*0 + 3*697*FLEN/8, x4, x1, x2)

inst_12218:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:36654*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36654*0 + 3*698*FLEN/8, x4, x1, x2)

inst_12219:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:36657*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36657*0 + 3*699*FLEN/8, x4, x1, x2)

inst_12220:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000000000000; valaddr_reg:x3; val_offset:36660*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36660*0 + 3*700*FLEN/8, x4, x1, x2)

inst_12221:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000000000001; valaddr_reg:x3; val_offset:36663*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36663*0 + 3*701*FLEN/8, x4, x1, x2)

inst_12222:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000000000003; valaddr_reg:x3; val_offset:36666*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36666*0 + 3*702*FLEN/8, x4, x1, x2)

inst_12223:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000000000007; valaddr_reg:x3; val_offset:36669*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36669*0 + 3*703*FLEN/8, x4, x1, x2)

inst_12224:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000000000000f; valaddr_reg:x3; val_offset:36672*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36672*0 + 3*704*FLEN/8, x4, x1, x2)

inst_12225:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000000000001f; valaddr_reg:x3; val_offset:36675*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36675*0 + 3*705*FLEN/8, x4, x1, x2)

inst_12226:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000000000003f; valaddr_reg:x3; val_offset:36678*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36678*0 + 3*706*FLEN/8, x4, x1, x2)

inst_12227:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000000000007f; valaddr_reg:x3; val_offset:36681*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36681*0 + 3*707*FLEN/8, x4, x1, x2)

inst_12228:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00000000000ff; valaddr_reg:x3; val_offset:36684*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36684*0 + 3*708*FLEN/8, x4, x1, x2)

inst_12229:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00000000001ff; valaddr_reg:x3; val_offset:36687*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36687*0 + 3*709*FLEN/8, x4, x1, x2)

inst_12230:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00000000003ff; valaddr_reg:x3; val_offset:36690*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36690*0 + 3*710*FLEN/8, x4, x1, x2)

inst_12231:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00000000007ff; valaddr_reg:x3; val_offset:36693*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36693*0 + 3*711*FLEN/8, x4, x1, x2)

inst_12232:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000000000fff; valaddr_reg:x3; val_offset:36696*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36696*0 + 3*712*FLEN/8, x4, x1, x2)

inst_12233:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000000001fff; valaddr_reg:x3; val_offset:36699*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36699*0 + 3*713*FLEN/8, x4, x1, x2)

inst_12234:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000000003fff; valaddr_reg:x3; val_offset:36702*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36702*0 + 3*714*FLEN/8, x4, x1, x2)

inst_12235:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000000007fff; valaddr_reg:x3; val_offset:36705*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36705*0 + 3*715*FLEN/8, x4, x1, x2)

inst_12236:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000000000ffff; valaddr_reg:x3; val_offset:36708*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36708*0 + 3*716*FLEN/8, x4, x1, x2)

inst_12237:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000000001ffff; valaddr_reg:x3; val_offset:36711*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36711*0 + 3*717*FLEN/8, x4, x1, x2)

inst_12238:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000000003ffff; valaddr_reg:x3; val_offset:36714*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36714*0 + 3*718*FLEN/8, x4, x1, x2)

inst_12239:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000000007ffff; valaddr_reg:x3; val_offset:36717*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36717*0 + 3*719*FLEN/8, x4, x1, x2)

inst_12240:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00000000fffff; valaddr_reg:x3; val_offset:36720*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36720*0 + 3*720*FLEN/8, x4, x1, x2)

inst_12241:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00000001fffff; valaddr_reg:x3; val_offset:36723*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36723*0 + 3*721*FLEN/8, x4, x1, x2)

inst_12242:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00000003fffff; valaddr_reg:x3; val_offset:36726*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36726*0 + 3*722*FLEN/8, x4, x1, x2)

inst_12243:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00000007fffff; valaddr_reg:x3; val_offset:36729*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36729*0 + 3*723*FLEN/8, x4, x1, x2)

inst_12244:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000000ffffff; valaddr_reg:x3; val_offset:36732*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36732*0 + 3*724*FLEN/8, x4, x1, x2)

inst_12245:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000001ffffff; valaddr_reg:x3; val_offset:36735*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36735*0 + 3*725*FLEN/8, x4, x1, x2)

inst_12246:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000003ffffff; valaddr_reg:x3; val_offset:36738*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36738*0 + 3*726*FLEN/8, x4, x1, x2)

inst_12247:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000007ffffff; valaddr_reg:x3; val_offset:36741*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36741*0 + 3*727*FLEN/8, x4, x1, x2)

inst_12248:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000000fffffff; valaddr_reg:x3; val_offset:36744*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36744*0 + 3*728*FLEN/8, x4, x1, x2)

inst_12249:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000001fffffff; valaddr_reg:x3; val_offset:36747*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36747*0 + 3*729*FLEN/8, x4, x1, x2)

inst_12250:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000003fffffff; valaddr_reg:x3; val_offset:36750*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36750*0 + 3*730*FLEN/8, x4, x1, x2)

inst_12251:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000007fffffff; valaddr_reg:x3; val_offset:36753*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36753*0 + 3*731*FLEN/8, x4, x1, x2)

inst_12252:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00000ffffffff; valaddr_reg:x3; val_offset:36756*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36756*0 + 3*732*FLEN/8, x4, x1, x2)

inst_12253:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00001ffffffff; valaddr_reg:x3; val_offset:36759*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36759*0 + 3*733*FLEN/8, x4, x1, x2)

inst_12254:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00003ffffffff; valaddr_reg:x3; val_offset:36762*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36762*0 + 3*734*FLEN/8, x4, x1, x2)

inst_12255:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00007ffffffff; valaddr_reg:x3; val_offset:36765*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36765*0 + 3*735*FLEN/8, x4, x1, x2)

inst_12256:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0000fffffffff; valaddr_reg:x3; val_offset:36768*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36768*0 + 3*736*FLEN/8, x4, x1, x2)

inst_12257:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0001fffffffff; valaddr_reg:x3; val_offset:36771*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36771*0 + 3*737*FLEN/8, x4, x1, x2)

inst_12258:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0003fffffffff; valaddr_reg:x3; val_offset:36774*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36774*0 + 3*738*FLEN/8, x4, x1, x2)

inst_12259:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0007fffffffff; valaddr_reg:x3; val_offset:36777*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36777*0 + 3*739*FLEN/8, x4, x1, x2)

inst_12260:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c000ffffffffff; valaddr_reg:x3; val_offset:36780*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36780*0 + 3*740*FLEN/8, x4, x1, x2)

inst_12261:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c001ffffffffff; valaddr_reg:x3; val_offset:36783*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36783*0 + 3*741*FLEN/8, x4, x1, x2)

inst_12262:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c003ffffffffff; valaddr_reg:x3; val_offset:36786*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36786*0 + 3*742*FLEN/8, x4, x1, x2)

inst_12263:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c007ffffffffff; valaddr_reg:x3; val_offset:36789*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36789*0 + 3*743*FLEN/8, x4, x1, x2)

inst_12264:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c00fffffffffff; valaddr_reg:x3; val_offset:36792*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36792*0 + 3*744*FLEN/8, x4, x1, x2)

inst_12265:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c01fffffffffff; valaddr_reg:x3; val_offset:36795*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36795*0 + 3*745*FLEN/8, x4, x1, x2)

inst_12266:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c03fffffffffff; valaddr_reg:x3; val_offset:36798*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36798*0 + 3*746*FLEN/8, x4, x1, x2)

inst_12267:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c07fffffffffff; valaddr_reg:x3; val_offset:36801*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36801*0 + 3*747*FLEN/8, x4, x1, x2)

inst_12268:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c0ffffffffffff; valaddr_reg:x3; val_offset:36804*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36804*0 + 3*748*FLEN/8, x4, x1, x2)

inst_12269:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c1ffffffffffff; valaddr_reg:x3; val_offset:36807*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36807*0 + 3*749*FLEN/8, x4, x1, x2)

inst_12270:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c3ffffffffffff; valaddr_reg:x3; val_offset:36810*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36810*0 + 3*750*FLEN/8, x4, x1, x2)

inst_12271:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c7ffffffffffff; valaddr_reg:x3; val_offset:36813*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36813*0 + 3*751*FLEN/8, x4, x1, x2)

inst_12272:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80c8000000000000; valaddr_reg:x3; val_offset:36816*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36816*0 + 3*752*FLEN/8, x4, x1, x2)

inst_12273:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cc000000000000; valaddr_reg:x3; val_offset:36819*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36819*0 + 3*753*FLEN/8, x4, x1, x2)

inst_12274:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80ce000000000000; valaddr_reg:x3; val_offset:36822*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36822*0 + 3*754*FLEN/8, x4, x1, x2)

inst_12275:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cf000000000000; valaddr_reg:x3; val_offset:36825*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36825*0 + 3*755*FLEN/8, x4, x1, x2)

inst_12276:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cf800000000000; valaddr_reg:x3; val_offset:36828*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36828*0 + 3*756*FLEN/8, x4, x1, x2)

inst_12277:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cfc00000000000; valaddr_reg:x3; val_offset:36831*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36831*0 + 3*757*FLEN/8, x4, x1, x2)

inst_12278:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cfe00000000000; valaddr_reg:x3; val_offset:36834*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36834*0 + 3*758*FLEN/8, x4, x1, x2)

inst_12279:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cff00000000000; valaddr_reg:x3; val_offset:36837*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36837*0 + 3*759*FLEN/8, x4, x1, x2)

inst_12280:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cff80000000000; valaddr_reg:x3; val_offset:36840*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36840*0 + 3*760*FLEN/8, x4, x1, x2)

inst_12281:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cffc0000000000; valaddr_reg:x3; val_offset:36843*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36843*0 + 3*761*FLEN/8, x4, x1, x2)

inst_12282:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cffe0000000000; valaddr_reg:x3; val_offset:36846*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36846*0 + 3*762*FLEN/8, x4, x1, x2)

inst_12283:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cfff0000000000; valaddr_reg:x3; val_offset:36849*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36849*0 + 3*763*FLEN/8, x4, x1, x2)

inst_12284:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cfff8000000000; valaddr_reg:x3; val_offset:36852*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36852*0 + 3*764*FLEN/8, x4, x1, x2)

inst_12285:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cfffc000000000; valaddr_reg:x3; val_offset:36855*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36855*0 + 3*765*FLEN/8, x4, x1, x2)

inst_12286:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cfffe000000000; valaddr_reg:x3; val_offset:36858*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36858*0 + 3*766*FLEN/8, x4, x1, x2)

inst_12287:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x965e42d4900a7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7965e42d4900a7; op2val:0x8000;
op3val:0x80cffff000000000; valaddr_reg:x3; val_offset:36861*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36861*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21f80000000000052981649842241536,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fc0000000000053052018586419200,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fe0000000000053087202958508032,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ff0000000000053104795144552448,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ff8000000000053113591237574656,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffc000000000053117989284085760,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffe000000000053120188307341312,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fff000000000053121287818969088,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fff800000000053121837574782976,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffc00000000053122112452689920,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffe00000000053122249891643392,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffff00000000053122318611120128,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffff80000000053122352970858496,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffc0000000053122370150727680,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffe0000000053122378740662272,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffff0000000053122383035629568,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffff8000000053122385183113216,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffc000000053122386256855040,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffe000000053122386793725952,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffff000000053122387062161408,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffff800000053122387196379136,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffc00000053122387263488000,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffe00000053122387297042432,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffff00000053122387313819648,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffff80000053122387322208256,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffc0000053122387326402560,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffe0000053122387328499712,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffff0000053122387329548288,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffff8000053122387330072576,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffc000053122387330334720,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffe000053122387330465792,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffff000053122387330531328,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffff800053122387330564096,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffc00053122387330580480,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffe00053122387330588672,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffff00053122387330592768,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffff80053122387330594816,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffffc0053122387330595840,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffffe0053122387330596352,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffff0053122387330596608,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffff8053122387330596736,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffffc053122387330596800,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffffe053122387330596832,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffffff053122387330596848,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffffff853122387330596856,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffffffc53122387330596860,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21ffffffffffffe53122387330596862,64,FLEN)
NAN_BOXED(0x5f77e0aa3707d217879213977504043543,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x21fffffffffffff53122387330596863,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000001223372036854775809,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000003223372036854775811,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000007223372036854775815,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000000f223372036854775823,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000001f223372036854775839,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000003f223372036854775871,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8003333333333333224272756780249907,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8004924924924924224658779605453092,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8006666666666666225173476705724006,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8006db6db6db6db6225302150980791734,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8007777777777777225473716680882039,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8008888888888888225773956656040072,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8009999999999999226074196631198105,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800b6db6db6db6db226588893731469019,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ccccccccccccc226974916556672204,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800db6db6db6db6d227232265106807661,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800fffffffffffc0227875636482146240,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800fffffffffffe0227875636482146272,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffff0227875636482146288,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffff8227875636482146296,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffffc227875636482146300,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffffe227875636482146302,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000000000000574451925065924608,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000000000010574451925065924609,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000000000030574451925065924611,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000000000070574451925065924615,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000000000000f0574451925065924623,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000000000001f0574451925065924639,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000000000003f0574451925065924671,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000000000007f0574451925065924735,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000000000ff0574451925065924863,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000000001ff0574451925065925119,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000000003ff0574451925065925631,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000000007ff0574451925065926655,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0000000000fff0574451925065928703,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0000000001fff0574451925065932799,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0000000003fff0574451925065940991,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0000000007fff0574451925065957375,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000000000ffff0574451925065990143,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000000001ffff0574451925066055679,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000000003ffff0574451925066186751,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000000007ffff0574451925066448895,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000000fffff0574451925066973183,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000001fffff0574451925068021759,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000003fffff0574451925070118911,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000007fffff0574451925074313215,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0000000ffffff0574451925082701823,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0000001ffffff0574451925099479039,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0000003ffffff0574451925133033471,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0000007ffffff0574451925200142335,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000000fffffff0574451925334360063,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000001fffffff0574451925602795519,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000003fffffff0574451926139666431,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000007fffffff0574451927213408255,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00000ffffffff0574451929360891903,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00001ffffffff0574451933655859199,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00003ffffffff0574451942245793791,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00007ffffffff0574451959425662975,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0000fffffffff0574451993785401343,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0001fffffffff0574452062504878079,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0003fffffffff0574452199943831551,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0007fffffffff0574452474821738495,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c000ffffffffff0574453024577552383,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c001ffffffffff0574454124089180159,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c003ffffffffff0574456323112435711,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c007ffffffffff0574460721158946815,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c00fffffffffff0574469517251969023,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c01fffffffffff0574487109438013439,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c03fffffffffff0574522293810102271,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c07fffffffffff0574592662554279935,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c0ffffffffffff0574733400042635263,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c1ffffffffffff0575014875019345919,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c3ffffffffffff0575577824972767231,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c7ffffffffffff0576703724879609855,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92c80000000000000576703724879609856,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cc0000000000000577829624786452480,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92ce0000000000000578392574739873792,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cf0000000000000578674049716584448,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cf8000000000000578814787204939776,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfc000000000000578885155949117440,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfe000000000000578920340321206272,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cff000000000000578937932507250688,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cff800000000000578946728600272896,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffc00000000000578951126646784000,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffe00000000000578953325670039552,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfff00000000000578954425181667328,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfff80000000000578954974937481216,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffc0000000000578955249815388160,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffe0000000000578955387254341632,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffff0000000000578955455973818368,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffff8000000000578955490333556736,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffc000000000578955507513425920,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffe000000000578955516103360512,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffff000000000578955520398327808,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffff800000000578955522545811456,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffc00000000578955523619553280,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffe00000000578955524156424192,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffff00000000578955524424859648,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffff80000000578955524559077376,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffc0000000578955524626186240,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffe0000000578955524659740672,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffff0000000578955524676517888,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffff8000000578955524684906496,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffffc000000578955524689100800,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffffe000000578955524691197952,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffff000000578955524692246528,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffff800000578955524692770816,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffffc00000578955524693032960,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffffe00000578955524693164032,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffffff00000578955524693229568,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffffff80000578955524693262336,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffffffc0000578955524693278720,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffffffe0000578955524693286912,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffffff0000578955524693291008,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffffff8000578955524693293056,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffffffc000578955524693294080,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffffffe000578955524693294592,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffffffff000578955524693294848,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffffffff800578955524693294976,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffffffffc00578955524693295040,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffffffffe00578955524693295072,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffffffff00578955524693295088,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffffffff80578955524693295096,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffffffffc0578955524693295100,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cffffffffffffe0578955524693295102,64,FLEN)
NAN_BOXED(0x5f77ee0eb8d7cc7f879228702829825151,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x92cfffffffffffff0578955524693295103,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xf5,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1f1,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f3,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x333333333333300719925474099,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4924924924924286742750677284,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6666666666666801439850948198,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6db6db6db6db6930114126015926,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7777777777777101679826106231,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8888888888888401919801264264,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x9999999999999702159776422297,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb6db6db6db6db216856876693211,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xccccccccccccc602879701896396,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xdb6db6db6db6d860228252031853,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffc0503599627370432,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffe0503599627370464,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff0503599627370480,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff8503599627370488,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffc503599627370492,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffe503599627370494,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000000000009539595901075456,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000000000019539595901075457,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000000000039539595901075459,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000000000079539595901075463,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000000000000f9539595901075471,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000000000001f9539595901075487,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000000000003f9539595901075519,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000000000007f9539595901075583,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000000000ff9539595901075711,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000000001ff9539595901075967,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000000003ff9539595901076479,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000000007ff9539595901077503,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0000000000fff9539595901079551,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0000000001fff9539595901083647,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0000000003fff9539595901091839,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0000000007fff9539595901108223,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000000000ffff9539595901140991,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000000001ffff9539595901206527,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000000003ffff9539595901337599,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000000007ffff9539595901599743,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000000fffff9539595902124031,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000001fffff9539595903172607,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000003fffff9539595905269759,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000007fffff9539595909464063,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0000000ffffff9539595917852671,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0000001ffffff9539595934629887,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0000003ffffff9539595968184319,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0000007ffffff9539596035293183,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000000fffffff9539596169510911,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000001fffffff9539596437946367,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000003fffffff9539596974817279,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000007fffffff9539598048559103,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00000ffffffff9539600196042751,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00001ffffffff9539604491010047,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00003ffffffff9539613080944639,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00007ffffffff9539630260813823,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0000fffffffff9539664620552191,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0001fffffffff9539733340028927,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0003fffffffff9539870778982399,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0007fffffffff9540145656889343,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb000ffffffffff9540695412703231,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb001ffffffffff9541794924331007,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb003ffffffffff9543993947586559,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb007ffffffffff9548391994097663,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb00fffffffffff9557188087119871,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb01fffffffffff9574780273164287,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb03fffffffffff9609964645253119,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb07fffffffffff9680333389430783,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb0ffffffffffff9821070877786111,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb1ffffffffffff0102545854496767,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb3ffffffffffff0665495807918079,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb7ffffffffffff1791395714760703,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb80000000000001791395714760704,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbc0000000000002917295621603328,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbe0000000000003480245575024640,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbf0000000000003761720551735296,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbf8000000000003902458040090624,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfc000000000003972826784268288,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfe000000000004008011156357120,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbff000000000004025603342401536,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbff800000000004034399435423744,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffc00000000004038797481934848,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffe00000000004040996505190400,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfff00000000004042096016818176,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfff80000000004042645772632064,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffc0000000004042920650539008,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffe0000000004043058089492480,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffff0000000004043126808969216,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffff8000000004043161168707584,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffc000000004043178348576768,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffe000000004043186938511360,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffff000000004043191233478656,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffff800000004043193380962304,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffc00000004043194454704128,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffe00000004043194991575040,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffff00000004043195260010496,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffff80000004043195394228224,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffc0000004043195461337088,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffe0000004043195494891520,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffff0000004043195511668736,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffff8000004043195520057344,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffffc000004043195524251648,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffffe000004043195526348800,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffff000004043195527397376,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffff800004043195527921664,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffffc00004043195528183808,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffffe00004043195528314880,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffffff00004043195528380416,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffffff80004043195528413184,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffffffc0004043195528429568,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffffffe0004043195528437760,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffffff0004043195528441856,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffffff8004043195528443904,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffffffc004043195528444928,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffffffe004043195528445440,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffffffff004043195528445696,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffffffff804043195528445824,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffffffffc04043195528445888,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffffffffe04043195528445920,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffffffff04043195528445936,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffffffff84043195528445944,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffffffffc4043195528445948,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbffffffffffffe4043195528445950,64,FLEN)
NAN_BOXED(0x5f7846d433c9adbf879326308024298943,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xbfffffffffffff4043195528445951,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000000001227875636482146305,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000000003227875636482146307,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000000007227875636482146311,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000000000f227875636482146319,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000000001f227875636482146335,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000000003f227875636482146367,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8013333333333333228776356407620403,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8014924924924924229162379232823588,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8016666666666666229677076333094502,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8016db6db6db6db6229805750608162230,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8017777777777777229977316308252535,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8018888888888888230277556283410568,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8019999999999999230577796258568601,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801b6db6db6db6db231092493358839515,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ccccccccccccc231478516184042700,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801db6db6db6db6d231735864734178157,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffffffc0232379236109516736,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffffffe0232379236109516768,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffff0232379236109516784,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffff8232379236109516792,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffffc232379236109516796,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffffe232379236109516798,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000000000000304436830147444736,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000000000001304436830147444737,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000000000003304436830147444739,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000000000007304436830147444743,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000000000000f304436830147444751,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000000000001f304436830147444767,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000000000003f304436830147444799,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000000000007f304436830147444863,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200000000000ff304436830147444991,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200000000001ff304436830147445247,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200000000003ff304436830147445759,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200000000007ff304436830147446783,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000000000fff304436830147448831,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000000001fff304436830147452927,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000000003fff304436830147461119,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000000007fff304436830147477503,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000000000ffff304436830147510271,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000000001ffff304436830147575807,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000000003ffff304436830147706879,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000000007ffff304436830147969023,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200000000fffff304436830148493311,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200000001fffff304436830149541887,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200000003fffff304436830151639039,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200000007fffff304436830155833343,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000000ffffff304436830164221951,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000001ffffff304436830180999167,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000003ffffff304436830214553599,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000007ffffff304436830281662463,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000000fffffff304436830415880191,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000001fffffff304436830684315647,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000003fffffff304436831221186559,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000007fffffff304436832294928383,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200000ffffffff304436834442412031,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200001ffffffff304436838737379327,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200003ffffffff304436847327313919,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200007ffffffff304436864507183103,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120000fffffffff304436898866921471,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120001fffffffff304436967586398207,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120003fffffffff304437105025351679,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120007fffffffff304437379903258623,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812000ffffffffff304437929659072511,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812001ffffffffff304439029170700287,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812003ffffffffff304441228193955839,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812007ffffffffff304445626240466943,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81200fffffffffff304454422333489151,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81201fffffffffff304472014519533567,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81203fffffffffff304507198891622399,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x81207fffffffffff304577567635800063,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8120ffffffffffff304718305124155391,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8121ffffffffffff304999780100866047,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8123ffffffffffff305562730054287359,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8127ffffffffffff306688629961129983,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8128000000000000306688629961129984,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812c000000000000307814529867972608,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812e000000000000308377479821393920,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812f000000000000308658954798104576,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812f800000000000308799692286459904,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fc00000000000308870061030637568,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fe00000000000308905245402726400,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ff00000000000308922837588770816,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ff80000000000308931633681793024,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffc0000000000308936031728304128,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffe0000000000308938230751559680,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fff0000000000308939330263187456,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fff8000000000308939880019001344,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffc000000000308940154896908288,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffe000000000308940292335861760,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffff000000000308940361055338496,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffff800000000308940395415076864,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffc00000000308940412594946048,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffe00000000308940421184880640,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffff00000000308940425479847936,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffff80000000308940427627331584,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffc0000000308940428701073408,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffe0000000308940429237944320,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffff0000000308940429506379776,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffff8000000308940429640597504,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffc000000308940429707706368,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffe000000308940429741260800,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffff000000308940429758038016,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffff800000308940429766426624,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffffc00000308940429770620928,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffffe00000308940429772718080,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffff00000308940429773766656,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffff80000308940429774290944,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffffc0000308940429774553088,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffffe0000308940429774684160,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffffff0000308940429774749696,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffffff8000308940429774782464,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffffffc000308940429774798848,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffffffe000308940429774807040,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffffff000308940429774811136,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffffff800308940429774813184,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffffffc00308940429774814208,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffffffe00308940429774814720,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffffffff00308940429774814976,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffffffff80308940429774815104,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffffffffc0308940429774815168,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffffffffe0308940429774815200,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffffffff0308940429774815216,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffffffff8308940429774815224,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffffffffc308940429774815228,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812ffffffffffffe308940429774815230,64,FLEN)
NAN_BOXED(0x5f794665da70c367879607309055607655,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x812fffffffffffff308940429774815231,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xf5,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1f1,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f3,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x333333333333300719925474099,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4924924924924286742750677284,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6666666666666801439850948198,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6db6db6db6db6930114126015926,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7777777777777101679826106231,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8888888888888401919801264264,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x9999999999999702159776422297,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb6db6db6db6db216856876693211,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xccccccccccccc602879701896396,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xdb6db6db6db6d860228252031853,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffc0503599627370432,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffe0503599627370464,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff0503599627370480,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff8503599627370488,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffc503599627370492,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffe503599627370494,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000001064793292668928,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000011064793292668929,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000031064793292668931,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000071064793292668935,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000000f1064793292668943,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000001f1064793292668959,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000003f1064793292668991,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000007f1064793292669055,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000ff1064793292669183,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000001ff1064793292669439,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000003ff1064793292669951,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000007ff1064793292670975,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000000fff1064793292673023,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000001fff1064793292677119,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000003fff1064793292685311,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000007fff1064793292701695,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000ffff1064793292734463,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000001ffff1064793292799999,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000003ffff1064793292931071,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000007ffff1064793293193215,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000fffff1064793293717503,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000001fffff1064793294766079,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000003fffff1064793296863231,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000007fffff1064793301057535,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000ffffff1064793309446143,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000001ffffff1064793326223359,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000003ffffff1064793359777791,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000007ffffff1064793426886655,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000fffffff1064793561104383,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000001fffffff1064793829539839,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000003fffffff1064794366410751,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000007fffffff1064795440152575,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000ffffffff1064797587636223,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200001ffffffff1064801882603519,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200003ffffffff1064810472538111,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200007ffffffff1064827652407295,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000fffffffff1064862012145663,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120001fffffffff1064930731622399,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120003fffffffff1065068170575871,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120007fffffffff1065343048482815,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000ffffffffff1065892804296703,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12001ffffffffff1066992315924479,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12003ffffffffff1069191339180031,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12007ffffffffff1073589385691135,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200fffffffffff1082385478713343,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1201fffffffffff1099977664757759,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1203fffffffffff1135162036846591,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1207fffffffffff1205530781024255,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120ffffffffffff1346268269379583,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x121ffffffffffff1627743246090239,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x123ffffffffffff2190693199511551,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x127ffffffffffff3316593106354175,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1280000000000003316593106354176,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12c0000000000004442493013196800,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12e0000000000005005442966618112,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12f0000000000005286917943328768,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12f8000000000005427655431684096,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fc000000000005498024175861760,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fe000000000005533208547950592,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ff000000000005550800733995008,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ff800000000005559596827017216,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffc00000000005563994873528320,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffe00000000005566193896783872,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fff00000000005567293408411648,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fff80000000005567843164225536,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffc0000000005568118042132480,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffe0000000005568255481085952,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffff0000000005568324200562688,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffff8000000005568358560301056,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffc000000005568375740170240,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffe000000005568384330104832,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffff000000005568388625072128,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffff800000005568390772555776,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffc00000005568391846297600,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffe00000005568392383168512,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffff00000005568392651603968,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffff80000005568392785821696,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffc0000005568392852930560,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffe0000005568392886484992,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffff0000005568392903262208,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffff8000005568392911650816,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffc000005568392915845120,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffe000005568392917942272,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffff000005568392918990848,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffff800005568392919515136,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffc00005568392919777280,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffe00005568392919908352,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffff00005568392919973888,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffff80005568392920006656,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffc0005568392920023040,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffe0005568392920031232,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffff0005568392920035328,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffff8005568392920037376,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffffc005568392920038400,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffffe005568392920038912,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffff005568392920039168,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffff805568392920039296,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffffc05568392920039360,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffffe05568392920039392,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffffff05568392920039408,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffffff85568392920039416,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffffffc5568392920039420,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffffffe5568392920039422,64,FLEN)
NAN_BOXED(0x5f79488df75ac817879609680362653719,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffffff5568392920039423,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000000001227875636482146305,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000000003227875636482146307,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8010000000000007227875636482146311,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000000000f227875636482146319,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000000001f227875636482146335,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801000000000003f227875636482146367,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8013333333333333228776356407620403,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8014924924924924229162379232823588,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8016666666666666229677076333094502,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8016db6db6db6db6229805750608162230,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8017777777777777229977316308252535,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8018888888888888230277556283410568,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8019999999999999230577796258568601,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801b6db6db6db6db231092493358839515,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ccccccccccccc231478516184042700,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801db6db6db6db6d231735864734178157,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffffffc0232379236109516736,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801fffffffffffe0232379236109516768,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffff0232379236109516784,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffff8232379236109516792,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffffc232379236109516796,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x801ffffffffffffe232379236109516798,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000000000000435041219341189120,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000000000001435041219341189121,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000000000003435041219341189123,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000000000007435041219341189127,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000000000000f435041219341189135,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000000000001f435041219341189151,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000000000003f435041219341189183,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000000000007f435041219341189247,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00000000000ff435041219341189375,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00000000001ff435041219341189631,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00000000003ff435041219341190143,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00000000007ff435041219341191167,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000000000fff435041219341193215,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000000001fff435041219341197311,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000000003fff435041219341205503,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000000007fff435041219341221887,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000000000ffff435041219341254655,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000000001ffff435041219341320191,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000000003ffff435041219341451263,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000000007ffff435041219341713407,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00000000fffff435041219342237695,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00000001fffff435041219343286271,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00000003fffff435041219345383423,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00000007fffff435041219349577727,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000000ffffff435041219357966335,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000001ffffff435041219374743551,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000003ffffff435041219408297983,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000007ffffff435041219475406847,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000000fffffff435041219609624575,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000001fffffff435041219878060031,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000003fffffff435041220414930943,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000007fffffff435041221488672767,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00000ffffffff435041223636156415,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00001ffffffff435041227931123711,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00003ffffffff435041236521058303,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00007ffffffff435041253700927487,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0000fffffffff435041288060665855,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0001fffffffff435041356780142591,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0003fffffffff435041494219096063,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0007fffffffff435041769097003007,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f000ffffffffff435042318852816895,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f001ffffffffff435043418364444671,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f003ffffffffff435045617387700223,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f007ffffffffff435050015434211327,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f00fffffffffff435058811527233535,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f01fffffffffff435076403713277951,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f03fffffffffff435111588085366783,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f07fffffffffff435181956829544447,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f0ffffffffffff435322694317899775,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f1ffffffffffff435604169294610431,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f3ffffffffffff436167119248031743,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f7ffffffffffff437293019154874367,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82f8000000000000437293019154874368,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fc000000000000438418919061716992,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fe000000000000438981869015138304,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ff000000000000439263343991848960,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ff800000000000439404081480204288,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffc00000000000439474450224381952,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffe00000000000439509634596470784,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fff00000000000439527226782515200,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fff80000000000439536022875537408,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffc0000000000439540420922048512,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffe0000000000439542619945304064,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffff0000000000439543719456931840,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffff8000000000439544269212745728,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffc000000000439544544090652672,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffe000000000439544681529606144,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffff000000000439544750249082880,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffff800000000439544784608821248,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffc00000000439544801788690432,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffe00000000439544810378625024,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffff00000000439544814673592320,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffff80000000439544816821075968,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffc0000000439544817894817792,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffe0000000439544818431688704,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffff0000000439544818700124160,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffff8000000439544818834341888,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffc000000439544818901450752,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffe000000439544818935005184,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffff000000439544818951782400,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffff800000439544818960171008,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffffc00000439544818964365312,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffffe00000439544818966462464,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffff00000439544818967511040,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffff80000439544818968035328,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffffc0000439544818968297472,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffffe0000439544818968428544,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffffff0000439544818968494080,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffffff8000439544818968526848,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffffffc000439544818968543232,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffffffe000439544818968551424,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffffff000439544818968555520,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffffff800439544818968557568,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffffffc00439544818968558592,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffffffe00439544818968559104,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffffffff00439544818968559360,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffffffff80439544818968559488,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffffffffc0439544818968559552,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffffffffe0439544818968559584,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffffffff0439544818968559600,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffffffff8439544818968559608,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffffffffc439544818968559612,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82fffffffffffffe439544818968559614,64,FLEN)
NAN_BOXED(0x5f79518f8585be77879619582647451255,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x82ffffffffffffff439544818968559615,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000001223372036854775809,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000003223372036854775811,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8000000000000007223372036854775815,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000000f223372036854775823,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000001f223372036854775839,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800000000000003f223372036854775871,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8003333333333333224272756780249907,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8004924924924924224658779605453092,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8006666666666666225173476705724006,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8006db6db6db6db6225302150980791734,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8007777777777777225473716680882039,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8008888888888888225773956656040072,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x8009999999999999226074196631198105,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800b6db6db6db6db226588893731469019,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ccccccccccccc226974916556672204,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800db6db6db6db6d227232265106807661,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800fffffffffffc0227875636482146240,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800fffffffffffe0227875636482146272,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffff0227875636482146288,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffff8227875636482146296,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffffc227875636482146300,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x800ffffffffffffe227875636482146302,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000000000000277415232383221760,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000000000001277415232383221761,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000000000003277415232383221763,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000000000007277415232383221767,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000000000000f277415232383221775,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000000000001f277415232383221791,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000000000003f277415232383221823,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000000000007f277415232383221887,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00000000000ff277415232383222015,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00000000001ff277415232383222271,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00000000003ff277415232383222783,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00000000007ff277415232383223807,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000000000fff277415232383225855,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000000001fff277415232383229951,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000000003fff277415232383238143,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000000007fff277415232383254527,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000000000ffff277415232383287295,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000000001ffff277415232383352831,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000000003ffff277415232383483903,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000000007ffff277415232383746047,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00000000fffff277415232384270335,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00000001fffff277415232385318911,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00000003fffff277415232387416063,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00000007fffff277415232391610367,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000000ffffff277415232399998975,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000001ffffff277415232416776191,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000003ffffff277415232450330623,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000007ffffff277415232517439487,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000000fffffff277415232651657215,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000001fffffff277415232920092671,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000003fffffff277415233456963583,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000007fffffff277415234530705407,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00000ffffffff277415236678189055,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00001ffffffff277415240973156351,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00003ffffffff277415249563090943,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00007ffffffff277415266742960127,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0000fffffffff277415301102698495,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0001fffffffff277415369822175231,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0003fffffffff277415507261128703,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0007fffffffff277415782139035647,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c000ffffffffff277416331894849535,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c001ffffffffff277417431406477311,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c003ffffffffff277419630429732863,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c007ffffffffff277424028476243967,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c00fffffffffff277432824569266175,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c01fffffffffff277450416755310591,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c03fffffffffff277485601127399423,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c07fffffffffff277555969871577087,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c0ffffffffffff277696707359932415,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c1ffffffffffff277978182336643071,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c3ffffffffffff278541132290064383,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c7ffffffffffff279667032196907007,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80c8000000000000279667032196907008,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cc000000000000280792932103749632,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80ce000000000000281355882057170944,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cf000000000000281637357033881600,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cf800000000000281778094522236928,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cfc00000000000281848463266414592,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cfe00000000000281883647638503424,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cff00000000000281901239824547840,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cff80000000000281910035917570048,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cffc0000000000281914433964081152,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cffe0000000000281916632987336704,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cfff0000000000281917732498964480,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cfff8000000000281918282254778368,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cfffc000000000281918557132685312,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cfffe000000000281918694571638784,64,FLEN)
NAN_BOXED(0x5f7965e42d4900a7879641936471851175,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x80cffff000000000281918763291115520,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
