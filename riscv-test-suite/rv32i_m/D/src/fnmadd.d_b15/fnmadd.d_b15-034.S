
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:28:39 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_25344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832fffffff800000; valaddr_reg:x3; val_offset:76032*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76032*0 + 3*0*FLEN/8, x4, x1, x2)

inst_25345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832fffffffc00000; valaddr_reg:x3; val_offset:76035*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76035*0 + 3*1*FLEN/8, x4, x1, x2)

inst_25346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832fffffffe00000; valaddr_reg:x3; val_offset:76038*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76038*0 + 3*2*FLEN/8, x4, x1, x2)

inst_25347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832ffffffff00000; valaddr_reg:x3; val_offset:76041*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76041*0 + 3*3*FLEN/8, x4, x1, x2)

inst_25348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832ffffffff80000; valaddr_reg:x3; val_offset:76044*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76044*0 + 3*4*FLEN/8, x4, x1, x2)

inst_25349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832ffffffffc0000; valaddr_reg:x3; val_offset:76047*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76047*0 + 3*5*FLEN/8, x4, x1, x2)

inst_25350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832ffffffffe0000; valaddr_reg:x3; val_offset:76050*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76050*0 + 3*6*FLEN/8, x4, x1, x2)

inst_25351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832fffffffff0000; valaddr_reg:x3; val_offset:76053*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76053*0 + 3*7*FLEN/8, x4, x1, x2)

inst_25352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832fffffffff8000; valaddr_reg:x3; val_offset:76056*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76056*0 + 3*8*FLEN/8, x4, x1, x2)

inst_25353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832fffffffffc000; valaddr_reg:x3; val_offset:76059*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76059*0 + 3*9*FLEN/8, x4, x1, x2)

inst_25354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832fffffffffe000; valaddr_reg:x3; val_offset:76062*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76062*0 + 3*10*FLEN/8, x4, x1, x2)

inst_25355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832ffffffffff000; valaddr_reg:x3; val_offset:76065*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76065*0 + 3*11*FLEN/8, x4, x1, x2)

inst_25356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832ffffffffff800; valaddr_reg:x3; val_offset:76068*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76068*0 + 3*12*FLEN/8, x4, x1, x2)

inst_25357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832ffffffffffc00; valaddr_reg:x3; val_offset:76071*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76071*0 + 3*13*FLEN/8, x4, x1, x2)

inst_25358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832ffffffffffe00; valaddr_reg:x3; val_offset:76074*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76074*0 + 3*14*FLEN/8, x4, x1, x2)

inst_25359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832fffffffffff00; valaddr_reg:x3; val_offset:76077*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76077*0 + 3*15*FLEN/8, x4, x1, x2)

inst_25360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832fffffffffff80; valaddr_reg:x3; val_offset:76080*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76080*0 + 3*16*FLEN/8, x4, x1, x2)

inst_25361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832fffffffffffc0; valaddr_reg:x3; val_offset:76083*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76083*0 + 3*17*FLEN/8, x4, x1, x2)

inst_25362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832fffffffffffe0; valaddr_reg:x3; val_offset:76086*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76086*0 + 3*18*FLEN/8, x4, x1, x2)

inst_25363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832ffffffffffff0; valaddr_reg:x3; val_offset:76089*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76089*0 + 3*19*FLEN/8, x4, x1, x2)

inst_25364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832ffffffffffff8; valaddr_reg:x3; val_offset:76092*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76092*0 + 3*20*FLEN/8, x4, x1, x2)

inst_25365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832ffffffffffffc; valaddr_reg:x3; val_offset:76095*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76095*0 + 3*21*FLEN/8, x4, x1, x2)

inst_25366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832ffffffffffffe; valaddr_reg:x3; val_offset:76098*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76098*0 + 3*22*FLEN/8, x4, x1, x2)

inst_25367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x056bcd04279ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9056bcd04279ed; op2val:0x8000;
op3val:0x832fffffffffffff; valaddr_reg:x3; val_offset:76101*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76101*0 + 3*23*FLEN/8, x4, x1, x2)

inst_25368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000000000000; valaddr_reg:x3; val_offset:76104*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76104*0 + 3*24*FLEN/8, x4, x1, x2)

inst_25369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000000000001; valaddr_reg:x3; val_offset:76107*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76107*0 + 3*25*FLEN/8, x4, x1, x2)

inst_25370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000000000003; valaddr_reg:x3; val_offset:76110*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76110*0 + 3*26*FLEN/8, x4, x1, x2)

inst_25371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000000000007; valaddr_reg:x3; val_offset:76113*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76113*0 + 3*27*FLEN/8, x4, x1, x2)

inst_25372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000000000000f; valaddr_reg:x3; val_offset:76116*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76116*0 + 3*28*FLEN/8, x4, x1, x2)

inst_25373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000000000001f; valaddr_reg:x3; val_offset:76119*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76119*0 + 3*29*FLEN/8, x4, x1, x2)

inst_25374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000000000003f; valaddr_reg:x3; val_offset:76122*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76122*0 + 3*30*FLEN/8, x4, x1, x2)

inst_25375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000000000007f; valaddr_reg:x3; val_offset:76125*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76125*0 + 3*31*FLEN/8, x4, x1, x2)

inst_25376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00000000000ff; valaddr_reg:x3; val_offset:76128*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76128*0 + 3*32*FLEN/8, x4, x1, x2)

inst_25377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00000000001ff; valaddr_reg:x3; val_offset:76131*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76131*0 + 3*33*FLEN/8, x4, x1, x2)

inst_25378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00000000003ff; valaddr_reg:x3; val_offset:76134*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76134*0 + 3*34*FLEN/8, x4, x1, x2)

inst_25379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00000000007ff; valaddr_reg:x3; val_offset:76137*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76137*0 + 3*35*FLEN/8, x4, x1, x2)

inst_25380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000000000fff; valaddr_reg:x3; val_offset:76140*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76140*0 + 3*36*FLEN/8, x4, x1, x2)

inst_25381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000000001fff; valaddr_reg:x3; val_offset:76143*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76143*0 + 3*37*FLEN/8, x4, x1, x2)

inst_25382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000000003fff; valaddr_reg:x3; val_offset:76146*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76146*0 + 3*38*FLEN/8, x4, x1, x2)

inst_25383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000000007fff; valaddr_reg:x3; val_offset:76149*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76149*0 + 3*39*FLEN/8, x4, x1, x2)

inst_25384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000000000ffff; valaddr_reg:x3; val_offset:76152*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76152*0 + 3*40*FLEN/8, x4, x1, x2)

inst_25385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000000001ffff; valaddr_reg:x3; val_offset:76155*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76155*0 + 3*41*FLEN/8, x4, x1, x2)

inst_25386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000000003ffff; valaddr_reg:x3; val_offset:76158*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76158*0 + 3*42*FLEN/8, x4, x1, x2)

inst_25387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000000007ffff; valaddr_reg:x3; val_offset:76161*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76161*0 + 3*43*FLEN/8, x4, x1, x2)

inst_25388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00000000fffff; valaddr_reg:x3; val_offset:76164*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76164*0 + 3*44*FLEN/8, x4, x1, x2)

inst_25389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00000001fffff; valaddr_reg:x3; val_offset:76167*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76167*0 + 3*45*FLEN/8, x4, x1, x2)

inst_25390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00000003fffff; valaddr_reg:x3; val_offset:76170*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76170*0 + 3*46*FLEN/8, x4, x1, x2)

inst_25391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00000007fffff; valaddr_reg:x3; val_offset:76173*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76173*0 + 3*47*FLEN/8, x4, x1, x2)

inst_25392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000000ffffff; valaddr_reg:x3; val_offset:76176*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76176*0 + 3*48*FLEN/8, x4, x1, x2)

inst_25393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000001ffffff; valaddr_reg:x3; val_offset:76179*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76179*0 + 3*49*FLEN/8, x4, x1, x2)

inst_25394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000003ffffff; valaddr_reg:x3; val_offset:76182*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76182*0 + 3*50*FLEN/8, x4, x1, x2)

inst_25395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000007ffffff; valaddr_reg:x3; val_offset:76185*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76185*0 + 3*51*FLEN/8, x4, x1, x2)

inst_25396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000000fffffff; valaddr_reg:x3; val_offset:76188*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76188*0 + 3*52*FLEN/8, x4, x1, x2)

inst_25397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000001fffffff; valaddr_reg:x3; val_offset:76191*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76191*0 + 3*53*FLEN/8, x4, x1, x2)

inst_25398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000003fffffff; valaddr_reg:x3; val_offset:76194*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76194*0 + 3*54*FLEN/8, x4, x1, x2)

inst_25399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000007fffffff; valaddr_reg:x3; val_offset:76197*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76197*0 + 3*55*FLEN/8, x4, x1, x2)

inst_25400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00000ffffffff; valaddr_reg:x3; val_offset:76200*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76200*0 + 3*56*FLEN/8, x4, x1, x2)

inst_25401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00001ffffffff; valaddr_reg:x3; val_offset:76203*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76203*0 + 3*57*FLEN/8, x4, x1, x2)

inst_25402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00003ffffffff; valaddr_reg:x3; val_offset:76206*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76206*0 + 3*58*FLEN/8, x4, x1, x2)

inst_25403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00007ffffffff; valaddr_reg:x3; val_offset:76209*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76209*0 + 3*59*FLEN/8, x4, x1, x2)

inst_25404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0000fffffffff; valaddr_reg:x3; val_offset:76212*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76212*0 + 3*60*FLEN/8, x4, x1, x2)

inst_25405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0001fffffffff; valaddr_reg:x3; val_offset:76215*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76215*0 + 3*61*FLEN/8, x4, x1, x2)

inst_25406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0003fffffffff; valaddr_reg:x3; val_offset:76218*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76218*0 + 3*62*FLEN/8, x4, x1, x2)

inst_25407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0007fffffffff; valaddr_reg:x3; val_offset:76221*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76221*0 + 3*63*FLEN/8, x4, x1, x2)

inst_25408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde000ffffffffff; valaddr_reg:x3; val_offset:76224*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76224*0 + 3*64*FLEN/8, x4, x1, x2)

inst_25409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde001ffffffffff; valaddr_reg:x3; val_offset:76227*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76227*0 + 3*65*FLEN/8, x4, x1, x2)

inst_25410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde003ffffffffff; valaddr_reg:x3; val_offset:76230*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76230*0 + 3*66*FLEN/8, x4, x1, x2)

inst_25411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde007ffffffffff; valaddr_reg:x3; val_offset:76233*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76233*0 + 3*67*FLEN/8, x4, x1, x2)

inst_25412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde00fffffffffff; valaddr_reg:x3; val_offset:76236*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76236*0 + 3*68*FLEN/8, x4, x1, x2)

inst_25413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde01fffffffffff; valaddr_reg:x3; val_offset:76239*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76239*0 + 3*69*FLEN/8, x4, x1, x2)

inst_25414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde03fffffffffff; valaddr_reg:x3; val_offset:76242*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76242*0 + 3*70*FLEN/8, x4, x1, x2)

inst_25415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde07fffffffffff; valaddr_reg:x3; val_offset:76245*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76245*0 + 3*71*FLEN/8, x4, x1, x2)

inst_25416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde0ffffffffffff; valaddr_reg:x3; val_offset:76248*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76248*0 + 3*72*FLEN/8, x4, x1, x2)

inst_25417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde1ffffffffffff; valaddr_reg:x3; val_offset:76251*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76251*0 + 3*73*FLEN/8, x4, x1, x2)

inst_25418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde3ffffffffffff; valaddr_reg:x3; val_offset:76254*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76254*0 + 3*74*FLEN/8, x4, x1, x2)

inst_25419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde7ffffffffffff; valaddr_reg:x3; val_offset:76257*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76257*0 + 3*75*FLEN/8, x4, x1, x2)

inst_25420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbde8000000000000; valaddr_reg:x3; val_offset:76260*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76260*0 + 3*76*FLEN/8, x4, x1, x2)

inst_25421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdec000000000000; valaddr_reg:x3; val_offset:76263*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76263*0 + 3*77*FLEN/8, x4, x1, x2)

inst_25422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdee000000000000; valaddr_reg:x3; val_offset:76266*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76266*0 + 3*78*FLEN/8, x4, x1, x2)

inst_25423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdef000000000000; valaddr_reg:x3; val_offset:76269*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76269*0 + 3*79*FLEN/8, x4, x1, x2)

inst_25424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdef800000000000; valaddr_reg:x3; val_offset:76272*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76272*0 + 3*80*FLEN/8, x4, x1, x2)

inst_25425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefc00000000000; valaddr_reg:x3; val_offset:76275*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76275*0 + 3*81*FLEN/8, x4, x1, x2)

inst_25426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefe00000000000; valaddr_reg:x3; val_offset:76278*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76278*0 + 3*82*FLEN/8, x4, x1, x2)

inst_25427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeff00000000000; valaddr_reg:x3; val_offset:76281*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76281*0 + 3*83*FLEN/8, x4, x1, x2)

inst_25428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeff80000000000; valaddr_reg:x3; val_offset:76284*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76284*0 + 3*84*FLEN/8, x4, x1, x2)

inst_25429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffc0000000000; valaddr_reg:x3; val_offset:76287*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76287*0 + 3*85*FLEN/8, x4, x1, x2)

inst_25430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffe0000000000; valaddr_reg:x3; val_offset:76290*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76290*0 + 3*86*FLEN/8, x4, x1, x2)

inst_25431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefff0000000000; valaddr_reg:x3; val_offset:76293*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76293*0 + 3*87*FLEN/8, x4, x1, x2)

inst_25432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefff8000000000; valaddr_reg:x3; val_offset:76296*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76296*0 + 3*88*FLEN/8, x4, x1, x2)

inst_25433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffc000000000; valaddr_reg:x3; val_offset:76299*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76299*0 + 3*89*FLEN/8, x4, x1, x2)

inst_25434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffe000000000; valaddr_reg:x3; val_offset:76302*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76302*0 + 3*90*FLEN/8, x4, x1, x2)

inst_25435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffff000000000; valaddr_reg:x3; val_offset:76305*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76305*0 + 3*91*FLEN/8, x4, x1, x2)

inst_25436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffff800000000; valaddr_reg:x3; val_offset:76308*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76308*0 + 3*92*FLEN/8, x4, x1, x2)

inst_25437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffc00000000; valaddr_reg:x3; val_offset:76311*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76311*0 + 3*93*FLEN/8, x4, x1, x2)

inst_25438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffe00000000; valaddr_reg:x3; val_offset:76314*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76314*0 + 3*94*FLEN/8, x4, x1, x2)

inst_25439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffff00000000; valaddr_reg:x3; val_offset:76317*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76317*0 + 3*95*FLEN/8, x4, x1, x2)

inst_25440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffff80000000; valaddr_reg:x3; val_offset:76320*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76320*0 + 3*96*FLEN/8, x4, x1, x2)

inst_25441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffc0000000; valaddr_reg:x3; val_offset:76323*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76323*0 + 3*97*FLEN/8, x4, x1, x2)

inst_25442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffe0000000; valaddr_reg:x3; val_offset:76326*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76326*0 + 3*98*FLEN/8, x4, x1, x2)

inst_25443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffff0000000; valaddr_reg:x3; val_offset:76329*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76329*0 + 3*99*FLEN/8, x4, x1, x2)

inst_25444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffff8000000; valaddr_reg:x3; val_offset:76332*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76332*0 + 3*100*FLEN/8, x4, x1, x2)

inst_25445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffc000000; valaddr_reg:x3; val_offset:76335*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76335*0 + 3*101*FLEN/8, x4, x1, x2)

inst_25446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffe000000; valaddr_reg:x3; val_offset:76338*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76338*0 + 3*102*FLEN/8, x4, x1, x2)

inst_25447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffff000000; valaddr_reg:x3; val_offset:76341*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76341*0 + 3*103*FLEN/8, x4, x1, x2)

inst_25448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffff800000; valaddr_reg:x3; val_offset:76344*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76344*0 + 3*104*FLEN/8, x4, x1, x2)

inst_25449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffffc00000; valaddr_reg:x3; val_offset:76347*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76347*0 + 3*105*FLEN/8, x4, x1, x2)

inst_25450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffffe00000; valaddr_reg:x3; val_offset:76350*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76350*0 + 3*106*FLEN/8, x4, x1, x2)

inst_25451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffff00000; valaddr_reg:x3; val_offset:76353*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76353*0 + 3*107*FLEN/8, x4, x1, x2)

inst_25452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffff80000; valaddr_reg:x3; val_offset:76356*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76356*0 + 3*108*FLEN/8, x4, x1, x2)

inst_25453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffffc0000; valaddr_reg:x3; val_offset:76359*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76359*0 + 3*109*FLEN/8, x4, x1, x2)

inst_25454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffffe0000; valaddr_reg:x3; val_offset:76362*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76362*0 + 3*110*FLEN/8, x4, x1, x2)

inst_25455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffffff0000; valaddr_reg:x3; val_offset:76365*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76365*0 + 3*111*FLEN/8, x4, x1, x2)

inst_25456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffffff8000; valaddr_reg:x3; val_offset:76368*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76368*0 + 3*112*FLEN/8, x4, x1, x2)

inst_25457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffffffc000; valaddr_reg:x3; val_offset:76371*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76371*0 + 3*113*FLEN/8, x4, x1, x2)

inst_25458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffffffe000; valaddr_reg:x3; val_offset:76374*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76374*0 + 3*114*FLEN/8, x4, x1, x2)

inst_25459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffffff000; valaddr_reg:x3; val_offset:76377*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76377*0 + 3*115*FLEN/8, x4, x1, x2)

inst_25460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffffff800; valaddr_reg:x3; val_offset:76380*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76380*0 + 3*116*FLEN/8, x4, x1, x2)

inst_25461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffffffc00; valaddr_reg:x3; val_offset:76383*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76383*0 + 3*117*FLEN/8, x4, x1, x2)

inst_25462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffffffe00; valaddr_reg:x3; val_offset:76386*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76386*0 + 3*118*FLEN/8, x4, x1, x2)

inst_25463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffffffff00; valaddr_reg:x3; val_offset:76389*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76389*0 + 3*119*FLEN/8, x4, x1, x2)

inst_25464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffffffff80; valaddr_reg:x3; val_offset:76392*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76392*0 + 3*120*FLEN/8, x4, x1, x2)

inst_25465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffffffffc0; valaddr_reg:x3; val_offset:76395*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76395*0 + 3*121*FLEN/8, x4, x1, x2)

inst_25466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffffffffe0; valaddr_reg:x3; val_offset:76398*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76398*0 + 3*122*FLEN/8, x4, x1, x2)

inst_25467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffffffff0; valaddr_reg:x3; val_offset:76401*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76401*0 + 3*123*FLEN/8, x4, x1, x2)

inst_25468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffffffff8; valaddr_reg:x3; val_offset:76404*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76404*0 + 3*124*FLEN/8, x4, x1, x2)

inst_25469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffffffffc; valaddr_reg:x3; val_offset:76407*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76407*0 + 3*125*FLEN/8, x4, x1, x2)

inst_25470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdeffffffffffffe; valaddr_reg:x3; val_offset:76410*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76410*0 + 3*126*FLEN/8, x4, x1, x2)

inst_25471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3de and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbdefffffffffffff; valaddr_reg:x3; val_offset:76413*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76413*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_25472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:76416*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76416*0 + 3*128*FLEN/8, x4, x1, x2)

inst_25473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:76419*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76419*0 + 3*129*FLEN/8, x4, x1, x2)

inst_25474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:76422*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76422*0 + 3*130*FLEN/8, x4, x1, x2)

inst_25475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:76425*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76425*0 + 3*131*FLEN/8, x4, x1, x2)

inst_25476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:76428*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76428*0 + 3*132*FLEN/8, x4, x1, x2)

inst_25477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:76431*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76431*0 + 3*133*FLEN/8, x4, x1, x2)

inst_25478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:76434*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76434*0 + 3*134*FLEN/8, x4, x1, x2)

inst_25479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:76437*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76437*0 + 3*135*FLEN/8, x4, x1, x2)

inst_25480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:76440*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76440*0 + 3*136*FLEN/8, x4, x1, x2)

inst_25481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:76443*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76443*0 + 3*137*FLEN/8, x4, x1, x2)

inst_25482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:76446*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76446*0 + 3*138*FLEN/8, x4, x1, x2)

inst_25483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:76449*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76449*0 + 3*139*FLEN/8, x4, x1, x2)

inst_25484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:76452*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76452*0 + 3*140*FLEN/8, x4, x1, x2)

inst_25485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:76455*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76455*0 + 3*141*FLEN/8, x4, x1, x2)

inst_25486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:76458*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76458*0 + 3*142*FLEN/8, x4, x1, x2)

inst_25487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:76461*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76461*0 + 3*143*FLEN/8, x4, x1, x2)

inst_25488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:76464*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76464*0 + 3*144*FLEN/8, x4, x1, x2)

inst_25489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:76467*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76467*0 + 3*145*FLEN/8, x4, x1, x2)

inst_25490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:76470*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76470*0 + 3*146*FLEN/8, x4, x1, x2)

inst_25491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:76473*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76473*0 + 3*147*FLEN/8, x4, x1, x2)

inst_25492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:76476*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76476*0 + 3*148*FLEN/8, x4, x1, x2)

inst_25493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08290cbe2e23f and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xf02ef8073d049 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908290cbe2e23f; op2val:0x9fdf02ef8073d049;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:76479*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76479*0 + 3*149*FLEN/8, x4, x1, x2)

inst_25494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000000000000; valaddr_reg:x3; val_offset:76482*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76482*0 + 3*150*FLEN/8, x4, x1, x2)

inst_25495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000000000001; valaddr_reg:x3; val_offset:76485*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76485*0 + 3*151*FLEN/8, x4, x1, x2)

inst_25496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000000000003; valaddr_reg:x3; val_offset:76488*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76488*0 + 3*152*FLEN/8, x4, x1, x2)

inst_25497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000000000007; valaddr_reg:x3; val_offset:76491*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76491*0 + 3*153*FLEN/8, x4, x1, x2)

inst_25498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000000000000f; valaddr_reg:x3; val_offset:76494*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76494*0 + 3*154*FLEN/8, x4, x1, x2)

inst_25499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000000000001f; valaddr_reg:x3; val_offset:76497*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76497*0 + 3*155*FLEN/8, x4, x1, x2)

inst_25500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000000000003f; valaddr_reg:x3; val_offset:76500*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76500*0 + 3*156*FLEN/8, x4, x1, x2)

inst_25501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000000000007f; valaddr_reg:x3; val_offset:76503*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76503*0 + 3*157*FLEN/8, x4, x1, x2)

inst_25502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400000000000ff; valaddr_reg:x3; val_offset:76506*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76506*0 + 3*158*FLEN/8, x4, x1, x2)

inst_25503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400000000001ff; valaddr_reg:x3; val_offset:76509*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76509*0 + 3*159*FLEN/8, x4, x1, x2)

inst_25504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400000000003ff; valaddr_reg:x3; val_offset:76512*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76512*0 + 3*160*FLEN/8, x4, x1, x2)

inst_25505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400000000007ff; valaddr_reg:x3; val_offset:76515*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76515*0 + 3*161*FLEN/8, x4, x1, x2)

inst_25506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000000000fff; valaddr_reg:x3; val_offset:76518*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76518*0 + 3*162*FLEN/8, x4, x1, x2)

inst_25507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000000001fff; valaddr_reg:x3; val_offset:76521*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76521*0 + 3*163*FLEN/8, x4, x1, x2)

inst_25508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000000003fff; valaddr_reg:x3; val_offset:76524*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76524*0 + 3*164*FLEN/8, x4, x1, x2)

inst_25509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000000007fff; valaddr_reg:x3; val_offset:76527*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76527*0 + 3*165*FLEN/8, x4, x1, x2)

inst_25510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000000000ffff; valaddr_reg:x3; val_offset:76530*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76530*0 + 3*166*FLEN/8, x4, x1, x2)

inst_25511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000000001ffff; valaddr_reg:x3; val_offset:76533*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76533*0 + 3*167*FLEN/8, x4, x1, x2)

inst_25512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000000003ffff; valaddr_reg:x3; val_offset:76536*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76536*0 + 3*168*FLEN/8, x4, x1, x2)

inst_25513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000000007ffff; valaddr_reg:x3; val_offset:76539*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76539*0 + 3*169*FLEN/8, x4, x1, x2)

inst_25514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400000000fffff; valaddr_reg:x3; val_offset:76542*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76542*0 + 3*170*FLEN/8, x4, x1, x2)

inst_25515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400000001fffff; valaddr_reg:x3; val_offset:76545*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76545*0 + 3*171*FLEN/8, x4, x1, x2)

inst_25516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400000003fffff; valaddr_reg:x3; val_offset:76548*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76548*0 + 3*172*FLEN/8, x4, x1, x2)

inst_25517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400000007fffff; valaddr_reg:x3; val_offset:76551*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76551*0 + 3*173*FLEN/8, x4, x1, x2)

inst_25518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000000ffffff; valaddr_reg:x3; val_offset:76554*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76554*0 + 3*174*FLEN/8, x4, x1, x2)

inst_25519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000001ffffff; valaddr_reg:x3; val_offset:76557*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76557*0 + 3*175*FLEN/8, x4, x1, x2)

inst_25520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000003ffffff; valaddr_reg:x3; val_offset:76560*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76560*0 + 3*176*FLEN/8, x4, x1, x2)

inst_25521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000007ffffff; valaddr_reg:x3; val_offset:76563*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76563*0 + 3*177*FLEN/8, x4, x1, x2)

inst_25522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000000fffffff; valaddr_reg:x3; val_offset:76566*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76566*0 + 3*178*FLEN/8, x4, x1, x2)

inst_25523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000001fffffff; valaddr_reg:x3; val_offset:76569*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76569*0 + 3*179*FLEN/8, x4, x1, x2)

inst_25524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000003fffffff; valaddr_reg:x3; val_offset:76572*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76572*0 + 3*180*FLEN/8, x4, x1, x2)

inst_25525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000007fffffff; valaddr_reg:x3; val_offset:76575*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76575*0 + 3*181*FLEN/8, x4, x1, x2)

inst_25526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400000ffffffff; valaddr_reg:x3; val_offset:76578*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76578*0 + 3*182*FLEN/8, x4, x1, x2)

inst_25527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400001ffffffff; valaddr_reg:x3; val_offset:76581*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76581*0 + 3*183*FLEN/8, x4, x1, x2)

inst_25528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400003ffffffff; valaddr_reg:x3; val_offset:76584*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76584*0 + 3*184*FLEN/8, x4, x1, x2)

inst_25529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400007ffffffff; valaddr_reg:x3; val_offset:76587*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76587*0 + 3*185*FLEN/8, x4, x1, x2)

inst_25530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840000fffffffff; valaddr_reg:x3; val_offset:76590*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76590*0 + 3*186*FLEN/8, x4, x1, x2)

inst_25531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840001fffffffff; valaddr_reg:x3; val_offset:76593*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76593*0 + 3*187*FLEN/8, x4, x1, x2)

inst_25532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840003fffffffff; valaddr_reg:x3; val_offset:76596*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76596*0 + 3*188*FLEN/8, x4, x1, x2)

inst_25533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840007fffffffff; valaddr_reg:x3; val_offset:76599*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76599*0 + 3*189*FLEN/8, x4, x1, x2)

inst_25534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384000ffffffffff; valaddr_reg:x3; val_offset:76602*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76602*0 + 3*190*FLEN/8, x4, x1, x2)

inst_25535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384001ffffffffff; valaddr_reg:x3; val_offset:76605*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76605*0 + 3*191*FLEN/8, x4, x1, x2)

inst_25536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384003ffffffffff; valaddr_reg:x3; val_offset:76608*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76608*0 + 3*192*FLEN/8, x4, x1, x2)

inst_25537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384007ffffffffff; valaddr_reg:x3; val_offset:76611*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76611*0 + 3*193*FLEN/8, x4, x1, x2)

inst_25538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38400fffffffffff; valaddr_reg:x3; val_offset:76614*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76614*0 + 3*194*FLEN/8, x4, x1, x2)

inst_25539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38401fffffffffff; valaddr_reg:x3; val_offset:76617*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76617*0 + 3*195*FLEN/8, x4, x1, x2)

inst_25540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38403fffffffffff; valaddr_reg:x3; val_offset:76620*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76620*0 + 3*196*FLEN/8, x4, x1, x2)

inst_25541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x38407fffffffffff; valaddr_reg:x3; val_offset:76623*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76623*0 + 3*197*FLEN/8, x4, x1, x2)

inst_25542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3840ffffffffffff; valaddr_reg:x3; val_offset:76626*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76626*0 + 3*198*FLEN/8, x4, x1, x2)

inst_25543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3841ffffffffffff; valaddr_reg:x3; val_offset:76629*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76629*0 + 3*199*FLEN/8, x4, x1, x2)

inst_25544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3843ffffffffffff; valaddr_reg:x3; val_offset:76632*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76632*0 + 3*200*FLEN/8, x4, x1, x2)

inst_25545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3847ffffffffffff; valaddr_reg:x3; val_offset:76635*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76635*0 + 3*201*FLEN/8, x4, x1, x2)

inst_25546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3848000000000000; valaddr_reg:x3; val_offset:76638*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76638*0 + 3*202*FLEN/8, x4, x1, x2)

inst_25547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384c000000000000; valaddr_reg:x3; val_offset:76641*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76641*0 + 3*203*FLEN/8, x4, x1, x2)

inst_25548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384e000000000000; valaddr_reg:x3; val_offset:76644*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76644*0 + 3*204*FLEN/8, x4, x1, x2)

inst_25549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384f000000000000; valaddr_reg:x3; val_offset:76647*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76647*0 + 3*205*FLEN/8, x4, x1, x2)

inst_25550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384f800000000000; valaddr_reg:x3; val_offset:76650*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76650*0 + 3*206*FLEN/8, x4, x1, x2)

inst_25551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fc00000000000; valaddr_reg:x3; val_offset:76653*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76653*0 + 3*207*FLEN/8, x4, x1, x2)

inst_25552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fe00000000000; valaddr_reg:x3; val_offset:76656*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76656*0 + 3*208*FLEN/8, x4, x1, x2)

inst_25553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ff00000000000; valaddr_reg:x3; val_offset:76659*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76659*0 + 3*209*FLEN/8, x4, x1, x2)

inst_25554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ff80000000000; valaddr_reg:x3; val_offset:76662*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76662*0 + 3*210*FLEN/8, x4, x1, x2)

inst_25555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffc0000000000; valaddr_reg:x3; val_offset:76665*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76665*0 + 3*211*FLEN/8, x4, x1, x2)

inst_25556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffe0000000000; valaddr_reg:x3; val_offset:76668*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76668*0 + 3*212*FLEN/8, x4, x1, x2)

inst_25557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fff0000000000; valaddr_reg:x3; val_offset:76671*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76671*0 + 3*213*FLEN/8, x4, x1, x2)

inst_25558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fff8000000000; valaddr_reg:x3; val_offset:76674*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76674*0 + 3*214*FLEN/8, x4, x1, x2)

inst_25559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffc000000000; valaddr_reg:x3; val_offset:76677*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76677*0 + 3*215*FLEN/8, x4, x1, x2)

inst_25560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffe000000000; valaddr_reg:x3; val_offset:76680*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76680*0 + 3*216*FLEN/8, x4, x1, x2)

inst_25561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffff000000000; valaddr_reg:x3; val_offset:76683*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76683*0 + 3*217*FLEN/8, x4, x1, x2)

inst_25562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffff800000000; valaddr_reg:x3; val_offset:76686*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76686*0 + 3*218*FLEN/8, x4, x1, x2)

inst_25563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffc00000000; valaddr_reg:x3; val_offset:76689*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76689*0 + 3*219*FLEN/8, x4, x1, x2)

inst_25564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffe00000000; valaddr_reg:x3; val_offset:76692*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76692*0 + 3*220*FLEN/8, x4, x1, x2)

inst_25565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffff00000000; valaddr_reg:x3; val_offset:76695*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76695*0 + 3*221*FLEN/8, x4, x1, x2)

inst_25566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffff80000000; valaddr_reg:x3; val_offset:76698*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76698*0 + 3*222*FLEN/8, x4, x1, x2)

inst_25567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffc0000000; valaddr_reg:x3; val_offset:76701*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76701*0 + 3*223*FLEN/8, x4, x1, x2)

inst_25568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffe0000000; valaddr_reg:x3; val_offset:76704*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76704*0 + 3*224*FLEN/8, x4, x1, x2)

inst_25569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffff0000000; valaddr_reg:x3; val_offset:76707*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76707*0 + 3*225*FLEN/8, x4, x1, x2)

inst_25570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffff8000000; valaddr_reg:x3; val_offset:76710*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76710*0 + 3*226*FLEN/8, x4, x1, x2)

inst_25571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffc000000; valaddr_reg:x3; val_offset:76713*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76713*0 + 3*227*FLEN/8, x4, x1, x2)

inst_25572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffe000000; valaddr_reg:x3; val_offset:76716*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76716*0 + 3*228*FLEN/8, x4, x1, x2)

inst_25573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffff000000; valaddr_reg:x3; val_offset:76719*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76719*0 + 3*229*FLEN/8, x4, x1, x2)

inst_25574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffff800000; valaddr_reg:x3; val_offset:76722*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76722*0 + 3*230*FLEN/8, x4, x1, x2)

inst_25575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffffc00000; valaddr_reg:x3; val_offset:76725*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76725*0 + 3*231*FLEN/8, x4, x1, x2)

inst_25576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffffe00000; valaddr_reg:x3; val_offset:76728*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76728*0 + 3*232*FLEN/8, x4, x1, x2)

inst_25577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffff00000; valaddr_reg:x3; val_offset:76731*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76731*0 + 3*233*FLEN/8, x4, x1, x2)

inst_25578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffff80000; valaddr_reg:x3; val_offset:76734*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76734*0 + 3*234*FLEN/8, x4, x1, x2)

inst_25579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffffc0000; valaddr_reg:x3; val_offset:76737*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76737*0 + 3*235*FLEN/8, x4, x1, x2)

inst_25580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffffe0000; valaddr_reg:x3; val_offset:76740*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76740*0 + 3*236*FLEN/8, x4, x1, x2)

inst_25581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffffff0000; valaddr_reg:x3; val_offset:76743*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76743*0 + 3*237*FLEN/8, x4, x1, x2)

inst_25582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffffff8000; valaddr_reg:x3; val_offset:76746*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76746*0 + 3*238*FLEN/8, x4, x1, x2)

inst_25583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffffffc000; valaddr_reg:x3; val_offset:76749*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76749*0 + 3*239*FLEN/8, x4, x1, x2)

inst_25584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffffffe000; valaddr_reg:x3; val_offset:76752*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76752*0 + 3*240*FLEN/8, x4, x1, x2)

inst_25585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffffff000; valaddr_reg:x3; val_offset:76755*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76755*0 + 3*241*FLEN/8, x4, x1, x2)

inst_25586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffffff800; valaddr_reg:x3; val_offset:76758*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76758*0 + 3*242*FLEN/8, x4, x1, x2)

inst_25587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffffffc00; valaddr_reg:x3; val_offset:76761*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76761*0 + 3*243*FLEN/8, x4, x1, x2)

inst_25588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffffffe00; valaddr_reg:x3; val_offset:76764*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76764*0 + 3*244*FLEN/8, x4, x1, x2)

inst_25589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffffffff00; valaddr_reg:x3; val_offset:76767*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76767*0 + 3*245*FLEN/8, x4, x1, x2)

inst_25590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffffffff80; valaddr_reg:x3; val_offset:76770*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76770*0 + 3*246*FLEN/8, x4, x1, x2)

inst_25591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffffffffc0; valaddr_reg:x3; val_offset:76773*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76773*0 + 3*247*FLEN/8, x4, x1, x2)

inst_25592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffffffffe0; valaddr_reg:x3; val_offset:76776*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76776*0 + 3*248*FLEN/8, x4, x1, x2)

inst_25593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffffffff0; valaddr_reg:x3; val_offset:76779*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76779*0 + 3*249*FLEN/8, x4, x1, x2)

inst_25594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffffffff8; valaddr_reg:x3; val_offset:76782*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76782*0 + 3*250*FLEN/8, x4, x1, x2)

inst_25595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffffffffc; valaddr_reg:x3; val_offset:76785*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76785*0 + 3*251*FLEN/8, x4, x1, x2)

inst_25596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384ffffffffffffe; valaddr_reg:x3; val_offset:76788*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76788*0 + 3*252*FLEN/8, x4, x1, x2)

inst_25597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x384 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x384fffffffffffff; valaddr_reg:x3; val_offset:76791*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76791*0 + 3*253*FLEN/8, x4, x1, x2)

inst_25598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:76794*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76794*0 + 3*254*FLEN/8, x4, x1, x2)

inst_25599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:76797*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76797*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_25600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:76800*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76800*0 + 3*256*FLEN/8, x4, x1, x2)

inst_25601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:76803*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76803*0 + 3*257*FLEN/8, x4, x1, x2)

inst_25602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:76806*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76806*0 + 3*258*FLEN/8, x4, x1, x2)

inst_25603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:76809*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76809*0 + 3*259*FLEN/8, x4, x1, x2)

inst_25604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:76812*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76812*0 + 3*260*FLEN/8, x4, x1, x2)

inst_25605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:76815*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76815*0 + 3*261*FLEN/8, x4, x1, x2)

inst_25606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:76818*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76818*0 + 3*262*FLEN/8, x4, x1, x2)

inst_25607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:76821*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76821*0 + 3*263*FLEN/8, x4, x1, x2)

inst_25608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:76824*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76824*0 + 3*264*FLEN/8, x4, x1, x2)

inst_25609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:76827*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76827*0 + 3*265*FLEN/8, x4, x1, x2)

inst_25610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:76830*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76830*0 + 3*266*FLEN/8, x4, x1, x2)

inst_25611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:76833*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76833*0 + 3*267*FLEN/8, x4, x1, x2)

inst_25612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:76836*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76836*0 + 3*268*FLEN/8, x4, x1, x2)

inst_25613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:76839*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76839*0 + 3*269*FLEN/8, x4, x1, x2)

inst_25614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:76842*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76842*0 + 3*270*FLEN/8, x4, x1, x2)

inst_25615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:76845*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76845*0 + 3*271*FLEN/8, x4, x1, x2)

inst_25616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:76848*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76848*0 + 3*272*FLEN/8, x4, x1, x2)

inst_25617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:76851*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76851*0 + 3*273*FLEN/8, x4, x1, x2)

inst_25618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:76854*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76854*0 + 3*274*FLEN/8, x4, x1, x2)

inst_25619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x089f788debe71 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xef50ec1bf4532 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9089f788debe71; op2val:0x204ef50ec1bf4532;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:76857*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76857*0 + 3*275*FLEN/8, x4, x1, x2)

inst_25620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:76860*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76860*0 + 3*276*FLEN/8, x4, x1, x2)

inst_25621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:76863*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76863*0 + 3*277*FLEN/8, x4, x1, x2)

inst_25622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:76866*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76866*0 + 3*278*FLEN/8, x4, x1, x2)

inst_25623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:76869*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76869*0 + 3*279*FLEN/8, x4, x1, x2)

inst_25624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:76872*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76872*0 + 3*280*FLEN/8, x4, x1, x2)

inst_25625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:76875*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76875*0 + 3*281*FLEN/8, x4, x1, x2)

inst_25626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:76878*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76878*0 + 3*282*FLEN/8, x4, x1, x2)

inst_25627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:76881*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76881*0 + 3*283*FLEN/8, x4, x1, x2)

inst_25628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:76884*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76884*0 + 3*284*FLEN/8, x4, x1, x2)

inst_25629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:76887*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76887*0 + 3*285*FLEN/8, x4, x1, x2)

inst_25630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:76890*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76890*0 + 3*286*FLEN/8, x4, x1, x2)

inst_25631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:76893*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76893*0 + 3*287*FLEN/8, x4, x1, x2)

inst_25632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:76896*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76896*0 + 3*288*FLEN/8, x4, x1, x2)

inst_25633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:76899*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76899*0 + 3*289*FLEN/8, x4, x1, x2)

inst_25634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:76902*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76902*0 + 3*290*FLEN/8, x4, x1, x2)

inst_25635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:76905*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76905*0 + 3*291*FLEN/8, x4, x1, x2)

inst_25636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:76908*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76908*0 + 3*292*FLEN/8, x4, x1, x2)

inst_25637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:76911*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76911*0 + 3*293*FLEN/8, x4, x1, x2)

inst_25638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:76914*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76914*0 + 3*294*FLEN/8, x4, x1, x2)

inst_25639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:76917*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76917*0 + 3*295*FLEN/8, x4, x1, x2)

inst_25640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:76920*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76920*0 + 3*296*FLEN/8, x4, x1, x2)

inst_25641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:76923*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76923*0 + 3*297*FLEN/8, x4, x1, x2)

inst_25642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000000000000; valaddr_reg:x3; val_offset:76926*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76926*0 + 3*298*FLEN/8, x4, x1, x2)

inst_25643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000000000001; valaddr_reg:x3; val_offset:76929*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76929*0 + 3*299*FLEN/8, x4, x1, x2)

inst_25644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000000000003; valaddr_reg:x3; val_offset:76932*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76932*0 + 3*300*FLEN/8, x4, x1, x2)

inst_25645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000000000007; valaddr_reg:x3; val_offset:76935*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76935*0 + 3*301*FLEN/8, x4, x1, x2)

inst_25646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000000000000f; valaddr_reg:x3; val_offset:76938*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76938*0 + 3*302*FLEN/8, x4, x1, x2)

inst_25647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000000000001f; valaddr_reg:x3; val_offset:76941*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76941*0 + 3*303*FLEN/8, x4, x1, x2)

inst_25648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000000000003f; valaddr_reg:x3; val_offset:76944*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76944*0 + 3*304*FLEN/8, x4, x1, x2)

inst_25649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000000000007f; valaddr_reg:x3; val_offset:76947*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76947*0 + 3*305*FLEN/8, x4, x1, x2)

inst_25650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800000000000ff; valaddr_reg:x3; val_offset:76950*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76950*0 + 3*306*FLEN/8, x4, x1, x2)

inst_25651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800000000001ff; valaddr_reg:x3; val_offset:76953*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76953*0 + 3*307*FLEN/8, x4, x1, x2)

inst_25652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800000000003ff; valaddr_reg:x3; val_offset:76956*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76956*0 + 3*308*FLEN/8, x4, x1, x2)

inst_25653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800000000007ff; valaddr_reg:x3; val_offset:76959*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76959*0 + 3*309*FLEN/8, x4, x1, x2)

inst_25654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000000000fff; valaddr_reg:x3; val_offset:76962*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76962*0 + 3*310*FLEN/8, x4, x1, x2)

inst_25655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000000001fff; valaddr_reg:x3; val_offset:76965*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76965*0 + 3*311*FLEN/8, x4, x1, x2)

inst_25656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000000003fff; valaddr_reg:x3; val_offset:76968*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76968*0 + 3*312*FLEN/8, x4, x1, x2)

inst_25657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000000007fff; valaddr_reg:x3; val_offset:76971*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76971*0 + 3*313*FLEN/8, x4, x1, x2)

inst_25658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000000000ffff; valaddr_reg:x3; val_offset:76974*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76974*0 + 3*314*FLEN/8, x4, x1, x2)

inst_25659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000000001ffff; valaddr_reg:x3; val_offset:76977*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76977*0 + 3*315*FLEN/8, x4, x1, x2)

inst_25660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000000003ffff; valaddr_reg:x3; val_offset:76980*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76980*0 + 3*316*FLEN/8, x4, x1, x2)

inst_25661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000000007ffff; valaddr_reg:x3; val_offset:76983*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76983*0 + 3*317*FLEN/8, x4, x1, x2)

inst_25662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800000000fffff; valaddr_reg:x3; val_offset:76986*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76986*0 + 3*318*FLEN/8, x4, x1, x2)

inst_25663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800000001fffff; valaddr_reg:x3; val_offset:76989*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76989*0 + 3*319*FLEN/8, x4, x1, x2)

inst_25664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800000003fffff; valaddr_reg:x3; val_offset:76992*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76992*0 + 3*320*FLEN/8, x4, x1, x2)

inst_25665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800000007fffff; valaddr_reg:x3; val_offset:76995*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76995*0 + 3*321*FLEN/8, x4, x1, x2)

inst_25666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000000ffffff; valaddr_reg:x3; val_offset:76998*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 76998*0 + 3*322*FLEN/8, x4, x1, x2)

inst_25667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000001ffffff; valaddr_reg:x3; val_offset:77001*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77001*0 + 3*323*FLEN/8, x4, x1, x2)

inst_25668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000003ffffff; valaddr_reg:x3; val_offset:77004*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77004*0 + 3*324*FLEN/8, x4, x1, x2)

inst_25669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000007ffffff; valaddr_reg:x3; val_offset:77007*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77007*0 + 3*325*FLEN/8, x4, x1, x2)

inst_25670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000000fffffff; valaddr_reg:x3; val_offset:77010*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77010*0 + 3*326*FLEN/8, x4, x1, x2)

inst_25671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000001fffffff; valaddr_reg:x3; val_offset:77013*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77013*0 + 3*327*FLEN/8, x4, x1, x2)

inst_25672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000003fffffff; valaddr_reg:x3; val_offset:77016*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77016*0 + 3*328*FLEN/8, x4, x1, x2)

inst_25673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000007fffffff; valaddr_reg:x3; val_offset:77019*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77019*0 + 3*329*FLEN/8, x4, x1, x2)

inst_25674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800000ffffffff; valaddr_reg:x3; val_offset:77022*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77022*0 + 3*330*FLEN/8, x4, x1, x2)

inst_25675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800001ffffffff; valaddr_reg:x3; val_offset:77025*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77025*0 + 3*331*FLEN/8, x4, x1, x2)

inst_25676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800003ffffffff; valaddr_reg:x3; val_offset:77028*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77028*0 + 3*332*FLEN/8, x4, x1, x2)

inst_25677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800007ffffffff; valaddr_reg:x3; val_offset:77031*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77031*0 + 3*333*FLEN/8, x4, x1, x2)

inst_25678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380000fffffffff; valaddr_reg:x3; val_offset:77034*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77034*0 + 3*334*FLEN/8, x4, x1, x2)

inst_25679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380001fffffffff; valaddr_reg:x3; val_offset:77037*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77037*0 + 3*335*FLEN/8, x4, x1, x2)

inst_25680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380003fffffffff; valaddr_reg:x3; val_offset:77040*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77040*0 + 3*336*FLEN/8, x4, x1, x2)

inst_25681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380007fffffffff; valaddr_reg:x3; val_offset:77043*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77043*0 + 3*337*FLEN/8, x4, x1, x2)

inst_25682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38000ffffffffff; valaddr_reg:x3; val_offset:77046*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77046*0 + 3*338*FLEN/8, x4, x1, x2)

inst_25683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38001ffffffffff; valaddr_reg:x3; val_offset:77049*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77049*0 + 3*339*FLEN/8, x4, x1, x2)

inst_25684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38003ffffffffff; valaddr_reg:x3; val_offset:77052*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77052*0 + 3*340*FLEN/8, x4, x1, x2)

inst_25685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38007ffffffffff; valaddr_reg:x3; val_offset:77055*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77055*0 + 3*341*FLEN/8, x4, x1, x2)

inst_25686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3800fffffffffff; valaddr_reg:x3; val_offset:77058*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77058*0 + 3*342*FLEN/8, x4, x1, x2)

inst_25687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3801fffffffffff; valaddr_reg:x3; val_offset:77061*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77061*0 + 3*343*FLEN/8, x4, x1, x2)

inst_25688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3803fffffffffff; valaddr_reg:x3; val_offset:77064*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77064*0 + 3*344*FLEN/8, x4, x1, x2)

inst_25689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x3807fffffffffff; valaddr_reg:x3; val_offset:77067*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77067*0 + 3*345*FLEN/8, x4, x1, x2)

inst_25690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x380ffffffffffff; valaddr_reg:x3; val_offset:77070*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77070*0 + 3*346*FLEN/8, x4, x1, x2)

inst_25691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x381ffffffffffff; valaddr_reg:x3; val_offset:77073*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77073*0 + 3*347*FLEN/8, x4, x1, x2)

inst_25692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x383ffffffffffff; valaddr_reg:x3; val_offset:77076*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77076*0 + 3*348*FLEN/8, x4, x1, x2)

inst_25693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x387ffffffffffff; valaddr_reg:x3; val_offset:77079*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77079*0 + 3*349*FLEN/8, x4, x1, x2)

inst_25694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x388000000000000; valaddr_reg:x3; val_offset:77082*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77082*0 + 3*350*FLEN/8, x4, x1, x2)

inst_25695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38c000000000000; valaddr_reg:x3; val_offset:77085*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77085*0 + 3*351*FLEN/8, x4, x1, x2)

inst_25696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38e000000000000; valaddr_reg:x3; val_offset:77088*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77088*0 + 3*352*FLEN/8, x4, x1, x2)

inst_25697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38f000000000000; valaddr_reg:x3; val_offset:77091*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77091*0 + 3*353*FLEN/8, x4, x1, x2)

inst_25698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38f800000000000; valaddr_reg:x3; val_offset:77094*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77094*0 + 3*354*FLEN/8, x4, x1, x2)

inst_25699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fc00000000000; valaddr_reg:x3; val_offset:77097*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77097*0 + 3*355*FLEN/8, x4, x1, x2)

inst_25700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fe00000000000; valaddr_reg:x3; val_offset:77100*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77100*0 + 3*356*FLEN/8, x4, x1, x2)

inst_25701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ff00000000000; valaddr_reg:x3; val_offset:77103*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77103*0 + 3*357*FLEN/8, x4, x1, x2)

inst_25702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ff80000000000; valaddr_reg:x3; val_offset:77106*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77106*0 + 3*358*FLEN/8, x4, x1, x2)

inst_25703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffc0000000000; valaddr_reg:x3; val_offset:77109*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77109*0 + 3*359*FLEN/8, x4, x1, x2)

inst_25704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffe0000000000; valaddr_reg:x3; val_offset:77112*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77112*0 + 3*360*FLEN/8, x4, x1, x2)

inst_25705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fff0000000000; valaddr_reg:x3; val_offset:77115*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77115*0 + 3*361*FLEN/8, x4, x1, x2)

inst_25706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fff8000000000; valaddr_reg:x3; val_offset:77118*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77118*0 + 3*362*FLEN/8, x4, x1, x2)

inst_25707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffc000000000; valaddr_reg:x3; val_offset:77121*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77121*0 + 3*363*FLEN/8, x4, x1, x2)

inst_25708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffe000000000; valaddr_reg:x3; val_offset:77124*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77124*0 + 3*364*FLEN/8, x4, x1, x2)

inst_25709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffff000000000; valaddr_reg:x3; val_offset:77127*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77127*0 + 3*365*FLEN/8, x4, x1, x2)

inst_25710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffff800000000; valaddr_reg:x3; val_offset:77130*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77130*0 + 3*366*FLEN/8, x4, x1, x2)

inst_25711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffc00000000; valaddr_reg:x3; val_offset:77133*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77133*0 + 3*367*FLEN/8, x4, x1, x2)

inst_25712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffe00000000; valaddr_reg:x3; val_offset:77136*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77136*0 + 3*368*FLEN/8, x4, x1, x2)

inst_25713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffff00000000; valaddr_reg:x3; val_offset:77139*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77139*0 + 3*369*FLEN/8, x4, x1, x2)

inst_25714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffff80000000; valaddr_reg:x3; val_offset:77142*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77142*0 + 3*370*FLEN/8, x4, x1, x2)

inst_25715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffc0000000; valaddr_reg:x3; val_offset:77145*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77145*0 + 3*371*FLEN/8, x4, x1, x2)

inst_25716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffe0000000; valaddr_reg:x3; val_offset:77148*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77148*0 + 3*372*FLEN/8, x4, x1, x2)

inst_25717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffff0000000; valaddr_reg:x3; val_offset:77151*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77151*0 + 3*373*FLEN/8, x4, x1, x2)

inst_25718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffff8000000; valaddr_reg:x3; val_offset:77154*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77154*0 + 3*374*FLEN/8, x4, x1, x2)

inst_25719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffc000000; valaddr_reg:x3; val_offset:77157*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77157*0 + 3*375*FLEN/8, x4, x1, x2)

inst_25720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffe000000; valaddr_reg:x3; val_offset:77160*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77160*0 + 3*376*FLEN/8, x4, x1, x2)

inst_25721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffff000000; valaddr_reg:x3; val_offset:77163*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77163*0 + 3*377*FLEN/8, x4, x1, x2)

inst_25722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffff800000; valaddr_reg:x3; val_offset:77166*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77166*0 + 3*378*FLEN/8, x4, x1, x2)

inst_25723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffffc00000; valaddr_reg:x3; val_offset:77169*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77169*0 + 3*379*FLEN/8, x4, x1, x2)

inst_25724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffffe00000; valaddr_reg:x3; val_offset:77172*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77172*0 + 3*380*FLEN/8, x4, x1, x2)

inst_25725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffff00000; valaddr_reg:x3; val_offset:77175*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77175*0 + 3*381*FLEN/8, x4, x1, x2)

inst_25726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffff80000; valaddr_reg:x3; val_offset:77178*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77178*0 + 3*382*FLEN/8, x4, x1, x2)

inst_25727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffffc0000; valaddr_reg:x3; val_offset:77181*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77181*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_25728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffffe0000; valaddr_reg:x3; val_offset:77184*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77184*0 + 3*384*FLEN/8, x4, x1, x2)

inst_25729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffffff0000; valaddr_reg:x3; val_offset:77187*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77187*0 + 3*385*FLEN/8, x4, x1, x2)

inst_25730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffffff8000; valaddr_reg:x3; val_offset:77190*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77190*0 + 3*386*FLEN/8, x4, x1, x2)

inst_25731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffffffc000; valaddr_reg:x3; val_offset:77193*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77193*0 + 3*387*FLEN/8, x4, x1, x2)

inst_25732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffffffe000; valaddr_reg:x3; val_offset:77196*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77196*0 + 3*388*FLEN/8, x4, x1, x2)

inst_25733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffffff000; valaddr_reg:x3; val_offset:77199*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77199*0 + 3*389*FLEN/8, x4, x1, x2)

inst_25734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffffff800; valaddr_reg:x3; val_offset:77202*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77202*0 + 3*390*FLEN/8, x4, x1, x2)

inst_25735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffffffc00; valaddr_reg:x3; val_offset:77205*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77205*0 + 3*391*FLEN/8, x4, x1, x2)

inst_25736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffffffe00; valaddr_reg:x3; val_offset:77208*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77208*0 + 3*392*FLEN/8, x4, x1, x2)

inst_25737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffffffff00; valaddr_reg:x3; val_offset:77211*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77211*0 + 3*393*FLEN/8, x4, x1, x2)

inst_25738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffffffff80; valaddr_reg:x3; val_offset:77214*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77214*0 + 3*394*FLEN/8, x4, x1, x2)

inst_25739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffffffffc0; valaddr_reg:x3; val_offset:77217*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77217*0 + 3*395*FLEN/8, x4, x1, x2)

inst_25740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffffffffe0; valaddr_reg:x3; val_offset:77220*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77220*0 + 3*396*FLEN/8, x4, x1, x2)

inst_25741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffffffff0; valaddr_reg:x3; val_offset:77223*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77223*0 + 3*397*FLEN/8, x4, x1, x2)

inst_25742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffffffff8; valaddr_reg:x3; val_offset:77226*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77226*0 + 3*398*FLEN/8, x4, x1, x2)

inst_25743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffffffffc; valaddr_reg:x3; val_offset:77229*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77229*0 + 3*399*FLEN/8, x4, x1, x2)

inst_25744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38ffffffffffffe; valaddr_reg:x3; val_offset:77232*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77232*0 + 3*400*FLEN/8, x4, x1, x2)

inst_25745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x08fa5b7b5d6b1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f908fa5b7b5d6b1; op2val:0x0;
op3val:0x38fffffffffffff; valaddr_reg:x3; val_offset:77235*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77235*0 + 3*401*FLEN/8, x4, x1, x2)

inst_25746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000000000000; valaddr_reg:x3; val_offset:77238*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77238*0 + 3*402*FLEN/8, x4, x1, x2)

inst_25747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000000000001; valaddr_reg:x3; val_offset:77241*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77241*0 + 3*403*FLEN/8, x4, x1, x2)

inst_25748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000000000003; valaddr_reg:x3; val_offset:77244*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77244*0 + 3*404*FLEN/8, x4, x1, x2)

inst_25749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000000000007; valaddr_reg:x3; val_offset:77247*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77247*0 + 3*405*FLEN/8, x4, x1, x2)

inst_25750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000000000000f; valaddr_reg:x3; val_offset:77250*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77250*0 + 3*406*FLEN/8, x4, x1, x2)

inst_25751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000000000001f; valaddr_reg:x3; val_offset:77253*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77253*0 + 3*407*FLEN/8, x4, x1, x2)

inst_25752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000000000003f; valaddr_reg:x3; val_offset:77256*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77256*0 + 3*408*FLEN/8, x4, x1, x2)

inst_25753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000000000007f; valaddr_reg:x3; val_offset:77259*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77259*0 + 3*409*FLEN/8, x4, x1, x2)

inst_25754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400000000000ff; valaddr_reg:x3; val_offset:77262*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77262*0 + 3*410*FLEN/8, x4, x1, x2)

inst_25755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400000000001ff; valaddr_reg:x3; val_offset:77265*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77265*0 + 3*411*FLEN/8, x4, x1, x2)

inst_25756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400000000003ff; valaddr_reg:x3; val_offset:77268*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77268*0 + 3*412*FLEN/8, x4, x1, x2)

inst_25757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400000000007ff; valaddr_reg:x3; val_offset:77271*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77271*0 + 3*413*FLEN/8, x4, x1, x2)

inst_25758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000000000fff; valaddr_reg:x3; val_offset:77274*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77274*0 + 3*414*FLEN/8, x4, x1, x2)

inst_25759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000000001fff; valaddr_reg:x3; val_offset:77277*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77277*0 + 3*415*FLEN/8, x4, x1, x2)

inst_25760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000000003fff; valaddr_reg:x3; val_offset:77280*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77280*0 + 3*416*FLEN/8, x4, x1, x2)

inst_25761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000000007fff; valaddr_reg:x3; val_offset:77283*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77283*0 + 3*417*FLEN/8, x4, x1, x2)

inst_25762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000000000ffff; valaddr_reg:x3; val_offset:77286*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77286*0 + 3*418*FLEN/8, x4, x1, x2)

inst_25763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000000001ffff; valaddr_reg:x3; val_offset:77289*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77289*0 + 3*419*FLEN/8, x4, x1, x2)

inst_25764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000000003ffff; valaddr_reg:x3; val_offset:77292*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77292*0 + 3*420*FLEN/8, x4, x1, x2)

inst_25765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000000007ffff; valaddr_reg:x3; val_offset:77295*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77295*0 + 3*421*FLEN/8, x4, x1, x2)

inst_25766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400000000fffff; valaddr_reg:x3; val_offset:77298*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77298*0 + 3*422*FLEN/8, x4, x1, x2)

inst_25767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400000001fffff; valaddr_reg:x3; val_offset:77301*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77301*0 + 3*423*FLEN/8, x4, x1, x2)

inst_25768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400000003fffff; valaddr_reg:x3; val_offset:77304*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77304*0 + 3*424*FLEN/8, x4, x1, x2)

inst_25769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400000007fffff; valaddr_reg:x3; val_offset:77307*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77307*0 + 3*425*FLEN/8, x4, x1, x2)

inst_25770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000000ffffff; valaddr_reg:x3; val_offset:77310*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77310*0 + 3*426*FLEN/8, x4, x1, x2)

inst_25771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000001ffffff; valaddr_reg:x3; val_offset:77313*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77313*0 + 3*427*FLEN/8, x4, x1, x2)

inst_25772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000003ffffff; valaddr_reg:x3; val_offset:77316*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77316*0 + 3*428*FLEN/8, x4, x1, x2)

inst_25773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000007ffffff; valaddr_reg:x3; val_offset:77319*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77319*0 + 3*429*FLEN/8, x4, x1, x2)

inst_25774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000000fffffff; valaddr_reg:x3; val_offset:77322*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77322*0 + 3*430*FLEN/8, x4, x1, x2)

inst_25775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000001fffffff; valaddr_reg:x3; val_offset:77325*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77325*0 + 3*431*FLEN/8, x4, x1, x2)

inst_25776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000003fffffff; valaddr_reg:x3; val_offset:77328*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77328*0 + 3*432*FLEN/8, x4, x1, x2)

inst_25777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000007fffffff; valaddr_reg:x3; val_offset:77331*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77331*0 + 3*433*FLEN/8, x4, x1, x2)

inst_25778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400000ffffffff; valaddr_reg:x3; val_offset:77334*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77334*0 + 3*434*FLEN/8, x4, x1, x2)

inst_25779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400001ffffffff; valaddr_reg:x3; val_offset:77337*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77337*0 + 3*435*FLEN/8, x4, x1, x2)

inst_25780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400003ffffffff; valaddr_reg:x3; val_offset:77340*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77340*0 + 3*436*FLEN/8, x4, x1, x2)

inst_25781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400007ffffffff; valaddr_reg:x3; val_offset:77343*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77343*0 + 3*437*FLEN/8, x4, x1, x2)

inst_25782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940000fffffffff; valaddr_reg:x3; val_offset:77346*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77346*0 + 3*438*FLEN/8, x4, x1, x2)

inst_25783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940001fffffffff; valaddr_reg:x3; val_offset:77349*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77349*0 + 3*439*FLEN/8, x4, x1, x2)

inst_25784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940003fffffffff; valaddr_reg:x3; val_offset:77352*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77352*0 + 3*440*FLEN/8, x4, x1, x2)

inst_25785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940007fffffffff; valaddr_reg:x3; val_offset:77355*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77355*0 + 3*441*FLEN/8, x4, x1, x2)

inst_25786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94000ffffffffff; valaddr_reg:x3; val_offset:77358*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77358*0 + 3*442*FLEN/8, x4, x1, x2)

inst_25787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94001ffffffffff; valaddr_reg:x3; val_offset:77361*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77361*0 + 3*443*FLEN/8, x4, x1, x2)

inst_25788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94003ffffffffff; valaddr_reg:x3; val_offset:77364*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77364*0 + 3*444*FLEN/8, x4, x1, x2)

inst_25789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94007ffffffffff; valaddr_reg:x3; val_offset:77367*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77367*0 + 3*445*FLEN/8, x4, x1, x2)

inst_25790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9400fffffffffff; valaddr_reg:x3; val_offset:77370*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77370*0 + 3*446*FLEN/8, x4, x1, x2)

inst_25791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9401fffffffffff; valaddr_reg:x3; val_offset:77373*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77373*0 + 3*447*FLEN/8, x4, x1, x2)

inst_25792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9403fffffffffff; valaddr_reg:x3; val_offset:77376*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77376*0 + 3*448*FLEN/8, x4, x1, x2)

inst_25793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb9407fffffffffff; valaddr_reg:x3; val_offset:77379*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77379*0 + 3*449*FLEN/8, x4, x1, x2)

inst_25794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb940ffffffffffff; valaddr_reg:x3; val_offset:77382*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77382*0 + 3*450*FLEN/8, x4, x1, x2)

inst_25795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb941ffffffffffff; valaddr_reg:x3; val_offset:77385*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77385*0 + 3*451*FLEN/8, x4, x1, x2)

inst_25796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb943ffffffffffff; valaddr_reg:x3; val_offset:77388*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77388*0 + 3*452*FLEN/8, x4, x1, x2)

inst_25797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb947ffffffffffff; valaddr_reg:x3; val_offset:77391*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77391*0 + 3*453*FLEN/8, x4, x1, x2)

inst_25798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb948000000000000; valaddr_reg:x3; val_offset:77394*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77394*0 + 3*454*FLEN/8, x4, x1, x2)

inst_25799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94c000000000000; valaddr_reg:x3; val_offset:77397*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77397*0 + 3*455*FLEN/8, x4, x1, x2)

inst_25800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94e000000000000; valaddr_reg:x3; val_offset:77400*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77400*0 + 3*456*FLEN/8, x4, x1, x2)

inst_25801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94f000000000000; valaddr_reg:x3; val_offset:77403*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77403*0 + 3*457*FLEN/8, x4, x1, x2)

inst_25802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94f800000000000; valaddr_reg:x3; val_offset:77406*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77406*0 + 3*458*FLEN/8, x4, x1, x2)

inst_25803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fc00000000000; valaddr_reg:x3; val_offset:77409*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77409*0 + 3*459*FLEN/8, x4, x1, x2)

inst_25804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fe00000000000; valaddr_reg:x3; val_offset:77412*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77412*0 + 3*460*FLEN/8, x4, x1, x2)

inst_25805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ff00000000000; valaddr_reg:x3; val_offset:77415*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77415*0 + 3*461*FLEN/8, x4, x1, x2)

inst_25806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ff80000000000; valaddr_reg:x3; val_offset:77418*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77418*0 + 3*462*FLEN/8, x4, x1, x2)

inst_25807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffc0000000000; valaddr_reg:x3; val_offset:77421*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77421*0 + 3*463*FLEN/8, x4, x1, x2)

inst_25808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffe0000000000; valaddr_reg:x3; val_offset:77424*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77424*0 + 3*464*FLEN/8, x4, x1, x2)

inst_25809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fff0000000000; valaddr_reg:x3; val_offset:77427*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77427*0 + 3*465*FLEN/8, x4, x1, x2)

inst_25810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fff8000000000; valaddr_reg:x3; val_offset:77430*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77430*0 + 3*466*FLEN/8, x4, x1, x2)

inst_25811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffc000000000; valaddr_reg:x3; val_offset:77433*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77433*0 + 3*467*FLEN/8, x4, x1, x2)

inst_25812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffe000000000; valaddr_reg:x3; val_offset:77436*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77436*0 + 3*468*FLEN/8, x4, x1, x2)

inst_25813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffff000000000; valaddr_reg:x3; val_offset:77439*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77439*0 + 3*469*FLEN/8, x4, x1, x2)

inst_25814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffff800000000; valaddr_reg:x3; val_offset:77442*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77442*0 + 3*470*FLEN/8, x4, x1, x2)

inst_25815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffc00000000; valaddr_reg:x3; val_offset:77445*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77445*0 + 3*471*FLEN/8, x4, x1, x2)

inst_25816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffe00000000; valaddr_reg:x3; val_offset:77448*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77448*0 + 3*472*FLEN/8, x4, x1, x2)

inst_25817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffff00000000; valaddr_reg:x3; val_offset:77451*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77451*0 + 3*473*FLEN/8, x4, x1, x2)

inst_25818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffff80000000; valaddr_reg:x3; val_offset:77454*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77454*0 + 3*474*FLEN/8, x4, x1, x2)

inst_25819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffc0000000; valaddr_reg:x3; val_offset:77457*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77457*0 + 3*475*FLEN/8, x4, x1, x2)

inst_25820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffe0000000; valaddr_reg:x3; val_offset:77460*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77460*0 + 3*476*FLEN/8, x4, x1, x2)

inst_25821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffff0000000; valaddr_reg:x3; val_offset:77463*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77463*0 + 3*477*FLEN/8, x4, x1, x2)

inst_25822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffff8000000; valaddr_reg:x3; val_offset:77466*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77466*0 + 3*478*FLEN/8, x4, x1, x2)

inst_25823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffc000000; valaddr_reg:x3; val_offset:77469*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77469*0 + 3*479*FLEN/8, x4, x1, x2)

inst_25824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffe000000; valaddr_reg:x3; val_offset:77472*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77472*0 + 3*480*FLEN/8, x4, x1, x2)

inst_25825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffff000000; valaddr_reg:x3; val_offset:77475*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77475*0 + 3*481*FLEN/8, x4, x1, x2)

inst_25826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffff800000; valaddr_reg:x3; val_offset:77478*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77478*0 + 3*482*FLEN/8, x4, x1, x2)

inst_25827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffffc00000; valaddr_reg:x3; val_offset:77481*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77481*0 + 3*483*FLEN/8, x4, x1, x2)

inst_25828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffffe00000; valaddr_reg:x3; val_offset:77484*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77484*0 + 3*484*FLEN/8, x4, x1, x2)

inst_25829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffff00000; valaddr_reg:x3; val_offset:77487*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77487*0 + 3*485*FLEN/8, x4, x1, x2)

inst_25830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffff80000; valaddr_reg:x3; val_offset:77490*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77490*0 + 3*486*FLEN/8, x4, x1, x2)

inst_25831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffffc0000; valaddr_reg:x3; val_offset:77493*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77493*0 + 3*487*FLEN/8, x4, x1, x2)

inst_25832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffffe0000; valaddr_reg:x3; val_offset:77496*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77496*0 + 3*488*FLEN/8, x4, x1, x2)

inst_25833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffffff0000; valaddr_reg:x3; val_offset:77499*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77499*0 + 3*489*FLEN/8, x4, x1, x2)

inst_25834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffffff8000; valaddr_reg:x3; val_offset:77502*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77502*0 + 3*490*FLEN/8, x4, x1, x2)

inst_25835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffffffc000; valaddr_reg:x3; val_offset:77505*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77505*0 + 3*491*FLEN/8, x4, x1, x2)

inst_25836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffffffe000; valaddr_reg:x3; val_offset:77508*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77508*0 + 3*492*FLEN/8, x4, x1, x2)

inst_25837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffffff000; valaddr_reg:x3; val_offset:77511*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77511*0 + 3*493*FLEN/8, x4, x1, x2)

inst_25838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffffff800; valaddr_reg:x3; val_offset:77514*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77514*0 + 3*494*FLEN/8, x4, x1, x2)

inst_25839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffffffc00; valaddr_reg:x3; val_offset:77517*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77517*0 + 3*495*FLEN/8, x4, x1, x2)

inst_25840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffffffe00; valaddr_reg:x3; val_offset:77520*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77520*0 + 3*496*FLEN/8, x4, x1, x2)

inst_25841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffffffff00; valaddr_reg:x3; val_offset:77523*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77523*0 + 3*497*FLEN/8, x4, x1, x2)

inst_25842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffffffff80; valaddr_reg:x3; val_offset:77526*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77526*0 + 3*498*FLEN/8, x4, x1, x2)

inst_25843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffffffffc0; valaddr_reg:x3; val_offset:77529*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77529*0 + 3*499*FLEN/8, x4, x1, x2)

inst_25844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffffffffe0; valaddr_reg:x3; val_offset:77532*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77532*0 + 3*500*FLEN/8, x4, x1, x2)

inst_25845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffffffff0; valaddr_reg:x3; val_offset:77535*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77535*0 + 3*501*FLEN/8, x4, x1, x2)

inst_25846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffffffff8; valaddr_reg:x3; val_offset:77538*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77538*0 + 3*502*FLEN/8, x4, x1, x2)

inst_25847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffffffffc; valaddr_reg:x3; val_offset:77541*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77541*0 + 3*503*FLEN/8, x4, x1, x2)

inst_25848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94ffffffffffffe; valaddr_reg:x3; val_offset:77544*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77544*0 + 3*504*FLEN/8, x4, x1, x2)

inst_25849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x394 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xb94fffffffffffff; valaddr_reg:x3; val_offset:77547*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77547*0 + 3*505*FLEN/8, x4, x1, x2)

inst_25850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:77550*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77550*0 + 3*506*FLEN/8, x4, x1, x2)

inst_25851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:77553*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77553*0 + 3*507*FLEN/8, x4, x1, x2)

inst_25852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:77556*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77556*0 + 3*508*FLEN/8, x4, x1, x2)

inst_25853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:77559*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77559*0 + 3*509*FLEN/8, x4, x1, x2)

inst_25854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:77562*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77562*0 + 3*510*FLEN/8, x4, x1, x2)

inst_25855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:77565*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77565*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_25856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:77568*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77568*0 + 3*512*FLEN/8, x4, x1, x2)

inst_25857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:77571*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77571*0 + 3*513*FLEN/8, x4, x1, x2)

inst_25858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:77574*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77574*0 + 3*514*FLEN/8, x4, x1, x2)

inst_25859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:77577*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77577*0 + 3*515*FLEN/8, x4, x1, x2)

inst_25860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:77580*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77580*0 + 3*516*FLEN/8, x4, x1, x2)

inst_25861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:77583*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77583*0 + 3*517*FLEN/8, x4, x1, x2)

inst_25862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:77586*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77586*0 + 3*518*FLEN/8, x4, x1, x2)

inst_25863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:77589*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77589*0 + 3*519*FLEN/8, x4, x1, x2)

inst_25864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:77592*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77592*0 + 3*520*FLEN/8, x4, x1, x2)

inst_25865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:77595*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77595*0 + 3*521*FLEN/8, x4, x1, x2)

inst_25866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:77598*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77598*0 + 3*522*FLEN/8, x4, x1, x2)

inst_25867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:77601*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77601*0 + 3*523*FLEN/8, x4, x1, x2)

inst_25868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:77604*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77604*0 + 3*524*FLEN/8, x4, x1, x2)

inst_25869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:77607*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77607*0 + 3*525*FLEN/8, x4, x1, x2)

inst_25870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:77610*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77610*0 + 3*526*FLEN/8, x4, x1, x2)

inst_25871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x094dd69773d7b and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xee0b61ffbc441 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9094dd69773d7b; op2val:0x9fdee0b61ffbc441;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:77613*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77613*0 + 3*527*FLEN/8, x4, x1, x2)

inst_25872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000000000000; valaddr_reg:x3; val_offset:77616*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77616*0 + 3*528*FLEN/8, x4, x1, x2)

inst_25873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000000000001; valaddr_reg:x3; val_offset:77619*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77619*0 + 3*529*FLEN/8, x4, x1, x2)

inst_25874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000000000003; valaddr_reg:x3; val_offset:77622*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77622*0 + 3*530*FLEN/8, x4, x1, x2)

inst_25875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000000000007; valaddr_reg:x3; val_offset:77625*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77625*0 + 3*531*FLEN/8, x4, x1, x2)

inst_25876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000000000000f; valaddr_reg:x3; val_offset:77628*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77628*0 + 3*532*FLEN/8, x4, x1, x2)

inst_25877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000000000001f; valaddr_reg:x3; val_offset:77631*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77631*0 + 3*533*FLEN/8, x4, x1, x2)

inst_25878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000000000003f; valaddr_reg:x3; val_offset:77634*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77634*0 + 3*534*FLEN/8, x4, x1, x2)

inst_25879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000000000007f; valaddr_reg:x3; val_offset:77637*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77637*0 + 3*535*FLEN/8, x4, x1, x2)

inst_25880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700000000000ff; valaddr_reg:x3; val_offset:77640*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77640*0 + 3*536*FLEN/8, x4, x1, x2)

inst_25881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700000000001ff; valaddr_reg:x3; val_offset:77643*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77643*0 + 3*537*FLEN/8, x4, x1, x2)

inst_25882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700000000003ff; valaddr_reg:x3; val_offset:77646*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77646*0 + 3*538*FLEN/8, x4, x1, x2)

inst_25883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700000000007ff; valaddr_reg:x3; val_offset:77649*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77649*0 + 3*539*FLEN/8, x4, x1, x2)

inst_25884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000000000fff; valaddr_reg:x3; val_offset:77652*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77652*0 + 3*540*FLEN/8, x4, x1, x2)

inst_25885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000000001fff; valaddr_reg:x3; val_offset:77655*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77655*0 + 3*541*FLEN/8, x4, x1, x2)

inst_25886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000000003fff; valaddr_reg:x3; val_offset:77658*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77658*0 + 3*542*FLEN/8, x4, x1, x2)

inst_25887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000000007fff; valaddr_reg:x3; val_offset:77661*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77661*0 + 3*543*FLEN/8, x4, x1, x2)

inst_25888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000000000ffff; valaddr_reg:x3; val_offset:77664*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77664*0 + 3*544*FLEN/8, x4, x1, x2)

inst_25889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000000001ffff; valaddr_reg:x3; val_offset:77667*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77667*0 + 3*545*FLEN/8, x4, x1, x2)

inst_25890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000000003ffff; valaddr_reg:x3; val_offset:77670*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77670*0 + 3*546*FLEN/8, x4, x1, x2)

inst_25891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000000007ffff; valaddr_reg:x3; val_offset:77673*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77673*0 + 3*547*FLEN/8, x4, x1, x2)

inst_25892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700000000fffff; valaddr_reg:x3; val_offset:77676*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77676*0 + 3*548*FLEN/8, x4, x1, x2)

inst_25893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700000001fffff; valaddr_reg:x3; val_offset:77679*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77679*0 + 3*549*FLEN/8, x4, x1, x2)

inst_25894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700000003fffff; valaddr_reg:x3; val_offset:77682*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77682*0 + 3*550*FLEN/8, x4, x1, x2)

inst_25895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700000007fffff; valaddr_reg:x3; val_offset:77685*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77685*0 + 3*551*FLEN/8, x4, x1, x2)

inst_25896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000000ffffff; valaddr_reg:x3; val_offset:77688*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77688*0 + 3*552*FLEN/8, x4, x1, x2)

inst_25897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000001ffffff; valaddr_reg:x3; val_offset:77691*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77691*0 + 3*553*FLEN/8, x4, x1, x2)

inst_25898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000003ffffff; valaddr_reg:x3; val_offset:77694*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77694*0 + 3*554*FLEN/8, x4, x1, x2)

inst_25899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000007ffffff; valaddr_reg:x3; val_offset:77697*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77697*0 + 3*555*FLEN/8, x4, x1, x2)

inst_25900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000000fffffff; valaddr_reg:x3; val_offset:77700*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77700*0 + 3*556*FLEN/8, x4, x1, x2)

inst_25901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000001fffffff; valaddr_reg:x3; val_offset:77703*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77703*0 + 3*557*FLEN/8, x4, x1, x2)

inst_25902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000003fffffff; valaddr_reg:x3; val_offset:77706*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77706*0 + 3*558*FLEN/8, x4, x1, x2)

inst_25903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000007fffffff; valaddr_reg:x3; val_offset:77709*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77709*0 + 3*559*FLEN/8, x4, x1, x2)

inst_25904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700000ffffffff; valaddr_reg:x3; val_offset:77712*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77712*0 + 3*560*FLEN/8, x4, x1, x2)

inst_25905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700001ffffffff; valaddr_reg:x3; val_offset:77715*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77715*0 + 3*561*FLEN/8, x4, x1, x2)

inst_25906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700003ffffffff; valaddr_reg:x3; val_offset:77718*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77718*0 + 3*562*FLEN/8, x4, x1, x2)

inst_25907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700007ffffffff; valaddr_reg:x3; val_offset:77721*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77721*0 + 3*563*FLEN/8, x4, x1, x2)

inst_25908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70000fffffffff; valaddr_reg:x3; val_offset:77724*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77724*0 + 3*564*FLEN/8, x4, x1, x2)

inst_25909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70001fffffffff; valaddr_reg:x3; val_offset:77727*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77727*0 + 3*565*FLEN/8, x4, x1, x2)

inst_25910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70003fffffffff; valaddr_reg:x3; val_offset:77730*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77730*0 + 3*566*FLEN/8, x4, x1, x2)

inst_25911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70007fffffffff; valaddr_reg:x3; val_offset:77733*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77733*0 + 3*567*FLEN/8, x4, x1, x2)

inst_25912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7000ffffffffff; valaddr_reg:x3; val_offset:77736*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77736*0 + 3*568*FLEN/8, x4, x1, x2)

inst_25913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7001ffffffffff; valaddr_reg:x3; val_offset:77739*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77739*0 + 3*569*FLEN/8, x4, x1, x2)

inst_25914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7003ffffffffff; valaddr_reg:x3; val_offset:77742*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77742*0 + 3*570*FLEN/8, x4, x1, x2)

inst_25915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7007ffffffffff; valaddr_reg:x3; val_offset:77745*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77745*0 + 3*571*FLEN/8, x4, x1, x2)

inst_25916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe700fffffffffff; valaddr_reg:x3; val_offset:77748*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77748*0 + 3*572*FLEN/8, x4, x1, x2)

inst_25917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe701fffffffffff; valaddr_reg:x3; val_offset:77751*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77751*0 + 3*573*FLEN/8, x4, x1, x2)

inst_25918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe703fffffffffff; valaddr_reg:x3; val_offset:77754*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77754*0 + 3*574*FLEN/8, x4, x1, x2)

inst_25919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe707fffffffffff; valaddr_reg:x3; val_offset:77757*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77757*0 + 3*575*FLEN/8, x4, x1, x2)

inst_25920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe70ffffffffffff; valaddr_reg:x3; val_offset:77760*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77760*0 + 3*576*FLEN/8, x4, x1, x2)

inst_25921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe71ffffffffffff; valaddr_reg:x3; val_offset:77763*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77763*0 + 3*577*FLEN/8, x4, x1, x2)

inst_25922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe73ffffffffffff; valaddr_reg:x3; val_offset:77766*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77766*0 + 3*578*FLEN/8, x4, x1, x2)

inst_25923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe77ffffffffffff; valaddr_reg:x3; val_offset:77769*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77769*0 + 3*579*FLEN/8, x4, x1, x2)

inst_25924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe78000000000000; valaddr_reg:x3; val_offset:77772*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77772*0 + 3*580*FLEN/8, x4, x1, x2)

inst_25925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7c000000000000; valaddr_reg:x3; val_offset:77775*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77775*0 + 3*581*FLEN/8, x4, x1, x2)

inst_25926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7e000000000000; valaddr_reg:x3; val_offset:77778*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77778*0 + 3*582*FLEN/8, x4, x1, x2)

inst_25927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7f000000000000; valaddr_reg:x3; val_offset:77781*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77781*0 + 3*583*FLEN/8, x4, x1, x2)

inst_25928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7f800000000000; valaddr_reg:x3; val_offset:77784*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77784*0 + 3*584*FLEN/8, x4, x1, x2)

inst_25929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fc00000000000; valaddr_reg:x3; val_offset:77787*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77787*0 + 3*585*FLEN/8, x4, x1, x2)

inst_25930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fe00000000000; valaddr_reg:x3; val_offset:77790*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77790*0 + 3*586*FLEN/8, x4, x1, x2)

inst_25931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ff00000000000; valaddr_reg:x3; val_offset:77793*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77793*0 + 3*587*FLEN/8, x4, x1, x2)

inst_25932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ff80000000000; valaddr_reg:x3; val_offset:77796*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77796*0 + 3*588*FLEN/8, x4, x1, x2)

inst_25933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffc0000000000; valaddr_reg:x3; val_offset:77799*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77799*0 + 3*589*FLEN/8, x4, x1, x2)

inst_25934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffe0000000000; valaddr_reg:x3; val_offset:77802*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77802*0 + 3*590*FLEN/8, x4, x1, x2)

inst_25935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fff0000000000; valaddr_reg:x3; val_offset:77805*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77805*0 + 3*591*FLEN/8, x4, x1, x2)

inst_25936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fff8000000000; valaddr_reg:x3; val_offset:77808*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77808*0 + 3*592*FLEN/8, x4, x1, x2)

inst_25937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffc000000000; valaddr_reg:x3; val_offset:77811*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77811*0 + 3*593*FLEN/8, x4, x1, x2)

inst_25938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffe000000000; valaddr_reg:x3; val_offset:77814*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77814*0 + 3*594*FLEN/8, x4, x1, x2)

inst_25939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffff000000000; valaddr_reg:x3; val_offset:77817*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77817*0 + 3*595*FLEN/8, x4, x1, x2)

inst_25940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffff800000000; valaddr_reg:x3; val_offset:77820*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77820*0 + 3*596*FLEN/8, x4, x1, x2)

inst_25941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffc00000000; valaddr_reg:x3; val_offset:77823*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77823*0 + 3*597*FLEN/8, x4, x1, x2)

inst_25942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffe00000000; valaddr_reg:x3; val_offset:77826*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77826*0 + 3*598*FLEN/8, x4, x1, x2)

inst_25943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffff00000000; valaddr_reg:x3; val_offset:77829*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77829*0 + 3*599*FLEN/8, x4, x1, x2)

inst_25944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffff80000000; valaddr_reg:x3; val_offset:77832*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77832*0 + 3*600*FLEN/8, x4, x1, x2)

inst_25945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffc0000000; valaddr_reg:x3; val_offset:77835*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77835*0 + 3*601*FLEN/8, x4, x1, x2)

inst_25946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffe0000000; valaddr_reg:x3; val_offset:77838*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77838*0 + 3*602*FLEN/8, x4, x1, x2)

inst_25947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffff0000000; valaddr_reg:x3; val_offset:77841*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77841*0 + 3*603*FLEN/8, x4, x1, x2)

inst_25948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffff8000000; valaddr_reg:x3; val_offset:77844*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77844*0 + 3*604*FLEN/8, x4, x1, x2)

inst_25949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffc000000; valaddr_reg:x3; val_offset:77847*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77847*0 + 3*605*FLEN/8, x4, x1, x2)

inst_25950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffe000000; valaddr_reg:x3; val_offset:77850*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77850*0 + 3*606*FLEN/8, x4, x1, x2)

inst_25951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffff000000; valaddr_reg:x3; val_offset:77853*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77853*0 + 3*607*FLEN/8, x4, x1, x2)

inst_25952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffff800000; valaddr_reg:x3; val_offset:77856*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77856*0 + 3*608*FLEN/8, x4, x1, x2)

inst_25953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffffc00000; valaddr_reg:x3; val_offset:77859*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77859*0 + 3*609*FLEN/8, x4, x1, x2)

inst_25954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffffe00000; valaddr_reg:x3; val_offset:77862*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77862*0 + 3*610*FLEN/8, x4, x1, x2)

inst_25955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffff00000; valaddr_reg:x3; val_offset:77865*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77865*0 + 3*611*FLEN/8, x4, x1, x2)

inst_25956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffff80000; valaddr_reg:x3; val_offset:77868*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77868*0 + 3*612*FLEN/8, x4, x1, x2)

inst_25957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffffc0000; valaddr_reg:x3; val_offset:77871*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77871*0 + 3*613*FLEN/8, x4, x1, x2)

inst_25958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffffe0000; valaddr_reg:x3; val_offset:77874*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77874*0 + 3*614*FLEN/8, x4, x1, x2)

inst_25959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffffff0000; valaddr_reg:x3; val_offset:77877*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77877*0 + 3*615*FLEN/8, x4, x1, x2)

inst_25960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffffff8000; valaddr_reg:x3; val_offset:77880*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77880*0 + 3*616*FLEN/8, x4, x1, x2)

inst_25961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffffffc000; valaddr_reg:x3; val_offset:77883*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77883*0 + 3*617*FLEN/8, x4, x1, x2)

inst_25962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffffffe000; valaddr_reg:x3; val_offset:77886*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77886*0 + 3*618*FLEN/8, x4, x1, x2)

inst_25963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffffff000; valaddr_reg:x3; val_offset:77889*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77889*0 + 3*619*FLEN/8, x4, x1, x2)

inst_25964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffffff800; valaddr_reg:x3; val_offset:77892*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77892*0 + 3*620*FLEN/8, x4, x1, x2)

inst_25965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffffffc00; valaddr_reg:x3; val_offset:77895*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77895*0 + 3*621*FLEN/8, x4, x1, x2)

inst_25966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffffffe00; valaddr_reg:x3; val_offset:77898*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77898*0 + 3*622*FLEN/8, x4, x1, x2)

inst_25967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffffffff00; valaddr_reg:x3; val_offset:77901*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77901*0 + 3*623*FLEN/8, x4, x1, x2)

inst_25968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffffffff80; valaddr_reg:x3; val_offset:77904*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77904*0 + 3*624*FLEN/8, x4, x1, x2)

inst_25969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffffffffc0; valaddr_reg:x3; val_offset:77907*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77907*0 + 3*625*FLEN/8, x4, x1, x2)

inst_25970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffffffffe0; valaddr_reg:x3; val_offset:77910*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77910*0 + 3*626*FLEN/8, x4, x1, x2)

inst_25971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffffffff0; valaddr_reg:x3; val_offset:77913*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77913*0 + 3*627*FLEN/8, x4, x1, x2)

inst_25972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffffffff8; valaddr_reg:x3; val_offset:77916*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77916*0 + 3*628*FLEN/8, x4, x1, x2)

inst_25973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffffffffc; valaddr_reg:x3; val_offset:77919*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77919*0 + 3*629*FLEN/8, x4, x1, x2)

inst_25974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7ffffffffffffe; valaddr_reg:x3; val_offset:77922*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77922*0 + 3*630*FLEN/8, x4, x1, x2)

inst_25975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbe7fffffffffffff; valaddr_reg:x3; val_offset:77925*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77925*0 + 3*631*FLEN/8, x4, x1, x2)

inst_25976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:77928*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77928*0 + 3*632*FLEN/8, x4, x1, x2)

inst_25977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:77931*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77931*0 + 3*633*FLEN/8, x4, x1, x2)

inst_25978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:77934*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77934*0 + 3*634*FLEN/8, x4, x1, x2)

inst_25979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:77937*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77937*0 + 3*635*FLEN/8, x4, x1, x2)

inst_25980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:77940*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77940*0 + 3*636*FLEN/8, x4, x1, x2)

inst_25981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:77943*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77943*0 + 3*637*FLEN/8, x4, x1, x2)

inst_25982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:77946*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77946*0 + 3*638*FLEN/8, x4, x1, x2)

inst_25983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:77949*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77949*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_25984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:77952*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77952*0 + 3*640*FLEN/8, x4, x1, x2)

inst_25985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:77955*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77955*0 + 3*641*FLEN/8, x4, x1, x2)

inst_25986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:77958*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77958*0 + 3*642*FLEN/8, x4, x1, x2)

inst_25987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:77961*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77961*0 + 3*643*FLEN/8, x4, x1, x2)

inst_25988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:77964*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77964*0 + 3*644*FLEN/8, x4, x1, x2)

inst_25989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:77967*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77967*0 + 3*645*FLEN/8, x4, x1, x2)

inst_25990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:77970*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77970*0 + 3*646*FLEN/8, x4, x1, x2)

inst_25991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:77973*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77973*0 + 3*647*FLEN/8, x4, x1, x2)

inst_25992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:77976*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77976*0 + 3*648*FLEN/8, x4, x1, x2)

inst_25993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:77979*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77979*0 + 3*649*FLEN/8, x4, x1, x2)

inst_25994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:77982*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77982*0 + 3*650*FLEN/8, x4, x1, x2)

inst_25995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:77985*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77985*0 + 3*651*FLEN/8, x4, x1, x2)

inst_25996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:77988*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77988*0 + 3*652*FLEN/8, x4, x1, x2)

inst_25997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0954e8fdda0e7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0xedfe370e3495e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90954e8fdda0e7; op2val:0x9fdedfe370e3495e;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:77991*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77991*0 + 3*653*FLEN/8, x4, x1, x2)

inst_25998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:77994*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77994*0 + 3*654*FLEN/8, x4, x1, x2)

inst_25999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:77997*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 77997*0 + 3*655*FLEN/8, x4, x1, x2)

inst_26000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:78000*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78000*0 + 3*656*FLEN/8, x4, x1, x2)

inst_26001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:78003*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78003*0 + 3*657*FLEN/8, x4, x1, x2)

inst_26002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:78006*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78006*0 + 3*658*FLEN/8, x4, x1, x2)

inst_26003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:78009*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78009*0 + 3*659*FLEN/8, x4, x1, x2)

inst_26004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:78012*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78012*0 + 3*660*FLEN/8, x4, x1, x2)

inst_26005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:78015*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78015*0 + 3*661*FLEN/8, x4, x1, x2)

inst_26006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:78018*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78018*0 + 3*662*FLEN/8, x4, x1, x2)

inst_26007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:78021*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78021*0 + 3*663*FLEN/8, x4, x1, x2)

inst_26008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:78024*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78024*0 + 3*664*FLEN/8, x4, x1, x2)

inst_26009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:78027*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78027*0 + 3*665*FLEN/8, x4, x1, x2)

inst_26010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:78030*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78030*0 + 3*666*FLEN/8, x4, x1, x2)

inst_26011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:78033*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78033*0 + 3*667*FLEN/8, x4, x1, x2)

inst_26012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:78036*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78036*0 + 3*668*FLEN/8, x4, x1, x2)

inst_26013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:78039*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78039*0 + 3*669*FLEN/8, x4, x1, x2)

inst_26014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:78042*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78042*0 + 3*670*FLEN/8, x4, x1, x2)

inst_26015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:78045*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78045*0 + 3*671*FLEN/8, x4, x1, x2)

inst_26016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:78048*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78048*0 + 3*672*FLEN/8, x4, x1, x2)

inst_26017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:78051*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78051*0 + 3*673*FLEN/8, x4, x1, x2)

inst_26018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:78054*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78054*0 + 3*674*FLEN/8, x4, x1, x2)

inst_26019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:78057*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78057*0 + 3*675*FLEN/8, x4, x1, x2)

inst_26020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000000000000; valaddr_reg:x3; val_offset:78060*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78060*0 + 3*676*FLEN/8, x4, x1, x2)

inst_26021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000000000001; valaddr_reg:x3; val_offset:78063*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78063*0 + 3*677*FLEN/8, x4, x1, x2)

inst_26022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000000000003; valaddr_reg:x3; val_offset:78066*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78066*0 + 3*678*FLEN/8, x4, x1, x2)

inst_26023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000000000007; valaddr_reg:x3; val_offset:78069*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78069*0 + 3*679*FLEN/8, x4, x1, x2)

inst_26024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000000000000f; valaddr_reg:x3; val_offset:78072*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78072*0 + 3*680*FLEN/8, x4, x1, x2)

inst_26025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000000000001f; valaddr_reg:x3; val_offset:78075*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78075*0 + 3*681*FLEN/8, x4, x1, x2)

inst_26026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000000000003f; valaddr_reg:x3; val_offset:78078*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78078*0 + 3*682*FLEN/8, x4, x1, x2)

inst_26027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000000000007f; valaddr_reg:x3; val_offset:78081*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78081*0 + 3*683*FLEN/8, x4, x1, x2)

inst_26028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200000000000ff; valaddr_reg:x3; val_offset:78084*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78084*0 + 3*684*FLEN/8, x4, x1, x2)

inst_26029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200000000001ff; valaddr_reg:x3; val_offset:78087*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78087*0 + 3*685*FLEN/8, x4, x1, x2)

inst_26030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200000000003ff; valaddr_reg:x3; val_offset:78090*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78090*0 + 3*686*FLEN/8, x4, x1, x2)

inst_26031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200000000007ff; valaddr_reg:x3; val_offset:78093*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78093*0 + 3*687*FLEN/8, x4, x1, x2)

inst_26032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000000000fff; valaddr_reg:x3; val_offset:78096*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78096*0 + 3*688*FLEN/8, x4, x1, x2)

inst_26033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000000001fff; valaddr_reg:x3; val_offset:78099*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78099*0 + 3*689*FLEN/8, x4, x1, x2)

inst_26034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000000003fff; valaddr_reg:x3; val_offset:78102*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78102*0 + 3*690*FLEN/8, x4, x1, x2)

inst_26035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000000007fff; valaddr_reg:x3; val_offset:78105*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78105*0 + 3*691*FLEN/8, x4, x1, x2)

inst_26036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000000000ffff; valaddr_reg:x3; val_offset:78108*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78108*0 + 3*692*FLEN/8, x4, x1, x2)

inst_26037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000000001ffff; valaddr_reg:x3; val_offset:78111*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78111*0 + 3*693*FLEN/8, x4, x1, x2)

inst_26038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000000003ffff; valaddr_reg:x3; val_offset:78114*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78114*0 + 3*694*FLEN/8, x4, x1, x2)

inst_26039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000000007ffff; valaddr_reg:x3; val_offset:78117*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78117*0 + 3*695*FLEN/8, x4, x1, x2)

inst_26040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200000000fffff; valaddr_reg:x3; val_offset:78120*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78120*0 + 3*696*FLEN/8, x4, x1, x2)

inst_26041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200000001fffff; valaddr_reg:x3; val_offset:78123*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78123*0 + 3*697*FLEN/8, x4, x1, x2)

inst_26042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200000003fffff; valaddr_reg:x3; val_offset:78126*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78126*0 + 3*698*FLEN/8, x4, x1, x2)

inst_26043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200000007fffff; valaddr_reg:x3; val_offset:78129*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78129*0 + 3*699*FLEN/8, x4, x1, x2)

inst_26044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000000ffffff; valaddr_reg:x3; val_offset:78132*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78132*0 + 3*700*FLEN/8, x4, x1, x2)

inst_26045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000001ffffff; valaddr_reg:x3; val_offset:78135*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78135*0 + 3*701*FLEN/8, x4, x1, x2)

inst_26046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000003ffffff; valaddr_reg:x3; val_offset:78138*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78138*0 + 3*702*FLEN/8, x4, x1, x2)

inst_26047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000007ffffff; valaddr_reg:x3; val_offset:78141*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78141*0 + 3*703*FLEN/8, x4, x1, x2)

inst_26048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000000fffffff; valaddr_reg:x3; val_offset:78144*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78144*0 + 3*704*FLEN/8, x4, x1, x2)

inst_26049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000001fffffff; valaddr_reg:x3; val_offset:78147*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78147*0 + 3*705*FLEN/8, x4, x1, x2)

inst_26050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000003fffffff; valaddr_reg:x3; val_offset:78150*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78150*0 + 3*706*FLEN/8, x4, x1, x2)

inst_26051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000007fffffff; valaddr_reg:x3; val_offset:78153*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78153*0 + 3*707*FLEN/8, x4, x1, x2)

inst_26052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200000ffffffff; valaddr_reg:x3; val_offset:78156*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78156*0 + 3*708*FLEN/8, x4, x1, x2)

inst_26053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200001ffffffff; valaddr_reg:x3; val_offset:78159*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78159*0 + 3*709*FLEN/8, x4, x1, x2)

inst_26054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200003ffffffff; valaddr_reg:x3; val_offset:78162*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78162*0 + 3*710*FLEN/8, x4, x1, x2)

inst_26055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200007ffffffff; valaddr_reg:x3; val_offset:78165*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78165*0 + 3*711*FLEN/8, x4, x1, x2)

inst_26056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120000fffffffff; valaddr_reg:x3; val_offset:78168*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78168*0 + 3*712*FLEN/8, x4, x1, x2)

inst_26057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120001fffffffff; valaddr_reg:x3; val_offset:78171*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78171*0 + 3*713*FLEN/8, x4, x1, x2)

inst_26058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120003fffffffff; valaddr_reg:x3; val_offset:78174*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78174*0 + 3*714*FLEN/8, x4, x1, x2)

inst_26059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120007fffffffff; valaddr_reg:x3; val_offset:78177*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78177*0 + 3*715*FLEN/8, x4, x1, x2)

inst_26060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12000ffffffffff; valaddr_reg:x3; val_offset:78180*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78180*0 + 3*716*FLEN/8, x4, x1, x2)

inst_26061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12001ffffffffff; valaddr_reg:x3; val_offset:78183*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78183*0 + 3*717*FLEN/8, x4, x1, x2)

inst_26062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12003ffffffffff; valaddr_reg:x3; val_offset:78186*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78186*0 + 3*718*FLEN/8, x4, x1, x2)

inst_26063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12007ffffffffff; valaddr_reg:x3; val_offset:78189*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78189*0 + 3*719*FLEN/8, x4, x1, x2)

inst_26064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1200fffffffffff; valaddr_reg:x3; val_offset:78192*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78192*0 + 3*720*FLEN/8, x4, x1, x2)

inst_26065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1201fffffffffff; valaddr_reg:x3; val_offset:78195*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78195*0 + 3*721*FLEN/8, x4, x1, x2)

inst_26066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1203fffffffffff; valaddr_reg:x3; val_offset:78198*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78198*0 + 3*722*FLEN/8, x4, x1, x2)

inst_26067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x1207fffffffffff; valaddr_reg:x3; val_offset:78201*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78201*0 + 3*723*FLEN/8, x4, x1, x2)

inst_26068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x120ffffffffffff; valaddr_reg:x3; val_offset:78204*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78204*0 + 3*724*FLEN/8, x4, x1, x2)

inst_26069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x121ffffffffffff; valaddr_reg:x3; val_offset:78207*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78207*0 + 3*725*FLEN/8, x4, x1, x2)

inst_26070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x123ffffffffffff; valaddr_reg:x3; val_offset:78210*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78210*0 + 3*726*FLEN/8, x4, x1, x2)

inst_26071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x127ffffffffffff; valaddr_reg:x3; val_offset:78213*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78213*0 + 3*727*FLEN/8, x4, x1, x2)

inst_26072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x128000000000000; valaddr_reg:x3; val_offset:78216*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78216*0 + 3*728*FLEN/8, x4, x1, x2)

inst_26073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12c000000000000; valaddr_reg:x3; val_offset:78219*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78219*0 + 3*729*FLEN/8, x4, x1, x2)

inst_26074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12e000000000000; valaddr_reg:x3; val_offset:78222*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78222*0 + 3*730*FLEN/8, x4, x1, x2)

inst_26075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12f000000000000; valaddr_reg:x3; val_offset:78225*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78225*0 + 3*731*FLEN/8, x4, x1, x2)

inst_26076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12f800000000000; valaddr_reg:x3; val_offset:78228*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78228*0 + 3*732*FLEN/8, x4, x1, x2)

inst_26077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fc00000000000; valaddr_reg:x3; val_offset:78231*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78231*0 + 3*733*FLEN/8, x4, x1, x2)

inst_26078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fe00000000000; valaddr_reg:x3; val_offset:78234*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78234*0 + 3*734*FLEN/8, x4, x1, x2)

inst_26079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ff00000000000; valaddr_reg:x3; val_offset:78237*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78237*0 + 3*735*FLEN/8, x4, x1, x2)

inst_26080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ff80000000000; valaddr_reg:x3; val_offset:78240*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78240*0 + 3*736*FLEN/8, x4, x1, x2)

inst_26081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffc0000000000; valaddr_reg:x3; val_offset:78243*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78243*0 + 3*737*FLEN/8, x4, x1, x2)

inst_26082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffe0000000000; valaddr_reg:x3; val_offset:78246*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78246*0 + 3*738*FLEN/8, x4, x1, x2)

inst_26083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fff0000000000; valaddr_reg:x3; val_offset:78249*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78249*0 + 3*739*FLEN/8, x4, x1, x2)

inst_26084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fff8000000000; valaddr_reg:x3; val_offset:78252*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78252*0 + 3*740*FLEN/8, x4, x1, x2)

inst_26085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffc000000000; valaddr_reg:x3; val_offset:78255*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78255*0 + 3*741*FLEN/8, x4, x1, x2)

inst_26086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffe000000000; valaddr_reg:x3; val_offset:78258*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78258*0 + 3*742*FLEN/8, x4, x1, x2)

inst_26087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffff000000000; valaddr_reg:x3; val_offset:78261*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78261*0 + 3*743*FLEN/8, x4, x1, x2)

inst_26088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffff800000000; valaddr_reg:x3; val_offset:78264*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78264*0 + 3*744*FLEN/8, x4, x1, x2)

inst_26089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffffc00000000; valaddr_reg:x3; val_offset:78267*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78267*0 + 3*745*FLEN/8, x4, x1, x2)

inst_26090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffffe00000000; valaddr_reg:x3; val_offset:78270*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78270*0 + 3*746*FLEN/8, x4, x1, x2)

inst_26091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffff00000000; valaddr_reg:x3; val_offset:78273*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78273*0 + 3*747*FLEN/8, x4, x1, x2)

inst_26092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffff80000000; valaddr_reg:x3; val_offset:78276*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78276*0 + 3*748*FLEN/8, x4, x1, x2)

inst_26093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffffc0000000; valaddr_reg:x3; val_offset:78279*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78279*0 + 3*749*FLEN/8, x4, x1, x2)

inst_26094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffffe0000000; valaddr_reg:x3; val_offset:78282*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78282*0 + 3*750*FLEN/8, x4, x1, x2)

inst_26095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffffff0000000; valaddr_reg:x3; val_offset:78285*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78285*0 + 3*751*FLEN/8, x4, x1, x2)

inst_26096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffffff8000000; valaddr_reg:x3; val_offset:78288*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78288*0 + 3*752*FLEN/8, x4, x1, x2)

inst_26097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffffffc000000; valaddr_reg:x3; val_offset:78291*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78291*0 + 3*753*FLEN/8, x4, x1, x2)

inst_26098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffffffe000000; valaddr_reg:x3; val_offset:78294*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78294*0 + 3*754*FLEN/8, x4, x1, x2)

inst_26099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffffff000000; valaddr_reg:x3; val_offset:78297*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78297*0 + 3*755*FLEN/8, x4, x1, x2)

inst_26100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffffff800000; valaddr_reg:x3; val_offset:78300*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78300*0 + 3*756*FLEN/8, x4, x1, x2)

inst_26101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffffffc00000; valaddr_reg:x3; val_offset:78303*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78303*0 + 3*757*FLEN/8, x4, x1, x2)

inst_26102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffffffe00000; valaddr_reg:x3; val_offset:78306*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78306*0 + 3*758*FLEN/8, x4, x1, x2)

inst_26103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffffffff00000; valaddr_reg:x3; val_offset:78309*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78309*0 + 3*759*FLEN/8, x4, x1, x2)

inst_26104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffffffff80000; valaddr_reg:x3; val_offset:78312*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78312*0 + 3*760*FLEN/8, x4, x1, x2)

inst_26105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffffffffc0000; valaddr_reg:x3; val_offset:78315*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78315*0 + 3*761*FLEN/8, x4, x1, x2)

inst_26106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffffffffe0000; valaddr_reg:x3; val_offset:78318*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78318*0 + 3*762*FLEN/8, x4, x1, x2)

inst_26107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffffffff0000; valaddr_reg:x3; val_offset:78321*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78321*0 + 3*763*FLEN/8, x4, x1, x2)

inst_26108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffffffff8000; valaddr_reg:x3; val_offset:78324*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78324*0 + 3*764*FLEN/8, x4, x1, x2)

inst_26109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffffffffc000; valaddr_reg:x3; val_offset:78327*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78327*0 + 3*765*FLEN/8, x4, x1, x2)

inst_26110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12fffffffffe000; valaddr_reg:x3; val_offset:78330*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78330*0 + 3*766*FLEN/8, x4, x1, x2)

inst_26111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x0993453e0581d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f90993453e0581d; op2val:0x0;
op3val:0x12ffffffffff000; valaddr_reg:x3; val_offset:78333*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 78333*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832fffffff800000453055617842282496,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832fffffffc00000453055617846476800,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832fffffffe00000453055617848573952,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832ffffffff00000453055617849622528,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832ffffffff80000453055617850146816,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832ffffffffc0000453055617850408960,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832ffffffffe0000453055617850540032,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832fffffffff0000453055617850605568,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832fffffffff8000453055617850638336,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832fffffffffc000453055617850654720,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832fffffffffe000453055617850662912,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832ffffffffff000453055617850667008,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832ffffffffff800453055617850669056,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832ffffffffffc00453055617850670080,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832ffffffffffe00453055617850670592,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832fffffffffff00453055617850670848,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832fffffffffff80453055617850670976,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832fffffffffffc0453055617850671040,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832fffffffffffe0453055617850671072,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832ffffffffffff0453055617850671088,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832ffffffffffff8453055617850671096,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832ffffffffffffc453055617850671100,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832ffffffffffffe453055617850671102,64,FLEN)
NAN_BOXED(0x5f9056bcd04279ed886099199197346285,64,FLEN)
NAN_BOXED(0x80002768,64,FLEN)
NAN_BOXED(0x832fffffffffffff453055617850671103,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000000000003681935667951566848,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000000000013681935667951566849,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000000000033681935667951566851,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000000000073681935667951566855,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000000000000f3681935667951566863,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000000000001f3681935667951566879,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000000000003f3681935667951566911,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000000000007f3681935667951566975,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000000000ff3681935667951567103,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000000001ff3681935667951567359,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000000003ff3681935667951567871,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000000007ff3681935667951568895,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0000000000fff3681935667951570943,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0000000001fff3681935667951575039,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0000000003fff3681935667951583231,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0000000007fff3681935667951599615,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000000000ffff3681935667951632383,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000000001ffff3681935667951697919,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000000003ffff3681935667951828991,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000000007ffff3681935667952091135,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000000fffff3681935667952615423,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000001fffff3681935667953663999,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000003fffff3681935667955761151,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000007fffff3681935667959955455,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0000000ffffff3681935667968344063,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0000001ffffff3681935667985121279,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0000003ffffff3681935668018675711,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0000007ffffff3681935668085784575,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000000fffffff3681935668220002303,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000001fffffff3681935668488437759,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000003fffffff3681935669025308671,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000007fffffff3681935670099050495,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00000ffffffff3681935672246534143,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00001ffffffff3681935676541501439,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00003ffffffff3681935685131436031,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00007ffffffff3681935702311305215,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0000fffffffff3681935736671043583,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0001fffffffff3681935805390520319,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0003fffffffff3681935942829473791,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0007fffffffff3681936217707380735,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde000ffffffffff3681936767463194623,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde001ffffffffff3681937866974822399,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde003ffffffffff3681940065998077951,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde007ffffffffff3681944464044589055,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde00fffffffffff3681953260137611263,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde01fffffffffff3681970852323655679,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde03fffffffffff3682006036695744511,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde07fffffffffff3682076405439922175,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde0ffffffffffff3682217142928277503,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde1ffffffffffff3682498617904988159,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde3ffffffffffff3683061567858409471,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde7ffffffffffff3684187467765252095,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbde80000000000003684187467765252096,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdec0000000000003685313367672094720,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdee0000000000003685876317625516032,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdef0000000000003686157792602226688,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdef8000000000003686298530090582016,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefc000000000003686368898834759680,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefe000000000003686404083206848512,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeff000000000003686421675392892928,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeff800000000003686430471485915136,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffc00000000003686434869532426240,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffe00000000003686437068555681792,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefff00000000003686438168067309568,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefff80000000003686438717823123456,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffc0000000003686438992701030400,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffe0000000003686439130139983872,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffff0000000003686439198859460608,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffff8000000003686439233219198976,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffc000000003686439250399068160,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffe000000003686439258989002752,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffff000000003686439263283970048,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffff800000003686439265431453696,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffc00000003686439266505195520,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffe00000003686439267042066432,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffff00000003686439267310501888,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffff80000003686439267444719616,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffc0000003686439267511828480,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffe0000003686439267545382912,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffff0000003686439267562160128,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffff8000003686439267570548736,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffffc000003686439267574743040,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffffe000003686439267576840192,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffff000003686439267577888768,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffff800003686439267578413056,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffffc00003686439267578675200,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffffe00003686439267578806272,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffffff00003686439267578871808,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffffff80003686439267578904576,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffffffc0003686439267578920960,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffffffe0003686439267578929152,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffffff0003686439267578933248,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffffff8003686439267578935296,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffffffc003686439267578936320,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffffffe003686439267578936832,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffffffff003686439267578937088,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffffffff803686439267578937216,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffffffffc03686439267578937280,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffffffffe03686439267578937312,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffffffff03686439267578937328,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffffffff83686439267578937336,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffffffffc3686439267578937340,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdeffffffffffffe3686439267578937342,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbdefffffffffffff3686439267578937343,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf800000000000013799029258263199745,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf800000000000033799029258263199747,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf800000000000073799029258263199751,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf8000000000000f3799029258263199759,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf8000000000001f3799029258263199775,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf8000000000003f3799029258263199807,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf833333333333333799929978188673843,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf849249249249243800316001013877028,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf866666666666663800830698114147942,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf86db6db6db6db63800959372389215670,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf877777777777773801130938089305975,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf888888888888883801431178064464008,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf899999999999993801731418039622041,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf8b6db6db6db6db3802246115139892955,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf8ccccccccccccc3802632137965096140,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf8db6db6db6db6d3802889486515231597,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf8fffffffffffc03803532857890570176,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf8fffffffffffe03803532857890570208,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf8ffffffffffff03803532857890570224,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf8ffffffffffff83803532857890570232,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf8ffffffffffffc3803532857890570236,64,FLEN)
NAN_BOXED(0x5f908290cbe2e23f886147388657033791,64,FLEN)
NAN_BOXED(0x9fdf02ef8073d0491519929599512531017,64,FLEN)
NAN_BOXED(0xbf8ffffffffffffe3803532857890570238,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000000000000053239664633446400,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000000000001053239664633446401,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000000000003053239664633446403,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000000000007053239664633446407,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000000000000f053239664633446415,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000000000001f053239664633446431,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000000000003f053239664633446463,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000000000007f053239664633446527,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400000000000ff053239664633446655,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400000000001ff053239664633446911,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400000000003ff053239664633447423,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400000000007ff053239664633448447,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000000000fff053239664633450495,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000000001fff053239664633454591,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000000003fff053239664633462783,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000000007fff053239664633479167,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000000000ffff053239664633511935,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000000001ffff053239664633577471,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000000003ffff053239664633708543,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000000007ffff053239664633970687,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400000000fffff053239664634494975,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400000001fffff053239664635543551,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400000003fffff053239664637640703,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400000007fffff053239664641835007,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000000ffffff053239664650223615,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000001ffffff053239664667000831,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000003ffffff053239664700555263,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000007ffffff053239664767664127,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000000fffffff053239664901881855,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000001fffffff053239665170317311,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000003fffffff053239665707188223,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000007fffffff053239666780930047,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400000ffffffff053239668928413695,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400001ffffffff053239673223380991,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400003ffffffff053239681813315583,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400007ffffffff053239698993184767,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840000fffffffff053239733352923135,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840001fffffffff053239802072399871,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840003fffffffff053239939511353343,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840007fffffffff053240214389260287,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384000ffffffffff053240764145074175,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384001ffffffffff053241863656701951,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384003ffffffffff053244062679957503,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384007ffffffffff053248460726468607,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38400fffffffffff053257256819490815,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38401fffffffffff053274849005535231,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38403fffffffffff053310033377624063,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x38407fffffffffff053380402121801727,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3840ffffffffffff053521139610157055,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3841ffffffffffff053802614586867711,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3843ffffffffffff054365564540289023,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3847ffffffffffff055491464447131647,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3848000000000000055491464447131648,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384c000000000000056617364353974272,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384e000000000000057180314307395584,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384f000000000000057461789284106240,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384f800000000000057602526772461568,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fc00000000000057672895516639232,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fe00000000000057708079888728064,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ff00000000000057725672074772480,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ff80000000000057734468167794688,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffc0000000000057738866214305792,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffe0000000000057741065237561344,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fff0000000000057742164749189120,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fff8000000000057742714505003008,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffc000000000057742989382909952,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffe000000000057743126821863424,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffff000000000057743195541340160,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffff800000000057743229901078528,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffc00000000057743247080947712,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffe00000000057743255670882304,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffff00000000057743259965849600,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffff80000000057743262113333248,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffc0000000057743263187075072,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffe0000000057743263723945984,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffff0000000057743263992381440,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffff8000000057743264126599168,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffc000000057743264193708032,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffe000000057743264227262464,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffff000000057743264244039680,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffff800000057743264252428288,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffffc00000057743264256622592,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffffe00000057743264258719744,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffff00000057743264259768320,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffff80000057743264260292608,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffffc0000057743264260554752,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffffe0000057743264260685824,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffffff0000057743264260751360,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffffff8000057743264260784128,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffffffc000057743264260800512,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffffffe000057743264260808704,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffffff000057743264260812800,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffffff800057743264260814848,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffffffc00057743264260815872,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffffffe00057743264260816384,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffffffff00057743264260816640,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffffffff80057743264260816768,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffffffffc0057743264260816832,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffffffffe0057743264260816864,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffffffff0057743264260816880,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffffffff8057743264260816888,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffffffffc057743264260816892,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384ffffffffffffe057743264260816894,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x384fffffffffffff057743264260816895,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff0000000000001607182418800017409,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff0000000000003607182418800017411,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff0000000000007607182418800017415,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff000000000000f607182418800017423,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff000000000001f607182418800017439,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff000000000003f607182418800017471,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff3333333333333608083138725491507,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff4924924924924608469161550694692,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff6666666666666608983858650965606,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff6db6db6db6db6609112532926033334,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff7777777777777609284098626123639,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff8888888888888609584338601281672,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ff9999999999999609884578576439705,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ffb6db6db6db6db610399275676710619,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ffccccccccccccc610785298501913804,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ffdb6db6db6db6d611042647052049261,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3fffffffffffffc0611686018427387840,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3fffffffffffffe0611686018427387872,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ffffffffffffff0611686018427387888,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ffffffffffffff8611686018427387896,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ffffffffffffffc611686018427387900,64,FLEN)
NAN_BOXED(0x5f9089f788debe71886155526495714929,64,FLEN)
NAN_BOXED(0x204ef50ec1bf4532328067501126010162,64,FLEN)
NAN_BOXED(0x3ffffffffffffffe611686018427387902,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xf5,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1f1,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f3,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x333333333333300719925474099,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4924924924924286742750677284,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6666666666666801439850948198,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6db6db6db6db6930114126015926,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7777777777777101679826106231,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8888888888888401919801264264,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x9999999999999702159776422297,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb6db6db6db6db216856876693211,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xccccccccccccc602879701896396,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xdb6db6db6db6d860228252031853,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffc0503599627370432,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffe0503599627370464,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff0503599627370480,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff8503599627370488,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffc503599627370492,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffe503599627370494,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000000000052201579132747776,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000000000152201579132747777,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000000000352201579132747779,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000000000752201579132747783,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000000000f52201579132747791,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000000001f52201579132747807,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000000003f52201579132747839,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000000007f52201579132747903,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800000000000ff52201579132748031,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800000000001ff52201579132748287,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800000000003ff52201579132748799,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800000000007ff52201579132749823,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380000000000fff52201579132751871,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380000000001fff52201579132755967,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380000000003fff52201579132764159,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380000000007fff52201579132780543,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000000ffff52201579132813311,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000001ffff52201579132878847,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000003ffff52201579133009919,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000007ffff52201579133272063,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800000000fffff52201579133796351,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800000001fffff52201579134844927,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800000003fffff52201579136942079,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800000007fffff52201579141136383,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380000000ffffff52201579149524991,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380000001ffffff52201579166302207,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380000003ffffff52201579199856639,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380000007ffffff52201579266965503,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000000fffffff52201579401183231,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000001fffffff52201579669618687,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000003fffffff52201580206489599,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000007fffffff52201581280231423,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800000ffffffff52201583427715071,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800001ffffffff52201587722682367,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800003ffffffff52201596312616959,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800007ffffffff52201613492486143,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380000fffffffff52201647852224511,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380001fffffffff52201716571701247,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380003fffffffff52201854010654719,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380007fffffffff52202128888561663,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38000ffffffffff52202678644375551,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38001ffffffffff52203778156003327,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38003ffffffffff52205977179258879,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38007ffffffffff52210375225769983,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3800fffffffffff52219171318792191,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3801fffffffffff52236763504836607,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3803fffffffffff52271947876925439,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3807fffffffffff52342316621103103,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x380ffffffffffff52483054109458431,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x381ffffffffffff52764529086169087,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x383ffffffffffff53327479039590399,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x387ffffffffffff54453378946433023,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38800000000000054453378946433024,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38c00000000000055579278853275648,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38e00000000000056142228806696960,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38f00000000000056423703783407616,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38f80000000000056564441271762944,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fc0000000000056634810015940608,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fe0000000000056669994388029440,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ff0000000000056687586574073856,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ff8000000000056696382667096064,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffc000000000056700780713607168,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffe000000000056702979736862720,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fff000000000056704079248490496,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fff800000000056704629004304384,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffc00000000056704903882211328,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffe00000000056705041321164800,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffff00000000056705110040641536,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffff80000000056705144400379904,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffc0000000056705161580249088,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffe0000000056705170170183680,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffff0000000056705174465150976,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffff8000000056705176612634624,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffc000000056705177686376448,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffe000000056705178223247360,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffff000000056705178491682816,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffff800000056705178625900544,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffc00000056705178693009408,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffe00000056705178726563840,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffff00000056705178743341056,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffff80000056705178751729664,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffffc0000056705178755923968,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffffe0000056705178758021120,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffff0000056705178759069696,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffff8000056705178759593984,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffffc000056705178759856128,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffffe000056705178759987200,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffffff000056705178760052736,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffffff800056705178760085504,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffffffc00056705178760101888,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffffffe00056705178760110080,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffffff00056705178760114176,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffffff80056705178760116224,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffffffc0056705178760117248,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffffffe0056705178760117760,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffffffff0056705178760118016,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffffffff8056705178760118144,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffffffffc056705178760118208,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffffffffe056705178760118240,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffffffff056705178760118256,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffffffff856705178760118264,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffffffffc56705178760118268,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38ffffffffffffe56705178760118270,64,FLEN)
NAN_BOXED(0x5f908fa5b7b5d6b1886161772164011697,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x38fffffffffffff56705178760118271,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000000000003348669295526150144,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000000000013348669295526150145,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000000000033348669295526150147,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000000000073348669295526150151,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000000000000f3348669295526150159,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000000000001f3348669295526150175,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000000000003f3348669295526150207,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000000000007f3348669295526150271,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000000000ff3348669295526150399,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000000001ff3348669295526150655,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000000003ff3348669295526151167,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000000007ff3348669295526152191,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940000000000fff3348669295526154239,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940000000001fff3348669295526158335,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940000000003fff3348669295526166527,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940000000007fff3348669295526182911,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000000000ffff3348669295526215679,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000000001ffff3348669295526281215,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000000003ffff3348669295526412287,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000000007ffff3348669295526674431,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000000fffff3348669295527198719,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000001fffff3348669295528247295,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000003fffff3348669295530344447,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000007fffff3348669295534538751,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940000000ffffff3348669295542927359,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940000001ffffff3348669295559704575,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940000003ffffff3348669295593259007,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940000007ffffff3348669295660367871,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000000fffffff3348669295794585599,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000001fffffff3348669296063021055,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000003fffffff3348669296599891967,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000007fffffff3348669297673633791,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400000ffffffff3348669299821117439,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400001ffffffff3348669304116084735,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400003ffffffff3348669312706019327,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400007ffffffff3348669329885888511,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940000fffffffff3348669364245626879,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940001fffffffff3348669432965103615,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940003fffffffff3348669570404057087,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940007fffffffff3348669845281964031,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94000ffffffffff3348670395037777919,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94001ffffffffff3348671494549405695,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94003ffffffffff3348673693572661247,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94007ffffffffff3348678091619172351,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9400fffffffffff3348686887712194559,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9401fffffffffff3348704479898238975,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9403fffffffffff3348739664270327807,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9407fffffffffff3348810033014505471,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb940ffffffffffff3348950770502860799,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb941ffffffffffff3349232245479571455,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb943ffffffffffff3349795195432992767,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb947ffffffffffff3350921095339835391,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb9480000000000003350921095339835392,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94c0000000000003352046995246678016,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94e0000000000003352609945200099328,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94f0000000000003352891420176809984,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94f8000000000003353032157665165312,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fc000000000003353102526409342976,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fe000000000003353137710781431808,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ff000000000003353155302967476224,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ff800000000003353164099060498432,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffc00000000003353168497107009536,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffe00000000003353170696130265088,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fff00000000003353171795641892864,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fff80000000003353172345397706752,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffc0000000003353172620275613696,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffe0000000003353172757714567168,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffff0000000003353172826434043904,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffff8000000003353172860793782272,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffc000000003353172877973651456,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffe000000003353172886563586048,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffff000000003353172890858553344,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffff800000003353172893006036992,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffc00000003353172894079778816,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffe00000003353172894616649728,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffff00000003353172894885085184,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffff80000003353172895019302912,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffc0000003353172895086411776,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffe0000003353172895119966208,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffff0000003353172895136743424,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffff8000003353172895145132032,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffffc000003353172895149326336,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffffe000003353172895151423488,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffff000003353172895152472064,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffff800003353172895152996352,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffffc00003353172895153258496,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffffe00003353172895153389568,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffffff00003353172895153455104,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffffff80003353172895153487872,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffffffc0003353172895153504256,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffffffe0003353172895153512448,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffffff0003353172895153516544,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffffff8003353172895153518592,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffffffc003353172895153519616,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffffffe003353172895153520128,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffffffff003353172895153520384,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffffffff803353172895153520512,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffffffffc03353172895153520576,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffffffffe03353172895153520608,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffffffff03353172895153520624,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffffffff83353172895153520632,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffffffffc3353172895153520636,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94ffffffffffffe3353172895153520638,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xb94fffffffffffff3353172895153520639,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf800000000000013799029258263199745,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf800000000000033799029258263199747,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf800000000000073799029258263199751,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf8000000000000f3799029258263199759,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf8000000000001f3799029258263199775,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf8000000000003f3799029258263199807,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf833333333333333799929978188673843,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf849249249249243800316001013877028,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf866666666666663800830698114147942,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf86db6db6db6db63800959372389215670,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf877777777777773801130938089305975,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf888888888888883801431178064464008,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf899999999999993801731418039622041,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf8b6db6db6db6db3802246115139892955,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf8ccccccccccccc3802632137965096140,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf8db6db6db6db6d3802889486515231597,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf8fffffffffffc03803532857890570176,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf8fffffffffffe03803532857890570208,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf8ffffffffffff03803532857890570224,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf8ffffffffffff83803532857890570232,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf8ffffffffffffc3803532857890570236,64,FLEN)
NAN_BOXED(0x5f9094dd69773d7b886167508927593851,64,FLEN)
NAN_BOXED(0x9fdee0b61ffbc4411519891969685570625,64,FLEN)
NAN_BOXED(0xbf8ffffffffffffe3803532857890570238,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000000000003722468064597901312,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000000000013722468064597901313,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000000000033722468064597901315,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000000000073722468064597901319,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000000000000f3722468064597901327,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000000000001f3722468064597901343,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000000000003f3722468064597901375,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000000000007f3722468064597901439,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000000000ff3722468064597901567,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000000001ff3722468064597901823,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000000003ff3722468064597902335,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000000007ff3722468064597903359,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70000000000fff3722468064597905407,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70000000001fff3722468064597909503,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70000000003fff3722468064597917695,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70000000007fff3722468064597934079,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000000000ffff3722468064597966847,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000000001ffff3722468064598032383,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000000003ffff3722468064598163455,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000000007ffff3722468064598425599,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000000fffff3722468064598949887,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000001fffff3722468064599998463,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000003fffff3722468064602095615,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000007fffff3722468064606289919,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70000000ffffff3722468064614678527,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70000001ffffff3722468064631455743,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70000003ffffff3722468064665010175,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70000007ffffff3722468064732119039,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000000fffffff3722468064866336767,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000001fffffff3722468065134772223,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000003fffffff3722468065671643135,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000007fffffff3722468066745384959,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700000ffffffff3722468068892868607,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700001ffffffff3722468073187835903,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700003ffffffff3722468081777770495,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700007ffffffff3722468098957639679,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70000fffffffff3722468133317378047,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70001fffffffff3722468202036854783,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70003fffffffff3722468339475808255,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70007fffffffff3722468614353715199,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7000ffffffffff3722469164109529087,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7001ffffffffff3722470263621156863,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7003ffffffffff3722472462644412415,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7007ffffffffff3722476860690923519,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe700fffffffffff3722485656783945727,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe701fffffffffff3722503248969990143,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe703fffffffffff3722538433342078975,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe707fffffffffff3722608802086256639,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe70ffffffffffff3722749539574611967,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe71ffffffffffff3723031014551322623,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe73ffffffffffff3723593964504743935,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe77ffffffffffff3724719864411586559,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe780000000000003724719864411586560,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7c0000000000003725845764318429184,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7e0000000000003726408714271850496,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7f0000000000003726690189248561152,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7f8000000000003726830926736916480,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fc000000000003726901295481094144,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fe000000000003726936479853182976,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ff000000000003726954072039227392,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ff800000000003726962868132249600,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffc00000000003726967266178760704,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffe00000000003726969465202016256,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fff00000000003726970564713644032,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fff80000000003726971114469457920,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffc0000000003726971389347364864,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffe0000000003726971526786318336,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffff0000000003726971595505795072,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffff8000000003726971629865533440,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffc000000003726971647045402624,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffe000000003726971655635337216,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffff000000003726971659930304512,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffff800000003726971662077788160,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffc00000003726971663151529984,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffe00000003726971663688400896,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffff00000003726971663956836352,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffff80000003726971664091054080,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffc0000003726971664158162944,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffe0000003726971664191717376,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffff0000003726971664208494592,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffff8000003726971664216883200,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffffc000003726971664221077504,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffffe000003726971664223174656,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffff000003726971664224223232,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffff800003726971664224747520,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffffc00003726971664225009664,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffffe00003726971664225140736,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffffff00003726971664225206272,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffffff80003726971664225239040,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffffffc0003726971664225255424,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffffffe0003726971664225263616,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffffff0003726971664225267712,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffffff8003726971664225269760,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffffffc003726971664225270784,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffffffe003726971664225271296,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffffffff003726971664225271552,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffffffff803726971664225271680,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffffffffc03726971664225271744,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffffffffe03726971664225271776,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffffffff03726971664225271792,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffffffff83726971664225271800,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffffffffc3726971664225271804,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7ffffffffffffe3726971664225271806,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbe7fffffffffffff3726971664225271807,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf800000000000013799029258263199745,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf800000000000033799029258263199747,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf800000000000073799029258263199751,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf8000000000000f3799029258263199759,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf8000000000001f3799029258263199775,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf8000000000003f3799029258263199807,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf833333333333333799929978188673843,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf849249249249243800316001013877028,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf866666666666663800830698114147942,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf86db6db6db6db63800959372389215670,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf877777777777773801130938089305975,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf888888888888883801431178064464008,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf899999999999993801731418039622041,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf8b6db6db6db6db3802246115139892955,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf8ccccccccccccc3802632137965096140,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf8db6db6db6db6d3802889486515231597,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf8fffffffffffc03803532857890570176,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf8fffffffffffe03803532857890570208,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf8ffffffffffff03803532857890570224,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf8ffffffffffff83803532857890570232,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf8ffffffffffffc3803532857890570236,64,FLEN)
NAN_BOXED(0x5f90954e8fdda0e7886167994903142631,64,FLEN)
NAN_BOXED(0x9fdedfe370e3495e1519891064804821342,64,FLEN)
NAN_BOXED(0xbf8ffffffffffffe3803532857890570238,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xf5,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1f1,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x3f3,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x333333333333300719925474099,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x4924924924924286742750677284,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6666666666666801439850948198,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x6db6db6db6db6930114126015926,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x7777777777777101679826106231,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x8888888888888401919801264264,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x9999999999999702159776422297,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xb6db6db6db6db216856876693211,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xccccccccccccc602879701896396,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xdb6db6db6db6d860228252031853,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffc0503599627370432,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xfffffffffffe0503599627370464,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff0503599627370480,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffff8503599627370488,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffc503599627370492,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0xffffffffffffe503599627370494,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000001064793292668928,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000011064793292668929,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000031064793292668931,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000071064793292668935,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000000f1064793292668943,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000001f1064793292668959,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000003f1064793292668991,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000007f1064793292669055,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000000ff1064793292669183,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000001ff1064793292669439,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000003ff1064793292669951,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000007ff1064793292670975,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000000fff1064793292673023,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000001fff1064793292677119,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000003fff1064793292685311,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000007fff1064793292701695,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000000ffff1064793292734463,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000001ffff1064793292799999,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000003ffff1064793292931071,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000007ffff1064793293193215,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000000fffff1064793293717503,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000001fffff1064793294766079,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000003fffff1064793296863231,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000007fffff1064793301057535,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000000ffffff1064793309446143,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000001ffffff1064793326223359,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000003ffffff1064793359777791,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000007ffffff1064793426886655,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000000fffffff1064793561104383,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000001fffffff1064793829539839,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000003fffffff1064794366410751,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000007fffffff1064795440152575,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200000ffffffff1064797587636223,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200001ffffffff1064801882603519,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200003ffffffff1064810472538111,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200007ffffffff1064827652407295,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120000fffffffff1064862012145663,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120001fffffffff1064930731622399,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120003fffffffff1065068170575871,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120007fffffffff1065343048482815,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12000ffffffffff1065892804296703,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12001ffffffffff1066992315924479,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12003ffffffffff1069191339180031,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12007ffffffffff1073589385691135,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1200fffffffffff1082385478713343,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1201fffffffffff1099977664757759,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1203fffffffffff1135162036846591,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1207fffffffffff1205530781024255,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x120ffffffffffff1346268269379583,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x121ffffffffffff1627743246090239,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x123ffffffffffff2190693199511551,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x127ffffffffffff3316593106354175,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x1280000000000003316593106354176,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12c0000000000004442493013196800,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12e0000000000005005442966618112,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12f0000000000005286917943328768,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12f8000000000005427655431684096,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fc000000000005498024175861760,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fe000000000005533208547950592,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ff000000000005550800733995008,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ff800000000005559596827017216,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffc00000000005563994873528320,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffe00000000005566193896783872,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fff00000000005567293408411648,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fff80000000005567843164225536,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffc0000000005568118042132480,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffe0000000005568255481085952,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffff0000000005568324200562688,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffff8000000005568358560301056,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffc000000005568375740170240,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffe000000005568384330104832,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffff000000005568388625072128,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffff800000005568390772555776,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffc00000005568391846297600,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffe00000005568392383168512,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffff00000005568392651603968,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffff80000005568392785821696,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffc0000005568392852930560,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffe0000005568392886484992,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffff0000005568392903262208,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffff8000005568392911650816,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffc000005568392915845120,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffe000005568392917942272,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffff000005568392918990848,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffff800005568392919515136,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffc00005568392919777280,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffe00005568392919908352,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffff00005568392919973888,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffff80005568392920006656,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffc0005568392920023040,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12fffffffffe0005568392920031232,64,FLEN)
NAN_BOXED(0x5f90993453e0581d886172280274049053,64,FLEN)
NAN_BOXED(0x0,64,FLEN)
NAN_BOXED(0x12ffffffffff0005568392920035328,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
