
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b14 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b14)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1 == rd != rs2 and rs1 == rd != rs3 and rs3 != rs2, rs1==f20, rs2==f26, rs3==f15, rd==f20,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x10b and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f20; op2:f26; op3:f15; dest:f20; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x10bc31d8d5a5ef3e; valaddr_reg:x3; val_offset:0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f20, f20, f26, f15, dyn, 0, 0, x3, 0*FLEN/8, x4, x1, x2)

inst_1:
// rs1 != rs2 and rs1 != rd and rs1 != rs3 and rs2 != rs3 and rs2 != rd and rs3 != rd, rs1==f15, rs2==f22, rs3==f10, rd==f19,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f2 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f15; op2:f22; op3:f10; dest:f19; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3f2c31d8d5a5ef3e; valaddr_reg:x3; val_offset:3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f19, f15, f22, f10, dyn, 0, 0, x3, 3*FLEN/8, x4, x1, x2)

inst_2:
// rs1 == rs2 == rd != rs3, rs1==f1, rs2==f1, rs3==f18, rd==f1,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f1; op2:f1; op3:f18; dest:f1; op1val:0x5fab0580f98a7dbd; op2val:0x5fab0580f98a7dbd;
op3val:0x3f3c31d8d5a5ef3e; valaddr_reg:x3; val_offset:6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f1, f1, f1, f18, dyn, 0, 0, x3, 6*FLEN/8, x4, x1, x2)

inst_3:
// rs1 == rs2 == rs3 == rd, rs1==f30, rs2==f30, rs3==f30, rd==f30,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f4 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f30; op3:f30; dest:f30; op1val:0x5fab0580f98a7dbd; op2val:0x5fab0580f98a7dbd;
op3val:0x5fab0580f98a7dbd; valaddr_reg:x3; val_offset:9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f30, f30, f30, f30, dyn, 0, 0, x3, 9*FLEN/8, x4, x1, x2)

inst_4:
// rs1 == rs2 != rs3 and rs1 == rs2 != rd and rd != rs3, rs1==f0, rs2==f0, rs3==f7, rd==f8,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f0; op2:f0; op3:f7; dest:f8; op1val:0x5fab0580f98a7dbd; op2val:0x5fab0580f98a7dbd;
op3val:0x3f5c31d8d5a5ef3e; valaddr_reg:x3; val_offset:12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f8, f0, f0, f7, dyn, 0, 0, x3, 12*FLEN/8, x4, x1, x2)

inst_5:
// rs2 == rd != rs1 and rs2 == rd != rs3 and rs3 != rs1, rs1==f26, rs2==f23, rs3==f22, rd==f23,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f26; op2:f23; op3:f22; dest:f23; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3f6c31d8d5a5ef3e; valaddr_reg:x3; val_offset:15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f23, f26, f23, f22, dyn, 0, 0, x3, 15*FLEN/8, x4, x1, x2)

inst_6:
// rs2 == rs3 != rs1 and rs2 == rs3 != rd and rd != rs1, rs1==f13, rs2==f27, rs3==f27, rd==f6,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f13; op2:f27; op3:f27; dest:f6; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x5fa84129978f9c19; valaddr_reg:x3; val_offset:18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f6, f13, f27, f27, dyn, 0, 0, x3, 18*FLEN/8, x4, x1, x2)

inst_7:
// rs1 == rs3 != rs2 and rs1 == rs3 != rd and rd != rs2, rs1==f17, rs2==f24, rs3==f17, rd==f5,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f17; op2:f24; op3:f17; dest:f5; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x5fab0580f98a7dbd; valaddr_reg:x3; val_offset:21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f5, f17, f24, f17, dyn, 0, 0, x3, 21*FLEN/8, x4, x1, x2)

inst_8:
// rs3 == rd != rs1 and rs3 == rd != rs2 and rs2 != rs1, rs1==f19, rs2==f17, rs3==f4, rd==f4,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f19; op2:f17; op3:f4; dest:f4; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3f9c31d8d5a5ef3e; valaddr_reg:x3; val_offset:24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f4, f19, f17, f4, dyn, 0, 0, x3, 24*FLEN/8, x4, x1, x2)

inst_9:
// rd == rs2 == rs3 != rs1, rs1==f10, rs2==f21, rs3==f21, rd==f21,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f10; op2:f21; op3:f21; dest:f21; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x5fa84129978f9c19; valaddr_reg:x3; val_offset:27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f21, f10, f21, f21, dyn, 0, 0, x3, 27*FLEN/8, x4, x1, x2)

inst_10:
// rs1 == rd == rs3 != rs2, rs1==f11, rs2==f8, rs3==f11, rd==f11,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f11; op2:f8; op3:f11; dest:f11; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x5fab0580f98a7dbd; valaddr_reg:x3; val_offset:30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f11, f11, f8, f11, dyn, 0, 0, x3, 30*FLEN/8, x4, x1, x2)

inst_11:
// rs1 == rs2 == rs3 != rd, rs1==f25, rs2==f25, rs3==f25, rd==f0,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f25; op2:f25; op3:f25; dest:f0; op1val:0x5fab0580f98a7dbd; op2val:0x5fab0580f98a7dbd;
op3val:0x5fab0580f98a7dbd; valaddr_reg:x3; val_offset:33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f0, f25, f25, f25, dyn, 0, 0, x3, 33*FLEN/8, x4, x1, x2)

inst_12:
// rs1==f22, rs2==f6, rs3==f3, rd==f27,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3fd and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f22; op2:f6; op3:f3; dest:f27; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3fdc31d8d5a5ef3e; valaddr_reg:x3; val_offset:36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f27, f22, f6, f3, dyn, 0, 0, x3, 36*FLEN/8, x4, x1, x2)

inst_13:
// rs1==f3, rs2==f10, rs3==f2, rd==f7,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3fe and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f3; op2:f10; op3:f2; dest:f7; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3fec31d8d5a5ef3e; valaddr_reg:x3; val_offset:39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f7, f3, f10, f2, dyn, 0, 0, x3, 39*FLEN/8, x4, x1, x2)

inst_14:
// rs1==f2, rs2==f3, rs3==f5, rd==f26,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f2; op2:f3; op3:f5; dest:f26; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3ffc31d8d5a5ef3e; valaddr_reg:x3; val_offset:42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f26, f2, f3, f5, dyn, 0, 0, x3, 42*FLEN/8, x4, x1, x2)

inst_15:
// rs1==f16, rs2==f14, rs3==f13, rd==f29,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x400 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f16; op2:f14; op3:f13; dest:f29; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x400c31d8d5a5ef3e; valaddr_reg:x3; val_offset:45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f29, f16, f14, f13, dyn, 0, 0, x3, 45*FLEN/8, x4, x1, x2)

inst_16:
// rs1==f29, rs2==f19, rs3==f14, rd==f24,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x401 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f29; op2:f19; op3:f14; dest:f24; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x401c31d8d5a5ef3e; valaddr_reg:x3; val_offset:48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f24, f29, f19, f14, dyn, 0, 0, x3, 48*FLEN/8, x4, x1, x2)

inst_17:
// rs1==f5, rs2==f7, rs3==f8, rd==f31,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x402 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f5; op2:f7; op3:f8; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x402c31d8d5a5ef3e; valaddr_reg:x3; val_offset:51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f5, f7, f8, dyn, 0, 0, x3, 51*FLEN/8, x4, x1, x2)

inst_18:
// rs1==f18, rs2==f11, rs3==f24, rd==f25,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x403 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f18; op2:f11; op3:f24; dest:f25; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x403c31d8d5a5ef3e; valaddr_reg:x3; val_offset:54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f25, f18, f11, f24, dyn, 0, 0, x3, 54*FLEN/8, x4, x1, x2)

inst_19:
// rs1==f7, rs2==f31, rs3==f29, rd==f2,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x404 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f7; op2:f31; op3:f29; dest:f2; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x404c31d8d5a5ef3e; valaddr_reg:x3; val_offset:57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f2, f7, f31, f29, dyn, 0, 0, x3, 57*FLEN/8, x4, x1, x2)

inst_20:
// rs1==f8, rs2==f28, rs3==f31, rd==f3,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x405 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f8; op2:f28; op3:f31; dest:f3; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x405c31d8d5a5ef3e; valaddr_reg:x3; val_offset:60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f3, f8, f28, f31, dyn, 0, 0, x3, 60*FLEN/8, x4, x1, x2)

inst_21:
// rs1==f31, rs2==f29, rs3==f19, rd==f13,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x406 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f31; op2:f29; op3:f19; dest:f13; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x406c31d8d5a5ef3e; valaddr_reg:x3; val_offset:63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f13, f31, f29, f19, dyn, 0, 0, x3, 63*FLEN/8, x4, x1, x2)

inst_22:
// rs1==f12, rs2==f16, rs3==f1, rd==f9,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x407 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f12; op2:f16; op3:f1; dest:f9; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x407c31d8d5a5ef3e; valaddr_reg:x3; val_offset:66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f9, f12, f16, f1, dyn, 0, 0, x3, 66*FLEN/8, x4, x1, x2)

inst_23:
// rs1==f23, rs2==f13, rs3==f9, rd==f12,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x408 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f23; op2:f13; op3:f9; dest:f12; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x408c31d8d5a5ef3e; valaddr_reg:x3; val_offset:69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f12, f23, f13, f9, dyn, 0, 0, x3, 69*FLEN/8, x4, x1, x2)

inst_24:
// rs1==f21, rs2==f18, rs3==f12, rd==f15,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x409 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f21; op2:f18; op3:f12; dest:f15; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x409c31d8d5a5ef3e; valaddr_reg:x3; val_offset:72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f15, f21, f18, f12, dyn, 0, 0, x3, 72*FLEN/8, x4, x1, x2)

inst_25:
// rs1==f28, rs2==f20, rs3==f16, rd==f14,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x40a and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f28; op2:f20; op3:f16; dest:f14; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x40ac31d8d5a5ef3e; valaddr_reg:x3; val_offset:75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f14, f28, f20, f16, dyn, 0, 0, x3, 75*FLEN/8, x4, x1, x2)

inst_26:
// rs1==f14, rs2==f4, rs3==f0, rd==f18,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x40b and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f14; op2:f4; op3:f0; dest:f18; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x40bc31d8d5a5ef3e; valaddr_reg:x3; val_offset:78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f18, f14, f4, f0, dyn, 0, 0, x3, 78*FLEN/8, x4, x1, x2)

inst_27:
// rs1==f24, rs2==f12, rs3==f6, rd==f17,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x40c and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f24; op2:f12; op3:f6; dest:f17; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x40cc31d8d5a5ef3e; valaddr_reg:x3; val_offset:81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f17, f24, f12, f6, dyn, 0, 0, x3, 81*FLEN/8, x4, x1, x2)

inst_28:
// rs1==f27, rs2==f2, rs3==f20, rd==f22,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x40d and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f27; op2:f2; op3:f20; dest:f22; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x40dc31d8d5a5ef3e; valaddr_reg:x3; val_offset:84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f22, f27, f2, f20, dyn, 0, 0, x3, 84*FLEN/8, x4, x1, x2)

inst_29:
// rs1==f6, rs2==f15, rs3==f28, rd==f10,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x40e and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f6; op2:f15; op3:f28; dest:f10; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x40ec31d8d5a5ef3e; valaddr_reg:x3; val_offset:87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f10, f6, f15, f28, dyn, 0, 0, x3, 87*FLEN/8, x4, x1, x2)

inst_30:
// rs1==f9, rs2==f5, rs3==f26, rd==f16,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x40f and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f9; op2:f5; op3:f26; dest:f16; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x40fc31d8d5a5ef3e; valaddr_reg:x3; val_offset:90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f16, f9, f5, f26, dyn, 0, 0, x3, 90*FLEN/8, x4, x1, x2)

inst_31:
// rs1==f4, rs2==f9, rs3==f23, rd==f28,fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x410 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f4; op2:f9; op3:f23; dest:f28; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x410c31d8d5a5ef3e; valaddr_reg:x3; val_offset:93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f28, f4, f9, f23, dyn, 0, 0, x3, 93*FLEN/8, x4, x1, x2)

inst_32:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x411 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x411c31d8d5a5ef3e; valaddr_reg:x3; val_offset:96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 96*FLEN/8, x4, x1, x2)

inst_33:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x412 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x412c31d8d5a5ef3e; valaddr_reg:x3; val_offset:99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 99*FLEN/8, x4, x1, x2)

inst_34:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x413 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x413c31d8d5a5ef3e; valaddr_reg:x3; val_offset:102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102*FLEN/8, x4, x1, x2)

inst_35:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x414 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x414c31d8d5a5ef3e; valaddr_reg:x3; val_offset:105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 105*FLEN/8, x4, x1, x2)

inst_36:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x415 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x415c31d8d5a5ef3e; valaddr_reg:x3; val_offset:108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 108*FLEN/8, x4, x1, x2)

inst_37:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x416 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x416c31d8d5a5ef3e; valaddr_reg:x3; val_offset:111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 111*FLEN/8, x4, x1, x2)

inst_38:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x417 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x417c31d8d5a5ef3e; valaddr_reg:x3; val_offset:114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 114*FLEN/8, x4, x1, x2)

inst_39:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x418 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x418c31d8d5a5ef3e; valaddr_reg:x3; val_offset:117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 117*FLEN/8, x4, x1, x2)

inst_40:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x419 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x419c31d8d5a5ef3e; valaddr_reg:x3; val_offset:120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 120*FLEN/8, x4, x1, x2)

inst_41:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x41a and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x41ac31d8d5a5ef3e; valaddr_reg:x3; val_offset:123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 123*FLEN/8, x4, x1, x2)

inst_42:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x41b and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x41bc31d8d5a5ef3e; valaddr_reg:x3; val_offset:126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 126*FLEN/8, x4, x1, x2)

inst_43:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x41c and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x41cc31d8d5a5ef3e; valaddr_reg:x3; val_offset:129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 129*FLEN/8, x4, x1, x2)

inst_44:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x41d and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x41dc31d8d5a5ef3e; valaddr_reg:x3; val_offset:132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132*FLEN/8, x4, x1, x2)

inst_45:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x41e and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x41ec31d8d5a5ef3e; valaddr_reg:x3; val_offset:135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 135*FLEN/8, x4, x1, x2)

inst_46:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x41f and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x41fc31d8d5a5ef3e; valaddr_reg:x3; val_offset:138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 138*FLEN/8, x4, x1, x2)

inst_47:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x420 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x420c31d8d5a5ef3e; valaddr_reg:x3; val_offset:141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141*FLEN/8, x4, x1, x2)

inst_48:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x421 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x421c31d8d5a5ef3e; valaddr_reg:x3; val_offset:144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 144*FLEN/8, x4, x1, x2)

inst_49:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x422 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x422c31d8d5a5ef3e; valaddr_reg:x3; val_offset:147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 147*FLEN/8, x4, x1, x2)

inst_50:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x423 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x423c31d8d5a5ef3e; valaddr_reg:x3; val_offset:150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 150*FLEN/8, x4, x1, x2)

inst_51:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x424 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x424c31d8d5a5ef3e; valaddr_reg:x3; val_offset:153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 153*FLEN/8, x4, x1, x2)

inst_52:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x425 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x425c31d8d5a5ef3e; valaddr_reg:x3; val_offset:156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156*FLEN/8, x4, x1, x2)

inst_53:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x426 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x426c31d8d5a5ef3e; valaddr_reg:x3; val_offset:159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159*FLEN/8, x4, x1, x2)

inst_54:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x427 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x427c31d8d5a5ef3e; valaddr_reg:x3; val_offset:162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 162*FLEN/8, x4, x1, x2)

inst_55:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x428 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x428c31d8d5a5ef3e; valaddr_reg:x3; val_offset:165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165*FLEN/8, x4, x1, x2)

inst_56:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x429 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x429c31d8d5a5ef3e; valaddr_reg:x3; val_offset:168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168*FLEN/8, x4, x1, x2)

inst_57:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x42a and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x42ac31d8d5a5ef3e; valaddr_reg:x3; val_offset:171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 171*FLEN/8, x4, x1, x2)

inst_58:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x42b and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x42bc31d8d5a5ef3e; valaddr_reg:x3; val_offset:174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 174*FLEN/8, x4, x1, x2)

inst_59:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x42c and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x42cc31d8d5a5ef3e; valaddr_reg:x3; val_offset:177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 177*FLEN/8, x4, x1, x2)

inst_60:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x42d and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x42dc31d8d5a5ef3e; valaddr_reg:x3; val_offset:180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 180*FLEN/8, x4, x1, x2)

inst_61:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x42e and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x42ec31d8d5a5ef3e; valaddr_reg:x3; val_offset:183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 183*FLEN/8, x4, x1, x2)

inst_62:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x42f and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x42fc31d8d5a5ef3e; valaddr_reg:x3; val_offset:186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 186*FLEN/8, x4, x1, x2)

inst_63:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x430 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x430c31d8d5a5ef3e; valaddr_reg:x3; val_offset:189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 189*FLEN/8, x4, x1, x2)

inst_64:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x431 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x431c31d8d5a5ef3e; valaddr_reg:x3; val_offset:192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 192*FLEN/8, x4, x1, x2)

inst_65:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x432 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x432c31d8d5a5ef3e; valaddr_reg:x3; val_offset:195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195*FLEN/8, x4, x1, x2)

inst_66:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x433 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x433c31d8d5a5ef3e; valaddr_reg:x3; val_offset:198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198*FLEN/8, x4, x1, x2)

inst_67:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x434 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x434c31d8d5a5ef3e; valaddr_reg:x3; val_offset:201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 201*FLEN/8, x4, x1, x2)

inst_68:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x435 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x435c31d8d5a5ef3e; valaddr_reg:x3; val_offset:204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 204*FLEN/8, x4, x1, x2)

inst_69:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x436 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x436c31d8d5a5ef3e; valaddr_reg:x3; val_offset:207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 207*FLEN/8, x4, x1, x2)

inst_70:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x437 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x437c31d8d5a5ef3e; valaddr_reg:x3; val_offset:210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 210*FLEN/8, x4, x1, x2)

inst_71:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x438 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x438c31d8d5a5ef3e; valaddr_reg:x3; val_offset:213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 213*FLEN/8, x4, x1, x2)

inst_72:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x439 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x439c31d8d5a5ef3e; valaddr_reg:x3; val_offset:216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216*FLEN/8, x4, x1, x2)

inst_73:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x43a and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x43ac31d8d5a5ef3e; valaddr_reg:x3; val_offset:219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 219*FLEN/8, x4, x1, x2)

inst_74:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x43b and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x43bc31d8d5a5ef3e; valaddr_reg:x3; val_offset:222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 222*FLEN/8, x4, x1, x2)

inst_75:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x43c and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x43cc31d8d5a5ef3e; valaddr_reg:x3; val_offset:225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 225*FLEN/8, x4, x1, x2)

inst_76:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x43d and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x43dc31d8d5a5ef3e; valaddr_reg:x3; val_offset:228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 228*FLEN/8, x4, x1, x2)

inst_77:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x43e and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x43ec31d8d5a5ef3e; valaddr_reg:x3; val_offset:231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 231*FLEN/8, x4, x1, x2)

inst_78:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x43f and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x43fc31d8d5a5ef3e; valaddr_reg:x3; val_offset:234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234*FLEN/8, x4, x1, x2)

inst_79:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x440 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x440c31d8d5a5ef3e; valaddr_reg:x3; val_offset:237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237*FLEN/8, x4, x1, x2)

inst_80:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x441 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x441c31d8d5a5ef3e; valaddr_reg:x3; val_offset:240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 240*FLEN/8, x4, x1, x2)

inst_81:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x442 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x442c31d8d5a5ef3e; valaddr_reg:x3; val_offset:243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 243*FLEN/8, x4, x1, x2)

inst_82:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x443 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x443c31d8d5a5ef3e; valaddr_reg:x3; val_offset:246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 246*FLEN/8, x4, x1, x2)

inst_83:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x444 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x444c31d8d5a5ef3e; valaddr_reg:x3; val_offset:249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 249*FLEN/8, x4, x1, x2)

inst_84:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x445 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x445c31d8d5a5ef3e; valaddr_reg:x3; val_offset:252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 252*FLEN/8, x4, x1, x2)

inst_85:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x446 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x446c31d8d5a5ef3e; valaddr_reg:x3; val_offset:255*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 255*FLEN/8, x4, x1, x2)

inst_86:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x447 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x447c31d8d5a5ef3e; valaddr_reg:x3; val_offset:258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 258*FLEN/8, x4, x1, x2)

inst_87:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x448 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x448c31d8d5a5ef3e; valaddr_reg:x3; val_offset:261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 261*FLEN/8, x4, x1, x2)

inst_88:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x449 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x449c31d8d5a5ef3e; valaddr_reg:x3; val_offset:264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264*FLEN/8, x4, x1, x2)

inst_89:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x44a and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x44ac31d8d5a5ef3e; valaddr_reg:x3; val_offset:267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 267*FLEN/8, x4, x1, x2)

inst_90:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x44b and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x44bc31d8d5a5ef3e; valaddr_reg:x3; val_offset:270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 270*FLEN/8, x4, x1, x2)

inst_91:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x44c and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x44cc31d8d5a5ef3e; valaddr_reg:x3; val_offset:273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 273*FLEN/8, x4, x1, x2)

inst_92:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x44d and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x44dc31d8d5a5ef3e; valaddr_reg:x3; val_offset:276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 276*FLEN/8, x4, x1, x2)

inst_93:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x44e and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x44ec31d8d5a5ef3e; valaddr_reg:x3; val_offset:279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 279*FLEN/8, x4, x1, x2)

inst_94:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x44f and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x44fc31d8d5a5ef3e; valaddr_reg:x3; val_offset:282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 282*FLEN/8, x4, x1, x2)

inst_95:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x450 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x450c31d8d5a5ef3e; valaddr_reg:x3; val_offset:285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285*FLEN/8, x4, x1, x2)

inst_96:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x451 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x451c31d8d5a5ef3e; valaddr_reg:x3; val_offset:288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 288*FLEN/8, x4, x1, x2)

inst_97:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x452 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x452c31d8d5a5ef3e; valaddr_reg:x3; val_offset:291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 291*FLEN/8, x4, x1, x2)

inst_98:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x453 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x453c31d8d5a5ef3e; valaddr_reg:x3; val_offset:294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 294*FLEN/8, x4, x1, x2)

inst_99:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x454 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x454c31d8d5a5ef3e; valaddr_reg:x3; val_offset:297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 297*FLEN/8, x4, x1, x2)

inst_100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x455 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x455c31d8d5a5ef3e; valaddr_reg:x3; val_offset:300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 300*FLEN/8, x4, x1, x2)

inst_101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x456 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x456c31d8d5a5ef3e; valaddr_reg:x3; val_offset:303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 303*FLEN/8, x4, x1, x2)

inst_102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x457 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x457c31d8d5a5ef3e; valaddr_reg:x3; val_offset:306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 306*FLEN/8, x4, x1, x2)

inst_103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x458 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x458c31d8d5a5ef3e; valaddr_reg:x3; val_offset:309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 309*FLEN/8, x4, x1, x2)

inst_104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x459 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x459c31d8d5a5ef3e; valaddr_reg:x3; val_offset:312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 312*FLEN/8, x4, x1, x2)

inst_105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x45a and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x45ac31d8d5a5ef3e; valaddr_reg:x3; val_offset:315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 315*FLEN/8, x4, x1, x2)

inst_106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x45b and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x45bc31d8d5a5ef3e; valaddr_reg:x3; val_offset:318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 318*FLEN/8, x4, x1, x2)

inst_107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x45c and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x45cc31d8d5a5ef3e; valaddr_reg:x3; val_offset:321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 321*FLEN/8, x4, x1, x2)

inst_108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x45d and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x45dc31d8d5a5ef3e; valaddr_reg:x3; val_offset:324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 324*FLEN/8, x4, x1, x2)

inst_109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x45e and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x45ec31d8d5a5ef3e; valaddr_reg:x3; val_offset:327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 327*FLEN/8, x4, x1, x2)

inst_110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x45f and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x45fc31d8d5a5ef3e; valaddr_reg:x3; val_offset:330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 330*FLEN/8, x4, x1, x2)

inst_111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x460 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x460c31d8d5a5ef3e; valaddr_reg:x3; val_offset:333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 333*FLEN/8, x4, x1, x2)

inst_112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x461 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x461c31d8d5a5ef3e; valaddr_reg:x3; val_offset:336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 336*FLEN/8, x4, x1, x2)

inst_113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x462 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x462c31d8d5a5ef3e; valaddr_reg:x3; val_offset:339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 339*FLEN/8, x4, x1, x2)

inst_114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x463 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x463c31d8d5a5ef3e; valaddr_reg:x3; val_offset:342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 342*FLEN/8, x4, x1, x2)

inst_115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x464 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x464c31d8d5a5ef3e; valaddr_reg:x3; val_offset:345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 345*FLEN/8, x4, x1, x2)

inst_116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x465 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x465c31d8d5a5ef3e; valaddr_reg:x3; val_offset:348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 348*FLEN/8, x4, x1, x2)

inst_117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x466 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x466c31d8d5a5ef3e; valaddr_reg:x3; val_offset:351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 351*FLEN/8, x4, x1, x2)

inst_118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x467 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x467c31d8d5a5ef3e; valaddr_reg:x3; val_offset:354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 354*FLEN/8, x4, x1, x2)

inst_119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x468 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x468c31d8d5a5ef3e; valaddr_reg:x3; val_offset:357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 357*FLEN/8, x4, x1, x2)

inst_120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x469 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x469c31d8d5a5ef3e; valaddr_reg:x3; val_offset:360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 360*FLEN/8, x4, x1, x2)

inst_121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x46a and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x46ac31d8d5a5ef3e; valaddr_reg:x3; val_offset:363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 363*FLEN/8, x4, x1, x2)

inst_122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x46b and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x46bc31d8d5a5ef3e; valaddr_reg:x3; val_offset:366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 366*FLEN/8, x4, x1, x2)

inst_123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x46c and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x46cc31d8d5a5ef3e; valaddr_reg:x3; val_offset:369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 369*FLEN/8, x4, x1, x2)

inst_124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x46d and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x46dc31d8d5a5ef3e; valaddr_reg:x3; val_offset:372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 372*FLEN/8, x4, x1, x2)

inst_125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x46e and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x46ec31d8d5a5ef3e; valaddr_reg:x3; val_offset:375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 375*FLEN/8, x4, x1, x2)

inst_126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x46f and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x46fc31d8d5a5ef3e; valaddr_reg:x3; val_offset:378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 378*FLEN/8, x4, x1, x2)

inst_127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x470 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x470c31d8d5a5ef3e; valaddr_reg:x3; val_offset:381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 381*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x471 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x471c31d8d5a5ef3e; valaddr_reg:x3; val_offset:384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 384*FLEN/8, x4, x1, x2)

inst_129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x472 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x472c31d8d5a5ef3e; valaddr_reg:x3; val_offset:387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 387*FLEN/8, x4, x1, x2)

inst_130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x473 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x473c31d8d5a5ef3e; valaddr_reg:x3; val_offset:390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 390*FLEN/8, x4, x1, x2)

inst_131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x474 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x474c31d8d5a5ef3e; valaddr_reg:x3; val_offset:393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 393*FLEN/8, x4, x1, x2)

inst_132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x475 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x475c31d8d5a5ef3e; valaddr_reg:x3; val_offset:396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 396*FLEN/8, x4, x1, x2)

inst_133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x476 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x476c31d8d5a5ef3e; valaddr_reg:x3; val_offset:399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 399*FLEN/8, x4, x1, x2)

inst_134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x477 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x477c31d8d5a5ef3e; valaddr_reg:x3; val_offset:402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 402*FLEN/8, x4, x1, x2)

inst_135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x478 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x478c31d8d5a5ef3e; valaddr_reg:x3; val_offset:405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 405*FLEN/8, x4, x1, x2)

inst_136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x479 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x479c31d8d5a5ef3e; valaddr_reg:x3; val_offset:408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 408*FLEN/8, x4, x1, x2)

inst_137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x47a and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x47ac31d8d5a5ef3e; valaddr_reg:x3; val_offset:411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 411*FLEN/8, x4, x1, x2)

inst_138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x47b and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x47bc31d8d5a5ef3e; valaddr_reg:x3; val_offset:414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 414*FLEN/8, x4, x1, x2)

inst_139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x47c and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x47cc31d8d5a5ef3e; valaddr_reg:x3; val_offset:417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 417*FLEN/8, x4, x1, x2)

inst_140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x47d and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x47dc31d8d5a5ef3e; valaddr_reg:x3; val_offset:420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 420*FLEN/8, x4, x1, x2)

inst_141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x47e and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x47ec31d8d5a5ef3e; valaddr_reg:x3; val_offset:423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 423*FLEN/8, x4, x1, x2)

inst_142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x47f and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x47fc31d8d5a5ef3e; valaddr_reg:x3; val_offset:426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 426*FLEN/8, x4, x1, x2)

inst_143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x480 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x480c31d8d5a5ef3e; valaddr_reg:x3; val_offset:429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 429*FLEN/8, x4, x1, x2)

inst_144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x481 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x481c31d8d5a5ef3e; valaddr_reg:x3; val_offset:432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 432*FLEN/8, x4, x1, x2)

inst_145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x482 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x482c31d8d5a5ef3e; valaddr_reg:x3; val_offset:435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 435*FLEN/8, x4, x1, x2)

inst_146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x483 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x483c31d8d5a5ef3e; valaddr_reg:x3; val_offset:438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 438*FLEN/8, x4, x1, x2)

inst_147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x484 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x484c31d8d5a5ef3e; valaddr_reg:x3; val_offset:441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 441*FLEN/8, x4, x1, x2)

inst_148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x485 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x485c31d8d5a5ef3e; valaddr_reg:x3; val_offset:444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 444*FLEN/8, x4, x1, x2)

inst_149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x486 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x486c31d8d5a5ef3e; valaddr_reg:x3; val_offset:447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 447*FLEN/8, x4, x1, x2)

inst_150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x487 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x487c31d8d5a5ef3e; valaddr_reg:x3; val_offset:450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 450*FLEN/8, x4, x1, x2)

inst_151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x488 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x488c31d8d5a5ef3e; valaddr_reg:x3; val_offset:453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 453*FLEN/8, x4, x1, x2)

inst_152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x489 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x489c31d8d5a5ef3e; valaddr_reg:x3; val_offset:456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 456*FLEN/8, x4, x1, x2)

inst_153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x48a and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x48ac31d8d5a5ef3e; valaddr_reg:x3; val_offset:459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 459*FLEN/8, x4, x1, x2)

inst_154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x48b and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x48bc31d8d5a5ef3e; valaddr_reg:x3; val_offset:462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 462*FLEN/8, x4, x1, x2)

inst_155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x48c and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x48cc31d8d5a5ef3e; valaddr_reg:x3; val_offset:465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 465*FLEN/8, x4, x1, x2)

inst_156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x48d and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x48dc31d8d5a5ef3e; valaddr_reg:x3; val_offset:468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 468*FLEN/8, x4, x1, x2)

inst_157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x48e and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x48ec31d8d5a5ef3e; valaddr_reg:x3; val_offset:471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 471*FLEN/8, x4, x1, x2)

inst_158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x48f and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x48fc31d8d5a5ef3e; valaddr_reg:x3; val_offset:474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 474*FLEN/8, x4, x1, x2)

inst_159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x69b and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x69bc31d8d5a5ef3e; valaddr_reg:x3; val_offset:477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 477*FLEN/8, x4, x1, x2)

inst_160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x10b and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x10bc31d8d5a5ef3e; valaddr_reg:x3; val_offset:480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 480*FLEN/8, x4, x1, x2)

inst_161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f3 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3f3c31d8d5a5ef3e; valaddr_reg:x3; val_offset:483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 483*FLEN/8, x4, x1, x2)

inst_162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f4 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3f4c31d8d5a5ef3e; valaddr_reg:x3; val_offset:486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 486*FLEN/8, x4, x1, x2)

inst_163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f5 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3f5c31d8d5a5ef3e; valaddr_reg:x3; val_offset:489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 489*FLEN/8, x4, x1, x2)

inst_164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f6 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3f6c31d8d5a5ef3e; valaddr_reg:x3; val_offset:492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 492*FLEN/8, x4, x1, x2)

inst_165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f7 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3f7c31d8d5a5ef3e; valaddr_reg:x3; val_offset:495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 495*FLEN/8, x4, x1, x2)

inst_166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f8 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3f8c31d8d5a5ef3e; valaddr_reg:x3; val_offset:498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 498*FLEN/8, x4, x1, x2)

inst_167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3f9 and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3f9c31d8d5a5ef3e; valaddr_reg:x3; val_offset:501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 501*FLEN/8, x4, x1, x2)

inst_168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3fa and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3fac31d8d5a5ef3e; valaddr_reg:x3; val_offset:504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 504*FLEN/8, x4, x1, x2)

inst_169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3fb and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3fbc31d8d5a5ef3e; valaddr_reg:x3; val_offset:507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 507*FLEN/8, x4, x1, x2)

inst_170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0580f98a7dbd and fs2 == 0 and fe2 == 0x5fa and fm2 == 0x84129978f9c19 and fs3 == 0 and fe3 == 0x3fc and fm3 == 0xc31d8d5a5ef3e and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0580f98a7dbd; op2val:0x5fa84129978f9c19;
op3val:0x3fcc31d8d5a5ef3e; valaddr_reg:x3; val_offset:510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 510*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x10bc31d8d5a5ef3e205893607595568958,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3f2c31d8d5a5ef3e552068130731847486,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x3f3c31d8d5a5ef3e556571730359217982,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x3f5c31d8d5a5ef3e565578929613958974,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3f6c31d8d5a5ef3e570082529241329470,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3f9c31d8d5a5ef3e583593328123440958,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3fdc31d8d5a5ef3e601607726632922942,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3fec31d8d5a5ef3e606111326260293438,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3ffc31d8d5a5ef3e610614925887663934,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x400c31d8d5a5ef3e615118525515034430,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x401c31d8d5a5ef3e619622125142404926,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x402c31d8d5a5ef3e624125724769775422,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x403c31d8d5a5ef3e628629324397145918,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x404c31d8d5a5ef3e633132924024516414,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x405c31d8d5a5ef3e637636523651886910,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x406c31d8d5a5ef3e642140123279257406,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x407c31d8d5a5ef3e646643722906627902,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x408c31d8d5a5ef3e651147322533998398,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x409c31d8d5a5ef3e655650922161368894,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x40ac31d8d5a5ef3e660154521788739390,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x40bc31d8d5a5ef3e664658121416109886,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x40cc31d8d5a5ef3e669161721043480382,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x40dc31d8d5a5ef3e673665320670850878,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x40ec31d8d5a5ef3e678168920298221374,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x40fc31d8d5a5ef3e682672519925591870,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x410c31d8d5a5ef3e687176119552962366,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x411c31d8d5a5ef3e691679719180332862,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x412c31d8d5a5ef3e696183318807703358,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x413c31d8d5a5ef3e700686918435073854,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x414c31d8d5a5ef3e705190518062444350,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x415c31d8d5a5ef3e709694117689814846,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x416c31d8d5a5ef3e714197717317185342,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x417c31d8d5a5ef3e718701316944555838,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x418c31d8d5a5ef3e723204916571926334,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x419c31d8d5a5ef3e727708516199296830,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x41ac31d8d5a5ef3e732212115826667326,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x41bc31d8d5a5ef3e736715715454037822,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x41cc31d8d5a5ef3e741219315081408318,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x41dc31d8d5a5ef3e745722914708778814,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x41ec31d8d5a5ef3e750226514336149310,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x41fc31d8d5a5ef3e754730113963519806,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x420c31d8d5a5ef3e759233713590890302,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x421c31d8d5a5ef3e763737313218260798,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x422c31d8d5a5ef3e768240912845631294,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x423c31d8d5a5ef3e772744512473001790,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x424c31d8d5a5ef3e777248112100372286,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x425c31d8d5a5ef3e781751711727742782,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x426c31d8d5a5ef3e786255311355113278,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x427c31d8d5a5ef3e790758910982483774,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x428c31d8d5a5ef3e795262510609854270,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x429c31d8d5a5ef3e799766110237224766,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x42ac31d8d5a5ef3e804269709864595262,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x42bc31d8d5a5ef3e808773309491965758,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x42cc31d8d5a5ef3e813276909119336254,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x42dc31d8d5a5ef3e817780508746706750,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x42ec31d8d5a5ef3e822284108374077246,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x42fc31d8d5a5ef3e826787708001447742,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x430c31d8d5a5ef3e831291307628818238,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x431c31d8d5a5ef3e835794907256188734,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x432c31d8d5a5ef3e840298506883559230,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x433c31d8d5a5ef3e844802106510929726,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x434c31d8d5a5ef3e849305706138300222,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x435c31d8d5a5ef3e853809305765670718,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x436c31d8d5a5ef3e858312905393041214,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x437c31d8d5a5ef3e862816505020411710,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x438c31d8d5a5ef3e867320104647782206,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x439c31d8d5a5ef3e871823704275152702,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x43ac31d8d5a5ef3e876327303902523198,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x43bc31d8d5a5ef3e880830903529893694,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x43cc31d8d5a5ef3e885334503157264190,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x43dc31d8d5a5ef3e889838102784634686,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x43ec31d8d5a5ef3e894341702412005182,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x43fc31d8d5a5ef3e898845302039375678,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x440c31d8d5a5ef3e903348901666746174,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x441c31d8d5a5ef3e907852501294116670,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x442c31d8d5a5ef3e912356100921487166,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x443c31d8d5a5ef3e916859700548857662,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x444c31d8d5a5ef3e921363300176228158,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x445c31d8d5a5ef3e925866899803598654,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x446c31d8d5a5ef3e930370499430969150,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x447c31d8d5a5ef3e934874099058339646,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x448c31d8d5a5ef3e939377698685710142,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x449c31d8d5a5ef3e943881298313080638,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x44ac31d8d5a5ef3e948384897940451134,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x44bc31d8d5a5ef3e952888497567821630,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x44cc31d8d5a5ef3e957392097195192126,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x44dc31d8d5a5ef3e961895696822562622,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x44ec31d8d5a5ef3e966399296449933118,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x44fc31d8d5a5ef3e970902896077303614,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x450c31d8d5a5ef3e975406495704674110,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x451c31d8d5a5ef3e979910095332044606,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x452c31d8d5a5ef3e984413694959415102,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x453c31d8d5a5ef3e988917294586785598,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x454c31d8d5a5ef3e993420894214156094,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x455c31d8d5a5ef3e997924493841526590,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x456c31d8d5a5ef3e002428093468897086,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x457c31d8d5a5ef3e006931693096267582,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x458c31d8d5a5ef3e011435292723638078,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x459c31d8d5a5ef3e015938892351008574,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x45ac31d8d5a5ef3e020442491978379070,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x45bc31d8d5a5ef3e024946091605749566,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x45cc31d8d5a5ef3e029449691233120062,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x45dc31d8d5a5ef3e033953290860490558,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x45ec31d8d5a5ef3e038456890487861054,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x45fc31d8d5a5ef3e042960490115231550,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x460c31d8d5a5ef3e047464089742602046,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x461c31d8d5a5ef3e051967689369972542,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x462c31d8d5a5ef3e056471288997343038,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x463c31d8d5a5ef3e060974888624713534,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x464c31d8d5a5ef3e065478488252084030,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x465c31d8d5a5ef3e069982087879454526,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x466c31d8d5a5ef3e074485687506825022,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x467c31d8d5a5ef3e078989287134195518,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x468c31d8d5a5ef3e083492886761566014,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x469c31d8d5a5ef3e087996486388936510,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x46ac31d8d5a5ef3e092500086016307006,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x46bc31d8d5a5ef3e097003685643677502,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x46cc31d8d5a5ef3e101507285271047998,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x46dc31d8d5a5ef3e106010884898418494,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x46ec31d8d5a5ef3e110514484525788990,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x46fc31d8d5a5ef3e115018084153159486,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x470c31d8d5a5ef3e119521683780529982,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x471c31d8d5a5ef3e124025283407900478,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x472c31d8d5a5ef3e128528883035270974,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x473c31d8d5a5ef3e133032482662641470,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x474c31d8d5a5ef3e137536082290011966,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x475c31d8d5a5ef3e142039681917382462,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x476c31d8d5a5ef3e146543281544752958,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x477c31d8d5a5ef3e151046881172123454,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x478c31d8d5a5ef3e155550480799493950,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x479c31d8d5a5ef3e160054080426864446,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x47ac31d8d5a5ef3e164557680054234942,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x47bc31d8d5a5ef3e169061279681605438,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x47cc31d8d5a5ef3e173564879308975934,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x47dc31d8d5a5ef3e178068478936346430,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x47ec31d8d5a5ef3e182572078563716926,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x47fc31d8d5a5ef3e187075678191087422,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x480c31d8d5a5ef3e191579277818457918,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x481c31d8d5a5ef3e196082877445828414,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x482c31d8d5a5ef3e200586477073198910,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x483c31d8d5a5ef3e205090076700569406,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x484c31d8d5a5ef3e209593676327939902,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x485c31d8d5a5ef3e214097275955310398,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x486c31d8d5a5ef3e218600875582680894,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x487c31d8d5a5ef3e223104475210051390,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x488c31d8d5a5ef3e227608074837421886,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x489c31d8d5a5ef3e232111674464792382,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x48ac31d8d5a5ef3e236615274092162878,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x48bc31d8d5a5ef3e241118873719533374,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x48cc31d8d5a5ef3e245622473346903870,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x48dc31d8d5a5ef3e250126072974274366,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x48ec31d8d5a5ef3e254629672601644862,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x48fc31d8d5a5ef3e259133272229015358,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x69bc31d8d5a5ef3e619019476971155262,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x10bc31d8d5a5ef3e205893607595568958,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3f3c31d8d5a5ef3e556571730359217982,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3f4c31d8d5a5ef3e561075329986588478,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3f5c31d8d5a5ef3e565578929613958974,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3f6c31d8d5a5ef3e570082529241329470,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3f7c31d8d5a5ef3e574586128868699966,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3f8c31d8d5a5ef3e579089728496070462,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3f9c31d8d5a5ef3e583593328123440958,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3fac31d8d5a5ef3e588096927750811454,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3fbc31d8d5a5ef3e592600527378181950,64,FLEN)
NAN_BOXED(0x5fab0580f98a7dbd893609706121231805,64,FLEN)
NAN_BOXED(0x5fa84129978f9c19892830876582779929,64,FLEN)
NAN_BOXED(0x3fcc31d8d5a5ef3e597104127005552446,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 86*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
