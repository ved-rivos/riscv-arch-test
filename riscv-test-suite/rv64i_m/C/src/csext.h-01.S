
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.1
// timestamp : Tue Jun 20 09:44:07 2023 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/abd/abd-data/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/abd/abd-data/riscv-ctg/sample_cgfs/rv64i_zcb.cgf \
 \
//                  -- xlen 64  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the c.sext.h instruction of the RISC-V RV64_Zca_Zcb_Zbb extension for the csext.h covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zca_Zcb_Zbb")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*64.*I.*Zca.*Zcb.*.Zbb.*);def TEST_CASE_1=True;",csext.h)

RVTEST_SIGBASE(x1,signature_x1_1)

inst_0:
// rs1==x15, rs1_val == 0, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x0;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x0, x1, 0*XLEN/8, x2)

inst_1:
// rs1==x12, rs1_val == 0x800, rs1_val == 2048
// opcode: c.sext.h ; op1=dest:x12 ; op1val:0x800;
TEST_CRD_OP(c.sext.h, x12, 0x0000000000000000, 0x800, x1, 1*XLEN/8, x2)

inst_2:
// rs1==x11, rs1_val == 0xFF80, 
// opcode: c.sext.h ; op1=dest:x11 ; op1val:0xff80;
TEST_CRD_OP(c.sext.h, x11, 0x0000000000000000, 0xff80, x1, 2*XLEN/8, x2)

inst_3:
// rs1==x8, rs1_val == 1, 
// opcode: c.sext.h ; op1=dest:x8 ; op1val:0x1;
TEST_CRD_OP(c.sext.h, x8, 0x0000000000000000, 0x1, x1, 3*XLEN/8, x2)

inst_4:
// rs1==x9, rs1_val == 18446744073709551614, 
// opcode: c.sext.h ; op1=dest:x9 ; op1val:0xfffffffffffffffe;
TEST_CRD_OP(c.sext.h, x9, 0x0000000000000000, 0xfffffffffffffffe, x1, 4*XLEN/8, x2)

inst_5:
// rs1==x10, rs1_val == 18446744073709551613, 
// opcode: c.sext.h ; op1=dest:x10 ; op1val:0xfffffffffffffffd;
TEST_CRD_OP(c.sext.h, x10, 0x0000000000000000, 0xfffffffffffffffd, x1, 5*XLEN/8, x2)

inst_6:
// rs1==x14, rs1_val == 18446744073709551611, 
// opcode: c.sext.h ; op1=dest:x14 ; op1val:0xfffffffffffffffb;
TEST_CRD_OP(c.sext.h, x14, 0x0000000000000000, 0xfffffffffffffffb, x1, 6*XLEN/8, x2)

inst_7:
// rs1==x13, rs1_val == 18446744073709551607, 
// opcode: c.sext.h ; op1=dest:x13 ; op1val:0xfffffffffffffff7;
TEST_CRD_OP(c.sext.h, x13, 0x0000000000000000, 0xfffffffffffffff7, x1, 7*XLEN/8, x2)

inst_8:
// rs1_val == 18446744073709551599, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffffffffef;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffffffffef, x1, 8*XLEN/8, x2)

inst_9:
// rs1_val == 18446744073709551583, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffffffffdf;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffffffffdf, x1, 9*XLEN/8, x2)

inst_10:
// rs1_val == 18446744073709551551, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffffffffbf;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffffffffbf, x1, 10*XLEN/8, x2)

inst_11:
// rs1_val == 18446744073709551487, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffffffff7f;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffffffff7f, x1, 11*XLEN/8, x2)

inst_12:
// rs1_val == 18446744073709551359, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffffffffeff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffffffffeff, x1, 12*XLEN/8, x2)

inst_13:
// rs1_val == 18446744073709551103, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffffffffdff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffffffffdff, x1, 13*XLEN/8, x2)

inst_14:
// rs1_val == 18446744073709550591, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffffffffbff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffffffffbff, x1, 14*XLEN/8, x2)

inst_15:
// rs1_val == 18446744073709549567, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffffffff7ff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffffffff7ff, x1, 15*XLEN/8, x2)

inst_16:
// rs1_val == 18446744073709547519, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffffffefff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffffffefff, x1, 16*XLEN/8, x2)

inst_17:
// rs1_val == 18446744073709543423, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffffffdfff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffffffdfff, x1, 17*XLEN/8, x2)

inst_18:
// rs1_val == 18446744073709535231, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffffffbfff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffffffbfff, x1, 18*XLEN/8, x2)

inst_19:
// rs1_val == 18446744073709518847, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffffff7fff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffffff7fff, x1, 19*XLEN/8, x2)

inst_20:
// rs1_val == 18446744073709486079, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffffffeffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffffffeffff, x1, 20*XLEN/8, x2)

inst_21:
// rs1_val == 18446744073709420543, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffffffdffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffffffdffff, x1, 21*XLEN/8, x2)

inst_22:
// rs1_val == 18446744073709289471, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffffffbffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffffffbffff, x1, 22*XLEN/8, x2)

inst_23:
// rs1_val == 18446744073709027327, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffffff7ffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffffff7ffff, x1, 23*XLEN/8, x2)

inst_24:
// rs1_val == 18446744073708503039, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffffefffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffffefffff, x1, 24*XLEN/8, x2)

inst_25:
// rs1_val == 18446744073707454463, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffffdfffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffffdfffff, x1, 25*XLEN/8, x2)

inst_26:
// rs1_val == 18446744073705357311, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffffbfffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffffbfffff, x1, 26*XLEN/8, x2)

inst_27:
// rs1_val == 18446744073701163007, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffff7fffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffff7fffff, x1, 27*XLEN/8, x2)

inst_28:
// rs1_val == 18446744073692774399, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffffeffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffffeffffff, x1, 28*XLEN/8, x2)

inst_29:
// rs1_val == 18446744073675997183, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffffdffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffffdffffff, x1, 29*XLEN/8, x2)

inst_30:
// rs1_val == 18446744073642442751, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffffbffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffffbffffff, x1, 30*XLEN/8, x2)

inst_31:
// rs1_val == 18446744073575333887, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffff7ffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffff7ffffff, x1, 31*XLEN/8, x2)

inst_32:
// rs1_val == 18446744073441116159, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffefffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffefffffff, x1, 32*XLEN/8, x2)

inst_33:
// rs1_val == 18446744073172680703, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffdfffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffdfffffff, x1, 33*XLEN/8, x2)

inst_34:
// rs1_val == 18446744072635809791, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffffbfffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffffbfffffff, x1, 34*XLEN/8, x2)

inst_35:
// rs1_val == 18446744071562067967, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffff7fffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffff7fffffff, x1, 35*XLEN/8, x2)

inst_36:
// rs1_val == 18446744069414584319, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffeffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffeffffffff, x1, 36*XLEN/8, x2)

inst_37:
// rs1_val == 18446744065119617023, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffdffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffdffffffff, x1, 37*XLEN/8, x2)

inst_38:
// rs1_val == 18446744056529682431, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffffbffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffffbffffffff, x1, 38*XLEN/8, x2)

inst_39:
// rs1_val == 18446744039349813247, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffff7ffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffff7ffffffff, x1, 39*XLEN/8, x2)

inst_40:
// rs1_val == 18446744004990074879, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffefffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffefffffffff, x1, 40*XLEN/8, x2)

inst_41:
// rs1_val == 18446743936270598143, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffdfffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffdfffffffff, x1, 41*XLEN/8, x2)

inst_42:
// rs1_val == 18446743798831644671, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffffbfffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffffbfffffffff, x1, 42*XLEN/8, x2)

inst_43:
// rs1_val == 18446743523953737727, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffff7fffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffff7fffffffff, x1, 43*XLEN/8, x2)

inst_44:
// rs1_val == 18446742974197923839, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffeffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffeffffffffff, x1, 44*XLEN/8, x2)

inst_45:
// rs1_val == 18446741874686296063, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffdffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffdffffffffff, x1, 45*XLEN/8, x2)

inst_46:
// rs1_val == 18446739675663040511, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffffbffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffffbffffffffff, x1, 46*XLEN/8, x2)

inst_47:
// rs1_val == 18446735277616529407, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffff7ffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffff7ffffffffff, x1, 47*XLEN/8, x2)

inst_48:
// rs1_val == 18446726481523507199, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffefffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffefffffffffff, x1, 48*XLEN/8, x2)

inst_49:
// rs1_val == 18446708889337462783, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffdfffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffdfffffffffff, x1, 49*XLEN/8, x2)

inst_50:
// rs1_val == 18446673704965373951, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffffbfffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffffbfffffffffff, x1, 50*XLEN/8, x2)

inst_51:
// rs1_val == 18446603336221196287, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffff7fffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffff7fffffffffff, x1, 51*XLEN/8, x2)

inst_52:
// rs1_val == 18446462598732840959, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffeffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffeffffffffffff, x1, 52*XLEN/8, x2)

inst_53:
// rs1_val == 18446181123756130303, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffdffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffdffffffffffff, x1, 53*XLEN/8, x2)

inst_54:
// rs1_val == 18445618173802708991, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfffbffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfffbffffffffffff, x1, 54*XLEN/8, x2)

inst_55:
// rs1_val == 18444492273895866367, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfff7ffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfff7ffffffffffff, x1, 55*XLEN/8, x2)

inst_56:
// rs1_val == 18442240474082181119, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffefffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffefffffffffffff, x1, 56*XLEN/8, x2)

inst_57:
// rs1_val == 18437736874454810623, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffdfffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffdfffffffffffff, x1, 57*XLEN/8, x2)

inst_58:
// rs1_val == 18428729675200069631, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xffbfffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xffbfffffffffffff, x1, 58*XLEN/8, x2)

inst_59:
// rs1_val == 18410715276690587647, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xff7fffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xff7fffffffffffff, x1, 59*XLEN/8, x2)

inst_60:
// rs1_val == 18374686479671623679, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfeffffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfeffffffffffffff, x1, 60*XLEN/8, x2)

inst_61:
// rs1_val == 18302628885633695743, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfdffffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfdffffffffffffff, x1, 61*XLEN/8, x2)

inst_62:
// rs1_val == 18158513697557839871, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xfbffffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xfbffffffffffffff, x1, 62*XLEN/8, x2)

inst_63:
// rs1_val == 17870283321406128127, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xf7ffffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xf7ffffffffffffff, x1, 63*XLEN/8, x2)

inst_64:
// rs1_val == 17293822569102704639, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xefffffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xefffffffffffffff, x1, 64*XLEN/8, x2)

inst_65:
// rs1_val == 16140901064495857663, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xdfffffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xdfffffffffffffff, x1, 65*XLEN/8, x2)

inst_66:
// rs1_val == 13835058055282163711, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0xbfffffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0xbfffffffffffffff, x1, 66*XLEN/8, x2)

inst_67:
// rs1_val == 2305843009213693952, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x2000000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x2000000000000000, x1, 67*XLEN/8, x2)

inst_68:
// rs1_val == 4611686018427387904, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x4000000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x4000000000000000, x1, 68*XLEN/8, x2)

inst_69:
// rs1_val == 9223372036854775808, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x8000000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x8000000000000000, x1, 69*XLEN/8, x2)

inst_70:
// rs1_val == 9223372036854775807, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x7fffffffffffffff;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x7fffffffffffffff, x1, 70*XLEN/8, x2)

inst_71:
// rs1_val == 2, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x2;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x2, x1, 71*XLEN/8, x2)

inst_72:
// rs1_val == 4, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x4;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x4, x1, 72*XLEN/8, x2)

inst_73:
// rs1_val == 8, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x8;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x8, x1, 73*XLEN/8, x2)

inst_74:
// rs1_val == 16, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x10;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x10, x1, 74*XLEN/8, x2)

inst_75:
// rs1_val == 32, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x20;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x20, x1, 75*XLEN/8, x2)

inst_76:
// rs1_val == 64, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x40;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x40, x1, 76*XLEN/8, x2)

inst_77:
// rs1_val == 128, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x80;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x80, x1, 77*XLEN/8, x2)

inst_78:
// rs1_val == 256, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x100;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x100, x1, 78*XLEN/8, x2)

inst_79:
// rs1_val == 512, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x200;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x200, x1, 79*XLEN/8, x2)

inst_80:
// rs1_val == 1024, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x400;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x400, x1, 80*XLEN/8, x2)

inst_81:
// rs1_val == 4096, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x1000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x1000, x1, 81*XLEN/8, x2)

inst_82:
// rs1_val == 8192, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x2000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x2000, x1, 82*XLEN/8, x2)

inst_83:
// rs1_val == 16384, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x4000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x4000, x1, 83*XLEN/8, x2)

inst_84:
// rs1_val == 32768, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x8000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x8000, x1, 84*XLEN/8, x2)

inst_85:
// rs1_val == 65536, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x10000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x10000, x1, 85*XLEN/8, x2)

inst_86:
// rs1_val == 131072, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x20000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x20000, x1, 86*XLEN/8, x2)

inst_87:
// rs1_val == 262144, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x40000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x40000, x1, 87*XLEN/8, x2)

inst_88:
// rs1_val == 524288, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x80000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x80000, x1, 88*XLEN/8, x2)

inst_89:
// rs1_val == 1048576, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x100000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x100000, x1, 89*XLEN/8, x2)

inst_90:
// rs1_val == 2097152, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x200000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x200000, x1, 90*XLEN/8, x2)

inst_91:
// rs1_val == 4194304, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x400000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x400000, x1, 91*XLEN/8, x2)

inst_92:
// rs1_val == 8388608, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x800000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x800000, x1, 92*XLEN/8, x2)

inst_93:
// rs1_val == 16777216, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x1000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x1000000, x1, 93*XLEN/8, x2)

inst_94:
// rs1_val == 33554432, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x2000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x2000000, x1, 94*XLEN/8, x2)

inst_95:
// rs1_val == 67108864, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x4000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x4000000, x1, 95*XLEN/8, x2)

inst_96:
// rs1_val == 134217728, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x8000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x8000000, x1, 96*XLEN/8, x2)

inst_97:
// rs1_val == 268435456, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x10000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x10000000, x1, 97*XLEN/8, x2)

inst_98:
// rs1_val == 536870912, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x20000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x20000000, x1, 98*XLEN/8, x2)

inst_99:
// rs1_val == 1073741824, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x40000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x40000000, x1, 99*XLEN/8, x2)

inst_100:
// rs1_val == 2147483648, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x80000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x80000000, x1, 100*XLEN/8, x2)

inst_101:
// rs1_val == 4294967296, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x100000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x100000000, x1, 101*XLEN/8, x2)

inst_102:
// rs1_val == 8589934592, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x200000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x200000000, x1, 102*XLEN/8, x2)

inst_103:
// rs1_val == 17179869184, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x400000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x400000000, x1, 103*XLEN/8, x2)

inst_104:
// rs1_val == 34359738368, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x800000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x800000000, x1, 104*XLEN/8, x2)

inst_105:
// rs1_val == 68719476736, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x1000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x1000000000, x1, 105*XLEN/8, x2)

inst_106:
// rs1_val == 137438953472, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x2000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x2000000000, x1, 106*XLEN/8, x2)

inst_107:
// rs1_val == 274877906944, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x4000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x4000000000, x1, 107*XLEN/8, x2)

inst_108:
// rs1_val == 549755813888, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x8000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x8000000000, x1, 108*XLEN/8, x2)

inst_109:
// rs1_val == 1099511627776, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x10000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x10000000000, x1, 109*XLEN/8, x2)

inst_110:
// rs1_val == 2199023255552, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x20000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x20000000000, x1, 110*XLEN/8, x2)

inst_111:
// rs1_val == 4398046511104, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x40000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x40000000000, x1, 111*XLEN/8, x2)

inst_112:
// rs1_val == 8796093022208, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x80000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x80000000000, x1, 112*XLEN/8, x2)

inst_113:
// rs1_val == 17592186044416, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x100000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x100000000000, x1, 113*XLEN/8, x2)

inst_114:
// rs1_val == 35184372088832, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x200000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x200000000000, x1, 114*XLEN/8, x2)

inst_115:
// rs1_val == 70368744177664, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x400000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x400000000000, x1, 115*XLEN/8, x2)

inst_116:
// rs1_val == 140737488355328, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x800000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x800000000000, x1, 116*XLEN/8, x2)

inst_117:
// rs1_val == 281474976710656, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x1000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x1000000000000, x1, 117*XLEN/8, x2)

inst_118:
// rs1_val == 562949953421312, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x2000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x2000000000000, x1, 118*XLEN/8, x2)

inst_119:
// rs1_val == 1125899906842624, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x4000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x4000000000000, x1, 119*XLEN/8, x2)

inst_120:
// rs1_val == 2251799813685248, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x8000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x8000000000000, x1, 120*XLEN/8, x2)

inst_121:
// rs1_val == 4503599627370496, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x10000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x10000000000000, x1, 121*XLEN/8, x2)

inst_122:
// rs1_val == 9007199254740992, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x20000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x20000000000000, x1, 122*XLEN/8, x2)

inst_123:
// rs1_val == 18014398509481984, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x40000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x40000000000000, x1, 123*XLEN/8, x2)

inst_124:
// rs1_val == 36028797018963968, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x80000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x80000000000000, x1, 124*XLEN/8, x2)

inst_125:
// rs1_val == 72057594037927936, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x100000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x100000000000000, x1, 125*XLEN/8, x2)

inst_126:
// rs1_val == 144115188075855872, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x200000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x200000000000000, x1, 126*XLEN/8, x2)

inst_127:
// rs1_val == 288230376151711744, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x400000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x400000000000000, x1, 127*XLEN/8, x2)

inst_128:
// rs1_val == 576460752303423488, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x800000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x800000000000000, x1, 128*XLEN/8, x2)

inst_129:
// rs1_val == 1152921504606846976, 
// opcode: c.sext.h ; op1=dest:x15 ; op1val:0x1000000000000000;
TEST_CRD_OP(c.sext.h, x15, 0x0000000000000000, 0x1000000000000000, x1, 129*XLEN/8, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((XLEN/8)/4),4,0xdeadbeef


signature_x1_1:
    .fill 130*((XLEN/8)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
