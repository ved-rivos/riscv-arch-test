
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 04:35:29 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fmadd.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fmadd_b15)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_8437:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f0001ff; valaddr_reg:x12; val_offset:25248*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25248*FLEN/8, x13, x9, x10)

inst_8438:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7fff00; valaddr_reg:x12; val_offset:25251*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25251*FLEN/8, x13, x9, x10)

inst_8439:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f0000ff; valaddr_reg:x12; val_offset:25254*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25254*FLEN/8, x13, x9, x10)

inst_8440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7fff80; valaddr_reg:x12; val_offset:25257*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25257*FLEN/8, x13, x9, x10)

inst_8441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f00007f; valaddr_reg:x12; val_offset:25260*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25260*FLEN/8, x13, x9, x10)

inst_8442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7fffc0; valaddr_reg:x12; val_offset:25263*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25263*FLEN/8, x13, x9, x10)

inst_8443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f00003f; valaddr_reg:x12; val_offset:25266*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25266*FLEN/8, x13, x9, x10)

inst_8444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7fffe0; valaddr_reg:x12; val_offset:25269*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25269*FLEN/8, x13, x9, x10)

inst_8445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f00001f; valaddr_reg:x12; val_offset:25272*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25272*FLEN/8, x13, x9, x10)

inst_8446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7ffff0; valaddr_reg:x12; val_offset:25275*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25275*FLEN/8, x13, x9, x10)

inst_8447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f00000f; valaddr_reg:x12; val_offset:25278*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25278*FLEN/8, x13, x9, x10)

inst_8448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7ffff8; valaddr_reg:x12; val_offset:25281*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25281*FLEN/8, x13, x9, x10)

inst_8449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f000007; valaddr_reg:x12; val_offset:25284*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25284*FLEN/8, x13, x9, x10)

inst_8450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7ffffc; valaddr_reg:x12; val_offset:25287*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25287*FLEN/8, x13, x9, x10)

inst_8451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f000003; valaddr_reg:x12; val_offset:25290*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25290*FLEN/8, x13, x9, x10)

inst_8452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f7ffffe; valaddr_reg:x12; val_offset:25293*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25293*FLEN/8, x13, x9, x10)

inst_8453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7e and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f000001; valaddr_reg:x12; val_offset:25296*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25296*FLEN/8, x13, x9, x10)

inst_8454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3ffffff8; valaddr_reg:x12; val_offset:25299*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25299*FLEN/8, x13, x9, x10)

inst_8455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f800007; valaddr_reg:x12; val_offset:25302*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25302*FLEN/8, x13, x9, x10)

inst_8456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3ffffffc; valaddr_reg:x12; val_offset:25305*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25305*FLEN/8, x13, x9, x10)

inst_8457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f800003; valaddr_reg:x12; val_offset:25308*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25308*FLEN/8, x13, x9, x10)

inst_8458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3ffffffe; valaddr_reg:x12; val_offset:25311*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25311*FLEN/8, x13, x9, x10)

inst_8459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f800001; valaddr_reg:x12; val_offset:25314*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25314*FLEN/8, x13, x9, x10)

inst_8460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fb6db6d; valaddr_reg:x12; val_offset:25317*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25317*FLEN/8, x13, x9, x10)

inst_8461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fedb6db; valaddr_reg:x12; val_offset:25320*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25320*FLEN/8, x13, x9, x10)

inst_8462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3f999999; valaddr_reg:x12; val_offset:25323*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25323*FLEN/8, x13, x9, x10)

inst_8463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fe66666; valaddr_reg:x12; val_offset:25326*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25326*FLEN/8, x13, x9, x10)

inst_8464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fbbbbbb; valaddr_reg:x12; val_offset:25329*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25329*FLEN/8, x13, x9, x10)

inst_8465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fc44444; valaddr_reg:x12; val_offset:25332*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25332*FLEN/8, x13, x9, x10)

inst_8466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fa49249; valaddr_reg:x12; val_offset:25335*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25335*FLEN/8, x13, x9, x10)

inst_8467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fdb6db6; valaddr_reg:x12; val_offset:25338*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25338*FLEN/8, x13, x9, x10)

inst_8468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fb33333; valaddr_reg:x12; val_offset:25341*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25341*FLEN/8, x13, x9, x10)

inst_8469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x27734a and fs2 == 0 and fe2 == 0x00 and fm2 == 0x61d80b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea7734a; op2val:0x61d80b;
op3val:0x3fcccccc; valaddr_reg:x12; val_offset:25344*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25344*FLEN/8, x13, x9, x10)

inst_8470:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f800000; valaddr_reg:x12; val_offset:25347*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25347*FLEN/8, x13, x9, x10)

inst_8471:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fffffff; valaddr_reg:x12; val_offset:25350*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25350*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_66)
inst_8472:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fc00000; valaddr_reg:x12; val_offset:25353*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25353*FLEN/8, x13, x9, x10)

inst_8473:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fbfffff; valaddr_reg:x12; val_offset:25356*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25356*FLEN/8, x13, x9, x10)

inst_8474:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fe00000; valaddr_reg:x12; val_offset:25359*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25359*FLEN/8, x13, x9, x10)

inst_8475:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f9fffff; valaddr_reg:x12; val_offset:25362*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25362*FLEN/8, x13, x9, x10)

inst_8476:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3ff00000; valaddr_reg:x12; val_offset:25365*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25365*FLEN/8, x13, x9, x10)

inst_8477:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f8fffff; valaddr_reg:x12; val_offset:25368*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25368*FLEN/8, x13, x9, x10)

inst_8478:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3ff80000; valaddr_reg:x12; val_offset:25371*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25371*FLEN/8, x13, x9, x10)

inst_8479:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f87ffff; valaddr_reg:x12; val_offset:25374*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25374*FLEN/8, x13, x9, x10)

inst_8480:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3ffc0000; valaddr_reg:x12; val_offset:25377*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25377*FLEN/8, x13, x9, x10)

inst_8481:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f83ffff; valaddr_reg:x12; val_offset:25380*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25380*FLEN/8, x13, x9, x10)

inst_8482:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3ffe0000; valaddr_reg:x12; val_offset:25383*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25383*FLEN/8, x13, x9, x10)

inst_8483:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f81ffff; valaddr_reg:x12; val_offset:25386*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25386*FLEN/8, x13, x9, x10)

inst_8484:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fff0000; valaddr_reg:x12; val_offset:25389*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25389*FLEN/8, x13, x9, x10)

inst_8485:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f80ffff; valaddr_reg:x12; val_offset:25392*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25392*FLEN/8, x13, x9, x10)

inst_8486:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fff8000; valaddr_reg:x12; val_offset:25395*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25395*FLEN/8, x13, x9, x10)

inst_8487:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f807fff; valaddr_reg:x12; val_offset:25398*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25398*FLEN/8, x13, x9, x10)

inst_8488:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fffc000; valaddr_reg:x12; val_offset:25401*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25401*FLEN/8, x13, x9, x10)

inst_8489:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f803fff; valaddr_reg:x12; val_offset:25404*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25404*FLEN/8, x13, x9, x10)

inst_8490:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fffe000; valaddr_reg:x12; val_offset:25407*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25407*FLEN/8, x13, x9, x10)

inst_8491:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f801fff; valaddr_reg:x12; val_offset:25410*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25410*FLEN/8, x13, x9, x10)

inst_8492:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3ffff000; valaddr_reg:x12; val_offset:25413*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25413*FLEN/8, x13, x9, x10)

inst_8493:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f800fff; valaddr_reg:x12; val_offset:25416*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25416*FLEN/8, x13, x9, x10)

inst_8494:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3ffff800; valaddr_reg:x12; val_offset:25419*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25419*FLEN/8, x13, x9, x10)

inst_8495:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f8007ff; valaddr_reg:x12; val_offset:25422*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25422*FLEN/8, x13, x9, x10)

inst_8496:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3ffffc00; valaddr_reg:x12; val_offset:25425*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25425*FLEN/8, x13, x9, x10)

inst_8497:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f8003ff; valaddr_reg:x12; val_offset:25428*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25428*FLEN/8, x13, x9, x10)

inst_8498:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3ffffe00; valaddr_reg:x12; val_offset:25431*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25431*FLEN/8, x13, x9, x10)

inst_8499:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f8001ff; valaddr_reg:x12; val_offset:25434*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25434*FLEN/8, x13, x9, x10)

inst_8500:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fffff00; valaddr_reg:x12; val_offset:25437*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25437*FLEN/8, x13, x9, x10)

inst_8501:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f8000ff; valaddr_reg:x12; val_offset:25440*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25440*FLEN/8, x13, x9, x10)

inst_8502:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fffff80; valaddr_reg:x12; val_offset:25443*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25443*FLEN/8, x13, x9, x10)

inst_8503:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f80007f; valaddr_reg:x12; val_offset:25446*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25446*FLEN/8, x13, x9, x10)

inst_8504:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fffffc0; valaddr_reg:x12; val_offset:25449*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25449*FLEN/8, x13, x9, x10)

inst_8505:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f80003f; valaddr_reg:x12; val_offset:25452*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25452*FLEN/8, x13, x9, x10)

inst_8506:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fffffe0; valaddr_reg:x12; val_offset:25455*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25455*FLEN/8, x13, x9, x10)

inst_8507:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f80001f; valaddr_reg:x12; val_offset:25458*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25458*FLEN/8, x13, x9, x10)

inst_8508:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3ffffff0; valaddr_reg:x12; val_offset:25461*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25461*FLEN/8, x13, x9, x10)

inst_8509:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f80000f; valaddr_reg:x12; val_offset:25464*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25464*FLEN/8, x13, x9, x10)

inst_8510:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3ffffff8; valaddr_reg:x12; val_offset:25467*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25467*FLEN/8, x13, x9, x10)

inst_8511:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f800007; valaddr_reg:x12; val_offset:25470*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25470*FLEN/8, x13, x9, x10)

inst_8512:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3ffffffc; valaddr_reg:x12; val_offset:25473*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25473*FLEN/8, x13, x9, x10)

inst_8513:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f800003; valaddr_reg:x12; val_offset:25476*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25476*FLEN/8, x13, x9, x10)

inst_8514:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3ffffffe; valaddr_reg:x12; val_offset:25479*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25479*FLEN/8, x13, x9, x10)

inst_8515:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f800001; valaddr_reg:x12; val_offset:25482*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25482*FLEN/8, x13, x9, x10)

inst_8516:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fb6db6d; valaddr_reg:x12; val_offset:25485*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25485*FLEN/8, x13, x9, x10)

inst_8517:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fedb6db; valaddr_reg:x12; val_offset:25488*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25488*FLEN/8, x13, x9, x10)

inst_8518:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3f999999; valaddr_reg:x12; val_offset:25491*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25491*FLEN/8, x13, x9, x10)

inst_8519:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fe66666; valaddr_reg:x12; val_offset:25494*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25494*FLEN/8, x13, x9, x10)

inst_8520:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fbbbbbb; valaddr_reg:x12; val_offset:25497*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25497*FLEN/8, x13, x9, x10)

inst_8521:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fc44444; valaddr_reg:x12; val_offset:25500*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25500*FLEN/8, x13, x9, x10)

inst_8522:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fa49249; valaddr_reg:x12; val_offset:25503*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25503*FLEN/8, x13, x9, x10)

inst_8523:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fdb6db6; valaddr_reg:x12; val_offset:25506*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25506*FLEN/8, x13, x9, x10)

inst_8524:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fb33333; valaddr_reg:x12; val_offset:25509*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25509*FLEN/8, x13, x9, x10)

inst_8525:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x3b85b9 and fs2 == 0 and fe2 == 0x03 and fm2 == 0x2ebde8 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d3b85b9; op2val:0x1aebde8;
op3val:0x3fcccccc; valaddr_reg:x12; val_offset:25512*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25512*FLEN/8, x13, x9, x10)

inst_8526:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x40000000; valaddr_reg:x12; val_offset:25515*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25515*FLEN/8, x13, x9, x10)

inst_8527:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407fffff; valaddr_reg:x12; val_offset:25518*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25518*FLEN/8, x13, x9, x10)

inst_8528:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x40400000; valaddr_reg:x12; val_offset:25521*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25521*FLEN/8, x13, x9, x10)

inst_8529:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x403fffff; valaddr_reg:x12; val_offset:25524*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25524*FLEN/8, x13, x9, x10)

inst_8530:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x40600000; valaddr_reg:x12; val_offset:25527*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25527*FLEN/8, x13, x9, x10)

inst_8531:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x401fffff; valaddr_reg:x12; val_offset:25530*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25530*FLEN/8, x13, x9, x10)

inst_8532:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x40700000; valaddr_reg:x12; val_offset:25533*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25533*FLEN/8, x13, x9, x10)

inst_8533:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x400fffff; valaddr_reg:x12; val_offset:25536*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25536*FLEN/8, x13, x9, x10)

inst_8534:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x40780000; valaddr_reg:x12; val_offset:25539*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25539*FLEN/8, x13, x9, x10)

inst_8535:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x4007ffff; valaddr_reg:x12; val_offset:25542*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25542*FLEN/8, x13, x9, x10)

inst_8536:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407c0000; valaddr_reg:x12; val_offset:25545*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25545*FLEN/8, x13, x9, x10)

inst_8537:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x4003ffff; valaddr_reg:x12; val_offset:25548*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25548*FLEN/8, x13, x9, x10)

inst_8538:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407e0000; valaddr_reg:x12; val_offset:25551*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25551*FLEN/8, x13, x9, x10)

inst_8539:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x4001ffff; valaddr_reg:x12; val_offset:25554*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25554*FLEN/8, x13, x9, x10)

inst_8540:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407f0000; valaddr_reg:x12; val_offset:25557*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25557*FLEN/8, x13, x9, x10)

inst_8541:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x4000ffff; valaddr_reg:x12; val_offset:25560*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25560*FLEN/8, x13, x9, x10)

inst_8542:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407f8000; valaddr_reg:x12; val_offset:25563*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25563*FLEN/8, x13, x9, x10)

inst_8543:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x40007fff; valaddr_reg:x12; val_offset:25566*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25566*FLEN/8, x13, x9, x10)

inst_8544:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407fc000; valaddr_reg:x12; val_offset:25569*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25569*FLEN/8, x13, x9, x10)

inst_8545:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x40003fff; valaddr_reg:x12; val_offset:25572*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25572*FLEN/8, x13, x9, x10)

inst_8546:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407fe000; valaddr_reg:x12; val_offset:25575*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25575*FLEN/8, x13, x9, x10)

inst_8547:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x40001fff; valaddr_reg:x12; val_offset:25578*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25578*FLEN/8, x13, x9, x10)

inst_8548:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407ff000; valaddr_reg:x12; val_offset:25581*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25581*FLEN/8, x13, x9, x10)

inst_8549:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x40000fff; valaddr_reg:x12; val_offset:25584*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25584*FLEN/8, x13, x9, x10)

inst_8550:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407ff800; valaddr_reg:x12; val_offset:25587*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25587*FLEN/8, x13, x9, x10)

inst_8551:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x400007ff; valaddr_reg:x12; val_offset:25590*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25590*FLEN/8, x13, x9, x10)

inst_8552:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407ffc00; valaddr_reg:x12; val_offset:25593*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25593*FLEN/8, x13, x9, x10)

inst_8553:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x400003ff; valaddr_reg:x12; val_offset:25596*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25596*FLEN/8, x13, x9, x10)

inst_8554:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407ffe00; valaddr_reg:x12; val_offset:25599*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25599*FLEN/8, x13, x9, x10)

inst_8555:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x400001ff; valaddr_reg:x12; val_offset:25602*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25602*FLEN/8, x13, x9, x10)

inst_8556:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407fff00; valaddr_reg:x12; val_offset:25605*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25605*FLEN/8, x13, x9, x10)

inst_8557:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x400000ff; valaddr_reg:x12; val_offset:25608*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25608*FLEN/8, x13, x9, x10)

inst_8558:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407fff80; valaddr_reg:x12; val_offset:25611*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25611*FLEN/8, x13, x9, x10)

inst_8559:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x4000007f; valaddr_reg:x12; val_offset:25614*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25614*FLEN/8, x13, x9, x10)

inst_8560:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407fffc0; valaddr_reg:x12; val_offset:25617*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25617*FLEN/8, x13, x9, x10)

inst_8561:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x4000003f; valaddr_reg:x12; val_offset:25620*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25620*FLEN/8, x13, x9, x10)

inst_8562:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407fffe0; valaddr_reg:x12; val_offset:25623*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25623*FLEN/8, x13, x9, x10)

inst_8563:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x4000001f; valaddr_reg:x12; val_offset:25626*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25626*FLEN/8, x13, x9, x10)

inst_8564:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407ffff0; valaddr_reg:x12; val_offset:25629*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25629*FLEN/8, x13, x9, x10)

inst_8565:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x4000000f; valaddr_reg:x12; val_offset:25632*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25632*FLEN/8, x13, x9, x10)

inst_8566:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407ffff8; valaddr_reg:x12; val_offset:25635*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25635*FLEN/8, x13, x9, x10)

inst_8567:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x40000007; valaddr_reg:x12; val_offset:25638*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25638*FLEN/8, x13, x9, x10)

inst_8568:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407ffffc; valaddr_reg:x12; val_offset:25641*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25641*FLEN/8, x13, x9, x10)

inst_8569:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x40000003; valaddr_reg:x12; val_offset:25644*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25644*FLEN/8, x13, x9, x10)

inst_8570:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x407ffffe; valaddr_reg:x12; val_offset:25647*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25647*FLEN/8, x13, x9, x10)

inst_8571:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x80 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x40000001; valaddr_reg:x12; val_offset:25650*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25650*FLEN/8, x13, x9, x10)

inst_8572:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3ffffff8; valaddr_reg:x12; val_offset:25653*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25653*FLEN/8, x13, x9, x10)

inst_8573:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3f800007; valaddr_reg:x12; val_offset:25656*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25656*FLEN/8, x13, x9, x10)

inst_8574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3ffffffc; valaddr_reg:x12; val_offset:25659*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25659*FLEN/8, x13, x9, x10)

inst_8575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3f800003; valaddr_reg:x12; val_offset:25662*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25662*FLEN/8, x13, x9, x10)

inst_8576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3ffffffe; valaddr_reg:x12; val_offset:25665*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25665*FLEN/8, x13, x9, x10)

inst_8577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3f800001; valaddr_reg:x12; val_offset:25668*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25668*FLEN/8, x13, x9, x10)

inst_8578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3fb6db6d; valaddr_reg:x12; val_offset:25671*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25671*FLEN/8, x13, x9, x10)

inst_8579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3fedb6db; valaddr_reg:x12; val_offset:25674*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25674*FLEN/8, x13, x9, x10)

inst_8580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3f999999; valaddr_reg:x12; val_offset:25677*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25677*FLEN/8, x13, x9, x10)

inst_8581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3fe66666; valaddr_reg:x12; val_offset:25680*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25680*FLEN/8, x13, x9, x10)

inst_8582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3fbbbbbb; valaddr_reg:x12; val_offset:25683*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25683*FLEN/8, x13, x9, x10)

inst_8583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3fc44444; valaddr_reg:x12; val_offset:25686*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25686*FLEN/8, x13, x9, x10)

inst_8584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3fa49249; valaddr_reg:x12; val_offset:25689*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25689*FLEN/8, x13, x9, x10)

inst_8585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3fdb6db6; valaddr_reg:x12; val_offset:25692*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25692*FLEN/8, x13, x9, x10)

inst_8586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3fb33333; valaddr_reg:x12; val_offset:25695*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25695*FLEN/8, x13, x9, x10)

inst_8587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3360dd and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5b5670 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb360dd; op2val:0x5b5670;
op3val:0x3fcccccc; valaddr_reg:x12; val_offset:25698*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25698*FLEN/8, x13, x9, x10)

inst_8588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40800000; valaddr_reg:x12; val_offset:25701*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25701*FLEN/8, x13, x9, x10)

inst_8589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40ffffff; valaddr_reg:x12; val_offset:25704*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25704*FLEN/8, x13, x9, x10)

inst_8590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40c00000; valaddr_reg:x12; val_offset:25707*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25707*FLEN/8, x13, x9, x10)

inst_8591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40bfffff; valaddr_reg:x12; val_offset:25710*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25710*FLEN/8, x13, x9, x10)

inst_8592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40e00000; valaddr_reg:x12; val_offset:25713*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25713*FLEN/8, x13, x9, x10)

inst_8593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x409fffff; valaddr_reg:x12; val_offset:25716*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25716*FLEN/8, x13, x9, x10)

inst_8594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40f00000; valaddr_reg:x12; val_offset:25719*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25719*FLEN/8, x13, x9, x10)

inst_8595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x408fffff; valaddr_reg:x12; val_offset:25722*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25722*FLEN/8, x13, x9, x10)

inst_8596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40f80000; valaddr_reg:x12; val_offset:25725*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25725*FLEN/8, x13, x9, x10)

inst_8597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x4087ffff; valaddr_reg:x12; val_offset:25728*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25728*FLEN/8, x13, x9, x10)

inst_8598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40fc0000; valaddr_reg:x12; val_offset:25731*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25731*FLEN/8, x13, x9, x10)

inst_8599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x4083ffff; valaddr_reg:x12; val_offset:25734*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25734*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_67)
inst_8600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40fe0000; valaddr_reg:x12; val_offset:25737*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25737*FLEN/8, x13, x9, x10)

inst_8601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x4081ffff; valaddr_reg:x12; val_offset:25740*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25740*FLEN/8, x13, x9, x10)

inst_8602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40ff0000; valaddr_reg:x12; val_offset:25743*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25743*FLEN/8, x13, x9, x10)

inst_8603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x4080ffff; valaddr_reg:x12; val_offset:25746*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25746*FLEN/8, x13, x9, x10)

inst_8604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40ff8000; valaddr_reg:x12; val_offset:25749*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25749*FLEN/8, x13, x9, x10)

inst_8605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40807fff; valaddr_reg:x12; val_offset:25752*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25752*FLEN/8, x13, x9, x10)

inst_8606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40ffc000; valaddr_reg:x12; val_offset:25755*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25755*FLEN/8, x13, x9, x10)

inst_8607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40803fff; valaddr_reg:x12; val_offset:25758*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25758*FLEN/8, x13, x9, x10)

inst_8608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40ffe000; valaddr_reg:x12; val_offset:25761*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25761*FLEN/8, x13, x9, x10)

inst_8609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40801fff; valaddr_reg:x12; val_offset:25764*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25764*FLEN/8, x13, x9, x10)

inst_8610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40fff000; valaddr_reg:x12; val_offset:25767*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25767*FLEN/8, x13, x9, x10)

inst_8611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40800fff; valaddr_reg:x12; val_offset:25770*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25770*FLEN/8, x13, x9, x10)

inst_8612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40fff800; valaddr_reg:x12; val_offset:25773*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25773*FLEN/8, x13, x9, x10)

inst_8613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x408007ff; valaddr_reg:x12; val_offset:25776*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25776*FLEN/8, x13, x9, x10)

inst_8614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40fffc00; valaddr_reg:x12; val_offset:25779*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25779*FLEN/8, x13, x9, x10)

inst_8615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x408003ff; valaddr_reg:x12; val_offset:25782*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25782*FLEN/8, x13, x9, x10)

inst_8616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40fffe00; valaddr_reg:x12; val_offset:25785*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25785*FLEN/8, x13, x9, x10)

inst_8617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x408001ff; valaddr_reg:x12; val_offset:25788*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25788*FLEN/8, x13, x9, x10)

inst_8618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40ffff00; valaddr_reg:x12; val_offset:25791*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25791*FLEN/8, x13, x9, x10)

inst_8619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x408000ff; valaddr_reg:x12; val_offset:25794*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25794*FLEN/8, x13, x9, x10)

inst_8620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40ffff80; valaddr_reg:x12; val_offset:25797*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25797*FLEN/8, x13, x9, x10)

inst_8621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x4080007f; valaddr_reg:x12; val_offset:25800*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25800*FLEN/8, x13, x9, x10)

inst_8622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40ffffc0; valaddr_reg:x12; val_offset:25803*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25803*FLEN/8, x13, x9, x10)

inst_8623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x4080003f; valaddr_reg:x12; val_offset:25806*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25806*FLEN/8, x13, x9, x10)

inst_8624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40ffffe0; valaddr_reg:x12; val_offset:25809*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25809*FLEN/8, x13, x9, x10)

inst_8625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x4080001f; valaddr_reg:x12; val_offset:25812*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25812*FLEN/8, x13, x9, x10)

inst_8626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40fffff0; valaddr_reg:x12; val_offset:25815*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25815*FLEN/8, x13, x9, x10)

inst_8627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x4080000f; valaddr_reg:x12; val_offset:25818*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25818*FLEN/8, x13, x9, x10)

inst_8628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40fffff8; valaddr_reg:x12; val_offset:25821*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25821*FLEN/8, x13, x9, x10)

inst_8629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40800007; valaddr_reg:x12; val_offset:25824*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25824*FLEN/8, x13, x9, x10)

inst_8630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40fffffc; valaddr_reg:x12; val_offset:25827*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25827*FLEN/8, x13, x9, x10)

inst_8631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40800003; valaddr_reg:x12; val_offset:25830*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25830*FLEN/8, x13, x9, x10)

inst_8632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40fffffe; valaddr_reg:x12; val_offset:25833*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25833*FLEN/8, x13, x9, x10)

inst_8633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x81 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x40800001; valaddr_reg:x12; val_offset:25836*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25836*FLEN/8, x13, x9, x10)

inst_8634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3ffffff8; valaddr_reg:x12; val_offset:25839*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25839*FLEN/8, x13, x9, x10)

inst_8635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3f800007; valaddr_reg:x12; val_offset:25842*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25842*FLEN/8, x13, x9, x10)

inst_8636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3ffffffc; valaddr_reg:x12; val_offset:25845*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25845*FLEN/8, x13, x9, x10)

inst_8637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3f800003; valaddr_reg:x12; val_offset:25848*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25848*FLEN/8, x13, x9, x10)

inst_8638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3ffffffe; valaddr_reg:x12; val_offset:25851*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25851*FLEN/8, x13, x9, x10)

inst_8639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3f800001; valaddr_reg:x12; val_offset:25854*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25854*FLEN/8, x13, x9, x10)

inst_8640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3fb6db6d; valaddr_reg:x12; val_offset:25857*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25857*FLEN/8, x13, x9, x10)

inst_8641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3fedb6db; valaddr_reg:x12; val_offset:25860*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25860*FLEN/8, x13, x9, x10)

inst_8642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3f999999; valaddr_reg:x12; val_offset:25863*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25863*FLEN/8, x13, x9, x10)

inst_8643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3fe66666; valaddr_reg:x12; val_offset:25866*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25866*FLEN/8, x13, x9, x10)

inst_8644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3fbbbbbb; valaddr_reg:x12; val_offset:25869*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25869*FLEN/8, x13, x9, x10)

inst_8645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3fc44444; valaddr_reg:x12; val_offset:25872*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25872*FLEN/8, x13, x9, x10)

inst_8646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3fa49249; valaddr_reg:x12; val_offset:25875*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25875*FLEN/8, x13, x9, x10)

inst_8647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3fdb6db6; valaddr_reg:x12; val_offset:25878*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25878*FLEN/8, x13, x9, x10)

inst_8648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3fb33333; valaddr_reg:x12; val_offset:25881*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25881*FLEN/8, x13, x9, x10)

inst_8649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x650cd9 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4787b9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee50cd9; op2val:0x4787b9;
op3val:0x3fcccccc; valaddr_reg:x12; val_offset:25884*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25884*FLEN/8, x13, x9, x10)

inst_8650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x41000000; valaddr_reg:x12; val_offset:25887*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25887*FLEN/8, x13, x9, x10)

inst_8651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417fffff; valaddr_reg:x12; val_offset:25890*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25890*FLEN/8, x13, x9, x10)

inst_8652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x41400000; valaddr_reg:x12; val_offset:25893*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25893*FLEN/8, x13, x9, x10)

inst_8653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x413fffff; valaddr_reg:x12; val_offset:25896*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25896*FLEN/8, x13, x9, x10)

inst_8654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x41600000; valaddr_reg:x12; val_offset:25899*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25899*FLEN/8, x13, x9, x10)

inst_8655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x411fffff; valaddr_reg:x12; val_offset:25902*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25902*FLEN/8, x13, x9, x10)

inst_8656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x41700000; valaddr_reg:x12; val_offset:25905*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25905*FLEN/8, x13, x9, x10)

inst_8657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x410fffff; valaddr_reg:x12; val_offset:25908*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25908*FLEN/8, x13, x9, x10)

inst_8658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x41780000; valaddr_reg:x12; val_offset:25911*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25911*FLEN/8, x13, x9, x10)

inst_8659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x4107ffff; valaddr_reg:x12; val_offset:25914*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25914*FLEN/8, x13, x9, x10)

inst_8660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417c0000; valaddr_reg:x12; val_offset:25917*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25917*FLEN/8, x13, x9, x10)

inst_8661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x4103ffff; valaddr_reg:x12; val_offset:25920*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25920*FLEN/8, x13, x9, x10)

inst_8662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417e0000; valaddr_reg:x12; val_offset:25923*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25923*FLEN/8, x13, x9, x10)

inst_8663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x4101ffff; valaddr_reg:x12; val_offset:25926*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25926*FLEN/8, x13, x9, x10)

inst_8664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417f0000; valaddr_reg:x12; val_offset:25929*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25929*FLEN/8, x13, x9, x10)

inst_8665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x4100ffff; valaddr_reg:x12; val_offset:25932*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25932*FLEN/8, x13, x9, x10)

inst_8666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417f8000; valaddr_reg:x12; val_offset:25935*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25935*FLEN/8, x13, x9, x10)

inst_8667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x41007fff; valaddr_reg:x12; val_offset:25938*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25938*FLEN/8, x13, x9, x10)

inst_8668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417fc000; valaddr_reg:x12; val_offset:25941*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25941*FLEN/8, x13, x9, x10)

inst_8669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x41003fff; valaddr_reg:x12; val_offset:25944*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25944*FLEN/8, x13, x9, x10)

inst_8670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417fe000; valaddr_reg:x12; val_offset:25947*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25947*FLEN/8, x13, x9, x10)

inst_8671:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x41001fff; valaddr_reg:x12; val_offset:25950*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25950*FLEN/8, x13, x9, x10)

inst_8672:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417ff000; valaddr_reg:x12; val_offset:25953*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25953*FLEN/8, x13, x9, x10)

inst_8673:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x41000fff; valaddr_reg:x12; val_offset:25956*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25956*FLEN/8, x13, x9, x10)

inst_8674:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417ff800; valaddr_reg:x12; val_offset:25959*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25959*FLEN/8, x13, x9, x10)

inst_8675:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x410007ff; valaddr_reg:x12; val_offset:25962*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25962*FLEN/8, x13, x9, x10)

inst_8676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417ffc00; valaddr_reg:x12; val_offset:25965*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25965*FLEN/8, x13, x9, x10)

inst_8677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x410003ff; valaddr_reg:x12; val_offset:25968*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25968*FLEN/8, x13, x9, x10)

inst_8678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417ffe00; valaddr_reg:x12; val_offset:25971*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25971*FLEN/8, x13, x9, x10)

inst_8679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x410001ff; valaddr_reg:x12; val_offset:25974*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25974*FLEN/8, x13, x9, x10)

inst_8680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417fff00; valaddr_reg:x12; val_offset:25977*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25977*FLEN/8, x13, x9, x10)

inst_8681:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x410000ff; valaddr_reg:x12; val_offset:25980*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25980*FLEN/8, x13, x9, x10)

inst_8682:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417fff80; valaddr_reg:x12; val_offset:25983*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25983*FLEN/8, x13, x9, x10)

inst_8683:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x4100007f; valaddr_reg:x12; val_offset:25986*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25986*FLEN/8, x13, x9, x10)

inst_8684:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417fffc0; valaddr_reg:x12; val_offset:25989*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25989*FLEN/8, x13, x9, x10)

inst_8685:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x4100003f; valaddr_reg:x12; val_offset:25992*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25992*FLEN/8, x13, x9, x10)

inst_8686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417fffe0; valaddr_reg:x12; val_offset:25995*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25995*FLEN/8, x13, x9, x10)

inst_8687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x4100001f; valaddr_reg:x12; val_offset:25998*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 25998*FLEN/8, x13, x9, x10)

inst_8688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417ffff0; valaddr_reg:x12; val_offset:26001*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26001*FLEN/8, x13, x9, x10)

inst_8689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x4100000f; valaddr_reg:x12; val_offset:26004*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26004*FLEN/8, x13, x9, x10)

inst_8690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417ffff8; valaddr_reg:x12; val_offset:26007*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26007*FLEN/8, x13, x9, x10)

inst_8691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x41000007; valaddr_reg:x12; val_offset:26010*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26010*FLEN/8, x13, x9, x10)

inst_8692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417ffffc; valaddr_reg:x12; val_offset:26013*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26013*FLEN/8, x13, x9, x10)

inst_8693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x41000003; valaddr_reg:x12; val_offset:26016*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26016*FLEN/8, x13, x9, x10)

inst_8694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x417ffffe; valaddr_reg:x12; val_offset:26019*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26019*FLEN/8, x13, x9, x10)

inst_8695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x82 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x41000001; valaddr_reg:x12; val_offset:26022*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26022*FLEN/8, x13, x9, x10)

inst_8696:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3ffffff8; valaddr_reg:x12; val_offset:26025*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26025*FLEN/8, x13, x9, x10)

inst_8697:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3f800007; valaddr_reg:x12; val_offset:26028*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26028*FLEN/8, x13, x9, x10)

inst_8698:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3ffffffc; valaddr_reg:x12; val_offset:26031*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26031*FLEN/8, x13, x9, x10)

inst_8699:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3f800003; valaddr_reg:x12; val_offset:26034*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26034*FLEN/8, x13, x9, x10)

inst_8700:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3ffffffe; valaddr_reg:x12; val_offset:26037*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26037*FLEN/8, x13, x9, x10)

inst_8701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3f800001; valaddr_reg:x12; val_offset:26040*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26040*FLEN/8, x13, x9, x10)

inst_8702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3fb6db6d; valaddr_reg:x12; val_offset:26043*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26043*FLEN/8, x13, x9, x10)

inst_8703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3fedb6db; valaddr_reg:x12; val_offset:26046*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26046*FLEN/8, x13, x9, x10)

inst_8704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3f999999; valaddr_reg:x12; val_offset:26049*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26049*FLEN/8, x13, x9, x10)

inst_8705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3fe66666; valaddr_reg:x12; val_offset:26052*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26052*FLEN/8, x13, x9, x10)

inst_8706:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3fbbbbbb; valaddr_reg:x12; val_offset:26055*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26055*FLEN/8, x13, x9, x10)

inst_8707:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3fc44444; valaddr_reg:x12; val_offset:26058*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26058*FLEN/8, x13, x9, x10)

inst_8708:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3fa49249; valaddr_reg:x12; val_offset:26061*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26061*FLEN/8, x13, x9, x10)

inst_8709:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3fdb6db6; valaddr_reg:x12; val_offset:26064*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26064*FLEN/8, x13, x9, x10)

inst_8710:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3fb33333; valaddr_reg:x12; val_offset:26067*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26067*FLEN/8, x13, x9, x10)

inst_8711:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x064520 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d02e9 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f064520; op2val:0x3d02e9;
op3val:0x3fcccccc; valaddr_reg:x12; val_offset:26070*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26070*FLEN/8, x13, x9, x10)

inst_8712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41800000; valaddr_reg:x12; val_offset:26073*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26073*FLEN/8, x13, x9, x10)

inst_8713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41ffffff; valaddr_reg:x12; val_offset:26076*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26076*FLEN/8, x13, x9, x10)

inst_8714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41c00000; valaddr_reg:x12; val_offset:26079*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26079*FLEN/8, x13, x9, x10)

inst_8715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41bfffff; valaddr_reg:x12; val_offset:26082*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26082*FLEN/8, x13, x9, x10)

inst_8716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41e00000; valaddr_reg:x12; val_offset:26085*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26085*FLEN/8, x13, x9, x10)

inst_8717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x419fffff; valaddr_reg:x12; val_offset:26088*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26088*FLEN/8, x13, x9, x10)

inst_8718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41f00000; valaddr_reg:x12; val_offset:26091*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26091*FLEN/8, x13, x9, x10)

inst_8719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x418fffff; valaddr_reg:x12; val_offset:26094*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26094*FLEN/8, x13, x9, x10)

inst_8720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41f80000; valaddr_reg:x12; val_offset:26097*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26097*FLEN/8, x13, x9, x10)

inst_8721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x4187ffff; valaddr_reg:x12; val_offset:26100*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26100*FLEN/8, x13, x9, x10)

inst_8722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41fc0000; valaddr_reg:x12; val_offset:26103*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26103*FLEN/8, x13, x9, x10)

inst_8723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x4183ffff; valaddr_reg:x12; val_offset:26106*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26106*FLEN/8, x13, x9, x10)

inst_8724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41fe0000; valaddr_reg:x12; val_offset:26109*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26109*FLEN/8, x13, x9, x10)

inst_8725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x4181ffff; valaddr_reg:x12; val_offset:26112*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26112*FLEN/8, x13, x9, x10)

inst_8726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41ff0000; valaddr_reg:x12; val_offset:26115*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26115*FLEN/8, x13, x9, x10)

inst_8727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x4180ffff; valaddr_reg:x12; val_offset:26118*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26118*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_68)
inst_8728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41ff8000; valaddr_reg:x12; val_offset:26121*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26121*FLEN/8, x13, x9, x10)

inst_8729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41807fff; valaddr_reg:x12; val_offset:26124*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26124*FLEN/8, x13, x9, x10)

inst_8730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41ffc000; valaddr_reg:x12; val_offset:26127*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26127*FLEN/8, x13, x9, x10)

inst_8731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41803fff; valaddr_reg:x12; val_offset:26130*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26130*FLEN/8, x13, x9, x10)

inst_8732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41ffe000; valaddr_reg:x12; val_offset:26133*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26133*FLEN/8, x13, x9, x10)

inst_8733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41801fff; valaddr_reg:x12; val_offset:26136*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26136*FLEN/8, x13, x9, x10)

inst_8734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41fff000; valaddr_reg:x12; val_offset:26139*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26139*FLEN/8, x13, x9, x10)

inst_8735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41800fff; valaddr_reg:x12; val_offset:26142*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26142*FLEN/8, x13, x9, x10)

inst_8736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41fff800; valaddr_reg:x12; val_offset:26145*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26145*FLEN/8, x13, x9, x10)

inst_8737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x418007ff; valaddr_reg:x12; val_offset:26148*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26148*FLEN/8, x13, x9, x10)

inst_8738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41fffc00; valaddr_reg:x12; val_offset:26151*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26151*FLEN/8, x13, x9, x10)

inst_8739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x418003ff; valaddr_reg:x12; val_offset:26154*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26154*FLEN/8, x13, x9, x10)

inst_8740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41fffe00; valaddr_reg:x12; val_offset:26157*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26157*FLEN/8, x13, x9, x10)

inst_8741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x418001ff; valaddr_reg:x12; val_offset:26160*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26160*FLEN/8, x13, x9, x10)

inst_8742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41ffff00; valaddr_reg:x12; val_offset:26163*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26163*FLEN/8, x13, x9, x10)

inst_8743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x418000ff; valaddr_reg:x12; val_offset:26166*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26166*FLEN/8, x13, x9, x10)

inst_8744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41ffff80; valaddr_reg:x12; val_offset:26169*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26169*FLEN/8, x13, x9, x10)

inst_8745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x4180007f; valaddr_reg:x12; val_offset:26172*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26172*FLEN/8, x13, x9, x10)

inst_8746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41ffffc0; valaddr_reg:x12; val_offset:26175*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26175*FLEN/8, x13, x9, x10)

inst_8747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x4180003f; valaddr_reg:x12; val_offset:26178*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26178*FLEN/8, x13, x9, x10)

inst_8748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41ffffe0; valaddr_reg:x12; val_offset:26181*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26181*FLEN/8, x13, x9, x10)

inst_8749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x4180001f; valaddr_reg:x12; val_offset:26184*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26184*FLEN/8, x13, x9, x10)

inst_8750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41fffff0; valaddr_reg:x12; val_offset:26187*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26187*FLEN/8, x13, x9, x10)

inst_8751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x4180000f; valaddr_reg:x12; val_offset:26190*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26190*FLEN/8, x13, x9, x10)

inst_8752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41fffff8; valaddr_reg:x12; val_offset:26193*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26193*FLEN/8, x13, x9, x10)

inst_8753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41800007; valaddr_reg:x12; val_offset:26196*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26196*FLEN/8, x13, x9, x10)

inst_8754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41fffffc; valaddr_reg:x12; val_offset:26199*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26199*FLEN/8, x13, x9, x10)

inst_8755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41800003; valaddr_reg:x12; val_offset:26202*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26202*FLEN/8, x13, x9, x10)

inst_8756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41fffffe; valaddr_reg:x12; val_offset:26205*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26205*FLEN/8, x13, x9, x10)

inst_8757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x83 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x41800001; valaddr_reg:x12; val_offset:26208*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26208*FLEN/8, x13, x9, x10)

inst_8758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3ffffff8; valaddr_reg:x12; val_offset:26211*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26211*FLEN/8, x13, x9, x10)

inst_8759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3f800007; valaddr_reg:x12; val_offset:26214*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26214*FLEN/8, x13, x9, x10)

inst_8760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3ffffffc; valaddr_reg:x12; val_offset:26217*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26217*FLEN/8, x13, x9, x10)

inst_8761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3f800003; valaddr_reg:x12; val_offset:26220*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26220*FLEN/8, x13, x9, x10)

inst_8762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3ffffffe; valaddr_reg:x12; val_offset:26223*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26223*FLEN/8, x13, x9, x10)

inst_8763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3f800001; valaddr_reg:x12; val_offset:26226*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26226*FLEN/8, x13, x9, x10)

inst_8764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3fb6db6d; valaddr_reg:x12; val_offset:26229*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26229*FLEN/8, x13, x9, x10)

inst_8765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3fedb6db; valaddr_reg:x12; val_offset:26232*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26232*FLEN/8, x13, x9, x10)

inst_8766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3f999999; valaddr_reg:x12; val_offset:26235*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26235*FLEN/8, x13, x9, x10)

inst_8767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3fe66666; valaddr_reg:x12; val_offset:26238*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26238*FLEN/8, x13, x9, x10)

inst_8768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3fbbbbbb; valaddr_reg:x12; val_offset:26241*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26241*FLEN/8, x13, x9, x10)

inst_8769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3fc44444; valaddr_reg:x12; val_offset:26244*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26244*FLEN/8, x13, x9, x10)

inst_8770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3fa49249; valaddr_reg:x12; val_offset:26247*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26247*FLEN/8, x13, x9, x10)

inst_8771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3fdb6db6; valaddr_reg:x12; val_offset:26250*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26250*FLEN/8, x13, x9, x10)

inst_8772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3fb33333; valaddr_reg:x12; val_offset:26253*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26253*FLEN/8, x13, x9, x10)

inst_8773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x164003 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x6d0b7d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e964003; op2val:0x6d0b7d;
op3val:0x3fcccccc; valaddr_reg:x12; val_offset:26256*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26256*FLEN/8, x13, x9, x10)

inst_8774:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x42000000; valaddr_reg:x12; val_offset:26259*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26259*FLEN/8, x13, x9, x10)

inst_8775:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427fffff; valaddr_reg:x12; val_offset:26262*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26262*FLEN/8, x13, x9, x10)

inst_8776:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x42400000; valaddr_reg:x12; val_offset:26265*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26265*FLEN/8, x13, x9, x10)

inst_8777:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x423fffff; valaddr_reg:x12; val_offset:26268*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26268*FLEN/8, x13, x9, x10)

inst_8778:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x42600000; valaddr_reg:x12; val_offset:26271*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26271*FLEN/8, x13, x9, x10)

inst_8779:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x421fffff; valaddr_reg:x12; val_offset:26274*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26274*FLEN/8, x13, x9, x10)

inst_8780:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x42700000; valaddr_reg:x12; val_offset:26277*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26277*FLEN/8, x13, x9, x10)

inst_8781:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x420fffff; valaddr_reg:x12; val_offset:26280*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26280*FLEN/8, x13, x9, x10)

inst_8782:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x42780000; valaddr_reg:x12; val_offset:26283*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26283*FLEN/8, x13, x9, x10)

inst_8783:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x4207ffff; valaddr_reg:x12; val_offset:26286*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26286*FLEN/8, x13, x9, x10)

inst_8784:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427c0000; valaddr_reg:x12; val_offset:26289*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26289*FLEN/8, x13, x9, x10)

inst_8785:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x4203ffff; valaddr_reg:x12; val_offset:26292*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26292*FLEN/8, x13, x9, x10)

inst_8786:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427e0000; valaddr_reg:x12; val_offset:26295*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26295*FLEN/8, x13, x9, x10)

inst_8787:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x4201ffff; valaddr_reg:x12; val_offset:26298*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26298*FLEN/8, x13, x9, x10)

inst_8788:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427f0000; valaddr_reg:x12; val_offset:26301*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26301*FLEN/8, x13, x9, x10)

inst_8789:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x4200ffff; valaddr_reg:x12; val_offset:26304*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26304*FLEN/8, x13, x9, x10)

inst_8790:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427f8000; valaddr_reg:x12; val_offset:26307*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26307*FLEN/8, x13, x9, x10)

inst_8791:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x42007fff; valaddr_reg:x12; val_offset:26310*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26310*FLEN/8, x13, x9, x10)

inst_8792:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427fc000; valaddr_reg:x12; val_offset:26313*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26313*FLEN/8, x13, x9, x10)

inst_8793:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x42003fff; valaddr_reg:x12; val_offset:26316*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26316*FLEN/8, x13, x9, x10)

inst_8794:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427fe000; valaddr_reg:x12; val_offset:26319*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26319*FLEN/8, x13, x9, x10)

inst_8795:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x42001fff; valaddr_reg:x12; val_offset:26322*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26322*FLEN/8, x13, x9, x10)

inst_8796:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427ff000; valaddr_reg:x12; val_offset:26325*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26325*FLEN/8, x13, x9, x10)

inst_8797:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x42000fff; valaddr_reg:x12; val_offset:26328*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26328*FLEN/8, x13, x9, x10)

inst_8798:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427ff800; valaddr_reg:x12; val_offset:26331*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26331*FLEN/8, x13, x9, x10)

inst_8799:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x420007ff; valaddr_reg:x12; val_offset:26334*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26334*FLEN/8, x13, x9, x10)

inst_8800:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427ffc00; valaddr_reg:x12; val_offset:26337*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26337*FLEN/8, x13, x9, x10)

inst_8801:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x420003ff; valaddr_reg:x12; val_offset:26340*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26340*FLEN/8, x13, x9, x10)

inst_8802:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427ffe00; valaddr_reg:x12; val_offset:26343*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26343*FLEN/8, x13, x9, x10)

inst_8803:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x420001ff; valaddr_reg:x12; val_offset:26346*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26346*FLEN/8, x13, x9, x10)

inst_8804:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427fff00; valaddr_reg:x12; val_offset:26349*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26349*FLEN/8, x13, x9, x10)

inst_8805:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x420000ff; valaddr_reg:x12; val_offset:26352*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26352*FLEN/8, x13, x9, x10)

inst_8806:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427fff80; valaddr_reg:x12; val_offset:26355*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26355*FLEN/8, x13, x9, x10)

inst_8807:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x4200007f; valaddr_reg:x12; val_offset:26358*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26358*FLEN/8, x13, x9, x10)

inst_8808:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427fffc0; valaddr_reg:x12; val_offset:26361*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26361*FLEN/8, x13, x9, x10)

inst_8809:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x4200003f; valaddr_reg:x12; val_offset:26364*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26364*FLEN/8, x13, x9, x10)

inst_8810:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427fffe0; valaddr_reg:x12; val_offset:26367*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26367*FLEN/8, x13, x9, x10)

inst_8811:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x4200001f; valaddr_reg:x12; val_offset:26370*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26370*FLEN/8, x13, x9, x10)

inst_8812:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427ffff0; valaddr_reg:x12; val_offset:26373*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26373*FLEN/8, x13, x9, x10)

inst_8813:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x4200000f; valaddr_reg:x12; val_offset:26376*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26376*FLEN/8, x13, x9, x10)

inst_8814:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427ffff8; valaddr_reg:x12; val_offset:26379*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26379*FLEN/8, x13, x9, x10)

inst_8815:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x42000007; valaddr_reg:x12; val_offset:26382*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26382*FLEN/8, x13, x9, x10)

inst_8816:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427ffffc; valaddr_reg:x12; val_offset:26385*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26385*FLEN/8, x13, x9, x10)

inst_8817:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x42000003; valaddr_reg:x12; val_offset:26388*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26388*FLEN/8, x13, x9, x10)

inst_8818:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x427ffffe; valaddr_reg:x12; val_offset:26391*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26391*FLEN/8, x13, x9, x10)

inst_8819:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x84 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x42000001; valaddr_reg:x12; val_offset:26394*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26394*FLEN/8, x13, x9, x10)

inst_8820:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3ffffff8; valaddr_reg:x12; val_offset:26397*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26397*FLEN/8, x13, x9, x10)

inst_8821:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3f800007; valaddr_reg:x12; val_offset:26400*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26400*FLEN/8, x13, x9, x10)

inst_8822:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3ffffffc; valaddr_reg:x12; val_offset:26403*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26403*FLEN/8, x13, x9, x10)

inst_8823:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3f800003; valaddr_reg:x12; val_offset:26406*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26406*FLEN/8, x13, x9, x10)

inst_8824:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3ffffffe; valaddr_reg:x12; val_offset:26409*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26409*FLEN/8, x13, x9, x10)

inst_8825:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3f800001; valaddr_reg:x12; val_offset:26412*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26412*FLEN/8, x13, x9, x10)

inst_8826:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3fb6db6d; valaddr_reg:x12; val_offset:26415*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26415*FLEN/8, x13, x9, x10)

inst_8827:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3fedb6db; valaddr_reg:x12; val_offset:26418*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26418*FLEN/8, x13, x9, x10)

inst_8828:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3f999999; valaddr_reg:x12; val_offset:26421*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26421*FLEN/8, x13, x9, x10)

inst_8829:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3fe66666; valaddr_reg:x12; val_offset:26424*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26424*FLEN/8, x13, x9, x10)

inst_8830:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3fbbbbbb; valaddr_reg:x12; val_offset:26427*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26427*FLEN/8, x13, x9, x10)

inst_8831:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3fc44444; valaddr_reg:x12; val_offset:26430*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26430*FLEN/8, x13, x9, x10)

inst_8832:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3fa49249; valaddr_reg:x12; val_offset:26433*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26433*FLEN/8, x13, x9, x10)

inst_8833:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3fdb6db6; valaddr_reg:x12; val_offset:26436*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26436*FLEN/8, x13, x9, x10)

inst_8834:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3fb33333; valaddr_reg:x12; val_offset:26439*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26439*FLEN/8, x13, x9, x10)

inst_8835:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x47c846 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x2404bc and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e47c846; op2val:0xa404bc;
op3val:0x3fcccccc; valaddr_reg:x12; val_offset:26442*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26442*FLEN/8, x13, x9, x10)

inst_8836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42800000; valaddr_reg:x12; val_offset:26445*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26445*FLEN/8, x13, x9, x10)

inst_8837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42ffffff; valaddr_reg:x12; val_offset:26448*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26448*FLEN/8, x13, x9, x10)

inst_8838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42c00000; valaddr_reg:x12; val_offset:26451*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26451*FLEN/8, x13, x9, x10)

inst_8839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42bfffff; valaddr_reg:x12; val_offset:26454*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26454*FLEN/8, x13, x9, x10)

inst_8840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42e00000; valaddr_reg:x12; val_offset:26457*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26457*FLEN/8, x13, x9, x10)

inst_8841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x429fffff; valaddr_reg:x12; val_offset:26460*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26460*FLEN/8, x13, x9, x10)

inst_8842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42f00000; valaddr_reg:x12; val_offset:26463*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26463*FLEN/8, x13, x9, x10)

inst_8843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x428fffff; valaddr_reg:x12; val_offset:26466*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26466*FLEN/8, x13, x9, x10)

inst_8844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42f80000; valaddr_reg:x12; val_offset:26469*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26469*FLEN/8, x13, x9, x10)

inst_8845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x4287ffff; valaddr_reg:x12; val_offset:26472*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26472*FLEN/8, x13, x9, x10)

inst_8846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42fc0000; valaddr_reg:x12; val_offset:26475*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26475*FLEN/8, x13, x9, x10)

inst_8847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x4283ffff; valaddr_reg:x12; val_offset:26478*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26478*FLEN/8, x13, x9, x10)

inst_8848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42fe0000; valaddr_reg:x12; val_offset:26481*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26481*FLEN/8, x13, x9, x10)

inst_8849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x4281ffff; valaddr_reg:x12; val_offset:26484*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26484*FLEN/8, x13, x9, x10)

inst_8850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42ff0000; valaddr_reg:x12; val_offset:26487*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26487*FLEN/8, x13, x9, x10)

inst_8851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x4280ffff; valaddr_reg:x12; val_offset:26490*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26490*FLEN/8, x13, x9, x10)

inst_8852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42ff8000; valaddr_reg:x12; val_offset:26493*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26493*FLEN/8, x13, x9, x10)

inst_8853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42807fff; valaddr_reg:x12; val_offset:26496*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26496*FLEN/8, x13, x9, x10)

inst_8854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42ffc000; valaddr_reg:x12; val_offset:26499*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26499*FLEN/8, x13, x9, x10)

inst_8855:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42803fff; valaddr_reg:x12; val_offset:26502*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26502*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_69)
inst_8856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42ffe000; valaddr_reg:x12; val_offset:26505*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26505*FLEN/8, x13, x9, x10)

inst_8857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42801fff; valaddr_reg:x12; val_offset:26508*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26508*FLEN/8, x13, x9, x10)

inst_8858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42fff000; valaddr_reg:x12; val_offset:26511*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26511*FLEN/8, x13, x9, x10)

inst_8859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42800fff; valaddr_reg:x12; val_offset:26514*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26514*FLEN/8, x13, x9, x10)

inst_8860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42fff800; valaddr_reg:x12; val_offset:26517*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26517*FLEN/8, x13, x9, x10)

inst_8861:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x428007ff; valaddr_reg:x12; val_offset:26520*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26520*FLEN/8, x13, x9, x10)

inst_8862:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42fffc00; valaddr_reg:x12; val_offset:26523*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26523*FLEN/8, x13, x9, x10)

inst_8863:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x428003ff; valaddr_reg:x12; val_offset:26526*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26526*FLEN/8, x13, x9, x10)

inst_8864:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42fffe00; valaddr_reg:x12; val_offset:26529*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26529*FLEN/8, x13, x9, x10)

inst_8865:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x428001ff; valaddr_reg:x12; val_offset:26532*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26532*FLEN/8, x13, x9, x10)

inst_8866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42ffff00; valaddr_reg:x12; val_offset:26535*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26535*FLEN/8, x13, x9, x10)

inst_8867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x428000ff; valaddr_reg:x12; val_offset:26538*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26538*FLEN/8, x13, x9, x10)

inst_8868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42ffff80; valaddr_reg:x12; val_offset:26541*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26541*FLEN/8, x13, x9, x10)

inst_8869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x4280007f; valaddr_reg:x12; val_offset:26544*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26544*FLEN/8, x13, x9, x10)

inst_8870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42ffffc0; valaddr_reg:x12; val_offset:26547*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26547*FLEN/8, x13, x9, x10)

inst_8871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x4280003f; valaddr_reg:x12; val_offset:26550*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26550*FLEN/8, x13, x9, x10)

inst_8872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42ffffe0; valaddr_reg:x12; val_offset:26553*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26553*FLEN/8, x13, x9, x10)

inst_8873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x4280001f; valaddr_reg:x12; val_offset:26556*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26556*FLEN/8, x13, x9, x10)

inst_8874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42fffff0; valaddr_reg:x12; val_offset:26559*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26559*FLEN/8, x13, x9, x10)

inst_8875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x4280000f; valaddr_reg:x12; val_offset:26562*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26562*FLEN/8, x13, x9, x10)

inst_8876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42fffff8; valaddr_reg:x12; val_offset:26565*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26565*FLEN/8, x13, x9, x10)

inst_8877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42800007; valaddr_reg:x12; val_offset:26568*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26568*FLEN/8, x13, x9, x10)

inst_8878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42fffffc; valaddr_reg:x12; val_offset:26571*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26571*FLEN/8, x13, x9, x10)

inst_8879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42800003; valaddr_reg:x12; val_offset:26574*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26574*FLEN/8, x13, x9, x10)

inst_8880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42fffffe; valaddr_reg:x12; val_offset:26577*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26577*FLEN/8, x13, x9, x10)

inst_8881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x85 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x42800001; valaddr_reg:x12; val_offset:26580*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26580*FLEN/8, x13, x9, x10)

inst_8882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3ffffff8; valaddr_reg:x12; val_offset:26583*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26583*FLEN/8, x13, x9, x10)

inst_8883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3f800007; valaddr_reg:x12; val_offset:26586*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26586*FLEN/8, x13, x9, x10)

inst_8884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3ffffffc; valaddr_reg:x12; val_offset:26589*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26589*FLEN/8, x13, x9, x10)

inst_8885:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3f800003; valaddr_reg:x12; val_offset:26592*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26592*FLEN/8, x13, x9, x10)

inst_8886:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3ffffffe; valaddr_reg:x12; val_offset:26595*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26595*FLEN/8, x13, x9, x10)

inst_8887:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3f800001; valaddr_reg:x12; val_offset:26598*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26598*FLEN/8, x13, x9, x10)

inst_8888:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3fb6db6d; valaddr_reg:x12; val_offset:26601*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26601*FLEN/8, x13, x9, x10)

inst_8889:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3fedb6db; valaddr_reg:x12; val_offset:26604*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26604*FLEN/8, x13, x9, x10)

inst_8890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3f999999; valaddr_reg:x12; val_offset:26607*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26607*FLEN/8, x13, x9, x10)

inst_8891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3fe66666; valaddr_reg:x12; val_offset:26610*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26610*FLEN/8, x13, x9, x10)

inst_8892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3fbbbbbb; valaddr_reg:x12; val_offset:26613*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26613*FLEN/8, x13, x9, x10)

inst_8893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3fc44444; valaddr_reg:x12; val_offset:26616*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26616*FLEN/8, x13, x9, x10)

inst_8894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3fa49249; valaddr_reg:x12; val_offset:26619*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26619*FLEN/8, x13, x9, x10)

inst_8895:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3fdb6db6; valaddr_reg:x12; val_offset:26622*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26622*FLEN/8, x13, x9, x10)

inst_8896:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3fb33333; valaddr_reg:x12; val_offset:26625*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26625*FLEN/8, x13, x9, x10)

inst_8897:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2da4ff and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f2d45 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2da4ff; op2val:0x2f2d45;
op3val:0x3fcccccc; valaddr_reg:x12; val_offset:26628*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26628*FLEN/8, x13, x9, x10)

inst_8898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x43000000; valaddr_reg:x12; val_offset:26631*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26631*FLEN/8, x13, x9, x10)

inst_8899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437fffff; valaddr_reg:x12; val_offset:26634*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26634*FLEN/8, x13, x9, x10)

inst_8900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x43400000; valaddr_reg:x12; val_offset:26637*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26637*FLEN/8, x13, x9, x10)

inst_8901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x433fffff; valaddr_reg:x12; val_offset:26640*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26640*FLEN/8, x13, x9, x10)

inst_8902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x43600000; valaddr_reg:x12; val_offset:26643*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26643*FLEN/8, x13, x9, x10)

inst_8903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x431fffff; valaddr_reg:x12; val_offset:26646*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26646*FLEN/8, x13, x9, x10)

inst_8904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x43700000; valaddr_reg:x12; val_offset:26649*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26649*FLEN/8, x13, x9, x10)

inst_8905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x430fffff; valaddr_reg:x12; val_offset:26652*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26652*FLEN/8, x13, x9, x10)

inst_8906:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x43780000; valaddr_reg:x12; val_offset:26655*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26655*FLEN/8, x13, x9, x10)

inst_8907:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x4307ffff; valaddr_reg:x12; val_offset:26658*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26658*FLEN/8, x13, x9, x10)

inst_8908:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437c0000; valaddr_reg:x12; val_offset:26661*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26661*FLEN/8, x13, x9, x10)

inst_8909:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x4303ffff; valaddr_reg:x12; val_offset:26664*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26664*FLEN/8, x13, x9, x10)

inst_8910:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437e0000; valaddr_reg:x12; val_offset:26667*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26667*FLEN/8, x13, x9, x10)

inst_8911:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x4301ffff; valaddr_reg:x12; val_offset:26670*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26670*FLEN/8, x13, x9, x10)

inst_8912:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437f0000; valaddr_reg:x12; val_offset:26673*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26673*FLEN/8, x13, x9, x10)

inst_8913:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x4300ffff; valaddr_reg:x12; val_offset:26676*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26676*FLEN/8, x13, x9, x10)

inst_8914:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437f8000; valaddr_reg:x12; val_offset:26679*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26679*FLEN/8, x13, x9, x10)

inst_8915:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x43007fff; valaddr_reg:x12; val_offset:26682*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26682*FLEN/8, x13, x9, x10)

inst_8916:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437fc000; valaddr_reg:x12; val_offset:26685*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26685*FLEN/8, x13, x9, x10)

inst_8917:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x43003fff; valaddr_reg:x12; val_offset:26688*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26688*FLEN/8, x13, x9, x10)

inst_8918:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437fe000; valaddr_reg:x12; val_offset:26691*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26691*FLEN/8, x13, x9, x10)

inst_8919:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x43001fff; valaddr_reg:x12; val_offset:26694*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26694*FLEN/8, x13, x9, x10)

inst_8920:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437ff000; valaddr_reg:x12; val_offset:26697*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26697*FLEN/8, x13, x9, x10)

inst_8921:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x43000fff; valaddr_reg:x12; val_offset:26700*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26700*FLEN/8, x13, x9, x10)

inst_8922:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437ff800; valaddr_reg:x12; val_offset:26703*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26703*FLEN/8, x13, x9, x10)

inst_8923:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x430007ff; valaddr_reg:x12; val_offset:26706*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26706*FLEN/8, x13, x9, x10)

inst_8924:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437ffc00; valaddr_reg:x12; val_offset:26709*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26709*FLEN/8, x13, x9, x10)

inst_8925:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x430003ff; valaddr_reg:x12; val_offset:26712*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26712*FLEN/8, x13, x9, x10)

inst_8926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437ffe00; valaddr_reg:x12; val_offset:26715*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26715*FLEN/8, x13, x9, x10)

inst_8927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x430001ff; valaddr_reg:x12; val_offset:26718*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26718*FLEN/8, x13, x9, x10)

inst_8928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437fff00; valaddr_reg:x12; val_offset:26721*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26721*FLEN/8, x13, x9, x10)

inst_8929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x430000ff; valaddr_reg:x12; val_offset:26724*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26724*FLEN/8, x13, x9, x10)

inst_8930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437fff80; valaddr_reg:x12; val_offset:26727*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26727*FLEN/8, x13, x9, x10)

inst_8931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x4300007f; valaddr_reg:x12; val_offset:26730*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26730*FLEN/8, x13, x9, x10)

inst_8932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437fffc0; valaddr_reg:x12; val_offset:26733*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26733*FLEN/8, x13, x9, x10)

inst_8933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x4300003f; valaddr_reg:x12; val_offset:26736*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26736*FLEN/8, x13, x9, x10)

inst_8934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437fffe0; valaddr_reg:x12; val_offset:26739*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26739*FLEN/8, x13, x9, x10)

inst_8935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x4300001f; valaddr_reg:x12; val_offset:26742*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26742*FLEN/8, x13, x9, x10)

inst_8936:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437ffff0; valaddr_reg:x12; val_offset:26745*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26745*FLEN/8, x13, x9, x10)

inst_8937:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x4300000f; valaddr_reg:x12; val_offset:26748*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26748*FLEN/8, x13, x9, x10)

inst_8938:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437ffff8; valaddr_reg:x12; val_offset:26751*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26751*FLEN/8, x13, x9, x10)

inst_8939:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x43000007; valaddr_reg:x12; val_offset:26754*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26754*FLEN/8, x13, x9, x10)

inst_8940:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437ffffc; valaddr_reg:x12; val_offset:26757*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26757*FLEN/8, x13, x9, x10)

inst_8941:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x43000003; valaddr_reg:x12; val_offset:26760*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26760*FLEN/8, x13, x9, x10)

inst_8942:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x437ffffe; valaddr_reg:x12; val_offset:26763*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26763*FLEN/8, x13, x9, x10)

inst_8943:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x86 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x43000001; valaddr_reg:x12; val_offset:26766*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26766*FLEN/8, x13, x9, x10)

inst_8944:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3ffffff8; valaddr_reg:x12; val_offset:26769*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26769*FLEN/8, x13, x9, x10)

inst_8945:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3f800007; valaddr_reg:x12; val_offset:26772*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26772*FLEN/8, x13, x9, x10)

inst_8946:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3ffffffc; valaddr_reg:x12; val_offset:26775*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26775*FLEN/8, x13, x9, x10)

inst_8947:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3f800003; valaddr_reg:x12; val_offset:26778*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26778*FLEN/8, x13, x9, x10)

inst_8948:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3ffffffe; valaddr_reg:x12; val_offset:26781*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26781*FLEN/8, x13, x9, x10)

inst_8949:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3f800001; valaddr_reg:x12; val_offset:26784*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26784*FLEN/8, x13, x9, x10)

inst_8950:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3fb6db6d; valaddr_reg:x12; val_offset:26787*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26787*FLEN/8, x13, x9, x10)

inst_8951:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3fedb6db; valaddr_reg:x12; val_offset:26790*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26790*FLEN/8, x13, x9, x10)

inst_8952:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3f999999; valaddr_reg:x12; val_offset:26793*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26793*FLEN/8, x13, x9, x10)

inst_8953:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3fe66666; valaddr_reg:x12; val_offset:26796*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26796*FLEN/8, x13, x9, x10)

inst_8954:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3fbbbbbb; valaddr_reg:x12; val_offset:26799*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26799*FLEN/8, x13, x9, x10)

inst_8955:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3fc44444; valaddr_reg:x12; val_offset:26802*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26802*FLEN/8, x13, x9, x10)

inst_8956:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3fa49249; valaddr_reg:x12; val_offset:26805*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26805*FLEN/8, x13, x9, x10)

inst_8957:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3fdb6db6; valaddr_reg:x12; val_offset:26808*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26808*FLEN/8, x13, x9, x10)

inst_8958:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3fb33333; valaddr_reg:x12; val_offset:26811*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26811*FLEN/8, x13, x9, x10)

inst_8959:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x349020 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x5abd08 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb49020; op2val:0x5abd08;
op3val:0x3fcccccc; valaddr_reg:x12; val_offset:26814*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26814*FLEN/8, x13, x9, x10)

inst_8960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43800000; valaddr_reg:x12; val_offset:26817*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26817*FLEN/8, x13, x9, x10)

inst_8961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43ffffff; valaddr_reg:x12; val_offset:26820*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26820*FLEN/8, x13, x9, x10)

inst_8962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43c00000; valaddr_reg:x12; val_offset:26823*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26823*FLEN/8, x13, x9, x10)

inst_8963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43bfffff; valaddr_reg:x12; val_offset:26826*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26826*FLEN/8, x13, x9, x10)

inst_8964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43e00000; valaddr_reg:x12; val_offset:26829*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26829*FLEN/8, x13, x9, x10)

inst_8965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x439fffff; valaddr_reg:x12; val_offset:26832*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26832*FLEN/8, x13, x9, x10)

inst_8966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43f00000; valaddr_reg:x12; val_offset:26835*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26835*FLEN/8, x13, x9, x10)

inst_8967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x438fffff; valaddr_reg:x12; val_offset:26838*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26838*FLEN/8, x13, x9, x10)

inst_8968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43f80000; valaddr_reg:x12; val_offset:26841*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26841*FLEN/8, x13, x9, x10)

inst_8969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x4387ffff; valaddr_reg:x12; val_offset:26844*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26844*FLEN/8, x13, x9, x10)

inst_8970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43fc0000; valaddr_reg:x12; val_offset:26847*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26847*FLEN/8, x13, x9, x10)

inst_8971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x4383ffff; valaddr_reg:x12; val_offset:26850*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26850*FLEN/8, x13, x9, x10)

inst_8972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43fe0000; valaddr_reg:x12; val_offset:26853*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26853*FLEN/8, x13, x9, x10)

inst_8973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x4381ffff; valaddr_reg:x12; val_offset:26856*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26856*FLEN/8, x13, x9, x10)

inst_8974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43ff0000; valaddr_reg:x12; val_offset:26859*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26859*FLEN/8, x13, x9, x10)

inst_8975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x4380ffff; valaddr_reg:x12; val_offset:26862*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26862*FLEN/8, x13, x9, x10)

inst_8976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43ff8000; valaddr_reg:x12; val_offset:26865*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26865*FLEN/8, x13, x9, x10)

inst_8977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43807fff; valaddr_reg:x12; val_offset:26868*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26868*FLEN/8, x13, x9, x10)

inst_8978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43ffc000; valaddr_reg:x12; val_offset:26871*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26871*FLEN/8, x13, x9, x10)

inst_8979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43803fff; valaddr_reg:x12; val_offset:26874*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26874*FLEN/8, x13, x9, x10)

inst_8980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43ffe000; valaddr_reg:x12; val_offset:26877*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26877*FLEN/8, x13, x9, x10)

inst_8981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43801fff; valaddr_reg:x12; val_offset:26880*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26880*FLEN/8, x13, x9, x10)

inst_8982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43fff000; valaddr_reg:x12; val_offset:26883*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26883*FLEN/8, x13, x9, x10)

inst_8983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43800fff; valaddr_reg:x12; val_offset:26886*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26886*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_70)
inst_8984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43fff800; valaddr_reg:x12; val_offset:26889*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26889*FLEN/8, x13, x9, x10)

inst_8985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x438007ff; valaddr_reg:x12; val_offset:26892*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26892*FLEN/8, x13, x9, x10)

inst_8986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43fffc00; valaddr_reg:x12; val_offset:26895*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26895*FLEN/8, x13, x9, x10)

inst_8987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x438003ff; valaddr_reg:x12; val_offset:26898*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26898*FLEN/8, x13, x9, x10)

inst_8988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43fffe00; valaddr_reg:x12; val_offset:26901*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26901*FLEN/8, x13, x9, x10)

inst_8989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x438001ff; valaddr_reg:x12; val_offset:26904*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26904*FLEN/8, x13, x9, x10)

inst_8990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43ffff00; valaddr_reg:x12; val_offset:26907*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26907*FLEN/8, x13, x9, x10)

inst_8991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x438000ff; valaddr_reg:x12; val_offset:26910*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26910*FLEN/8, x13, x9, x10)

inst_8992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43ffff80; valaddr_reg:x12; val_offset:26913*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26913*FLEN/8, x13, x9, x10)

inst_8993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x4380007f; valaddr_reg:x12; val_offset:26916*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26916*FLEN/8, x13, x9, x10)

inst_8994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43ffffc0; valaddr_reg:x12; val_offset:26919*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26919*FLEN/8, x13, x9, x10)

inst_8995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x4380003f; valaddr_reg:x12; val_offset:26922*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26922*FLEN/8, x13, x9, x10)

inst_8996:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43ffffe0; valaddr_reg:x12; val_offset:26925*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26925*FLEN/8, x13, x9, x10)

inst_8997:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x4380001f; valaddr_reg:x12; val_offset:26928*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26928*FLEN/8, x13, x9, x10)

inst_8998:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43fffff0; valaddr_reg:x12; val_offset:26931*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26931*FLEN/8, x13, x9, x10)

inst_8999:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x4380000f; valaddr_reg:x12; val_offset:26934*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26934*FLEN/8, x13, x9, x10)

inst_9000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43fffff8; valaddr_reg:x12; val_offset:26937*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26937*FLEN/8, x13, x9, x10)

inst_9001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43800007; valaddr_reg:x12; val_offset:26940*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26940*FLEN/8, x13, x9, x10)

inst_9002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43fffffc; valaddr_reg:x12; val_offset:26943*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26943*FLEN/8, x13, x9, x10)

inst_9003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43800003; valaddr_reg:x12; val_offset:26946*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26946*FLEN/8, x13, x9, x10)

inst_9004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43fffffe; valaddr_reg:x12; val_offset:26949*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26949*FLEN/8, x13, x9, x10)

inst_9005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x87 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x43800001; valaddr_reg:x12; val_offset:26952*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26952*FLEN/8, x13, x9, x10)

inst_9006:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3ffffff8; valaddr_reg:x12; val_offset:26955*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26955*FLEN/8, x13, x9, x10)

inst_9007:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3f800007; valaddr_reg:x12; val_offset:26958*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26958*FLEN/8, x13, x9, x10)

inst_9008:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3ffffffc; valaddr_reg:x12; val_offset:26961*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26961*FLEN/8, x13, x9, x10)

inst_9009:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3f800003; valaddr_reg:x12; val_offset:26964*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26964*FLEN/8, x13, x9, x10)

inst_9010:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3ffffffe; valaddr_reg:x12; val_offset:26967*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26967*FLEN/8, x13, x9, x10)

inst_9011:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3f800001; valaddr_reg:x12; val_offset:26970*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26970*FLEN/8, x13, x9, x10)

inst_9012:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3fb6db6d; valaddr_reg:x12; val_offset:26973*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26973*FLEN/8, x13, x9, x10)

inst_9013:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3fedb6db; valaddr_reg:x12; val_offset:26976*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26976*FLEN/8, x13, x9, x10)

inst_9014:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3f999999; valaddr_reg:x12; val_offset:26979*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26979*FLEN/8, x13, x9, x10)

inst_9015:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3fe66666; valaddr_reg:x12; val_offset:26982*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26982*FLEN/8, x13, x9, x10)

inst_9016:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3fbbbbbb; valaddr_reg:x12; val_offset:26985*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26985*FLEN/8, x13, x9, x10)

inst_9017:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3fc44444; valaddr_reg:x12; val_offset:26988*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26988*FLEN/8, x13, x9, x10)

inst_9018:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3fa49249; valaddr_reg:x12; val_offset:26991*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26991*FLEN/8, x13, x9, x10)

inst_9019:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3fdb6db6; valaddr_reg:x12; val_offset:26994*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26994*FLEN/8, x13, x9, x10)

inst_9020:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3fb33333; valaddr_reg:x12; val_offset:26997*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 26997*FLEN/8, x13, x9, x10)

inst_9021:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2d3e0e and fs2 == 0 and fe2 == 0x00 and fm2 == 0x2f494d and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2d3e0e; op2val:0x2f494d;
op3val:0x3fcccccc; valaddr_reg:x12; val_offset:27000*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27000*FLEN/8, x13, x9, x10)

inst_9022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x44000000; valaddr_reg:x12; val_offset:27003*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27003*FLEN/8, x13, x9, x10)

inst_9023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447fffff; valaddr_reg:x12; val_offset:27006*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27006*FLEN/8, x13, x9, x10)

inst_9024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x44400000; valaddr_reg:x12; val_offset:27009*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27009*FLEN/8, x13, x9, x10)

inst_9025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x443fffff; valaddr_reg:x12; val_offset:27012*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27012*FLEN/8, x13, x9, x10)

inst_9026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x44600000; valaddr_reg:x12; val_offset:27015*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27015*FLEN/8, x13, x9, x10)

inst_9027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x441fffff; valaddr_reg:x12; val_offset:27018*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27018*FLEN/8, x13, x9, x10)

inst_9028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x44700000; valaddr_reg:x12; val_offset:27021*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27021*FLEN/8, x13, x9, x10)

inst_9029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x440fffff; valaddr_reg:x12; val_offset:27024*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27024*FLEN/8, x13, x9, x10)

inst_9030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x44780000; valaddr_reg:x12; val_offset:27027*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27027*FLEN/8, x13, x9, x10)

inst_9031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x4407ffff; valaddr_reg:x12; val_offset:27030*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27030*FLEN/8, x13, x9, x10)

inst_9032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447c0000; valaddr_reg:x12; val_offset:27033*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27033*FLEN/8, x13, x9, x10)

inst_9033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x4403ffff; valaddr_reg:x12; val_offset:27036*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27036*FLEN/8, x13, x9, x10)

inst_9034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447e0000; valaddr_reg:x12; val_offset:27039*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27039*FLEN/8, x13, x9, x10)

inst_9035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x4401ffff; valaddr_reg:x12; val_offset:27042*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27042*FLEN/8, x13, x9, x10)

inst_9036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447f0000; valaddr_reg:x12; val_offset:27045*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27045*FLEN/8, x13, x9, x10)

inst_9037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x4400ffff; valaddr_reg:x12; val_offset:27048*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27048*FLEN/8, x13, x9, x10)

inst_9038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447f8000; valaddr_reg:x12; val_offset:27051*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27051*FLEN/8, x13, x9, x10)

inst_9039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x44007fff; valaddr_reg:x12; val_offset:27054*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27054*FLEN/8, x13, x9, x10)

inst_9040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447fc000; valaddr_reg:x12; val_offset:27057*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27057*FLEN/8, x13, x9, x10)

inst_9041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x44003fff; valaddr_reg:x12; val_offset:27060*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27060*FLEN/8, x13, x9, x10)

inst_9042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447fe000; valaddr_reg:x12; val_offset:27063*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27063*FLEN/8, x13, x9, x10)

inst_9043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x44001fff; valaddr_reg:x12; val_offset:27066*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27066*FLEN/8, x13, x9, x10)

inst_9044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447ff000; valaddr_reg:x12; val_offset:27069*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27069*FLEN/8, x13, x9, x10)

inst_9045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x44000fff; valaddr_reg:x12; val_offset:27072*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27072*FLEN/8, x13, x9, x10)

inst_9046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447ff800; valaddr_reg:x12; val_offset:27075*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27075*FLEN/8, x13, x9, x10)

inst_9047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x440007ff; valaddr_reg:x12; val_offset:27078*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27078*FLEN/8, x13, x9, x10)

inst_9048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447ffc00; valaddr_reg:x12; val_offset:27081*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27081*FLEN/8, x13, x9, x10)

inst_9049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x440003ff; valaddr_reg:x12; val_offset:27084*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27084*FLEN/8, x13, x9, x10)

inst_9050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447ffe00; valaddr_reg:x12; val_offset:27087*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27087*FLEN/8, x13, x9, x10)

inst_9051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x440001ff; valaddr_reg:x12; val_offset:27090*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27090*FLEN/8, x13, x9, x10)

inst_9052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447fff00; valaddr_reg:x12; val_offset:27093*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27093*FLEN/8, x13, x9, x10)

inst_9053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x440000ff; valaddr_reg:x12; val_offset:27096*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27096*FLEN/8, x13, x9, x10)

inst_9054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447fff80; valaddr_reg:x12; val_offset:27099*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27099*FLEN/8, x13, x9, x10)

inst_9055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x4400007f; valaddr_reg:x12; val_offset:27102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27102*FLEN/8, x13, x9, x10)

inst_9056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447fffc0; valaddr_reg:x12; val_offset:27105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27105*FLEN/8, x13, x9, x10)

inst_9057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x4400003f; valaddr_reg:x12; val_offset:27108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27108*FLEN/8, x13, x9, x10)

inst_9058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447fffe0; valaddr_reg:x12; val_offset:27111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27111*FLEN/8, x13, x9, x10)

inst_9059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x4400001f; valaddr_reg:x12; val_offset:27114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27114*FLEN/8, x13, x9, x10)

inst_9060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447ffff0; valaddr_reg:x12; val_offset:27117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27117*FLEN/8, x13, x9, x10)

inst_9061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x4400000f; valaddr_reg:x12; val_offset:27120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27120*FLEN/8, x13, x9, x10)

inst_9062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447ffff8; valaddr_reg:x12; val_offset:27123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27123*FLEN/8, x13, x9, x10)

inst_9063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x44000007; valaddr_reg:x12; val_offset:27126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27126*FLEN/8, x13, x9, x10)

inst_9064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447ffffc; valaddr_reg:x12; val_offset:27129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27129*FLEN/8, x13, x9, x10)

inst_9065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x44000003; valaddr_reg:x12; val_offset:27132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27132*FLEN/8, x13, x9, x10)

inst_9066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x447ffffe; valaddr_reg:x12; val_offset:27135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27135*FLEN/8, x13, x9, x10)

inst_9067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x88 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x44000001; valaddr_reg:x12; val_offset:27138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27138*FLEN/8, x13, x9, x10)

inst_9068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3ffffff8; valaddr_reg:x12; val_offset:27141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27141*FLEN/8, x13, x9, x10)

inst_9069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3f800007; valaddr_reg:x12; val_offset:27144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27144*FLEN/8, x13, x9, x10)

inst_9070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3ffffffc; valaddr_reg:x12; val_offset:27147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27147*FLEN/8, x13, x9, x10)

inst_9071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3f800003; valaddr_reg:x12; val_offset:27150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27150*FLEN/8, x13, x9, x10)

inst_9072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3ffffffe; valaddr_reg:x12; val_offset:27153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27153*FLEN/8, x13, x9, x10)

inst_9073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3f800001; valaddr_reg:x12; val_offset:27156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27156*FLEN/8, x13, x9, x10)

inst_9074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3fb6db6d; valaddr_reg:x12; val_offset:27159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27159*FLEN/8, x13, x9, x10)

inst_9075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3fedb6db; valaddr_reg:x12; val_offset:27162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27162*FLEN/8, x13, x9, x10)

inst_9076:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3f999999; valaddr_reg:x12; val_offset:27165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27165*FLEN/8, x13, x9, x10)

inst_9077:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3fe66666; valaddr_reg:x12; val_offset:27168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27168*FLEN/8, x13, x9, x10)

inst_9078:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3fbbbbbb; valaddr_reg:x12; val_offset:27171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27171*FLEN/8, x13, x9, x10)

inst_9079:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3fc44444; valaddr_reg:x12; val_offset:27174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27174*FLEN/8, x13, x9, x10)

inst_9080:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3fa49249; valaddr_reg:x12; val_offset:27177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27177*FLEN/8, x13, x9, x10)

inst_9081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3fdb6db6; valaddr_reg:x12; val_offset:27180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27180*FLEN/8, x13, x9, x10)

inst_9082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3fb33333; valaddr_reg:x12; val_offset:27183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27183*FLEN/8, x13, x9, x10)

inst_9083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5aca86 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x4ae25b and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7edaca86; op2val:0x4ae25b;
op3val:0x3fcccccc; valaddr_reg:x12; val_offset:27186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27186*FLEN/8, x13, x9, x10)

inst_9084:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44800000; valaddr_reg:x12; val_offset:27189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27189*FLEN/8, x13, x9, x10)

inst_9085:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44ffffff; valaddr_reg:x12; val_offset:27192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27192*FLEN/8, x13, x9, x10)

inst_9086:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44c00000; valaddr_reg:x12; val_offset:27195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27195*FLEN/8, x13, x9, x10)

inst_9087:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44bfffff; valaddr_reg:x12; val_offset:27198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27198*FLEN/8, x13, x9, x10)

inst_9088:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44e00000; valaddr_reg:x12; val_offset:27201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27201*FLEN/8, x13, x9, x10)

inst_9089:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x449fffff; valaddr_reg:x12; val_offset:27204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27204*FLEN/8, x13, x9, x10)

inst_9090:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44f00000; valaddr_reg:x12; val_offset:27207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27207*FLEN/8, x13, x9, x10)

inst_9091:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x448fffff; valaddr_reg:x12; val_offset:27210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27210*FLEN/8, x13, x9, x10)

inst_9092:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44f80000; valaddr_reg:x12; val_offset:27213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27213*FLEN/8, x13, x9, x10)

inst_9093:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x4487ffff; valaddr_reg:x12; val_offset:27216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27216*FLEN/8, x13, x9, x10)

inst_9094:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44fc0000; valaddr_reg:x12; val_offset:27219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27219*FLEN/8, x13, x9, x10)

inst_9095:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x4483ffff; valaddr_reg:x12; val_offset:27222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27222*FLEN/8, x13, x9, x10)

inst_9096:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44fe0000; valaddr_reg:x12; val_offset:27225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27225*FLEN/8, x13, x9, x10)

inst_9097:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x4481ffff; valaddr_reg:x12; val_offset:27228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27228*FLEN/8, x13, x9, x10)

inst_9098:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44ff0000; valaddr_reg:x12; val_offset:27231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27231*FLEN/8, x13, x9, x10)

inst_9099:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x4480ffff; valaddr_reg:x12; val_offset:27234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27234*FLEN/8, x13, x9, x10)

inst_9100:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44ff8000; valaddr_reg:x12; val_offset:27237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27237*FLEN/8, x13, x9, x10)

inst_9101:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44807fff; valaddr_reg:x12; val_offset:27240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27240*FLEN/8, x13, x9, x10)

inst_9102:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44ffc000; valaddr_reg:x12; val_offset:27243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27243*FLEN/8, x13, x9, x10)

inst_9103:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44803fff; valaddr_reg:x12; val_offset:27246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27246*FLEN/8, x13, x9, x10)

inst_9104:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44ffe000; valaddr_reg:x12; val_offset:27249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27249*FLEN/8, x13, x9, x10)

inst_9105:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44801fff; valaddr_reg:x12; val_offset:27252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27252*FLEN/8, x13, x9, x10)

inst_9106:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44fff000; valaddr_reg:x12; val_offset:27255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27255*FLEN/8, x13, x9, x10)

inst_9107:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44800fff; valaddr_reg:x12; val_offset:27258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27258*FLEN/8, x13, x9, x10)

inst_9108:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44fff800; valaddr_reg:x12; val_offset:27261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27261*FLEN/8, x13, x9, x10)

inst_9109:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x448007ff; valaddr_reg:x12; val_offset:27264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27264*FLEN/8, x13, x9, x10)

inst_9110:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44fffc00; valaddr_reg:x12; val_offset:27267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27267*FLEN/8, x13, x9, x10)

inst_9111:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x448003ff; valaddr_reg:x12; val_offset:27270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27270*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_71)
inst_9112:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44fffe00; valaddr_reg:x12; val_offset:27273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27273*FLEN/8, x13, x9, x10)

inst_9113:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x448001ff; valaddr_reg:x12; val_offset:27276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27276*FLEN/8, x13, x9, x10)

inst_9114:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44ffff00; valaddr_reg:x12; val_offset:27279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27279*FLEN/8, x13, x9, x10)

inst_9115:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x448000ff; valaddr_reg:x12; val_offset:27282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27282*FLEN/8, x13, x9, x10)

inst_9116:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44ffff80; valaddr_reg:x12; val_offset:27285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27285*FLEN/8, x13, x9, x10)

inst_9117:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x4480007f; valaddr_reg:x12; val_offset:27288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27288*FLEN/8, x13, x9, x10)

inst_9118:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44ffffc0; valaddr_reg:x12; val_offset:27291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27291*FLEN/8, x13, x9, x10)

inst_9119:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x4480003f; valaddr_reg:x12; val_offset:27294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27294*FLEN/8, x13, x9, x10)

inst_9120:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44ffffe0; valaddr_reg:x12; val_offset:27297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27297*FLEN/8, x13, x9, x10)

inst_9121:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x4480001f; valaddr_reg:x12; val_offset:27300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27300*FLEN/8, x13, x9, x10)

inst_9122:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44fffff0; valaddr_reg:x12; val_offset:27303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27303*FLEN/8, x13, x9, x10)

inst_9123:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x4480000f; valaddr_reg:x12; val_offset:27306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27306*FLEN/8, x13, x9, x10)

inst_9124:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44fffff8; valaddr_reg:x12; val_offset:27309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27309*FLEN/8, x13, x9, x10)

inst_9125:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44800007; valaddr_reg:x12; val_offset:27312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27312*FLEN/8, x13, x9, x10)

inst_9126:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44fffffc; valaddr_reg:x12; val_offset:27315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27315*FLEN/8, x13, x9, x10)

inst_9127:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44800003; valaddr_reg:x12; val_offset:27318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27318*FLEN/8, x13, x9, x10)

inst_9128:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44fffffe; valaddr_reg:x12; val_offset:27321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27321*FLEN/8, x13, x9, x10)

inst_9129:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x89 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x44800001; valaddr_reg:x12; val_offset:27324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27324*FLEN/8, x13, x9, x10)

inst_9130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3ffffff8; valaddr_reg:x12; val_offset:27327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27327*FLEN/8, x13, x9, x10)

inst_9131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3f800007; valaddr_reg:x12; val_offset:27330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27330*FLEN/8, x13, x9, x10)

inst_9132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3ffffffc; valaddr_reg:x12; val_offset:27333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27333*FLEN/8, x13, x9, x10)

inst_9133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3f800003; valaddr_reg:x12; val_offset:27336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27336*FLEN/8, x13, x9, x10)

inst_9134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3ffffffe; valaddr_reg:x12; val_offset:27339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27339*FLEN/8, x13, x9, x10)

inst_9135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3f800001; valaddr_reg:x12; val_offset:27342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27342*FLEN/8, x13, x9, x10)

inst_9136:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3fb6db6d; valaddr_reg:x12; val_offset:27345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27345*FLEN/8, x13, x9, x10)

inst_9137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3fedb6db; valaddr_reg:x12; val_offset:27348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27348*FLEN/8, x13, x9, x10)

inst_9138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3f999999; valaddr_reg:x12; val_offset:27351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27351*FLEN/8, x13, x9, x10)

inst_9139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3fe66666; valaddr_reg:x12; val_offset:27354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27354*FLEN/8, x13, x9, x10)

inst_9140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3fbbbbbb; valaddr_reg:x12; val_offset:27357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27357*FLEN/8, x13, x9, x10)

inst_9141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3fc44444; valaddr_reg:x12; val_offset:27360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27360*FLEN/8, x13, x9, x10)

inst_9142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3fa49249; valaddr_reg:x12; val_offset:27363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27363*FLEN/8, x13, x9, x10)

inst_9143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3fdb6db6; valaddr_reg:x12; val_offset:27366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27366*FLEN/8, x13, x9, x10)

inst_9144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3fb33333; valaddr_reg:x12; val_offset:27369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27369*FLEN/8, x13, x9, x10)

inst_9145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x05f534 and fs2 == 0 and fe2 == 0x00 and fm2 == 0x3d2750 and fs3 == 0 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f05f534; op2val:0x3d2750;
op3val:0x3fcccccc; valaddr_reg:x12; val_offset:27372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27372*FLEN/8, x13, x9, x10)

inst_9146:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x45000000; valaddr_reg:x12; val_offset:27375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27375*FLEN/8, x13, x9, x10)

inst_9147:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x457fffff; valaddr_reg:x12; val_offset:27378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27378*FLEN/8, x13, x9, x10)

inst_9148:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x45400000; valaddr_reg:x12; val_offset:27381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27381*FLEN/8, x13, x9, x10)

inst_9149:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x453fffff; valaddr_reg:x12; val_offset:27384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27384*FLEN/8, x13, x9, x10)

inst_9150:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x45600000; valaddr_reg:x12; val_offset:27387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27387*FLEN/8, x13, x9, x10)

inst_9151:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x451fffff; valaddr_reg:x12; val_offset:27390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27390*FLEN/8, x13, x9, x10)

inst_9152:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x45700000; valaddr_reg:x12; val_offset:27393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27393*FLEN/8, x13, x9, x10)

inst_9153:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x450fffff; valaddr_reg:x12; val_offset:27396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27396*FLEN/8, x13, x9, x10)

inst_9154:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x45780000; valaddr_reg:x12; val_offset:27399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27399*FLEN/8, x13, x9, x10)

inst_9155:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x4507ffff; valaddr_reg:x12; val_offset:27402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27402*FLEN/8, x13, x9, x10)

inst_9156:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x457c0000; valaddr_reg:x12; val_offset:27405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27405*FLEN/8, x13, x9, x10)

inst_9157:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x4503ffff; valaddr_reg:x12; val_offset:27408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27408*FLEN/8, x13, x9, x10)

inst_9158:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x457e0000; valaddr_reg:x12; val_offset:27411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27411*FLEN/8, x13, x9, x10)

inst_9159:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x4501ffff; valaddr_reg:x12; val_offset:27414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27414*FLEN/8, x13, x9, x10)

inst_9160:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x457f0000; valaddr_reg:x12; val_offset:27417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27417*FLEN/8, x13, x9, x10)

inst_9161:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x4500ffff; valaddr_reg:x12; val_offset:27420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27420*FLEN/8, x13, x9, x10)

inst_9162:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c38f3 and fs2 == 0 and fe2 == 0x01 and fm2 == 0x51c08d and fs3 == 0 and fe3 == 0x8a and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c38f3; op2val:0xd1c08d;
op3val:0x457f8000; valaddr_reg:x12; val_offset:27423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 27423*FLEN/8, x13, x9, x10)

#endif
RVTEST_CODE_END
RVMODEL_HALT
RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353184,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964639,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353200,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964623,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353208,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964615,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353212,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964611,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353214,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1056964609,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2124903242,32,FLEN)
NAN_BOXED(6412299,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065353216,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073741823,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1069547520,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1069547519,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1071644672,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1067450367,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1072693248,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1066401791,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073217536,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065877503,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073479680,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065615359,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073610752,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065484287,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073676288,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065418751,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073709056,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065385983,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073725440,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065369599,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073733632,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065361407,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073737728,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065357311,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073739776,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065355263,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073740800,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065354239,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073741312,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065353727,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073741568,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065353471,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073741696,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065353343,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073741760,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065353279,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073741792,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065353247,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073741808,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065353231,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2101052857,32,FLEN)
NAN_BOXED(28229096,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073741824,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082130431,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1077936128,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1077936127,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1080033280,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1075838975,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1081081856,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1074790399,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1081606144,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1074266111,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1081868288,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1074003967,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1081999360,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073872895,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082064896,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073807359,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082097664,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073774591,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082114048,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073758207,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082122240,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073750015,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082126336,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073745919,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082128384,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073743871,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082129408,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073742847,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082129920,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073742335,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082130176,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073742079,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082130304,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073741951,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082130368,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073741887,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082130400,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073741855,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082130416,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073741839,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082130424,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073741831,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082130428,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073741827,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1082130430,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073741825,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2125684957,32,FLEN)
NAN_BOXED(5985904,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082130432,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090519039,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1086324736,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1086324735,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1088421888,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1084227583,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1089470464,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1083179007,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1089994752,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082654719,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090256896,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082392575,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090387968,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082261503,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090453504,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082195967,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090486272,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082163199,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090502656,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082146815,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090510848,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082138623,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090514944,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082134527,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090516992,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082132479,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090518016,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082131455,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090518528,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082130943,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090518784,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082130687,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090518912,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082130559,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090518976,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082130495,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090519008,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082130463,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090519024,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082130447,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090519032,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082130439,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090519036,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082130435,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1090519038,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1082130433,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2128940249,32,FLEN)
NAN_BOXED(4687801,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090519040,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098907647,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1094713344,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1094713343,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1096810496,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1092616191,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1097859072,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1091567615,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098383360,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1091043327,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098645504,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090781183,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098776576,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090650111,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098842112,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090584575,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098874880,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090551807,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098891264,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090535423,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098899456,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090527231,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098903552,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090523135,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098905600,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090521087,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098906624,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090520063,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098907136,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090519551,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098907392,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090519295,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098907520,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090519167,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098907584,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090519103,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098907616,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090519071,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098907632,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090519055,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098907640,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090519047,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098907644,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090519043,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1098907646,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1090519041,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2131117344,32,FLEN)
NAN_BOXED(3998441,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098907648,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107296255,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1103101952,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1103101951,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1105199104,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1101004799,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1106247680,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1099956223,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1106771968,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1099431935,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107034112,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1099169791,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107165184,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1099038719,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107230720,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098973183,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107263488,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098940415,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107279872,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098924031,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107288064,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098915839,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107292160,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098911743,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107294208,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098909695,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107295232,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098908671,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107295744,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098908159,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107296000,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098907903,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107296128,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098907775,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107296192,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098907711,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107296224,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098907679,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107296240,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098907663,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107296248,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098907655,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107296252,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098907651,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1107296254,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1098907649,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2123776003,32,FLEN)
NAN_BOXED(7146365,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107296256,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115684863,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1111490560,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1111490559,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1113587712,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1109393407,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1114636288,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1108344831,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115160576,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107820543,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115422720,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107558399,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115553792,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107427327,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115619328,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107361791,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115652096,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107329023,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115668480,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107312639,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115676672,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107304447,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115680768,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107300351,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115682816,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107298303,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115683840,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107297279,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115684352,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107296767,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115684608,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107296511,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115684736,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107296383,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115684800,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107296319,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115684832,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107296287,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115684848,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107296271,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115684856,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107296263,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115684860,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107296259,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1115684862,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1107296257,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2118633542,32,FLEN)
NAN_BOXED(10749116,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115684864,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124073471,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1119879168,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1119879167,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1121976320,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1117782015,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1123024896,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1116733439,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1123549184,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1116209151,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1123811328,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115947007,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1123942400,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115815935,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124007936,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115750399,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124040704,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115717631,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124057088,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115701247,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124065280,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115693055,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124069376,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115688959,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124071424,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115686911,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124072448,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115685887,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124072960,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115685375,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124073216,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115685119,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124073344,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115684991,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124073408,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115684927,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124073440,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115684895,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124073456,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115684879,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124073464,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115684871,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124073468,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115684867,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1124073470,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1115684865,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2133697791,32,FLEN)
NAN_BOXED(3091781,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124073472,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132462079,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1128267776,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1128267775,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1130364928,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1126170623,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1131413504,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1125122047,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1131937792,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124597759,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132199936,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124335615,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132331008,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124204543,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132396544,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124139007,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132429312,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124106239,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132445696,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124089855,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132453888,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124081663,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132457984,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124077567,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132460032,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124075519,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132461056,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124074495,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132461568,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124073983,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132461824,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124073727,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132461952,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124073599,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132462016,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124073535,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132462048,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124073503,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132462064,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124073487,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132462072,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124073479,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132462076,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124073475,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1132462078,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1124073473,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2125762592,32,FLEN)
NAN_BOXED(5946632,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132462080,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140850687,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1136656384,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1136656383,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1138753536,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1134559231,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1139802112,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1133510655,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140326400,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132986367,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140588544,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132724223,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140719616,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132593151,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140785152,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132527615,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140817920,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132494847,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140834304,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132478463,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140842496,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132470271,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140846592,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132466175,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140848640,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132464127,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140849664,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132463103,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140850176,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132462591,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140850432,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132462335,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140850560,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132462207,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140850624,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132462143,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140850656,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132462111,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140850672,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132462095,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140850680,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132462087,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140850684,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132462083,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1140850686,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1132462081,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2133671438,32,FLEN)
NAN_BOXED(3098957,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140850688,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149239295,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1145044992,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1145044991,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1147142144,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1142947839,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1148190720,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1141899263,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1148715008,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1141374975,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1148977152,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1141112831,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149108224,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140981759,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149173760,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140916223,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149206528,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140883455,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149222912,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140867071,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149231104,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140858879,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149235200,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140854783,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149237248,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140852735,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149238272,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140851711,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149238784,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140851199,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149239040,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140850943,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149239168,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140850815,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149239232,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140850751,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149239264,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140850719,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149239280,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140850703,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149239288,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140850695,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149239292,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140850691,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1149239294,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1140850689,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2128267910,32,FLEN)
NAN_BOXED(4907611,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149239296,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157627903,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1153433600,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1153433599,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1155530752,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1151336447,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1156579328,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1150287871,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157103616,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149763583,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157365760,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149501439,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157496832,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149370367,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157562368,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149304831,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157595136,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149272063,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157611520,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149255679,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157619712,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149247487,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157623808,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149243391,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157625856,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149241343,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157626880,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149240319,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157627392,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149239807,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157627648,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149239551,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157627776,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149239423,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157627840,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149239359,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157627872,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149239327,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157627888,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149239311,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157627896,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149239303,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157627900,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149239299,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1157627902,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1149239297,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2131096884,32,FLEN)
NAN_BOXED(4007760,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157627904,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166016511,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1161822208,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1161822207,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1163919360,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1159725055,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1164967936,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1158676479,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1165492224,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1158152191,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1165754368,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157890047,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1165885440,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157758975,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1165950976,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157693439,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1165983744,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157660671,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166000128,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157644287,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166008320,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157636095,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166012416,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157631999,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166014464,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157629951,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166015488,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157628927,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166016000,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157628415,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166016256,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157628159,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166016384,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157628031,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166016448,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157627967,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166016480,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157627935,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166016496,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157627919,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166016504,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157627911,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166016508,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157627907,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1166016510,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1157627905,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1073741816,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1065353223,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1073741820,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1065353219,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1073741822,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1065353217,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1068948333,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1072543451,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1067030937,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1072064102,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1069267899,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1069827140,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1067749961,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1071345078,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1068708659,32,FLEN)
NAN_BOXED(2115778803,32,FLEN)
NAN_BOXED(13746317,32,FLEN)
NAN_BOXED(1070386380,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1166016512,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1174405119,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1170210816,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)
NAN_BOXED(3643980,32,FLEN)
NAN_BOXED(1170210815,32,FLEN)
NAN_BOXED(2131973300,32,FLEN)

RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_12:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_13:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_14:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_15:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_16:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_17:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_18:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_19:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_20:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_21:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_22:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_23:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_24:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_25:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_26:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_27:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_28:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_29:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_30:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_31:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_32:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_33:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_34:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_35:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_36:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_37:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_38:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_39:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_40:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_41:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_42:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_43:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_44:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_45:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_46:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_47:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_48:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_49:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_50:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_51:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_52:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_53:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_54:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_55:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_56:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_57:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_58:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_59:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_60:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_61:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_62:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_63:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_64:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_65:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_66:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_67:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_68:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_69:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_70:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_71:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_72:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_73:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_74:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_75:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_76:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_77:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_78:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_79:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_80:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_81:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_82:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_83:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_84:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_85:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_86:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_87:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_88:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_89:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_90:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_91:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_92:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_93:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_94:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_95:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_96:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_97:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_98:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_99:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_100:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_101:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_102:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_103:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_104:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_105:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_106:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_107:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_108:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_109:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_110:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_111:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_112:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_113:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_114:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_115:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_116:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_117:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_118:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_119:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_120:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_121:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_122:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_123:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_124:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_125:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_126:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_127:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_128:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_129:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_130:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_131:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_132:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_133:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_134:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_135:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_136:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_137:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_138:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_139:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_140:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_141:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_142:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_143:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_144:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_145:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_146:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_147:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_148:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_149:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_150:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_151:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_152:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_153:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_154:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_155:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_156:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_157:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_158:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_159:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_160:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_161:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_162:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_163:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_164:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_165:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_166:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_167:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_168:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_169:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_170:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_171:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_172:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_173:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_174:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_175:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_176:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_177:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_178:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_179:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_180:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_181:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_182:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_183:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_184:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_185:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_186:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_187:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_188:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_189:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_190:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_191:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_192:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_193:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_194:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_195:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_196:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_197:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_198:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_199:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_200:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_201:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_202:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_203:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_204:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_205:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_206:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_207:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_208:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_209:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_210:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_211:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_212:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_213:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_214:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_215:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_216:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_217:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_218:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_219:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_220:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_221:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_222:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_223:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_224:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_225:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_226:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_227:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_228:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_229:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_230:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_231:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_232:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_233:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_234:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_235:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_236:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_237:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_238:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_239:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_240:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_241:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_242:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_243:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_244:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_245:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_246:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_247:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_248:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_249:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_250:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_251:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_252:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_253:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_254:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_255:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_256:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_257:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_258:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_259:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_260:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_261:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_262:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_263:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_264:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_265:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_266:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_267:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_268:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_269:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_270:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_271:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_272:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_273:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_274:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_275:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_276:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_277:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_278:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_279:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_280:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_281:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_282:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_283:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_284:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_285:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_286:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_287:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_288:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_289:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_290:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_291:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_292:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_293:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_294:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_295:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_296:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_297:
    .fill 180*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
