
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 07:30:48 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fnmadd.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fnmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fnmadd_b15)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_10738:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0x9ffffffc; valaddr_reg:x12; val_offset:32151*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32151*FLEN/8, x13, x9, x10)

inst_10739:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0x9f800003; valaddr_reg:x12; val_offset:32154*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32154*FLEN/8, x13, x9, x10)

inst_10740:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0x9ffffffe; valaddr_reg:x12; val_offset:32157*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32157*FLEN/8, x13, x9, x10)

inst_10741:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x3f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0x9f800001; valaddr_reg:x12; val_offset:32160*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32160*FLEN/8, x13, x9, x10)

inst_10742:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:32163*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32163*FLEN/8, x13, x9, x10)

inst_10743:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbf800007; valaddr_reg:x12; val_offset:32166*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32166*FLEN/8, x13, x9, x10)

inst_10744:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:32169*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32169*FLEN/8, x13, x9, x10)

inst_10745:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbf800003; valaddr_reg:x12; val_offset:32172*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32172*FLEN/8, x13, x9, x10)

inst_10746:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:32175*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32175*FLEN/8, x13, x9, x10)

inst_10747:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbf800001; valaddr_reg:x12; val_offset:32178*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32178*FLEN/8, x13, x9, x10)

inst_10748:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:32181*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32181*FLEN/8, x13, x9, x10)

inst_10749:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:32184*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32184*FLEN/8, x13, x9, x10)

inst_10750:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbf999999; valaddr_reg:x12; val_offset:32187*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32187*FLEN/8, x13, x9, x10)

inst_10751:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:32190*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32190*FLEN/8, x13, x9, x10)

inst_10752:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:32193*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32193*FLEN/8, x13, x9, x10)

inst_10753:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:32196*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32196*FLEN/8, x13, x9, x10)

inst_10754:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:32199*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32199*FLEN/8, x13, x9, x10)

inst_10755:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:32202*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32202*FLEN/8, x13, x9, x10)

inst_10756:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:32205*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32205*FLEN/8, x13, x9, x10)

inst_10757:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x7301ac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x06d817 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7df301ac; op2val:0x8106d817;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:32208*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32208*FLEN/8, x13, x9, x10)

inst_10758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa0000000; valaddr_reg:x12; val_offset:32211*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32211*FLEN/8, x13, x9, x10)

inst_10759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07fffff; valaddr_reg:x12; val_offset:32214*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32214*FLEN/8, x13, x9, x10)

inst_10760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa0400000; valaddr_reg:x12; val_offset:32217*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32217*FLEN/8, x13, x9, x10)

inst_10761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa03fffff; valaddr_reg:x12; val_offset:32220*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32220*FLEN/8, x13, x9, x10)

inst_10762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa0600000; valaddr_reg:x12; val_offset:32223*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32223*FLEN/8, x13, x9, x10)

inst_10763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa01fffff; valaddr_reg:x12; val_offset:32226*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32226*FLEN/8, x13, x9, x10)

inst_10764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa0700000; valaddr_reg:x12; val_offset:32229*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32229*FLEN/8, x13, x9, x10)

inst_10765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa00fffff; valaddr_reg:x12; val_offset:32232*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32232*FLEN/8, x13, x9, x10)

inst_10766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa0780000; valaddr_reg:x12; val_offset:32235*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32235*FLEN/8, x13, x9, x10)

inst_10767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa007ffff; valaddr_reg:x12; val_offset:32238*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32238*FLEN/8, x13, x9, x10)

inst_10768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07c0000; valaddr_reg:x12; val_offset:32241*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32241*FLEN/8, x13, x9, x10)

inst_10769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa003ffff; valaddr_reg:x12; val_offset:32244*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32244*FLEN/8, x13, x9, x10)

inst_10770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07e0000; valaddr_reg:x12; val_offset:32247*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32247*FLEN/8, x13, x9, x10)

inst_10771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa001ffff; valaddr_reg:x12; val_offset:32250*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32250*FLEN/8, x13, x9, x10)

inst_10772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07f0000; valaddr_reg:x12; val_offset:32253*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32253*FLEN/8, x13, x9, x10)

inst_10773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa000ffff; valaddr_reg:x12; val_offset:32256*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32256*FLEN/8, x13, x9, x10)

inst_10774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07f8000; valaddr_reg:x12; val_offset:32259*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32259*FLEN/8, x13, x9, x10)

inst_10775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa0007fff; valaddr_reg:x12; val_offset:32262*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32262*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_84)
inst_10776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07fc000; valaddr_reg:x12; val_offset:32265*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32265*FLEN/8, x13, x9, x10)

inst_10777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa0003fff; valaddr_reg:x12; val_offset:32268*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32268*FLEN/8, x13, x9, x10)

inst_10778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07fe000; valaddr_reg:x12; val_offset:32271*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32271*FLEN/8, x13, x9, x10)

inst_10779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa0001fff; valaddr_reg:x12; val_offset:32274*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32274*FLEN/8, x13, x9, x10)

inst_10780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07ff000; valaddr_reg:x12; val_offset:32277*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32277*FLEN/8, x13, x9, x10)

inst_10781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa0000fff; valaddr_reg:x12; val_offset:32280*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32280*FLEN/8, x13, x9, x10)

inst_10782:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07ff800; valaddr_reg:x12; val_offset:32283*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32283*FLEN/8, x13, x9, x10)

inst_10783:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa00007ff; valaddr_reg:x12; val_offset:32286*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32286*FLEN/8, x13, x9, x10)

inst_10784:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07ffc00; valaddr_reg:x12; val_offset:32289*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32289*FLEN/8, x13, x9, x10)

inst_10785:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa00003ff; valaddr_reg:x12; val_offset:32292*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32292*FLEN/8, x13, x9, x10)

inst_10786:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07ffe00; valaddr_reg:x12; val_offset:32295*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32295*FLEN/8, x13, x9, x10)

inst_10787:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa00001ff; valaddr_reg:x12; val_offset:32298*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32298*FLEN/8, x13, x9, x10)

inst_10788:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07fff00; valaddr_reg:x12; val_offset:32301*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32301*FLEN/8, x13, x9, x10)

inst_10789:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa00000ff; valaddr_reg:x12; val_offset:32304*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32304*FLEN/8, x13, x9, x10)

inst_10790:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07fff80; valaddr_reg:x12; val_offset:32307*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32307*FLEN/8, x13, x9, x10)

inst_10791:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa000007f; valaddr_reg:x12; val_offset:32310*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32310*FLEN/8, x13, x9, x10)

inst_10792:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07fffc0; valaddr_reg:x12; val_offset:32313*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32313*FLEN/8, x13, x9, x10)

inst_10793:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa000003f; valaddr_reg:x12; val_offset:32316*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32316*FLEN/8, x13, x9, x10)

inst_10794:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07fffe0; valaddr_reg:x12; val_offset:32319*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32319*FLEN/8, x13, x9, x10)

inst_10795:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa000001f; valaddr_reg:x12; val_offset:32322*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32322*FLEN/8, x13, x9, x10)

inst_10796:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07ffff0; valaddr_reg:x12; val_offset:32325*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32325*FLEN/8, x13, x9, x10)

inst_10797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa000000f; valaddr_reg:x12; val_offset:32328*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32328*FLEN/8, x13, x9, x10)

inst_10798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07ffff8; valaddr_reg:x12; val_offset:32331*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32331*FLEN/8, x13, x9, x10)

inst_10799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa0000007; valaddr_reg:x12; val_offset:32334*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32334*FLEN/8, x13, x9, x10)

inst_10800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07ffffc; valaddr_reg:x12; val_offset:32337*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32337*FLEN/8, x13, x9, x10)

inst_10801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa0000003; valaddr_reg:x12; val_offset:32340*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32340*FLEN/8, x13, x9, x10)

inst_10802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa07ffffe; valaddr_reg:x12; val_offset:32343*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32343*FLEN/8, x13, x9, x10)

inst_10803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x40 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xa0000001; valaddr_reg:x12; val_offset:32346*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32346*FLEN/8, x13, x9, x10)

inst_10804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:32349*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32349*FLEN/8, x13, x9, x10)

inst_10805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbf800007; valaddr_reg:x12; val_offset:32352*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32352*FLEN/8, x13, x9, x10)

inst_10806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:32355*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32355*FLEN/8, x13, x9, x10)

inst_10807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbf800003; valaddr_reg:x12; val_offset:32358*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32358*FLEN/8, x13, x9, x10)

inst_10808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:32361*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32361*FLEN/8, x13, x9, x10)

inst_10809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbf800001; valaddr_reg:x12; val_offset:32364*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32364*FLEN/8, x13, x9, x10)

inst_10810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:32367*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32367*FLEN/8, x13, x9, x10)

inst_10811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:32370*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32370*FLEN/8, x13, x9, x10)

inst_10812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbf999999; valaddr_reg:x12; val_offset:32373*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32373*FLEN/8, x13, x9, x10)

inst_10813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:32376*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32376*FLEN/8, x13, x9, x10)

inst_10814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:32379*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32379*FLEN/8, x13, x9, x10)

inst_10815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:32382*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32382*FLEN/8, x13, x9, x10)

inst_10816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:32385*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32385*FLEN/8, x13, x9, x10)

inst_10817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:32388*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32388*FLEN/8, x13, x9, x10)

inst_10818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:32391*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32391*FLEN/8, x13, x9, x10)

inst_10819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x58efee and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4b862e and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed8efee; op2val:0x804b862e;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:32394*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32394*FLEN/8, x13, x9, x10)

inst_10820:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0800000; valaddr_reg:x12; val_offset:32397*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32397*FLEN/8, x13, x9, x10)

inst_10821:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0ffffff; valaddr_reg:x12; val_offset:32400*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32400*FLEN/8, x13, x9, x10)

inst_10822:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0c00000; valaddr_reg:x12; val_offset:32403*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32403*FLEN/8, x13, x9, x10)

inst_10823:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0bfffff; valaddr_reg:x12; val_offset:32406*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32406*FLEN/8, x13, x9, x10)

inst_10824:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0e00000; valaddr_reg:x12; val_offset:32409*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32409*FLEN/8, x13, x9, x10)

inst_10825:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa09fffff; valaddr_reg:x12; val_offset:32412*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32412*FLEN/8, x13, x9, x10)

inst_10826:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0f00000; valaddr_reg:x12; val_offset:32415*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32415*FLEN/8, x13, x9, x10)

inst_10827:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa08fffff; valaddr_reg:x12; val_offset:32418*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32418*FLEN/8, x13, x9, x10)

inst_10828:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0f80000; valaddr_reg:x12; val_offset:32421*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32421*FLEN/8, x13, x9, x10)

inst_10829:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa087ffff; valaddr_reg:x12; val_offset:32424*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32424*FLEN/8, x13, x9, x10)

inst_10830:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0fc0000; valaddr_reg:x12; val_offset:32427*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32427*FLEN/8, x13, x9, x10)

inst_10831:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa083ffff; valaddr_reg:x12; val_offset:32430*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32430*FLEN/8, x13, x9, x10)

inst_10832:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0fe0000; valaddr_reg:x12; val_offset:32433*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32433*FLEN/8, x13, x9, x10)

inst_10833:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa081ffff; valaddr_reg:x12; val_offset:32436*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32436*FLEN/8, x13, x9, x10)

inst_10834:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0ff0000; valaddr_reg:x12; val_offset:32439*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32439*FLEN/8, x13, x9, x10)

inst_10835:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa080ffff; valaddr_reg:x12; val_offset:32442*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32442*FLEN/8, x13, x9, x10)

inst_10836:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0ff8000; valaddr_reg:x12; val_offset:32445*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32445*FLEN/8, x13, x9, x10)

inst_10837:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0807fff; valaddr_reg:x12; val_offset:32448*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32448*FLEN/8, x13, x9, x10)

inst_10838:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0ffc000; valaddr_reg:x12; val_offset:32451*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32451*FLEN/8, x13, x9, x10)

inst_10839:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0803fff; valaddr_reg:x12; val_offset:32454*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32454*FLEN/8, x13, x9, x10)

inst_10840:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0ffe000; valaddr_reg:x12; val_offset:32457*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32457*FLEN/8, x13, x9, x10)

inst_10841:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0801fff; valaddr_reg:x12; val_offset:32460*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32460*FLEN/8, x13, x9, x10)

inst_10842:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0fff000; valaddr_reg:x12; val_offset:32463*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32463*FLEN/8, x13, x9, x10)

inst_10843:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0800fff; valaddr_reg:x12; val_offset:32466*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32466*FLEN/8, x13, x9, x10)

inst_10844:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0fff800; valaddr_reg:x12; val_offset:32469*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32469*FLEN/8, x13, x9, x10)

inst_10845:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa08007ff; valaddr_reg:x12; val_offset:32472*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32472*FLEN/8, x13, x9, x10)

inst_10846:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0fffc00; valaddr_reg:x12; val_offset:32475*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32475*FLEN/8, x13, x9, x10)

inst_10847:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa08003ff; valaddr_reg:x12; val_offset:32478*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32478*FLEN/8, x13, x9, x10)

inst_10848:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0fffe00; valaddr_reg:x12; val_offset:32481*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32481*FLEN/8, x13, x9, x10)

inst_10849:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa08001ff; valaddr_reg:x12; val_offset:32484*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32484*FLEN/8, x13, x9, x10)

inst_10850:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0ffff00; valaddr_reg:x12; val_offset:32487*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32487*FLEN/8, x13, x9, x10)

inst_10851:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa08000ff; valaddr_reg:x12; val_offset:32490*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32490*FLEN/8, x13, x9, x10)

inst_10852:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0ffff80; valaddr_reg:x12; val_offset:32493*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32493*FLEN/8, x13, x9, x10)

inst_10853:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa080007f; valaddr_reg:x12; val_offset:32496*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32496*FLEN/8, x13, x9, x10)

inst_10854:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0ffffc0; valaddr_reg:x12; val_offset:32499*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32499*FLEN/8, x13, x9, x10)

inst_10855:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa080003f; valaddr_reg:x12; val_offset:32502*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32502*FLEN/8, x13, x9, x10)

inst_10856:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0ffffe0; valaddr_reg:x12; val_offset:32505*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32505*FLEN/8, x13, x9, x10)

inst_10857:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa080001f; valaddr_reg:x12; val_offset:32508*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32508*FLEN/8, x13, x9, x10)

inst_10858:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0fffff0; valaddr_reg:x12; val_offset:32511*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32511*FLEN/8, x13, x9, x10)

inst_10859:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa080000f; valaddr_reg:x12; val_offset:32514*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32514*FLEN/8, x13, x9, x10)

inst_10860:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0fffff8; valaddr_reg:x12; val_offset:32517*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32517*FLEN/8, x13, x9, x10)

inst_10861:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0800007; valaddr_reg:x12; val_offset:32520*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32520*FLEN/8, x13, x9, x10)

inst_10862:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0fffffc; valaddr_reg:x12; val_offset:32523*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32523*FLEN/8, x13, x9, x10)

inst_10863:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0800003; valaddr_reg:x12; val_offset:32526*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32526*FLEN/8, x13, x9, x10)

inst_10864:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0fffffe; valaddr_reg:x12; val_offset:32529*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32529*FLEN/8, x13, x9, x10)

inst_10865:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x41 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xa0800001; valaddr_reg:x12; val_offset:32532*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32532*FLEN/8, x13, x9, x10)

inst_10866:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:32535*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32535*FLEN/8, x13, x9, x10)

inst_10867:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbf800007; valaddr_reg:x12; val_offset:32538*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32538*FLEN/8, x13, x9, x10)

inst_10868:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:32541*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32541*FLEN/8, x13, x9, x10)

inst_10869:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbf800003; valaddr_reg:x12; val_offset:32544*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32544*FLEN/8, x13, x9, x10)

inst_10870:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:32547*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32547*FLEN/8, x13, x9, x10)

inst_10871:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbf800001; valaddr_reg:x12; val_offset:32550*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32550*FLEN/8, x13, x9, x10)

inst_10872:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:32553*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32553*FLEN/8, x13, x9, x10)

inst_10873:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:32556*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32556*FLEN/8, x13, x9, x10)

inst_10874:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbf999999; valaddr_reg:x12; val_offset:32559*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32559*FLEN/8, x13, x9, x10)

inst_10875:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:32562*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32562*FLEN/8, x13, x9, x10)

inst_10876:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:32565*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32565*FLEN/8, x13, x9, x10)

inst_10877:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:32568*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32568*FLEN/8, x13, x9, x10)

inst_10878:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:32571*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32571*FLEN/8, x13, x9, x10)

inst_10879:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:32574*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32574*FLEN/8, x13, x9, x10)

inst_10880:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:32577*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32577*FLEN/8, x13, x9, x10)

inst_10881:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x4847e0 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x239c3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc847e0; op2val:0x81239c3d;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:32580*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32580*FLEN/8, x13, x9, x10)

inst_10882:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1000000; valaddr_reg:x12; val_offset:32583*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32583*FLEN/8, x13, x9, x10)

inst_10883:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17fffff; valaddr_reg:x12; val_offset:32586*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32586*FLEN/8, x13, x9, x10)

inst_10884:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1400000; valaddr_reg:x12; val_offset:32589*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32589*FLEN/8, x13, x9, x10)

inst_10885:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa13fffff; valaddr_reg:x12; val_offset:32592*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32592*FLEN/8, x13, x9, x10)

inst_10886:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1600000; valaddr_reg:x12; val_offset:32595*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32595*FLEN/8, x13, x9, x10)

inst_10887:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa11fffff; valaddr_reg:x12; val_offset:32598*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32598*FLEN/8, x13, x9, x10)

inst_10888:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1700000; valaddr_reg:x12; val_offset:32601*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32601*FLEN/8, x13, x9, x10)

inst_10889:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa10fffff; valaddr_reg:x12; val_offset:32604*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32604*FLEN/8, x13, x9, x10)

inst_10890:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1780000; valaddr_reg:x12; val_offset:32607*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32607*FLEN/8, x13, x9, x10)

inst_10891:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa107ffff; valaddr_reg:x12; val_offset:32610*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32610*FLEN/8, x13, x9, x10)

inst_10892:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17c0000; valaddr_reg:x12; val_offset:32613*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32613*FLEN/8, x13, x9, x10)

inst_10893:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa103ffff; valaddr_reg:x12; val_offset:32616*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32616*FLEN/8, x13, x9, x10)

inst_10894:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17e0000; valaddr_reg:x12; val_offset:32619*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32619*FLEN/8, x13, x9, x10)

inst_10895:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa101ffff; valaddr_reg:x12; val_offset:32622*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32622*FLEN/8, x13, x9, x10)

inst_10896:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17f0000; valaddr_reg:x12; val_offset:32625*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32625*FLEN/8, x13, x9, x10)

inst_10897:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa100ffff; valaddr_reg:x12; val_offset:32628*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32628*FLEN/8, x13, x9, x10)

inst_10898:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17f8000; valaddr_reg:x12; val_offset:32631*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32631*FLEN/8, x13, x9, x10)

inst_10899:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1007fff; valaddr_reg:x12; val_offset:32634*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32634*FLEN/8, x13, x9, x10)

inst_10900:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17fc000; valaddr_reg:x12; val_offset:32637*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32637*FLEN/8, x13, x9, x10)

inst_10901:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1003fff; valaddr_reg:x12; val_offset:32640*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32640*FLEN/8, x13, x9, x10)

inst_10902:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17fe000; valaddr_reg:x12; val_offset:32643*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32643*FLEN/8, x13, x9, x10)

inst_10903:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1001fff; valaddr_reg:x12; val_offset:32646*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32646*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_85)
inst_10904:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17ff000; valaddr_reg:x12; val_offset:32649*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32649*FLEN/8, x13, x9, x10)

inst_10905:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1000fff; valaddr_reg:x12; val_offset:32652*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32652*FLEN/8, x13, x9, x10)

inst_10906:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17ff800; valaddr_reg:x12; val_offset:32655*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32655*FLEN/8, x13, x9, x10)

inst_10907:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa10007ff; valaddr_reg:x12; val_offset:32658*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32658*FLEN/8, x13, x9, x10)

inst_10908:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17ffc00; valaddr_reg:x12; val_offset:32661*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32661*FLEN/8, x13, x9, x10)

inst_10909:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa10003ff; valaddr_reg:x12; val_offset:32664*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32664*FLEN/8, x13, x9, x10)

inst_10910:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17ffe00; valaddr_reg:x12; val_offset:32667*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32667*FLEN/8, x13, x9, x10)

inst_10911:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa10001ff; valaddr_reg:x12; val_offset:32670*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32670*FLEN/8, x13, x9, x10)

inst_10912:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17fff00; valaddr_reg:x12; val_offset:32673*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32673*FLEN/8, x13, x9, x10)

inst_10913:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa10000ff; valaddr_reg:x12; val_offset:32676*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32676*FLEN/8, x13, x9, x10)

inst_10914:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17fff80; valaddr_reg:x12; val_offset:32679*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32679*FLEN/8, x13, x9, x10)

inst_10915:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa100007f; valaddr_reg:x12; val_offset:32682*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32682*FLEN/8, x13, x9, x10)

inst_10916:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17fffc0; valaddr_reg:x12; val_offset:32685*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32685*FLEN/8, x13, x9, x10)

inst_10917:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa100003f; valaddr_reg:x12; val_offset:32688*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32688*FLEN/8, x13, x9, x10)

inst_10918:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17fffe0; valaddr_reg:x12; val_offset:32691*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32691*FLEN/8, x13, x9, x10)

inst_10919:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa100001f; valaddr_reg:x12; val_offset:32694*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32694*FLEN/8, x13, x9, x10)

inst_10920:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17ffff0; valaddr_reg:x12; val_offset:32697*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32697*FLEN/8, x13, x9, x10)

inst_10921:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa100000f; valaddr_reg:x12; val_offset:32700*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32700*FLEN/8, x13, x9, x10)

inst_10922:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17ffff8; valaddr_reg:x12; val_offset:32703*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32703*FLEN/8, x13, x9, x10)

inst_10923:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1000007; valaddr_reg:x12; val_offset:32706*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32706*FLEN/8, x13, x9, x10)

inst_10924:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17ffffc; valaddr_reg:x12; val_offset:32709*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32709*FLEN/8, x13, x9, x10)

inst_10925:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1000003; valaddr_reg:x12; val_offset:32712*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32712*FLEN/8, x13, x9, x10)

inst_10926:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa17ffffe; valaddr_reg:x12; val_offset:32715*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32715*FLEN/8, x13, x9, x10)

inst_10927:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x42 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xa1000001; valaddr_reg:x12; val_offset:32718*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32718*FLEN/8, x13, x9, x10)

inst_10928:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:32721*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32721*FLEN/8, x13, x9, x10)

inst_10929:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbf800007; valaddr_reg:x12; val_offset:32724*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32724*FLEN/8, x13, x9, x10)

inst_10930:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:32727*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32727*FLEN/8, x13, x9, x10)

inst_10931:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbf800003; valaddr_reg:x12; val_offset:32730*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32730*FLEN/8, x13, x9, x10)

inst_10932:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:32733*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32733*FLEN/8, x13, x9, x10)

inst_10933:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbf800001; valaddr_reg:x12; val_offset:32736*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32736*FLEN/8, x13, x9, x10)

inst_10934:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:32739*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32739*FLEN/8, x13, x9, x10)

inst_10935:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:32742*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32742*FLEN/8, x13, x9, x10)

inst_10936:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbf999999; valaddr_reg:x12; val_offset:32745*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32745*FLEN/8, x13, x9, x10)

inst_10937:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:32748*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32748*FLEN/8, x13, x9, x10)

inst_10938:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:32751*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32751*FLEN/8, x13, x9, x10)

inst_10939:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:32754*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32754*FLEN/8, x13, x9, x10)

inst_10940:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:32757*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32757*FLEN/8, x13, x9, x10)

inst_10941:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:32760*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32760*FLEN/8, x13, x9, x10)

inst_10942:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:32763*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32763*FLEN/8, x13, x9, x10)

inst_10943:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x5750c0 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x4c17cf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ed750c0; op2val:0x804c17cf;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:32766*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32766*FLEN/8, x13, x9, x10)

inst_10944:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1800000; valaddr_reg:x12; val_offset:32769*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32769*FLEN/8, x13, x9, x10)

inst_10945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1ffffff; valaddr_reg:x12; val_offset:32772*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32772*FLEN/8, x13, x9, x10)

inst_10946:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1c00000; valaddr_reg:x12; val_offset:32775*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32775*FLEN/8, x13, x9, x10)

inst_10947:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1bfffff; valaddr_reg:x12; val_offset:32778*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32778*FLEN/8, x13, x9, x10)

inst_10948:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1e00000; valaddr_reg:x12; val_offset:32781*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32781*FLEN/8, x13, x9, x10)

inst_10949:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa19fffff; valaddr_reg:x12; val_offset:32784*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32784*FLEN/8, x13, x9, x10)

inst_10950:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1f00000; valaddr_reg:x12; val_offset:32787*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32787*FLEN/8, x13, x9, x10)

inst_10951:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa18fffff; valaddr_reg:x12; val_offset:32790*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32790*FLEN/8, x13, x9, x10)

inst_10952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1f80000; valaddr_reg:x12; val_offset:32793*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32793*FLEN/8, x13, x9, x10)

inst_10953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa187ffff; valaddr_reg:x12; val_offset:32796*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32796*FLEN/8, x13, x9, x10)

inst_10954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1fc0000; valaddr_reg:x12; val_offset:32799*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32799*FLEN/8, x13, x9, x10)

inst_10955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa183ffff; valaddr_reg:x12; val_offset:32802*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32802*FLEN/8, x13, x9, x10)

inst_10956:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1fe0000; valaddr_reg:x12; val_offset:32805*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32805*FLEN/8, x13, x9, x10)

inst_10957:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa181ffff; valaddr_reg:x12; val_offset:32808*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32808*FLEN/8, x13, x9, x10)

inst_10958:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1ff0000; valaddr_reg:x12; val_offset:32811*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32811*FLEN/8, x13, x9, x10)

inst_10959:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa180ffff; valaddr_reg:x12; val_offset:32814*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32814*FLEN/8, x13, x9, x10)

inst_10960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1ff8000; valaddr_reg:x12; val_offset:32817*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32817*FLEN/8, x13, x9, x10)

inst_10961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1807fff; valaddr_reg:x12; val_offset:32820*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32820*FLEN/8, x13, x9, x10)

inst_10962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1ffc000; valaddr_reg:x12; val_offset:32823*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32823*FLEN/8, x13, x9, x10)

inst_10963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1803fff; valaddr_reg:x12; val_offset:32826*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32826*FLEN/8, x13, x9, x10)

inst_10964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1ffe000; valaddr_reg:x12; val_offset:32829*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32829*FLEN/8, x13, x9, x10)

inst_10965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1801fff; valaddr_reg:x12; val_offset:32832*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32832*FLEN/8, x13, x9, x10)

inst_10966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1fff000; valaddr_reg:x12; val_offset:32835*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32835*FLEN/8, x13, x9, x10)

inst_10967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1800fff; valaddr_reg:x12; val_offset:32838*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32838*FLEN/8, x13, x9, x10)

inst_10968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1fff800; valaddr_reg:x12; val_offset:32841*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32841*FLEN/8, x13, x9, x10)

inst_10969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa18007ff; valaddr_reg:x12; val_offset:32844*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32844*FLEN/8, x13, x9, x10)

inst_10970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1fffc00; valaddr_reg:x12; val_offset:32847*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32847*FLEN/8, x13, x9, x10)

inst_10971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa18003ff; valaddr_reg:x12; val_offset:32850*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32850*FLEN/8, x13, x9, x10)

inst_10972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1fffe00; valaddr_reg:x12; val_offset:32853*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32853*FLEN/8, x13, x9, x10)

inst_10973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa18001ff; valaddr_reg:x12; val_offset:32856*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32856*FLEN/8, x13, x9, x10)

inst_10974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1ffff00; valaddr_reg:x12; val_offset:32859*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32859*FLEN/8, x13, x9, x10)

inst_10975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa18000ff; valaddr_reg:x12; val_offset:32862*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32862*FLEN/8, x13, x9, x10)

inst_10976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1ffff80; valaddr_reg:x12; val_offset:32865*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32865*FLEN/8, x13, x9, x10)

inst_10977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa180007f; valaddr_reg:x12; val_offset:32868*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32868*FLEN/8, x13, x9, x10)

inst_10978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1ffffc0; valaddr_reg:x12; val_offset:32871*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32871*FLEN/8, x13, x9, x10)

inst_10979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa180003f; valaddr_reg:x12; val_offset:32874*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32874*FLEN/8, x13, x9, x10)

inst_10980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1ffffe0; valaddr_reg:x12; val_offset:32877*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32877*FLEN/8, x13, x9, x10)

inst_10981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa180001f; valaddr_reg:x12; val_offset:32880*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32880*FLEN/8, x13, x9, x10)

inst_10982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1fffff0; valaddr_reg:x12; val_offset:32883*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32883*FLEN/8, x13, x9, x10)

inst_10983:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa180000f; valaddr_reg:x12; val_offset:32886*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32886*FLEN/8, x13, x9, x10)

inst_10984:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1fffff8; valaddr_reg:x12; val_offset:32889*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32889*FLEN/8, x13, x9, x10)

inst_10985:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1800007; valaddr_reg:x12; val_offset:32892*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32892*FLEN/8, x13, x9, x10)

inst_10986:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1fffffc; valaddr_reg:x12; val_offset:32895*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32895*FLEN/8, x13, x9, x10)

inst_10987:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1800003; valaddr_reg:x12; val_offset:32898*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32898*FLEN/8, x13, x9, x10)

inst_10988:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1fffffe; valaddr_reg:x12; val_offset:32901*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32901*FLEN/8, x13, x9, x10)

inst_10989:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x43 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xa1800001; valaddr_reg:x12; val_offset:32904*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32904*FLEN/8, x13, x9, x10)

inst_10990:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:32907*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32907*FLEN/8, x13, x9, x10)

inst_10991:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbf800007; valaddr_reg:x12; val_offset:32910*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32910*FLEN/8, x13, x9, x10)

inst_10992:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:32913*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32913*FLEN/8, x13, x9, x10)

inst_10993:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbf800003; valaddr_reg:x12; val_offset:32916*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32916*FLEN/8, x13, x9, x10)

inst_10994:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:32919*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32919*FLEN/8, x13, x9, x10)

inst_10995:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbf800001; valaddr_reg:x12; val_offset:32922*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32922*FLEN/8, x13, x9, x10)

inst_10996:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:32925*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32925*FLEN/8, x13, x9, x10)

inst_10997:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:32928*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32928*FLEN/8, x13, x9, x10)

inst_10998:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbf999999; valaddr_reg:x12; val_offset:32931*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32931*FLEN/8, x13, x9, x10)

inst_10999:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:32934*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32934*FLEN/8, x13, x9, x10)

inst_11000:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:32937*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32937*FLEN/8, x13, x9, x10)

inst_11001:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:32940*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32940*FLEN/8, x13, x9, x10)

inst_11002:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:32943*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32943*FLEN/8, x13, x9, x10)

inst_11003:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:32946*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32946*FLEN/8, x13, x9, x10)

inst_11004:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:32949*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32949*FLEN/8, x13, x9, x10)

inst_11005:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x234d15 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x322a3d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f234d15; op2val:0x80322a3d;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:32952*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32952*FLEN/8, x13, x9, x10)

inst_11006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa2000000; valaddr_reg:x12; val_offset:32955*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32955*FLEN/8, x13, x9, x10)

inst_11007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27fffff; valaddr_reg:x12; val_offset:32958*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32958*FLEN/8, x13, x9, x10)

inst_11008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa2400000; valaddr_reg:x12; val_offset:32961*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32961*FLEN/8, x13, x9, x10)

inst_11009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa23fffff; valaddr_reg:x12; val_offset:32964*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32964*FLEN/8, x13, x9, x10)

inst_11010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa2600000; valaddr_reg:x12; val_offset:32967*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32967*FLEN/8, x13, x9, x10)

inst_11011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa21fffff; valaddr_reg:x12; val_offset:32970*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32970*FLEN/8, x13, x9, x10)

inst_11012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa2700000; valaddr_reg:x12; val_offset:32973*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32973*FLEN/8, x13, x9, x10)

inst_11013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa20fffff; valaddr_reg:x12; val_offset:32976*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32976*FLEN/8, x13, x9, x10)

inst_11014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa2780000; valaddr_reg:x12; val_offset:32979*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32979*FLEN/8, x13, x9, x10)

inst_11015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa207ffff; valaddr_reg:x12; val_offset:32982*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32982*FLEN/8, x13, x9, x10)

inst_11016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27c0000; valaddr_reg:x12; val_offset:32985*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32985*FLEN/8, x13, x9, x10)

inst_11017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa203ffff; valaddr_reg:x12; val_offset:32988*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32988*FLEN/8, x13, x9, x10)

inst_11018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27e0000; valaddr_reg:x12; val_offset:32991*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32991*FLEN/8, x13, x9, x10)

inst_11019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa201ffff; valaddr_reg:x12; val_offset:32994*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32994*FLEN/8, x13, x9, x10)

inst_11020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27f0000; valaddr_reg:x12; val_offset:32997*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 32997*FLEN/8, x13, x9, x10)

inst_11021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa200ffff; valaddr_reg:x12; val_offset:33000*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33000*FLEN/8, x13, x9, x10)

inst_11022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27f8000; valaddr_reg:x12; val_offset:33003*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33003*FLEN/8, x13, x9, x10)

inst_11023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa2007fff; valaddr_reg:x12; val_offset:33006*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33006*FLEN/8, x13, x9, x10)

inst_11024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27fc000; valaddr_reg:x12; val_offset:33009*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33009*FLEN/8, x13, x9, x10)

inst_11025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa2003fff; valaddr_reg:x12; val_offset:33012*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33012*FLEN/8, x13, x9, x10)

inst_11026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27fe000; valaddr_reg:x12; val_offset:33015*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33015*FLEN/8, x13, x9, x10)

inst_11027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa2001fff; valaddr_reg:x12; val_offset:33018*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33018*FLEN/8, x13, x9, x10)

inst_11028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27ff000; valaddr_reg:x12; val_offset:33021*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33021*FLEN/8, x13, x9, x10)

inst_11029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa2000fff; valaddr_reg:x12; val_offset:33024*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33024*FLEN/8, x13, x9, x10)

inst_11030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27ff800; valaddr_reg:x12; val_offset:33027*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33027*FLEN/8, x13, x9, x10)

inst_11031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa20007ff; valaddr_reg:x12; val_offset:33030*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33030*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_86)
inst_11032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27ffc00; valaddr_reg:x12; val_offset:33033*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33033*FLEN/8, x13, x9, x10)

inst_11033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa20003ff; valaddr_reg:x12; val_offset:33036*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33036*FLEN/8, x13, x9, x10)

inst_11034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27ffe00; valaddr_reg:x12; val_offset:33039*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33039*FLEN/8, x13, x9, x10)

inst_11035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa20001ff; valaddr_reg:x12; val_offset:33042*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33042*FLEN/8, x13, x9, x10)

inst_11036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27fff00; valaddr_reg:x12; val_offset:33045*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33045*FLEN/8, x13, x9, x10)

inst_11037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa20000ff; valaddr_reg:x12; val_offset:33048*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33048*FLEN/8, x13, x9, x10)

inst_11038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27fff80; valaddr_reg:x12; val_offset:33051*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33051*FLEN/8, x13, x9, x10)

inst_11039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa200007f; valaddr_reg:x12; val_offset:33054*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33054*FLEN/8, x13, x9, x10)

inst_11040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27fffc0; valaddr_reg:x12; val_offset:33057*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33057*FLEN/8, x13, x9, x10)

inst_11041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa200003f; valaddr_reg:x12; val_offset:33060*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33060*FLEN/8, x13, x9, x10)

inst_11042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27fffe0; valaddr_reg:x12; val_offset:33063*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33063*FLEN/8, x13, x9, x10)

inst_11043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa200001f; valaddr_reg:x12; val_offset:33066*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33066*FLEN/8, x13, x9, x10)

inst_11044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27ffff0; valaddr_reg:x12; val_offset:33069*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33069*FLEN/8, x13, x9, x10)

inst_11045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa200000f; valaddr_reg:x12; val_offset:33072*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33072*FLEN/8, x13, x9, x10)

inst_11046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27ffff8; valaddr_reg:x12; val_offset:33075*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33075*FLEN/8, x13, x9, x10)

inst_11047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa2000007; valaddr_reg:x12; val_offset:33078*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33078*FLEN/8, x13, x9, x10)

inst_11048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27ffffc; valaddr_reg:x12; val_offset:33081*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33081*FLEN/8, x13, x9, x10)

inst_11049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa2000003; valaddr_reg:x12; val_offset:33084*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33084*FLEN/8, x13, x9, x10)

inst_11050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa27ffffe; valaddr_reg:x12; val_offset:33087*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33087*FLEN/8, x13, x9, x10)

inst_11051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x44 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xa2000001; valaddr_reg:x12; val_offset:33090*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33090*FLEN/8, x13, x9, x10)

inst_11052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:33093*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33093*FLEN/8, x13, x9, x10)

inst_11053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbf800007; valaddr_reg:x12; val_offset:33096*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33096*FLEN/8, x13, x9, x10)

inst_11054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:33099*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33099*FLEN/8, x13, x9, x10)

inst_11055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbf800003; valaddr_reg:x12; val_offset:33102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33102*FLEN/8, x13, x9, x10)

inst_11056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:33105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33105*FLEN/8, x13, x9, x10)

inst_11057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbf800001; valaddr_reg:x12; val_offset:33108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33108*FLEN/8, x13, x9, x10)

inst_11058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:33111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33111*FLEN/8, x13, x9, x10)

inst_11059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:33114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33114*FLEN/8, x13, x9, x10)

inst_11060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbf999999; valaddr_reg:x12; val_offset:33117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33117*FLEN/8, x13, x9, x10)

inst_11061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:33120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33120*FLEN/8, x13, x9, x10)

inst_11062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:33123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33123*FLEN/8, x13, x9, x10)

inst_11063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:33126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33126*FLEN/8, x13, x9, x10)

inst_11064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:33129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33129*FLEN/8, x13, x9, x10)

inst_11065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:33132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33132*FLEN/8, x13, x9, x10)

inst_11066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:33135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33135*FLEN/8, x13, x9, x10)

inst_11067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x62c8c3 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x483eb0 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee2c8c3; op2val:0x80483eb0;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:33138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33138*FLEN/8, x13, x9, x10)

inst_11068:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2800000; valaddr_reg:x12; val_offset:33141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33141*FLEN/8, x13, x9, x10)

inst_11069:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffffff; valaddr_reg:x12; val_offset:33144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33144*FLEN/8, x13, x9, x10)

inst_11070:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2c00000; valaddr_reg:x12; val_offset:33147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33147*FLEN/8, x13, x9, x10)

inst_11071:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2bfffff; valaddr_reg:x12; val_offset:33150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33150*FLEN/8, x13, x9, x10)

inst_11072:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2e00000; valaddr_reg:x12; val_offset:33153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33153*FLEN/8, x13, x9, x10)

inst_11073:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa29fffff; valaddr_reg:x12; val_offset:33156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33156*FLEN/8, x13, x9, x10)

inst_11074:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2f00000; valaddr_reg:x12; val_offset:33159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33159*FLEN/8, x13, x9, x10)

inst_11075:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa28fffff; valaddr_reg:x12; val_offset:33162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33162*FLEN/8, x13, x9, x10)

inst_11076:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2f80000; valaddr_reg:x12; val_offset:33165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33165*FLEN/8, x13, x9, x10)

inst_11077:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa287ffff; valaddr_reg:x12; val_offset:33168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33168*FLEN/8, x13, x9, x10)

inst_11078:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fc0000; valaddr_reg:x12; val_offset:33171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33171*FLEN/8, x13, x9, x10)

inst_11079:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa283ffff; valaddr_reg:x12; val_offset:33174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33174*FLEN/8, x13, x9, x10)

inst_11080:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fe0000; valaddr_reg:x12; val_offset:33177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33177*FLEN/8, x13, x9, x10)

inst_11081:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa281ffff; valaddr_reg:x12; val_offset:33180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33180*FLEN/8, x13, x9, x10)

inst_11082:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ff0000; valaddr_reg:x12; val_offset:33183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33183*FLEN/8, x13, x9, x10)

inst_11083:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa280ffff; valaddr_reg:x12; val_offset:33186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33186*FLEN/8, x13, x9, x10)

inst_11084:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ff8000; valaddr_reg:x12; val_offset:33189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33189*FLEN/8, x13, x9, x10)

inst_11085:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2807fff; valaddr_reg:x12; val_offset:33192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33192*FLEN/8, x13, x9, x10)

inst_11086:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffc000; valaddr_reg:x12; val_offset:33195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33195*FLEN/8, x13, x9, x10)

inst_11087:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2803fff; valaddr_reg:x12; val_offset:33198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33198*FLEN/8, x13, x9, x10)

inst_11088:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffe000; valaddr_reg:x12; val_offset:33201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33201*FLEN/8, x13, x9, x10)

inst_11089:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2801fff; valaddr_reg:x12; val_offset:33204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33204*FLEN/8, x13, x9, x10)

inst_11090:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fff000; valaddr_reg:x12; val_offset:33207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33207*FLEN/8, x13, x9, x10)

inst_11091:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2800fff; valaddr_reg:x12; val_offset:33210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33210*FLEN/8, x13, x9, x10)

inst_11092:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fff800; valaddr_reg:x12; val_offset:33213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33213*FLEN/8, x13, x9, x10)

inst_11093:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa28007ff; valaddr_reg:x12; val_offset:33216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33216*FLEN/8, x13, x9, x10)

inst_11094:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fffc00; valaddr_reg:x12; val_offset:33219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33219*FLEN/8, x13, x9, x10)

inst_11095:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa28003ff; valaddr_reg:x12; val_offset:33222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33222*FLEN/8, x13, x9, x10)

inst_11096:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fffe00; valaddr_reg:x12; val_offset:33225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33225*FLEN/8, x13, x9, x10)

inst_11097:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa28001ff; valaddr_reg:x12; val_offset:33228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33228*FLEN/8, x13, x9, x10)

inst_11098:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffff00; valaddr_reg:x12; val_offset:33231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33231*FLEN/8, x13, x9, x10)

inst_11099:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa28000ff; valaddr_reg:x12; val_offset:33234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33234*FLEN/8, x13, x9, x10)

inst_11100:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffff80; valaddr_reg:x12; val_offset:33237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33237*FLEN/8, x13, x9, x10)

inst_11101:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa280007f; valaddr_reg:x12; val_offset:33240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33240*FLEN/8, x13, x9, x10)

inst_11102:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffffc0; valaddr_reg:x12; val_offset:33243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33243*FLEN/8, x13, x9, x10)

inst_11103:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa280003f; valaddr_reg:x12; val_offset:33246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33246*FLEN/8, x13, x9, x10)

inst_11104:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2ffffe0; valaddr_reg:x12; val_offset:33249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33249*FLEN/8, x13, x9, x10)

inst_11105:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa280001f; valaddr_reg:x12; val_offset:33252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33252*FLEN/8, x13, x9, x10)

inst_11106:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fffff0; valaddr_reg:x12; val_offset:33255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33255*FLEN/8, x13, x9, x10)

inst_11107:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa280000f; valaddr_reg:x12; val_offset:33258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33258*FLEN/8, x13, x9, x10)

inst_11108:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fffff8; valaddr_reg:x12; val_offset:33261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33261*FLEN/8, x13, x9, x10)

inst_11109:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2800007; valaddr_reg:x12; val_offset:33264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33264*FLEN/8, x13, x9, x10)

inst_11110:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fffffc; valaddr_reg:x12; val_offset:33267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33267*FLEN/8, x13, x9, x10)

inst_11111:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2800003; valaddr_reg:x12; val_offset:33270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33270*FLEN/8, x13, x9, x10)

inst_11112:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2fffffe; valaddr_reg:x12; val_offset:33273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33273*FLEN/8, x13, x9, x10)

inst_11113:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x45 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xa2800001; valaddr_reg:x12; val_offset:33276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33276*FLEN/8, x13, x9, x10)

inst_11114:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:33279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33279*FLEN/8, x13, x9, x10)

inst_11115:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbf800007; valaddr_reg:x12; val_offset:33282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33282*FLEN/8, x13, x9, x10)

inst_11116:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:33285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33285*FLEN/8, x13, x9, x10)

inst_11117:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbf800003; valaddr_reg:x12; val_offset:33288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33288*FLEN/8, x13, x9, x10)

inst_11118:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:33291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33291*FLEN/8, x13, x9, x10)

inst_11119:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbf800001; valaddr_reg:x12; val_offset:33294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33294*FLEN/8, x13, x9, x10)

inst_11120:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:33297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33297*FLEN/8, x13, x9, x10)

inst_11121:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:33300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33300*FLEN/8, x13, x9, x10)

inst_11122:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbf999999; valaddr_reg:x12; val_offset:33303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33303*FLEN/8, x13, x9, x10)

inst_11123:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:33306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33306*FLEN/8, x13, x9, x10)

inst_11124:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:33309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33309*FLEN/8, x13, x9, x10)

inst_11125:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:33312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33312*FLEN/8, x13, x9, x10)

inst_11126:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:33315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33315*FLEN/8, x13, x9, x10)

inst_11127:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:33318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33318*FLEN/8, x13, x9, x10)

inst_11128:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:33321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33321*FLEN/8, x13, x9, x10)

inst_11129:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x271bff and fs2 == 1 and fe2 == 0x01 and fm2 == 0x44164f and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e271bff; op2val:0x80c4164f;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:33324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33324*FLEN/8, x13, x9, x10)

inst_11130:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa3000000; valaddr_reg:x12; val_offset:33327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33327*FLEN/8, x13, x9, x10)

inst_11131:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37fffff; valaddr_reg:x12; val_offset:33330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33330*FLEN/8, x13, x9, x10)

inst_11132:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa3400000; valaddr_reg:x12; val_offset:33333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33333*FLEN/8, x13, x9, x10)

inst_11133:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa33fffff; valaddr_reg:x12; val_offset:33336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33336*FLEN/8, x13, x9, x10)

inst_11134:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa3600000; valaddr_reg:x12; val_offset:33339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33339*FLEN/8, x13, x9, x10)

inst_11135:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa31fffff; valaddr_reg:x12; val_offset:33342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33342*FLEN/8, x13, x9, x10)

inst_11136:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa3700000; valaddr_reg:x12; val_offset:33345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33345*FLEN/8, x13, x9, x10)

inst_11137:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa30fffff; valaddr_reg:x12; val_offset:33348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33348*FLEN/8, x13, x9, x10)

inst_11138:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa3780000; valaddr_reg:x12; val_offset:33351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33351*FLEN/8, x13, x9, x10)

inst_11139:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa307ffff; valaddr_reg:x12; val_offset:33354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33354*FLEN/8, x13, x9, x10)

inst_11140:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37c0000; valaddr_reg:x12; val_offset:33357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33357*FLEN/8, x13, x9, x10)

inst_11141:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa303ffff; valaddr_reg:x12; val_offset:33360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33360*FLEN/8, x13, x9, x10)

inst_11142:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37e0000; valaddr_reg:x12; val_offset:33363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33363*FLEN/8, x13, x9, x10)

inst_11143:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa301ffff; valaddr_reg:x12; val_offset:33366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33366*FLEN/8, x13, x9, x10)

inst_11144:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37f0000; valaddr_reg:x12; val_offset:33369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33369*FLEN/8, x13, x9, x10)

inst_11145:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa300ffff; valaddr_reg:x12; val_offset:33372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33372*FLEN/8, x13, x9, x10)

inst_11146:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37f8000; valaddr_reg:x12; val_offset:33375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33375*FLEN/8, x13, x9, x10)

inst_11147:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa3007fff; valaddr_reg:x12; val_offset:33378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33378*FLEN/8, x13, x9, x10)

inst_11148:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37fc000; valaddr_reg:x12; val_offset:33381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33381*FLEN/8, x13, x9, x10)

inst_11149:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa3003fff; valaddr_reg:x12; val_offset:33384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33384*FLEN/8, x13, x9, x10)

inst_11150:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37fe000; valaddr_reg:x12; val_offset:33387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33387*FLEN/8, x13, x9, x10)

inst_11151:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa3001fff; valaddr_reg:x12; val_offset:33390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33390*FLEN/8, x13, x9, x10)

inst_11152:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37ff000; valaddr_reg:x12; val_offset:33393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33393*FLEN/8, x13, x9, x10)

inst_11153:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa3000fff; valaddr_reg:x12; val_offset:33396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33396*FLEN/8, x13, x9, x10)

inst_11154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37ff800; valaddr_reg:x12; val_offset:33399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33399*FLEN/8, x13, x9, x10)

inst_11155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa30007ff; valaddr_reg:x12; val_offset:33402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33402*FLEN/8, x13, x9, x10)

inst_11156:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37ffc00; valaddr_reg:x12; val_offset:33405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33405*FLEN/8, x13, x9, x10)

inst_11157:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa30003ff; valaddr_reg:x12; val_offset:33408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33408*FLEN/8, x13, x9, x10)

inst_11158:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37ffe00; valaddr_reg:x12; val_offset:33411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33411*FLEN/8, x13, x9, x10)

inst_11159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa30001ff; valaddr_reg:x12; val_offset:33414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33414*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_87)
inst_11160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37fff00; valaddr_reg:x12; val_offset:33417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33417*FLEN/8, x13, x9, x10)

inst_11161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa30000ff; valaddr_reg:x12; val_offset:33420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33420*FLEN/8, x13, x9, x10)

inst_11162:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37fff80; valaddr_reg:x12; val_offset:33423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33423*FLEN/8, x13, x9, x10)

inst_11163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa300007f; valaddr_reg:x12; val_offset:33426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33426*FLEN/8, x13, x9, x10)

inst_11164:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37fffc0; valaddr_reg:x12; val_offset:33429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33429*FLEN/8, x13, x9, x10)

inst_11165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa300003f; valaddr_reg:x12; val_offset:33432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33432*FLEN/8, x13, x9, x10)

inst_11166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37fffe0; valaddr_reg:x12; val_offset:33435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33435*FLEN/8, x13, x9, x10)

inst_11167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa300001f; valaddr_reg:x12; val_offset:33438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33438*FLEN/8, x13, x9, x10)

inst_11168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37ffff0; valaddr_reg:x12; val_offset:33441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33441*FLEN/8, x13, x9, x10)

inst_11169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa300000f; valaddr_reg:x12; val_offset:33444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33444*FLEN/8, x13, x9, x10)

inst_11170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37ffff8; valaddr_reg:x12; val_offset:33447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33447*FLEN/8, x13, x9, x10)

inst_11171:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa3000007; valaddr_reg:x12; val_offset:33450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33450*FLEN/8, x13, x9, x10)

inst_11172:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37ffffc; valaddr_reg:x12; val_offset:33453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33453*FLEN/8, x13, x9, x10)

inst_11173:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa3000003; valaddr_reg:x12; val_offset:33456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33456*FLEN/8, x13, x9, x10)

inst_11174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa37ffffe; valaddr_reg:x12; val_offset:33459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33459*FLEN/8, x13, x9, x10)

inst_11175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x46 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xa3000001; valaddr_reg:x12; val_offset:33462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33462*FLEN/8, x13, x9, x10)

inst_11176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:33465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33465*FLEN/8, x13, x9, x10)

inst_11177:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbf800007; valaddr_reg:x12; val_offset:33468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33468*FLEN/8, x13, x9, x10)

inst_11178:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:33471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33471*FLEN/8, x13, x9, x10)

inst_11179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbf800003; valaddr_reg:x12; val_offset:33474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33474*FLEN/8, x13, x9, x10)

inst_11180:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:33477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33477*FLEN/8, x13, x9, x10)

inst_11181:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbf800001; valaddr_reg:x12; val_offset:33480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33480*FLEN/8, x13, x9, x10)

inst_11182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:33483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33483*FLEN/8, x13, x9, x10)

inst_11183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:33486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33486*FLEN/8, x13, x9, x10)

inst_11184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbf999999; valaddr_reg:x12; val_offset:33489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33489*FLEN/8, x13, x9, x10)

inst_11185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:33492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33492*FLEN/8, x13, x9, x10)

inst_11186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:33495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33495*FLEN/8, x13, x9, x10)

inst_11187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:33498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33498*FLEN/8, x13, x9, x10)

inst_11188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:33501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33501*FLEN/8, x13, x9, x10)

inst_11189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:33504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33504*FLEN/8, x13, x9, x10)

inst_11190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:33507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33507*FLEN/8, x13, x9, x10)

inst_11191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2cf4c2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2f5d57 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2cf4c2; op2val:0x802f5d57;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:33510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33510*FLEN/8, x13, x9, x10)

inst_11192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3800000; valaddr_reg:x12; val_offset:33513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33513*FLEN/8, x13, x9, x10)

inst_11193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3ffffff; valaddr_reg:x12; val_offset:33516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33516*FLEN/8, x13, x9, x10)

inst_11194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3c00000; valaddr_reg:x12; val_offset:33519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33519*FLEN/8, x13, x9, x10)

inst_11195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3bfffff; valaddr_reg:x12; val_offset:33522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33522*FLEN/8, x13, x9, x10)

inst_11196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3e00000; valaddr_reg:x12; val_offset:33525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33525*FLEN/8, x13, x9, x10)

inst_11197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa39fffff; valaddr_reg:x12; val_offset:33528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33528*FLEN/8, x13, x9, x10)

inst_11198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3f00000; valaddr_reg:x12; val_offset:33531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33531*FLEN/8, x13, x9, x10)

inst_11199:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa38fffff; valaddr_reg:x12; val_offset:33534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33534*FLEN/8, x13, x9, x10)

inst_11200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3f80000; valaddr_reg:x12; val_offset:33537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33537*FLEN/8, x13, x9, x10)

inst_11201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa387ffff; valaddr_reg:x12; val_offset:33540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33540*FLEN/8, x13, x9, x10)

inst_11202:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3fc0000; valaddr_reg:x12; val_offset:33543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33543*FLEN/8, x13, x9, x10)

inst_11203:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa383ffff; valaddr_reg:x12; val_offset:33546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33546*FLEN/8, x13, x9, x10)

inst_11204:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3fe0000; valaddr_reg:x12; val_offset:33549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33549*FLEN/8, x13, x9, x10)

inst_11205:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa381ffff; valaddr_reg:x12; val_offset:33552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33552*FLEN/8, x13, x9, x10)

inst_11206:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3ff0000; valaddr_reg:x12; val_offset:33555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33555*FLEN/8, x13, x9, x10)

inst_11207:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa380ffff; valaddr_reg:x12; val_offset:33558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33558*FLEN/8, x13, x9, x10)

inst_11208:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3ff8000; valaddr_reg:x12; val_offset:33561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33561*FLEN/8, x13, x9, x10)

inst_11209:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3807fff; valaddr_reg:x12; val_offset:33564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33564*FLEN/8, x13, x9, x10)

inst_11210:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3ffc000; valaddr_reg:x12; val_offset:33567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33567*FLEN/8, x13, x9, x10)

inst_11211:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3803fff; valaddr_reg:x12; val_offset:33570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33570*FLEN/8, x13, x9, x10)

inst_11212:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3ffe000; valaddr_reg:x12; val_offset:33573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33573*FLEN/8, x13, x9, x10)

inst_11213:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3801fff; valaddr_reg:x12; val_offset:33576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33576*FLEN/8, x13, x9, x10)

inst_11214:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3fff000; valaddr_reg:x12; val_offset:33579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33579*FLEN/8, x13, x9, x10)

inst_11215:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3800fff; valaddr_reg:x12; val_offset:33582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33582*FLEN/8, x13, x9, x10)

inst_11216:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3fff800; valaddr_reg:x12; val_offset:33585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33585*FLEN/8, x13, x9, x10)

inst_11217:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa38007ff; valaddr_reg:x12; val_offset:33588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33588*FLEN/8, x13, x9, x10)

inst_11218:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3fffc00; valaddr_reg:x12; val_offset:33591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33591*FLEN/8, x13, x9, x10)

inst_11219:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa38003ff; valaddr_reg:x12; val_offset:33594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33594*FLEN/8, x13, x9, x10)

inst_11220:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3fffe00; valaddr_reg:x12; val_offset:33597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33597*FLEN/8, x13, x9, x10)

inst_11221:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa38001ff; valaddr_reg:x12; val_offset:33600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33600*FLEN/8, x13, x9, x10)

inst_11222:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3ffff00; valaddr_reg:x12; val_offset:33603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33603*FLEN/8, x13, x9, x10)

inst_11223:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa38000ff; valaddr_reg:x12; val_offset:33606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33606*FLEN/8, x13, x9, x10)

inst_11224:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3ffff80; valaddr_reg:x12; val_offset:33609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33609*FLEN/8, x13, x9, x10)

inst_11225:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa380007f; valaddr_reg:x12; val_offset:33612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33612*FLEN/8, x13, x9, x10)

inst_11226:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3ffffc0; valaddr_reg:x12; val_offset:33615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33615*FLEN/8, x13, x9, x10)

inst_11227:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa380003f; valaddr_reg:x12; val_offset:33618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33618*FLEN/8, x13, x9, x10)

inst_11228:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3ffffe0; valaddr_reg:x12; val_offset:33621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33621*FLEN/8, x13, x9, x10)

inst_11229:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa380001f; valaddr_reg:x12; val_offset:33624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33624*FLEN/8, x13, x9, x10)

inst_11230:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3fffff0; valaddr_reg:x12; val_offset:33627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33627*FLEN/8, x13, x9, x10)

inst_11231:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa380000f; valaddr_reg:x12; val_offset:33630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33630*FLEN/8, x13, x9, x10)

inst_11232:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3fffff8; valaddr_reg:x12; val_offset:33633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33633*FLEN/8, x13, x9, x10)

inst_11233:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3800007; valaddr_reg:x12; val_offset:33636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33636*FLEN/8, x13, x9, x10)

inst_11234:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3fffffc; valaddr_reg:x12; val_offset:33639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33639*FLEN/8, x13, x9, x10)

inst_11235:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3800003; valaddr_reg:x12; val_offset:33642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33642*FLEN/8, x13, x9, x10)

inst_11236:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3fffffe; valaddr_reg:x12; val_offset:33645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33645*FLEN/8, x13, x9, x10)

inst_11237:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x47 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xa3800001; valaddr_reg:x12; val_offset:33648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33648*FLEN/8, x13, x9, x10)

inst_11238:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:33651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33651*FLEN/8, x13, x9, x10)

inst_11239:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbf800007; valaddr_reg:x12; val_offset:33654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33654*FLEN/8, x13, x9, x10)

inst_11240:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:33657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33657*FLEN/8, x13, x9, x10)

inst_11241:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbf800003; valaddr_reg:x12; val_offset:33660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33660*FLEN/8, x13, x9, x10)

inst_11242:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:33663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33663*FLEN/8, x13, x9, x10)

inst_11243:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbf800001; valaddr_reg:x12; val_offset:33666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33666*FLEN/8, x13, x9, x10)

inst_11244:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:33669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33669*FLEN/8, x13, x9, x10)

inst_11245:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:33672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33672*FLEN/8, x13, x9, x10)

inst_11246:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbf999999; valaddr_reg:x12; val_offset:33675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33675*FLEN/8, x13, x9, x10)

inst_11247:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:33678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33678*FLEN/8, x13, x9, x10)

inst_11248:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:33681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33681*FLEN/8, x13, x9, x10)

inst_11249:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:33684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33684*FLEN/8, x13, x9, x10)

inst_11250:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:33687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33687*FLEN/8, x13, x9, x10)

inst_11251:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:33690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33690*FLEN/8, x13, x9, x10)

inst_11252:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:33693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33693*FLEN/8, x13, x9, x10)

inst_11253:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x30f7a4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5c9501 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb0f7a4; op2val:0x805c9501;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:33696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33696*FLEN/8, x13, x9, x10)

inst_11254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa4000000; valaddr_reg:x12; val_offset:33699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33699*FLEN/8, x13, x9, x10)

inst_11255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47fffff; valaddr_reg:x12; val_offset:33702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33702*FLEN/8, x13, x9, x10)

inst_11256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa4400000; valaddr_reg:x12; val_offset:33705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33705*FLEN/8, x13, x9, x10)

inst_11257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa43fffff; valaddr_reg:x12; val_offset:33708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33708*FLEN/8, x13, x9, x10)

inst_11258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa4600000; valaddr_reg:x12; val_offset:33711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33711*FLEN/8, x13, x9, x10)

inst_11259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa41fffff; valaddr_reg:x12; val_offset:33714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33714*FLEN/8, x13, x9, x10)

inst_11260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa4700000; valaddr_reg:x12; val_offset:33717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33717*FLEN/8, x13, x9, x10)

inst_11261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa40fffff; valaddr_reg:x12; val_offset:33720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33720*FLEN/8, x13, x9, x10)

inst_11262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa4780000; valaddr_reg:x12; val_offset:33723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33723*FLEN/8, x13, x9, x10)

inst_11263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa407ffff; valaddr_reg:x12; val_offset:33726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33726*FLEN/8, x13, x9, x10)

inst_11264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47c0000; valaddr_reg:x12; val_offset:33729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33729*FLEN/8, x13, x9, x10)

inst_11265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa403ffff; valaddr_reg:x12; val_offset:33732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33732*FLEN/8, x13, x9, x10)

inst_11266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47e0000; valaddr_reg:x12; val_offset:33735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33735*FLEN/8, x13, x9, x10)

inst_11267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa401ffff; valaddr_reg:x12; val_offset:33738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33738*FLEN/8, x13, x9, x10)

inst_11268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47f0000; valaddr_reg:x12; val_offset:33741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33741*FLEN/8, x13, x9, x10)

inst_11269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa400ffff; valaddr_reg:x12; val_offset:33744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33744*FLEN/8, x13, x9, x10)

inst_11270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47f8000; valaddr_reg:x12; val_offset:33747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33747*FLEN/8, x13, x9, x10)

inst_11271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa4007fff; valaddr_reg:x12; val_offset:33750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33750*FLEN/8, x13, x9, x10)

inst_11272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47fc000; valaddr_reg:x12; val_offset:33753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33753*FLEN/8, x13, x9, x10)

inst_11273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa4003fff; valaddr_reg:x12; val_offset:33756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33756*FLEN/8, x13, x9, x10)

inst_11274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47fe000; valaddr_reg:x12; val_offset:33759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33759*FLEN/8, x13, x9, x10)

inst_11275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa4001fff; valaddr_reg:x12; val_offset:33762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33762*FLEN/8, x13, x9, x10)

inst_11276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47ff000; valaddr_reg:x12; val_offset:33765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33765*FLEN/8, x13, x9, x10)

inst_11277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa4000fff; valaddr_reg:x12; val_offset:33768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33768*FLEN/8, x13, x9, x10)

inst_11278:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47ff800; valaddr_reg:x12; val_offset:33771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33771*FLEN/8, x13, x9, x10)

inst_11279:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa40007ff; valaddr_reg:x12; val_offset:33774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33774*FLEN/8, x13, x9, x10)

inst_11280:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47ffc00; valaddr_reg:x12; val_offset:33777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33777*FLEN/8, x13, x9, x10)

inst_11281:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa40003ff; valaddr_reg:x12; val_offset:33780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33780*FLEN/8, x13, x9, x10)

inst_11282:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47ffe00; valaddr_reg:x12; val_offset:33783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33783*FLEN/8, x13, x9, x10)

inst_11283:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa40001ff; valaddr_reg:x12; val_offset:33786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33786*FLEN/8, x13, x9, x10)

inst_11284:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47fff00; valaddr_reg:x12; val_offset:33789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33789*FLEN/8, x13, x9, x10)

inst_11285:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa40000ff; valaddr_reg:x12; val_offset:33792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33792*FLEN/8, x13, x9, x10)

inst_11286:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47fff80; valaddr_reg:x12; val_offset:33795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33795*FLEN/8, x13, x9, x10)

inst_11287:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa400007f; valaddr_reg:x12; val_offset:33798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33798*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_88)
inst_11288:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47fffc0; valaddr_reg:x12; val_offset:33801*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33801*FLEN/8, x13, x9, x10)

inst_11289:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa400003f; valaddr_reg:x12; val_offset:33804*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33804*FLEN/8, x13, x9, x10)

inst_11290:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47fffe0; valaddr_reg:x12; val_offset:33807*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33807*FLEN/8, x13, x9, x10)

inst_11291:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa400001f; valaddr_reg:x12; val_offset:33810*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33810*FLEN/8, x13, x9, x10)

inst_11292:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47ffff0; valaddr_reg:x12; val_offset:33813*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33813*FLEN/8, x13, x9, x10)

inst_11293:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa400000f; valaddr_reg:x12; val_offset:33816*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33816*FLEN/8, x13, x9, x10)

inst_11294:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47ffff8; valaddr_reg:x12; val_offset:33819*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33819*FLEN/8, x13, x9, x10)

inst_11295:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa4000007; valaddr_reg:x12; val_offset:33822*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33822*FLEN/8, x13, x9, x10)

inst_11296:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47ffffc; valaddr_reg:x12; val_offset:33825*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33825*FLEN/8, x13, x9, x10)

inst_11297:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa4000003; valaddr_reg:x12; val_offset:33828*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33828*FLEN/8, x13, x9, x10)

inst_11298:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa47ffffe; valaddr_reg:x12; val_offset:33831*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33831*FLEN/8, x13, x9, x10)

inst_11299:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x48 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xa4000001; valaddr_reg:x12; val_offset:33834*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33834*FLEN/8, x13, x9, x10)

inst_11300:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:33837*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33837*FLEN/8, x13, x9, x10)

inst_11301:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbf800007; valaddr_reg:x12; val_offset:33840*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33840*FLEN/8, x13, x9, x10)

inst_11302:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:33843*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33843*FLEN/8, x13, x9, x10)

inst_11303:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbf800003; valaddr_reg:x12; val_offset:33846*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33846*FLEN/8, x13, x9, x10)

inst_11304:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:33849*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33849*FLEN/8, x13, x9, x10)

inst_11305:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbf800001; valaddr_reg:x12; val_offset:33852*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33852*FLEN/8, x13, x9, x10)

inst_11306:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:33855*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33855*FLEN/8, x13, x9, x10)

inst_11307:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:33858*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33858*FLEN/8, x13, x9, x10)

inst_11308:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbf999999; valaddr_reg:x12; val_offset:33861*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33861*FLEN/8, x13, x9, x10)

inst_11309:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:33864*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33864*FLEN/8, x13, x9, x10)

inst_11310:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:33867*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33867*FLEN/8, x13, x9, x10)

inst_11311:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:33870*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33870*FLEN/8, x13, x9, x10)

inst_11312:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:33873*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33873*FLEN/8, x13, x9, x10)

inst_11313:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:33876*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33876*FLEN/8, x13, x9, x10)

inst_11314:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:33879*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33879*FLEN/8, x13, x9, x10)

inst_11315:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1ef595 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x338902 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1ef595; op2val:0x80338902;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:33882*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33882*FLEN/8, x13, x9, x10)

inst_11316:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4800000; valaddr_reg:x12; val_offset:33885*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33885*FLEN/8, x13, x9, x10)

inst_11317:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4ffffff; valaddr_reg:x12; val_offset:33888*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33888*FLEN/8, x13, x9, x10)

inst_11318:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4c00000; valaddr_reg:x12; val_offset:33891*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33891*FLEN/8, x13, x9, x10)

inst_11319:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4bfffff; valaddr_reg:x12; val_offset:33894*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33894*FLEN/8, x13, x9, x10)

inst_11320:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4e00000; valaddr_reg:x12; val_offset:33897*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33897*FLEN/8, x13, x9, x10)

inst_11321:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa49fffff; valaddr_reg:x12; val_offset:33900*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33900*FLEN/8, x13, x9, x10)

inst_11322:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4f00000; valaddr_reg:x12; val_offset:33903*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33903*FLEN/8, x13, x9, x10)

inst_11323:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa48fffff; valaddr_reg:x12; val_offset:33906*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33906*FLEN/8, x13, x9, x10)

inst_11324:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4f80000; valaddr_reg:x12; val_offset:33909*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33909*FLEN/8, x13, x9, x10)

inst_11325:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa487ffff; valaddr_reg:x12; val_offset:33912*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33912*FLEN/8, x13, x9, x10)

inst_11326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4fc0000; valaddr_reg:x12; val_offset:33915*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33915*FLEN/8, x13, x9, x10)

inst_11327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa483ffff; valaddr_reg:x12; val_offset:33918*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33918*FLEN/8, x13, x9, x10)

inst_11328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4fe0000; valaddr_reg:x12; val_offset:33921*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33921*FLEN/8, x13, x9, x10)

inst_11329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa481ffff; valaddr_reg:x12; val_offset:33924*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33924*FLEN/8, x13, x9, x10)

inst_11330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4ff0000; valaddr_reg:x12; val_offset:33927*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33927*FLEN/8, x13, x9, x10)

inst_11331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa480ffff; valaddr_reg:x12; val_offset:33930*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33930*FLEN/8, x13, x9, x10)

inst_11332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4ff8000; valaddr_reg:x12; val_offset:33933*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33933*FLEN/8, x13, x9, x10)

inst_11333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4807fff; valaddr_reg:x12; val_offset:33936*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33936*FLEN/8, x13, x9, x10)

inst_11334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4ffc000; valaddr_reg:x12; val_offset:33939*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33939*FLEN/8, x13, x9, x10)

inst_11335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4803fff; valaddr_reg:x12; val_offset:33942*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33942*FLEN/8, x13, x9, x10)

inst_11336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4ffe000; valaddr_reg:x12; val_offset:33945*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33945*FLEN/8, x13, x9, x10)

inst_11337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4801fff; valaddr_reg:x12; val_offset:33948*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33948*FLEN/8, x13, x9, x10)

inst_11338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4fff000; valaddr_reg:x12; val_offset:33951*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33951*FLEN/8, x13, x9, x10)

inst_11339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4800fff; valaddr_reg:x12; val_offset:33954*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33954*FLEN/8, x13, x9, x10)

inst_11340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4fff800; valaddr_reg:x12; val_offset:33957*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33957*FLEN/8, x13, x9, x10)

inst_11341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa48007ff; valaddr_reg:x12; val_offset:33960*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33960*FLEN/8, x13, x9, x10)

inst_11342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4fffc00; valaddr_reg:x12; val_offset:33963*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33963*FLEN/8, x13, x9, x10)

inst_11343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa48003ff; valaddr_reg:x12; val_offset:33966*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33966*FLEN/8, x13, x9, x10)

inst_11344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4fffe00; valaddr_reg:x12; val_offset:33969*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33969*FLEN/8, x13, x9, x10)

inst_11345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa48001ff; valaddr_reg:x12; val_offset:33972*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33972*FLEN/8, x13, x9, x10)

inst_11346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4ffff00; valaddr_reg:x12; val_offset:33975*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33975*FLEN/8, x13, x9, x10)

inst_11347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa48000ff; valaddr_reg:x12; val_offset:33978*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33978*FLEN/8, x13, x9, x10)

inst_11348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4ffff80; valaddr_reg:x12; val_offset:33981*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33981*FLEN/8, x13, x9, x10)

inst_11349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa480007f; valaddr_reg:x12; val_offset:33984*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33984*FLEN/8, x13, x9, x10)

inst_11350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4ffffc0; valaddr_reg:x12; val_offset:33987*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33987*FLEN/8, x13, x9, x10)

inst_11351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa480003f; valaddr_reg:x12; val_offset:33990*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33990*FLEN/8, x13, x9, x10)

inst_11352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4ffffe0; valaddr_reg:x12; val_offset:33993*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33993*FLEN/8, x13, x9, x10)

inst_11353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa480001f; valaddr_reg:x12; val_offset:33996*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33996*FLEN/8, x13, x9, x10)

inst_11354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4fffff0; valaddr_reg:x12; val_offset:33999*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 33999*FLEN/8, x13, x9, x10)

inst_11355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa480000f; valaddr_reg:x12; val_offset:34002*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34002*FLEN/8, x13, x9, x10)

inst_11356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4fffff8; valaddr_reg:x12; val_offset:34005*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34005*FLEN/8, x13, x9, x10)

inst_11357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4800007; valaddr_reg:x12; val_offset:34008*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34008*FLEN/8, x13, x9, x10)

inst_11358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4fffffc; valaddr_reg:x12; val_offset:34011*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34011*FLEN/8, x13, x9, x10)

inst_11359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4800003; valaddr_reg:x12; val_offset:34014*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34014*FLEN/8, x13, x9, x10)

inst_11360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4fffffe; valaddr_reg:x12; val_offset:34017*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34017*FLEN/8, x13, x9, x10)

inst_11361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x49 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xa4800001; valaddr_reg:x12; val_offset:34020*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34020*FLEN/8, x13, x9, x10)

inst_11362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:34023*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34023*FLEN/8, x13, x9, x10)

inst_11363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbf800007; valaddr_reg:x12; val_offset:34026*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34026*FLEN/8, x13, x9, x10)

inst_11364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:34029*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34029*FLEN/8, x13, x9, x10)

inst_11365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbf800003; valaddr_reg:x12; val_offset:34032*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34032*FLEN/8, x13, x9, x10)

inst_11366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:34035*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34035*FLEN/8, x13, x9, x10)

inst_11367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbf800001; valaddr_reg:x12; val_offset:34038*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34038*FLEN/8, x13, x9, x10)

inst_11368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:34041*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34041*FLEN/8, x13, x9, x10)

inst_11369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:34044*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34044*FLEN/8, x13, x9, x10)

inst_11370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbf999999; valaddr_reg:x12; val_offset:34047*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34047*FLEN/8, x13, x9, x10)

inst_11371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:34050*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34050*FLEN/8, x13, x9, x10)

inst_11372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:34053*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34053*FLEN/8, x13, x9, x10)

inst_11373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:34056*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34056*FLEN/8, x13, x9, x10)

inst_11374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:34059*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34059*FLEN/8, x13, x9, x10)

inst_11375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:34062*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34062*FLEN/8, x13, x9, x10)

inst_11376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:34065*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34065*FLEN/8, x13, x9, x10)

inst_11377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x2704a7 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x310c6d and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f2704a7; op2val:0x80310c6d;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:34068*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34068*FLEN/8, x13, x9, x10)

inst_11378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa5000000; valaddr_reg:x12; val_offset:34071*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34071*FLEN/8, x13, x9, x10)

inst_11379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57fffff; valaddr_reg:x12; val_offset:34074*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34074*FLEN/8, x13, x9, x10)

inst_11380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa5400000; valaddr_reg:x12; val_offset:34077*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34077*FLEN/8, x13, x9, x10)

inst_11381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa53fffff; valaddr_reg:x12; val_offset:34080*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34080*FLEN/8, x13, x9, x10)

inst_11382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa5600000; valaddr_reg:x12; val_offset:34083*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34083*FLEN/8, x13, x9, x10)

inst_11383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa51fffff; valaddr_reg:x12; val_offset:34086*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34086*FLEN/8, x13, x9, x10)

inst_11384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa5700000; valaddr_reg:x12; val_offset:34089*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34089*FLEN/8, x13, x9, x10)

inst_11385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa50fffff; valaddr_reg:x12; val_offset:34092*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34092*FLEN/8, x13, x9, x10)

inst_11386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa5780000; valaddr_reg:x12; val_offset:34095*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34095*FLEN/8, x13, x9, x10)

inst_11387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa507ffff; valaddr_reg:x12; val_offset:34098*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34098*FLEN/8, x13, x9, x10)

inst_11388:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57c0000; valaddr_reg:x12; val_offset:34101*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34101*FLEN/8, x13, x9, x10)

inst_11389:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa503ffff; valaddr_reg:x12; val_offset:34104*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34104*FLEN/8, x13, x9, x10)

inst_11390:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57e0000; valaddr_reg:x12; val_offset:34107*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34107*FLEN/8, x13, x9, x10)

inst_11391:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa501ffff; valaddr_reg:x12; val_offset:34110*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34110*FLEN/8, x13, x9, x10)

inst_11392:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57f0000; valaddr_reg:x12; val_offset:34113*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34113*FLEN/8, x13, x9, x10)

inst_11393:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa500ffff; valaddr_reg:x12; val_offset:34116*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34116*FLEN/8, x13, x9, x10)

inst_11394:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57f8000; valaddr_reg:x12; val_offset:34119*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34119*FLEN/8, x13, x9, x10)

inst_11395:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa5007fff; valaddr_reg:x12; val_offset:34122*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34122*FLEN/8, x13, x9, x10)

inst_11396:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57fc000; valaddr_reg:x12; val_offset:34125*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34125*FLEN/8, x13, x9, x10)

inst_11397:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa5003fff; valaddr_reg:x12; val_offset:34128*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34128*FLEN/8, x13, x9, x10)

inst_11398:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57fe000; valaddr_reg:x12; val_offset:34131*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34131*FLEN/8, x13, x9, x10)

inst_11399:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa5001fff; valaddr_reg:x12; val_offset:34134*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34134*FLEN/8, x13, x9, x10)

inst_11400:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57ff000; valaddr_reg:x12; val_offset:34137*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34137*FLEN/8, x13, x9, x10)

inst_11401:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa5000fff; valaddr_reg:x12; val_offset:34140*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34140*FLEN/8, x13, x9, x10)

inst_11402:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57ff800; valaddr_reg:x12; val_offset:34143*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34143*FLEN/8, x13, x9, x10)

inst_11403:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa50007ff; valaddr_reg:x12; val_offset:34146*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34146*FLEN/8, x13, x9, x10)

inst_11404:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57ffc00; valaddr_reg:x12; val_offset:34149*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34149*FLEN/8, x13, x9, x10)

inst_11405:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa50003ff; valaddr_reg:x12; val_offset:34152*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34152*FLEN/8, x13, x9, x10)

inst_11406:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57ffe00; valaddr_reg:x12; val_offset:34155*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34155*FLEN/8, x13, x9, x10)

inst_11407:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa50001ff; valaddr_reg:x12; val_offset:34158*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34158*FLEN/8, x13, x9, x10)

inst_11408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57fff00; valaddr_reg:x12; val_offset:34161*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34161*FLEN/8, x13, x9, x10)

inst_11409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa50000ff; valaddr_reg:x12; val_offset:34164*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34164*FLEN/8, x13, x9, x10)

inst_11410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57fff80; valaddr_reg:x12; val_offset:34167*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34167*FLEN/8, x13, x9, x10)

inst_11411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa500007f; valaddr_reg:x12; val_offset:34170*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34170*FLEN/8, x13, x9, x10)

inst_11412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57fffc0; valaddr_reg:x12; val_offset:34173*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34173*FLEN/8, x13, x9, x10)

inst_11413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa500003f; valaddr_reg:x12; val_offset:34176*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34176*FLEN/8, x13, x9, x10)

inst_11414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57fffe0; valaddr_reg:x12; val_offset:34179*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34179*FLEN/8, x13, x9, x10)

inst_11415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa500001f; valaddr_reg:x12; val_offset:34182*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34182*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_89)
inst_11416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57ffff0; valaddr_reg:x12; val_offset:34185*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34185*FLEN/8, x13, x9, x10)

inst_11417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa500000f; valaddr_reg:x12; val_offset:34188*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34188*FLEN/8, x13, x9, x10)

inst_11418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57ffff8; valaddr_reg:x12; val_offset:34191*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34191*FLEN/8, x13, x9, x10)

inst_11419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa5000007; valaddr_reg:x12; val_offset:34194*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34194*FLEN/8, x13, x9, x10)

inst_11420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57ffffc; valaddr_reg:x12; val_offset:34197*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34197*FLEN/8, x13, x9, x10)

inst_11421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa5000003; valaddr_reg:x12; val_offset:34200*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34200*FLEN/8, x13, x9, x10)

inst_11422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa57ffffe; valaddr_reg:x12; val_offset:34203*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34203*FLEN/8, x13, x9, x10)

inst_11423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x4a and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xa5000001; valaddr_reg:x12; val_offset:34206*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34206*FLEN/8, x13, x9, x10)

inst_11424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:34209*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34209*FLEN/8, x13, x9, x10)

inst_11425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbf800007; valaddr_reg:x12; val_offset:34212*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34212*FLEN/8, x13, x9, x10)

inst_11426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:34215*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34215*FLEN/8, x13, x9, x10)

inst_11427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbf800003; valaddr_reg:x12; val_offset:34218*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34218*FLEN/8, x13, x9, x10)

inst_11428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:34221*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34221*FLEN/8, x13, x9, x10)

inst_11429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbf800001; valaddr_reg:x12; val_offset:34224*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34224*FLEN/8, x13, x9, x10)

inst_11430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:34227*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34227*FLEN/8, x13, x9, x10)

inst_11431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:34230*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34230*FLEN/8, x13, x9, x10)

inst_11432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbf999999; valaddr_reg:x12; val_offset:34233*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34233*FLEN/8, x13, x9, x10)

inst_11433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:34236*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34236*FLEN/8, x13, x9, x10)

inst_11434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:34239*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34239*FLEN/8, x13, x9, x10)

inst_11435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:34242*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34242*FLEN/8, x13, x9, x10)

inst_11436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:34245*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34245*FLEN/8, x13, x9, x10)

inst_11437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:34248*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34248*FLEN/8, x13, x9, x10)

inst_11438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:34251*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34251*FLEN/8, x13, x9, x10)

inst_11439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x15c368 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36b31b and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f15c368; op2val:0x8036b31b;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:34254*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34254*FLEN/8, x13, x9, x10)

inst_11440:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5800000; valaddr_reg:x12; val_offset:34257*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34257*FLEN/8, x13, x9, x10)

inst_11441:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5ffffff; valaddr_reg:x12; val_offset:34260*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34260*FLEN/8, x13, x9, x10)

inst_11442:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5c00000; valaddr_reg:x12; val_offset:34263*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34263*FLEN/8, x13, x9, x10)

inst_11443:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5bfffff; valaddr_reg:x12; val_offset:34266*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34266*FLEN/8, x13, x9, x10)

inst_11444:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5e00000; valaddr_reg:x12; val_offset:34269*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34269*FLEN/8, x13, x9, x10)

inst_11445:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa59fffff; valaddr_reg:x12; val_offset:34272*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34272*FLEN/8, x13, x9, x10)

inst_11446:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5f00000; valaddr_reg:x12; val_offset:34275*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34275*FLEN/8, x13, x9, x10)

inst_11447:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa58fffff; valaddr_reg:x12; val_offset:34278*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34278*FLEN/8, x13, x9, x10)

inst_11448:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5f80000; valaddr_reg:x12; val_offset:34281*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34281*FLEN/8, x13, x9, x10)

inst_11449:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa587ffff; valaddr_reg:x12; val_offset:34284*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34284*FLEN/8, x13, x9, x10)

inst_11450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5fc0000; valaddr_reg:x12; val_offset:34287*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34287*FLEN/8, x13, x9, x10)

inst_11451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa583ffff; valaddr_reg:x12; val_offset:34290*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34290*FLEN/8, x13, x9, x10)

inst_11452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5fe0000; valaddr_reg:x12; val_offset:34293*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34293*FLEN/8, x13, x9, x10)

inst_11453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa581ffff; valaddr_reg:x12; val_offset:34296*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34296*FLEN/8, x13, x9, x10)

inst_11454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5ff0000; valaddr_reg:x12; val_offset:34299*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34299*FLEN/8, x13, x9, x10)

inst_11455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa580ffff; valaddr_reg:x12; val_offset:34302*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34302*FLEN/8, x13, x9, x10)

inst_11456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5ff8000; valaddr_reg:x12; val_offset:34305*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34305*FLEN/8, x13, x9, x10)

inst_11457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5807fff; valaddr_reg:x12; val_offset:34308*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34308*FLEN/8, x13, x9, x10)

inst_11458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5ffc000; valaddr_reg:x12; val_offset:34311*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34311*FLEN/8, x13, x9, x10)

inst_11459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5803fff; valaddr_reg:x12; val_offset:34314*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34314*FLEN/8, x13, x9, x10)

inst_11460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5ffe000; valaddr_reg:x12; val_offset:34317*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34317*FLEN/8, x13, x9, x10)

inst_11461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5801fff; valaddr_reg:x12; val_offset:34320*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34320*FLEN/8, x13, x9, x10)

inst_11462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5fff000; valaddr_reg:x12; val_offset:34323*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34323*FLEN/8, x13, x9, x10)

inst_11463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6f37bb and fs2 == 1 and fe2 == 0x00 and fm2 == 0x447d6a and fs3 == 1 and fe3 == 0x4b and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eef37bb; op2val:0x80447d6a;
op3val:0xa5800fff; valaddr_reg:x12; val_offset:34326*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 34326*FLEN/8, x13, x9, x10)

#endif
RVTEST_CODE_END
RVMODEL_HALT
RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2164709399,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2113077676,32,FLEN)
NAN_BOXED(2164709399,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2113077676,32,FLEN)
NAN_BOXED(2164709399,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2113077676,32,FLEN)
NAN_BOXED(2164709399,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2113077676,32,FLEN)
NAN_BOXED(2164709399,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2113077676,32,FLEN)
NAN_BOXED(2164709399,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2113077676,32,FLEN)
NAN_BOXED(2164709399,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2113077676,32,FLEN)
NAN_BOXED(2164709399,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2113077676,32,FLEN)
NAN_BOXED(2164709399,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2113077676,32,FLEN)
NAN_BOXED(2164709399,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2113077676,32,FLEN)
NAN_BOXED(2164709399,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684354560,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692743167,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2688548864,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2688548863,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2690646016,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2686451711,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2691694592,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2685403135,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692218880,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684878847,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692481024,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684616703,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692612096,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684485631,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692677632,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684420095,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692710400,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684387327,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692726784,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684370943,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692734976,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684362751,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692739072,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684358655,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692741120,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684356607,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692742144,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684355583,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692742656,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684355071,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692742912,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684354815,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692743040,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684354687,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692743104,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684354623,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692743136,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684354591,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692743152,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684354575,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692743160,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684354567,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692743164,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684354563,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2692743166,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(2684354561,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2128146414,32,FLEN)
NAN_BOXED(2152433198,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692743168,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701131775,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2696937472,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2696937471,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2699034624,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2694840319,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2700083200,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2693791743,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2700607488,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2693267455,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2700869632,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2693005311,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701000704,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692874239,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701066240,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692808703,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701099008,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692775935,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701115392,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692759551,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701123584,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692751359,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701127680,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692747263,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701129728,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692745215,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701130752,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692744191,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701131264,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692743679,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701131520,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692743423,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701131648,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692743295,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701131712,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692743231,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701131744,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692743199,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701131760,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692743183,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701131768,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692743175,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701131772,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692743171,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2701131774,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(2692743169,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2110277600,32,FLEN)
NAN_BOXED(2166594621,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131776,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709520383,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2705326080,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2705326079,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2707423232,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2703228927,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2708471808,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2702180351,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2708996096,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701656063,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709258240,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701393919,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709389312,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701262847,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709454848,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701197311,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709487616,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701164543,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709504000,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701148159,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709512192,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701139967,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709516288,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701135871,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709518336,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701133823,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709519360,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701132799,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709519872,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701132287,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709520128,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701132031,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709520256,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131903,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709520320,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131839,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709520352,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131807,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709520368,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131791,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709520376,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131783,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709520380,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131779,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2709520382,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(2701131777,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2128040128,32,FLEN)
NAN_BOXED(2152470479,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709520384,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717908991,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2713714688,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2713714687,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2715811840,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2711617535,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2716860416,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2710568959,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717384704,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2710044671,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717646848,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709782527,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717777920,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709651455,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717843456,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709585919,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717876224,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709553151,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717892608,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709536767,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717900800,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709528575,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717904896,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709524479,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717906944,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709522431,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717907968,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709521407,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717908480,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709520895,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717908736,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709520639,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717908864,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709520511,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717908928,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709520447,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717908960,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709520415,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717908976,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709520399,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717908984,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709520391,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717908988,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709520387,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2717908990,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(2709520385,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2133019925,32,FLEN)
NAN_BOXED(2150771261,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717908992,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726297599,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2722103296,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2722103295,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2724200448,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2720006143,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2725249024,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2718957567,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2725773312,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2718433279,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726035456,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2718171135,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726166528,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2718040063,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726232064,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717974527,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726264832,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717941759,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726281216,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717925375,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726289408,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717917183,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726293504,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717913087,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726295552,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717911039,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726296576,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717910015,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726297088,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717909503,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726297344,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717909247,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726297472,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717909119,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726297536,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717909055,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726297568,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717909023,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726297584,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717909007,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726297592,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717908999,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726297596,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717908995,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2726297598,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(2717908993,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2128791747,32,FLEN)
NAN_BOXED(2152218288,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297600,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686207,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2730491904,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2730491903,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2732589056,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2728394751,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2733637632,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2727346175,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734161920,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726821887,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734424064,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726559743,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734555136,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726428671,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734620672,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726363135,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734653440,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726330367,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734669824,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726313983,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734678016,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726305791,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734682112,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726301695,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734684160,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726299647,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734685184,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726298623,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734685696,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726298111,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734685952,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297855,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686080,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297727,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686144,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297663,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686176,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297631,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686192,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297615,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686200,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297607,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686204,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297603,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2734686206,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(2726297601,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2116492287,32,FLEN)
NAN_BOXED(2160334415,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734686208,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743074815,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2738880512,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2738880511,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2740977664,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2736783359,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2742026240,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2735734783,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2742550528,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2735210495,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2742812672,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734948351,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2742943744,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734817279,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743009280,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734751743,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743042048,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734718975,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743058432,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734702591,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743066624,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734694399,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743070720,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734690303,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743072768,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734688255,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743073792,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734687231,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743074304,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734686719,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743074560,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734686463,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743074688,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734686335,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743074752,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734686271,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743074784,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734686239,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743074800,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734686223,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743074808,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734686215,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743074812,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734686211,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2743074814,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(2734686209,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2133652674,32,FLEN)
NAN_BOXED(2150587735,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743074816,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751463423,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2747269120,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2747269119,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2749366272,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2745171967,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2750414848,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2744123391,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2750939136,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743599103,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751201280,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743336959,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751332352,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743205887,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751397888,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743140351,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751430656,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743107583,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751447040,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743091199,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751455232,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743083007,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751459328,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743078911,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751461376,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743076863,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751462400,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743075839,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751462912,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743075327,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751463168,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743075071,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751463296,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743074943,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751463360,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743074879,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751463392,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743074847,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751463408,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743074831,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751463416,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743074823,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751463420,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743074819,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2751463422,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(2743074817,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2125526948,32,FLEN)
NAN_BOXED(2153551105,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751463424,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759852031,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2755657728,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2755657727,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2757754880,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2753560575,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2758803456,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2752511999,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759327744,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751987711,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759589888,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751725567,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759720960,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751594495,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759786496,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751528959,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759819264,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751496191,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759835648,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751479807,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759843840,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751471615,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759847936,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751467519,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759849984,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751465471,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759851008,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751464447,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759851520,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751463935,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759851776,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751463679,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759851904,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751463551,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759851968,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751463487,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759852000,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751463455,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759852016,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751463439,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759852024,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751463431,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759852028,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751463427,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2759852030,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(2751463425,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132735381,32,FLEN)
NAN_BOXED(2150861058,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759852032,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768240639,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2764046336,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2764046335,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2766143488,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2761949183,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2767192064,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2760900607,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2767716352,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2760376319,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2767978496,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2760114175,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768109568,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759983103,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768175104,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759917567,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768207872,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759884799,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768224256,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759868415,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768232448,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759860223,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768236544,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759856127,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768238592,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759854079,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768239616,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759853055,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768240128,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759852543,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768240384,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759852287,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768240512,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759852159,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768240576,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759852095,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768240608,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759852063,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768240624,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759852047,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768240632,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759852039,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768240636,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759852035,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2768240638,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(2759852033,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2133263527,32,FLEN)
NAN_BOXED(2150698093,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768240640,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776629247,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2772434944,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2772434943,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2774532096,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2770337791,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2775580672,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2769289215,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776104960,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768764927,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776367104,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768502783,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776498176,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768371711,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776563712,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768306175,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776596480,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768273407,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776612864,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768257023,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776621056,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768248831,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776625152,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768244735,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776627200,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768242687,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776628224,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768241663,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776628736,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768241151,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776628992,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768240895,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776629120,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768240767,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776629184,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768240703,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776629216,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768240671,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776629232,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768240655,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776629240,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768240647,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776629244,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768240643,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2776629246,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(2768240641,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132132712,32,FLEN)
NAN_BOXED(2151068443,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776629248,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785017855,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2780823552,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2780823551,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2782920704,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2778726399,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2783969280,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2777677823,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2784493568,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2777153535,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2784755712,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776891391,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2784886784,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776760319,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2784952320,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776694783,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2784985088,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776662015,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785001472,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776645631,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785009664,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776637439,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785013760,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776633343,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785015808,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776631295,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785016832,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776630271,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785017344,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776629759,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785017600,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776629503,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785017728,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776629375,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785017792,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776629311,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785017824,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776629279,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785017840,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776629263,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785017848,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776629255,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785017852,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776629251,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2785017854,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(2776629249,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2129606587,32,FLEN)
NAN_BOXED(2151972202,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2785017856,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2793406463,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2789212160,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2789212159,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2791309312,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2787115007,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2792357888,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2786066431,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2792882176,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2785542143,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2793144320,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2785279999,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
NAN_BOXED(2181989232,32,FLEN)
NAN_BOXED(2793275392,32,FLEN)
NAN_BOXED(2095443424,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_12:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_13:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_14:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_15:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_16:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_17:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_18:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_19:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_20:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_21:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_22:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_23:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_24:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_25:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_26:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_27:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_28:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_29:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_30:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_31:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_32:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_33:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_34:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_35:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_36:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_37:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_38:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_39:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_40:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_41:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_42:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_43:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_44:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_45:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_46:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_47:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_48:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_49:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_50:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_51:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_52:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_53:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_54:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_55:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_56:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_57:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_58:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_59:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_60:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_61:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_62:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_63:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_64:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_65:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_66:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_67:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_68:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_69:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_70:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_71:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_72:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_73:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_74:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_75:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_76:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_77:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_78:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_79:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_80:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_81:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_82:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_83:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_84:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_85:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_86:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_87:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_88:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_89:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_90:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_91:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_92:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_93:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_94:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_95:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_96:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_97:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_98:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_99:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_100:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_101:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_102:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_103:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_104:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_105:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_106:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_107:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_108:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_109:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_110:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_111:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_112:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_113:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_114:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_115:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_116:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_117:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_118:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_119:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_120:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_121:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_122:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_123:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_124:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_125:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_126:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_127:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_128:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_129:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_130:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_131:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_132:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_133:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_134:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_135:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_136:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_137:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_138:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_139:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_140:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_141:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_142:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_143:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_144:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_145:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_146:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_147:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_148:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_149:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_150:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_151:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_152:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_153:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_154:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_155:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_156:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_157:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_158:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_159:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_160:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_161:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_162:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_163:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_164:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_165:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_166:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_167:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_168:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_169:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_170:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_171:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_172:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_173:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_174:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_175:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_176:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_177:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_178:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_179:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_180:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_181:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_182:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_183:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_184:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_185:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_186:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_187:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_188:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_189:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_190:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_191:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_192:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_193:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_194:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_195:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_196:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_197:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_198:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_199:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_200:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_201:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_202:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_203:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_204:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_205:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_206:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_207:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_208:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_209:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_210:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_211:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_212:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_213:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_214:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_215:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_216:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_217:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_218:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_219:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_220:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_221:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_222:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_223:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_224:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_225:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_226:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_227:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_228:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_229:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_230:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_231:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_232:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_233:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_234:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_235:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_236:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_237:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_238:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_239:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_240:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_241:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_242:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_243:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_244:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_245:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_246:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_247:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_248:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_249:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_250:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_251:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_252:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_253:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_254:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_255:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_256:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_257:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_258:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_259:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_260:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_261:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_262:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_263:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_264:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_265:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_266:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_267:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_268:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_269:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_270:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_271:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_272:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_273:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_274:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_275:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_276:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_277:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_278:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_279:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_280:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_281:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_282:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_283:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_284:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_285:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_286:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_287:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_288:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_289:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_290:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_291:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_292:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_293:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_294:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_295:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_296:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_297:
    .fill 180*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
