
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 07:30:48 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fnmadd.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fnmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fnmadd_b15)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_19175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81ff0000; valaddr_reg:x12; val_offset:57462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57462*FLEN/8, x13, x9, x10)

inst_19176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x8180ffff; valaddr_reg:x12; val_offset:57465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57465*FLEN/8, x13, x9, x10)

inst_19177:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81ff8000; valaddr_reg:x12; val_offset:57468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57468*FLEN/8, x13, x9, x10)

inst_19178:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81807fff; valaddr_reg:x12; val_offset:57471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57471*FLEN/8, x13, x9, x10)

inst_19179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81ffc000; valaddr_reg:x12; val_offset:57474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57474*FLEN/8, x13, x9, x10)

inst_19180:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81803fff; valaddr_reg:x12; val_offset:57477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57477*FLEN/8, x13, x9, x10)

inst_19181:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81ffe000; valaddr_reg:x12; val_offset:57480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57480*FLEN/8, x13, x9, x10)

inst_19182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81801fff; valaddr_reg:x12; val_offset:57483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57483*FLEN/8, x13, x9, x10)

inst_19183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81fff000; valaddr_reg:x12; val_offset:57486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57486*FLEN/8, x13, x9, x10)

inst_19184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81800fff; valaddr_reg:x12; val_offset:57489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57489*FLEN/8, x13, x9, x10)

inst_19185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81fff800; valaddr_reg:x12; val_offset:57492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57492*FLEN/8, x13, x9, x10)

inst_19186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x818007ff; valaddr_reg:x12; val_offset:57495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57495*FLEN/8, x13, x9, x10)

inst_19187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81fffc00; valaddr_reg:x12; val_offset:57498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57498*FLEN/8, x13, x9, x10)

inst_19188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x818003ff; valaddr_reg:x12; val_offset:57501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57501*FLEN/8, x13, x9, x10)

inst_19189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81fffe00; valaddr_reg:x12; val_offset:57504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57504*FLEN/8, x13, x9, x10)

inst_19190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x818001ff; valaddr_reg:x12; val_offset:57507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57507*FLEN/8, x13, x9, x10)

inst_19191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81ffff00; valaddr_reg:x12; val_offset:57510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57510*FLEN/8, x13, x9, x10)

inst_19192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x818000ff; valaddr_reg:x12; val_offset:57513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57513*FLEN/8, x13, x9, x10)

inst_19193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81ffff80; valaddr_reg:x12; val_offset:57516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57516*FLEN/8, x13, x9, x10)

inst_19194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x8180007f; valaddr_reg:x12; val_offset:57519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57519*FLEN/8, x13, x9, x10)

inst_19195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81ffffc0; valaddr_reg:x12; val_offset:57522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57522*FLEN/8, x13, x9, x10)

inst_19196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x8180003f; valaddr_reg:x12; val_offset:57525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57525*FLEN/8, x13, x9, x10)

inst_19197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81ffffe0; valaddr_reg:x12; val_offset:57528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57528*FLEN/8, x13, x9, x10)

inst_19198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x8180001f; valaddr_reg:x12; val_offset:57531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57531*FLEN/8, x13, x9, x10)

inst_19199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81fffff0; valaddr_reg:x12; val_offset:57534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57534*FLEN/8, x13, x9, x10)

inst_19200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x8180000f; valaddr_reg:x12; val_offset:57537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57537*FLEN/8, x13, x9, x10)

inst_19201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81fffff8; valaddr_reg:x12; val_offset:57540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57540*FLEN/8, x13, x9, x10)

inst_19202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81800007; valaddr_reg:x12; val_offset:57543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57543*FLEN/8, x13, x9, x10)

inst_19203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81fffffc; valaddr_reg:x12; val_offset:57546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57546*FLEN/8, x13, x9, x10)

inst_19204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81800003; valaddr_reg:x12; val_offset:57549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57549*FLEN/8, x13, x9, x10)

inst_19205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x03 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x81fffffe; valaddr_reg:x12; val_offset:57552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57552*FLEN/8, x13, x9, x10)

inst_19206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x12; val_offset:57555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57555*FLEN/8, x13, x9, x10)

inst_19207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x12; val_offset:57558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57558*FLEN/8, x13, x9, x10)

inst_19208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x12; val_offset:57561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57561*FLEN/8, x13, x9, x10)

inst_19209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x12; val_offset:57564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57564*FLEN/8, x13, x9, x10)

inst_19210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x12; val_offset:57567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57567*FLEN/8, x13, x9, x10)

inst_19211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x12; val_offset:57570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57570*FLEN/8, x13, x9, x10)

inst_19212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x12; val_offset:57573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57573*FLEN/8, x13, x9, x10)

inst_19213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x12; val_offset:57576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57576*FLEN/8, x13, x9, x10)

inst_19214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x12; val_offset:57579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57579*FLEN/8, x13, x9, x10)

inst_19215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x12; val_offset:57582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57582*FLEN/8, x13, x9, x10)

inst_19216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x12; val_offset:57585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57585*FLEN/8, x13, x9, x10)

inst_19217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x12; val_offset:57588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57588*FLEN/8, x13, x9, x10)

inst_19218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x12; val_offset:57591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57591*FLEN/8, x13, x9, x10)

inst_19219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x12; val_offset:57594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57594*FLEN/8, x13, x9, x10)

inst_19220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x12; val_offset:57597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57597*FLEN/8, x13, x9, x10)

inst_19221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x30e643 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f30e643; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x12; val_offset:57600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57600*FLEN/8, x13, x9, x10)

inst_19222:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x82000001; valaddr_reg:x12; val_offset:57603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57603*FLEN/8, x13, x9, x10)

inst_19223:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x82000000; valaddr_reg:x12; val_offset:57606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57606*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_150)
inst_19224:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827fffff; valaddr_reg:x12; val_offset:57609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57609*FLEN/8, x13, x9, x10)

inst_19225:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x82400000; valaddr_reg:x12; val_offset:57612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57612*FLEN/8, x13, x9, x10)

inst_19226:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x823fffff; valaddr_reg:x12; val_offset:57615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57615*FLEN/8, x13, x9, x10)

inst_19227:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x82600000; valaddr_reg:x12; val_offset:57618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57618*FLEN/8, x13, x9, x10)

inst_19228:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x821fffff; valaddr_reg:x12; val_offset:57621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57621*FLEN/8, x13, x9, x10)

inst_19229:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x82700000; valaddr_reg:x12; val_offset:57624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57624*FLEN/8, x13, x9, x10)

inst_19230:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x820fffff; valaddr_reg:x12; val_offset:57627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57627*FLEN/8, x13, x9, x10)

inst_19231:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x82780000; valaddr_reg:x12; val_offset:57630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57630*FLEN/8, x13, x9, x10)

inst_19232:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x8207ffff; valaddr_reg:x12; val_offset:57633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57633*FLEN/8, x13, x9, x10)

inst_19233:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827c0000; valaddr_reg:x12; val_offset:57636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57636*FLEN/8, x13, x9, x10)

inst_19234:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x8203ffff; valaddr_reg:x12; val_offset:57639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57639*FLEN/8, x13, x9, x10)

inst_19235:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827e0000; valaddr_reg:x12; val_offset:57642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57642*FLEN/8, x13, x9, x10)

inst_19236:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x8201ffff; valaddr_reg:x12; val_offset:57645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57645*FLEN/8, x13, x9, x10)

inst_19237:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827f0000; valaddr_reg:x12; val_offset:57648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57648*FLEN/8, x13, x9, x10)

inst_19238:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x8200ffff; valaddr_reg:x12; val_offset:57651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57651*FLEN/8, x13, x9, x10)

inst_19239:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827f8000; valaddr_reg:x12; val_offset:57654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57654*FLEN/8, x13, x9, x10)

inst_19240:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x82007fff; valaddr_reg:x12; val_offset:57657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57657*FLEN/8, x13, x9, x10)

inst_19241:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827fc000; valaddr_reg:x12; val_offset:57660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57660*FLEN/8, x13, x9, x10)

inst_19242:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x82003fff; valaddr_reg:x12; val_offset:57663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57663*FLEN/8, x13, x9, x10)

inst_19243:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827fe000; valaddr_reg:x12; val_offset:57666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57666*FLEN/8, x13, x9, x10)

inst_19244:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x82001fff; valaddr_reg:x12; val_offset:57669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57669*FLEN/8, x13, x9, x10)

inst_19245:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827ff000; valaddr_reg:x12; val_offset:57672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57672*FLEN/8, x13, x9, x10)

inst_19246:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x82000fff; valaddr_reg:x12; val_offset:57675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57675*FLEN/8, x13, x9, x10)

inst_19247:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827ff800; valaddr_reg:x12; val_offset:57678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57678*FLEN/8, x13, x9, x10)

inst_19248:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x820007ff; valaddr_reg:x12; val_offset:57681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57681*FLEN/8, x13, x9, x10)

inst_19249:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827ffc00; valaddr_reg:x12; val_offset:57684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57684*FLEN/8, x13, x9, x10)

inst_19250:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x820003ff; valaddr_reg:x12; val_offset:57687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57687*FLEN/8, x13, x9, x10)

inst_19251:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827ffe00; valaddr_reg:x12; val_offset:57690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57690*FLEN/8, x13, x9, x10)

inst_19252:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x820001ff; valaddr_reg:x12; val_offset:57693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57693*FLEN/8, x13, x9, x10)

inst_19253:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827fff00; valaddr_reg:x12; val_offset:57696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57696*FLEN/8, x13, x9, x10)

inst_19254:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x820000ff; valaddr_reg:x12; val_offset:57699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57699*FLEN/8, x13, x9, x10)

inst_19255:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827fff80; valaddr_reg:x12; val_offset:57702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57702*FLEN/8, x13, x9, x10)

inst_19256:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x8200007f; valaddr_reg:x12; val_offset:57705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57705*FLEN/8, x13, x9, x10)

inst_19257:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827fffc0; valaddr_reg:x12; val_offset:57708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57708*FLEN/8, x13, x9, x10)

inst_19258:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x8200003f; valaddr_reg:x12; val_offset:57711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57711*FLEN/8, x13, x9, x10)

inst_19259:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827fffe0; valaddr_reg:x12; val_offset:57714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57714*FLEN/8, x13, x9, x10)

inst_19260:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x8200001f; valaddr_reg:x12; val_offset:57717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57717*FLEN/8, x13, x9, x10)

inst_19261:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827ffff0; valaddr_reg:x12; val_offset:57720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57720*FLEN/8, x13, x9, x10)

inst_19262:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x8200000f; valaddr_reg:x12; val_offset:57723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57723*FLEN/8, x13, x9, x10)

inst_19263:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827ffff8; valaddr_reg:x12; val_offset:57726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57726*FLEN/8, x13, x9, x10)

inst_19264:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x82000007; valaddr_reg:x12; val_offset:57729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57729*FLEN/8, x13, x9, x10)

inst_19265:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827ffffc; valaddr_reg:x12; val_offset:57732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57732*FLEN/8, x13, x9, x10)

inst_19266:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x82000003; valaddr_reg:x12; val_offset:57735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57735*FLEN/8, x13, x9, x10)

inst_19267:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x04 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x827ffffe; valaddr_reg:x12; val_offset:57738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57738*FLEN/8, x13, x9, x10)

inst_19268:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x12; val_offset:57741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57741*FLEN/8, x13, x9, x10)

inst_19269:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x12; val_offset:57744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57744*FLEN/8, x13, x9, x10)

inst_19270:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x12; val_offset:57747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57747*FLEN/8, x13, x9, x10)

inst_19271:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x12; val_offset:57750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57750*FLEN/8, x13, x9, x10)

inst_19272:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x12; val_offset:57753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57753*FLEN/8, x13, x9, x10)

inst_19273:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x12; val_offset:57756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57756*FLEN/8, x13, x9, x10)

inst_19274:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x12; val_offset:57759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57759*FLEN/8, x13, x9, x10)

inst_19275:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x12; val_offset:57762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57762*FLEN/8, x13, x9, x10)

inst_19276:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x12; val_offset:57765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57765*FLEN/8, x13, x9, x10)

inst_19277:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x12; val_offset:57768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57768*FLEN/8, x13, x9, x10)

inst_19278:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x12; val_offset:57771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57771*FLEN/8, x13, x9, x10)

inst_19279:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x12; val_offset:57774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57774*FLEN/8, x13, x9, x10)

inst_19280:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x12; val_offset:57777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57777*FLEN/8, x13, x9, x10)

inst_19281:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x12; val_offset:57780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57780*FLEN/8, x13, x9, x10)

inst_19282:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x12; val_offset:57783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57783*FLEN/8, x13, x9, x10)

inst_19283:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3ccfb5 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3ccfb5; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x12; val_offset:57786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57786*FLEN/8, x13, x9, x10)

inst_19284:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82800001; valaddr_reg:x12; val_offset:57789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57789*FLEN/8, x13, x9, x10)

inst_19285:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82800000; valaddr_reg:x12; val_offset:57792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57792*FLEN/8, x13, x9, x10)

inst_19286:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82ffffff; valaddr_reg:x12; val_offset:57795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57795*FLEN/8, x13, x9, x10)

inst_19287:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82c00000; valaddr_reg:x12; val_offset:57798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57798*FLEN/8, x13, x9, x10)

inst_19288:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82bfffff; valaddr_reg:x12; val_offset:57801*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57801*FLEN/8, x13, x9, x10)

inst_19289:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82e00000; valaddr_reg:x12; val_offset:57804*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57804*FLEN/8, x13, x9, x10)

inst_19290:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x829fffff; valaddr_reg:x12; val_offset:57807*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57807*FLEN/8, x13, x9, x10)

inst_19291:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82f00000; valaddr_reg:x12; val_offset:57810*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57810*FLEN/8, x13, x9, x10)

inst_19292:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x828fffff; valaddr_reg:x12; val_offset:57813*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57813*FLEN/8, x13, x9, x10)

inst_19293:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82f80000; valaddr_reg:x12; val_offset:57816*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57816*FLEN/8, x13, x9, x10)

inst_19294:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x8287ffff; valaddr_reg:x12; val_offset:57819*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57819*FLEN/8, x13, x9, x10)

inst_19295:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82fc0000; valaddr_reg:x12; val_offset:57822*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57822*FLEN/8, x13, x9, x10)

inst_19296:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x8283ffff; valaddr_reg:x12; val_offset:57825*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57825*FLEN/8, x13, x9, x10)

inst_19297:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82fe0000; valaddr_reg:x12; val_offset:57828*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57828*FLEN/8, x13, x9, x10)

inst_19298:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x8281ffff; valaddr_reg:x12; val_offset:57831*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57831*FLEN/8, x13, x9, x10)

inst_19299:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82ff0000; valaddr_reg:x12; val_offset:57834*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57834*FLEN/8, x13, x9, x10)

inst_19300:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x8280ffff; valaddr_reg:x12; val_offset:57837*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57837*FLEN/8, x13, x9, x10)

inst_19301:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82ff8000; valaddr_reg:x12; val_offset:57840*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57840*FLEN/8, x13, x9, x10)

inst_19302:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82807fff; valaddr_reg:x12; val_offset:57843*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57843*FLEN/8, x13, x9, x10)

inst_19303:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82ffc000; valaddr_reg:x12; val_offset:57846*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57846*FLEN/8, x13, x9, x10)

inst_19304:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82803fff; valaddr_reg:x12; val_offset:57849*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57849*FLEN/8, x13, x9, x10)

inst_19305:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82ffe000; valaddr_reg:x12; val_offset:57852*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57852*FLEN/8, x13, x9, x10)

inst_19306:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82801fff; valaddr_reg:x12; val_offset:57855*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57855*FLEN/8, x13, x9, x10)

inst_19307:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82fff000; valaddr_reg:x12; val_offset:57858*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57858*FLEN/8, x13, x9, x10)

inst_19308:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82800fff; valaddr_reg:x12; val_offset:57861*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57861*FLEN/8, x13, x9, x10)

inst_19309:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82fff800; valaddr_reg:x12; val_offset:57864*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57864*FLEN/8, x13, x9, x10)

inst_19310:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x828007ff; valaddr_reg:x12; val_offset:57867*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57867*FLEN/8, x13, x9, x10)

inst_19311:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82fffc00; valaddr_reg:x12; val_offset:57870*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57870*FLEN/8, x13, x9, x10)

inst_19312:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x828003ff; valaddr_reg:x12; val_offset:57873*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57873*FLEN/8, x13, x9, x10)

inst_19313:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82fffe00; valaddr_reg:x12; val_offset:57876*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57876*FLEN/8, x13, x9, x10)

inst_19314:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x828001ff; valaddr_reg:x12; val_offset:57879*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57879*FLEN/8, x13, x9, x10)

inst_19315:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82ffff00; valaddr_reg:x12; val_offset:57882*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57882*FLEN/8, x13, x9, x10)

inst_19316:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x828000ff; valaddr_reg:x12; val_offset:57885*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57885*FLEN/8, x13, x9, x10)

inst_19317:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82ffff80; valaddr_reg:x12; val_offset:57888*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57888*FLEN/8, x13, x9, x10)

inst_19318:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x8280007f; valaddr_reg:x12; val_offset:57891*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57891*FLEN/8, x13, x9, x10)

inst_19319:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82ffffc0; valaddr_reg:x12; val_offset:57894*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57894*FLEN/8, x13, x9, x10)

inst_19320:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x8280003f; valaddr_reg:x12; val_offset:57897*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57897*FLEN/8, x13, x9, x10)

inst_19321:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82ffffe0; valaddr_reg:x12; val_offset:57900*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57900*FLEN/8, x13, x9, x10)

inst_19322:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x8280001f; valaddr_reg:x12; val_offset:57903*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57903*FLEN/8, x13, x9, x10)

inst_19323:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82fffff0; valaddr_reg:x12; val_offset:57906*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57906*FLEN/8, x13, x9, x10)

inst_19324:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x8280000f; valaddr_reg:x12; val_offset:57909*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57909*FLEN/8, x13, x9, x10)

inst_19325:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82fffff8; valaddr_reg:x12; val_offset:57912*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57912*FLEN/8, x13, x9, x10)

inst_19326:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82800007; valaddr_reg:x12; val_offset:57915*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57915*FLEN/8, x13, x9, x10)

inst_19327:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82fffffc; valaddr_reg:x12; val_offset:57918*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57918*FLEN/8, x13, x9, x10)

inst_19328:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82800003; valaddr_reg:x12; val_offset:57921*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57921*FLEN/8, x13, x9, x10)

inst_19329:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x05 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x82fffffe; valaddr_reg:x12; val_offset:57924*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57924*FLEN/8, x13, x9, x10)

inst_19330:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x12; val_offset:57927*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57927*FLEN/8, x13, x9, x10)

inst_19331:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x12; val_offset:57930*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57930*FLEN/8, x13, x9, x10)

inst_19332:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x12; val_offset:57933*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57933*FLEN/8, x13, x9, x10)

inst_19333:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x12; val_offset:57936*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57936*FLEN/8, x13, x9, x10)

inst_19334:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x12; val_offset:57939*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57939*FLEN/8, x13, x9, x10)

inst_19335:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x12; val_offset:57942*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57942*FLEN/8, x13, x9, x10)

inst_19336:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x12; val_offset:57945*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57945*FLEN/8, x13, x9, x10)

inst_19337:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x12; val_offset:57948*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57948*FLEN/8, x13, x9, x10)

inst_19338:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x12; val_offset:57951*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57951*FLEN/8, x13, x9, x10)

inst_19339:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x12; val_offset:57954*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57954*FLEN/8, x13, x9, x10)

inst_19340:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x12; val_offset:57957*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57957*FLEN/8, x13, x9, x10)

inst_19341:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x12; val_offset:57960*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57960*FLEN/8, x13, x9, x10)

inst_19342:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x12; val_offset:57963*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57963*FLEN/8, x13, x9, x10)

inst_19343:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x12; val_offset:57966*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57966*FLEN/8, x13, x9, x10)

inst_19344:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x12; val_offset:57969*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57969*FLEN/8, x13, x9, x10)

inst_19345:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x1b0e38 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d9b0e38; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x12; val_offset:57972*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57972*FLEN/8, x13, x9, x10)

inst_19346:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x83000001; valaddr_reg:x12; val_offset:57975*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57975*FLEN/8, x13, x9, x10)

inst_19347:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x83000000; valaddr_reg:x12; val_offset:57978*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57978*FLEN/8, x13, x9, x10)

inst_19348:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837fffff; valaddr_reg:x12; val_offset:57981*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57981*FLEN/8, x13, x9, x10)

inst_19349:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x83400000; valaddr_reg:x12; val_offset:57984*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57984*FLEN/8, x13, x9, x10)

inst_19350:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x833fffff; valaddr_reg:x12; val_offset:57987*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57987*FLEN/8, x13, x9, x10)

inst_19351:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x83600000; valaddr_reg:x12; val_offset:57990*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57990*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_151)
inst_19352:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x831fffff; valaddr_reg:x12; val_offset:57993*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57993*FLEN/8, x13, x9, x10)

inst_19353:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x83700000; valaddr_reg:x12; val_offset:57996*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57996*FLEN/8, x13, x9, x10)

inst_19354:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x830fffff; valaddr_reg:x12; val_offset:57999*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 57999*FLEN/8, x13, x9, x10)

inst_19355:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x83780000; valaddr_reg:x12; val_offset:58002*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58002*FLEN/8, x13, x9, x10)

inst_19356:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x8307ffff; valaddr_reg:x12; val_offset:58005*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58005*FLEN/8, x13, x9, x10)

inst_19357:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837c0000; valaddr_reg:x12; val_offset:58008*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58008*FLEN/8, x13, x9, x10)

inst_19358:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x8303ffff; valaddr_reg:x12; val_offset:58011*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58011*FLEN/8, x13, x9, x10)

inst_19359:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837e0000; valaddr_reg:x12; val_offset:58014*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58014*FLEN/8, x13, x9, x10)

inst_19360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x8301ffff; valaddr_reg:x12; val_offset:58017*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58017*FLEN/8, x13, x9, x10)

inst_19361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837f0000; valaddr_reg:x12; val_offset:58020*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58020*FLEN/8, x13, x9, x10)

inst_19362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x8300ffff; valaddr_reg:x12; val_offset:58023*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58023*FLEN/8, x13, x9, x10)

inst_19363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837f8000; valaddr_reg:x12; val_offset:58026*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58026*FLEN/8, x13, x9, x10)

inst_19364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x83007fff; valaddr_reg:x12; val_offset:58029*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58029*FLEN/8, x13, x9, x10)

inst_19365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837fc000; valaddr_reg:x12; val_offset:58032*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58032*FLEN/8, x13, x9, x10)

inst_19366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x83003fff; valaddr_reg:x12; val_offset:58035*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58035*FLEN/8, x13, x9, x10)

inst_19367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837fe000; valaddr_reg:x12; val_offset:58038*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58038*FLEN/8, x13, x9, x10)

inst_19368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x83001fff; valaddr_reg:x12; val_offset:58041*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58041*FLEN/8, x13, x9, x10)

inst_19369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837ff000; valaddr_reg:x12; val_offset:58044*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58044*FLEN/8, x13, x9, x10)

inst_19370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x83000fff; valaddr_reg:x12; val_offset:58047*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58047*FLEN/8, x13, x9, x10)

inst_19371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837ff800; valaddr_reg:x12; val_offset:58050*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58050*FLEN/8, x13, x9, x10)

inst_19372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x830007ff; valaddr_reg:x12; val_offset:58053*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58053*FLEN/8, x13, x9, x10)

inst_19373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837ffc00; valaddr_reg:x12; val_offset:58056*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58056*FLEN/8, x13, x9, x10)

inst_19374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x830003ff; valaddr_reg:x12; val_offset:58059*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58059*FLEN/8, x13, x9, x10)

inst_19375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837ffe00; valaddr_reg:x12; val_offset:58062*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58062*FLEN/8, x13, x9, x10)

inst_19376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x830001ff; valaddr_reg:x12; val_offset:58065*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58065*FLEN/8, x13, x9, x10)

inst_19377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837fff00; valaddr_reg:x12; val_offset:58068*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58068*FLEN/8, x13, x9, x10)

inst_19378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x830000ff; valaddr_reg:x12; val_offset:58071*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58071*FLEN/8, x13, x9, x10)

inst_19379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837fff80; valaddr_reg:x12; val_offset:58074*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58074*FLEN/8, x13, x9, x10)

inst_19380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x8300007f; valaddr_reg:x12; val_offset:58077*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58077*FLEN/8, x13, x9, x10)

inst_19381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837fffc0; valaddr_reg:x12; val_offset:58080*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58080*FLEN/8, x13, x9, x10)

inst_19382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x8300003f; valaddr_reg:x12; val_offset:58083*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58083*FLEN/8, x13, x9, x10)

inst_19383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837fffe0; valaddr_reg:x12; val_offset:58086*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58086*FLEN/8, x13, x9, x10)

inst_19384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x8300001f; valaddr_reg:x12; val_offset:58089*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58089*FLEN/8, x13, x9, x10)

inst_19385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837ffff0; valaddr_reg:x12; val_offset:58092*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58092*FLEN/8, x13, x9, x10)

inst_19386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x8300000f; valaddr_reg:x12; val_offset:58095*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58095*FLEN/8, x13, x9, x10)

inst_19387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837ffff8; valaddr_reg:x12; val_offset:58098*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58098*FLEN/8, x13, x9, x10)

inst_19388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x83000007; valaddr_reg:x12; val_offset:58101*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58101*FLEN/8, x13, x9, x10)

inst_19389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837ffffc; valaddr_reg:x12; val_offset:58104*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58104*FLEN/8, x13, x9, x10)

inst_19390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x83000003; valaddr_reg:x12; val_offset:58107*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58107*FLEN/8, x13, x9, x10)

inst_19391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x06 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x837ffffe; valaddr_reg:x12; val_offset:58110*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58110*FLEN/8, x13, x9, x10)

inst_19392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x12; val_offset:58113*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58113*FLEN/8, x13, x9, x10)

inst_19393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x12; val_offset:58116*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58116*FLEN/8, x13, x9, x10)

inst_19394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x12; val_offset:58119*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58119*FLEN/8, x13, x9, x10)

inst_19395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x12; val_offset:58122*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58122*FLEN/8, x13, x9, x10)

inst_19396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x12; val_offset:58125*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58125*FLEN/8, x13, x9, x10)

inst_19397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x12; val_offset:58128*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58128*FLEN/8, x13, x9, x10)

inst_19398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x12; val_offset:58131*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58131*FLEN/8, x13, x9, x10)

inst_19399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x12; val_offset:58134*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58134*FLEN/8, x13, x9, x10)

inst_19400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x12; val_offset:58137*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58137*FLEN/8, x13, x9, x10)

inst_19401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x12; val_offset:58140*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58140*FLEN/8, x13, x9, x10)

inst_19402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x12; val_offset:58143*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58143*FLEN/8, x13, x9, x10)

inst_19403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x12; val_offset:58146*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58146*FLEN/8, x13, x9, x10)

inst_19404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x12; val_offset:58149*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58149*FLEN/8, x13, x9, x10)

inst_19405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x12; val_offset:58152*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58152*FLEN/8, x13, x9, x10)

inst_19406:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x12; val_offset:58155*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58155*FLEN/8, x13, x9, x10)

inst_19407:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6ac640 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eeac640; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x12; val_offset:58158*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58158*FLEN/8, x13, x9, x10)

inst_19408:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83800001; valaddr_reg:x12; val_offset:58161*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58161*FLEN/8, x13, x9, x10)

inst_19409:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83800000; valaddr_reg:x12; val_offset:58164*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58164*FLEN/8, x13, x9, x10)

inst_19410:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83ffffff; valaddr_reg:x12; val_offset:58167*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58167*FLEN/8, x13, x9, x10)

inst_19411:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83c00000; valaddr_reg:x12; val_offset:58170*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58170*FLEN/8, x13, x9, x10)

inst_19412:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83bfffff; valaddr_reg:x12; val_offset:58173*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58173*FLEN/8, x13, x9, x10)

inst_19413:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83e00000; valaddr_reg:x12; val_offset:58176*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58176*FLEN/8, x13, x9, x10)

inst_19414:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x839fffff; valaddr_reg:x12; val_offset:58179*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58179*FLEN/8, x13, x9, x10)

inst_19415:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83f00000; valaddr_reg:x12; val_offset:58182*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58182*FLEN/8, x13, x9, x10)

inst_19416:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x838fffff; valaddr_reg:x12; val_offset:58185*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58185*FLEN/8, x13, x9, x10)

inst_19417:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83f80000; valaddr_reg:x12; val_offset:58188*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58188*FLEN/8, x13, x9, x10)

inst_19418:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x8387ffff; valaddr_reg:x12; val_offset:58191*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58191*FLEN/8, x13, x9, x10)

inst_19419:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83fc0000; valaddr_reg:x12; val_offset:58194*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58194*FLEN/8, x13, x9, x10)

inst_19420:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x8383ffff; valaddr_reg:x12; val_offset:58197*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58197*FLEN/8, x13, x9, x10)

inst_19421:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83fe0000; valaddr_reg:x12; val_offset:58200*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58200*FLEN/8, x13, x9, x10)

inst_19422:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x8381ffff; valaddr_reg:x12; val_offset:58203*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58203*FLEN/8, x13, x9, x10)

inst_19423:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83ff0000; valaddr_reg:x12; val_offset:58206*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58206*FLEN/8, x13, x9, x10)

inst_19424:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x8380ffff; valaddr_reg:x12; val_offset:58209*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58209*FLEN/8, x13, x9, x10)

inst_19425:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83ff8000; valaddr_reg:x12; val_offset:58212*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58212*FLEN/8, x13, x9, x10)

inst_19426:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83807fff; valaddr_reg:x12; val_offset:58215*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58215*FLEN/8, x13, x9, x10)

inst_19427:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83ffc000; valaddr_reg:x12; val_offset:58218*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58218*FLEN/8, x13, x9, x10)

inst_19428:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83803fff; valaddr_reg:x12; val_offset:58221*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58221*FLEN/8, x13, x9, x10)

inst_19429:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83ffe000; valaddr_reg:x12; val_offset:58224*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58224*FLEN/8, x13, x9, x10)

inst_19430:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83801fff; valaddr_reg:x12; val_offset:58227*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58227*FLEN/8, x13, x9, x10)

inst_19431:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83fff000; valaddr_reg:x12; val_offset:58230*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58230*FLEN/8, x13, x9, x10)

inst_19432:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83800fff; valaddr_reg:x12; val_offset:58233*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58233*FLEN/8, x13, x9, x10)

inst_19433:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83fff800; valaddr_reg:x12; val_offset:58236*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58236*FLEN/8, x13, x9, x10)

inst_19434:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x838007ff; valaddr_reg:x12; val_offset:58239*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58239*FLEN/8, x13, x9, x10)

inst_19435:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83fffc00; valaddr_reg:x12; val_offset:58242*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58242*FLEN/8, x13, x9, x10)

inst_19436:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x838003ff; valaddr_reg:x12; val_offset:58245*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58245*FLEN/8, x13, x9, x10)

inst_19437:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83fffe00; valaddr_reg:x12; val_offset:58248*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58248*FLEN/8, x13, x9, x10)

inst_19438:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x838001ff; valaddr_reg:x12; val_offset:58251*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58251*FLEN/8, x13, x9, x10)

inst_19439:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83ffff00; valaddr_reg:x12; val_offset:58254*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58254*FLEN/8, x13, x9, x10)

inst_19440:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x838000ff; valaddr_reg:x12; val_offset:58257*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58257*FLEN/8, x13, x9, x10)

inst_19441:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83ffff80; valaddr_reg:x12; val_offset:58260*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58260*FLEN/8, x13, x9, x10)

inst_19442:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x8380007f; valaddr_reg:x12; val_offset:58263*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58263*FLEN/8, x13, x9, x10)

inst_19443:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83ffffc0; valaddr_reg:x12; val_offset:58266*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58266*FLEN/8, x13, x9, x10)

inst_19444:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x8380003f; valaddr_reg:x12; val_offset:58269*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58269*FLEN/8, x13, x9, x10)

inst_19445:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83ffffe0; valaddr_reg:x12; val_offset:58272*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58272*FLEN/8, x13, x9, x10)

inst_19446:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x8380001f; valaddr_reg:x12; val_offset:58275*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58275*FLEN/8, x13, x9, x10)

inst_19447:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83fffff0; valaddr_reg:x12; val_offset:58278*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58278*FLEN/8, x13, x9, x10)

inst_19448:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x8380000f; valaddr_reg:x12; val_offset:58281*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58281*FLEN/8, x13, x9, x10)

inst_19449:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83fffff8; valaddr_reg:x12; val_offset:58284*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58284*FLEN/8, x13, x9, x10)

inst_19450:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83800007; valaddr_reg:x12; val_offset:58287*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58287*FLEN/8, x13, x9, x10)

inst_19451:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83fffffc; valaddr_reg:x12; val_offset:58290*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58290*FLEN/8, x13, x9, x10)

inst_19452:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83800003; valaddr_reg:x12; val_offset:58293*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58293*FLEN/8, x13, x9, x10)

inst_19453:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x07 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x83fffffe; valaddr_reg:x12; val_offset:58296*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58296*FLEN/8, x13, x9, x10)

inst_19454:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x12; val_offset:58299*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58299*FLEN/8, x13, x9, x10)

inst_19455:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x12; val_offset:58302*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58302*FLEN/8, x13, x9, x10)

inst_19456:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x12; val_offset:58305*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58305*FLEN/8, x13, x9, x10)

inst_19457:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x12; val_offset:58308*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58308*FLEN/8, x13, x9, x10)

inst_19458:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x12; val_offset:58311*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58311*FLEN/8, x13, x9, x10)

inst_19459:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x12; val_offset:58314*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58314*FLEN/8, x13, x9, x10)

inst_19460:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x12; val_offset:58317*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58317*FLEN/8, x13, x9, x10)

inst_19461:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x12; val_offset:58320*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58320*FLEN/8, x13, x9, x10)

inst_19462:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x12; val_offset:58323*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58323*FLEN/8, x13, x9, x10)

inst_19463:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x12; val_offset:58326*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58326*FLEN/8, x13, x9, x10)

inst_19464:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x12; val_offset:58329*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58329*FLEN/8, x13, x9, x10)

inst_19465:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x12; val_offset:58332*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58332*FLEN/8, x13, x9, x10)

inst_19466:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x12; val_offset:58335*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58335*FLEN/8, x13, x9, x10)

inst_19467:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x12; val_offset:58338*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58338*FLEN/8, x13, x9, x10)

inst_19468:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x12; val_offset:58341*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58341*FLEN/8, x13, x9, x10)

inst_19469:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b0d90 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b0d90; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x12; val_offset:58344*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58344*FLEN/8, x13, x9, x10)

inst_19470:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x84000001; valaddr_reg:x12; val_offset:58347*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58347*FLEN/8, x13, x9, x10)

inst_19471:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x84000000; valaddr_reg:x12; val_offset:58350*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58350*FLEN/8, x13, x9, x10)

inst_19472:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847fffff; valaddr_reg:x12; val_offset:58353*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58353*FLEN/8, x13, x9, x10)

inst_19473:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x84400000; valaddr_reg:x12; val_offset:58356*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58356*FLEN/8, x13, x9, x10)

inst_19474:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x843fffff; valaddr_reg:x12; val_offset:58359*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58359*FLEN/8, x13, x9, x10)

inst_19475:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x84600000; valaddr_reg:x12; val_offset:58362*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58362*FLEN/8, x13, x9, x10)

inst_19476:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x841fffff; valaddr_reg:x12; val_offset:58365*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58365*FLEN/8, x13, x9, x10)

inst_19477:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x84700000; valaddr_reg:x12; val_offset:58368*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58368*FLEN/8, x13, x9, x10)

inst_19478:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x840fffff; valaddr_reg:x12; val_offset:58371*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58371*FLEN/8, x13, x9, x10)

inst_19479:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x84780000; valaddr_reg:x12; val_offset:58374*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58374*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_152)
inst_19480:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x8407ffff; valaddr_reg:x12; val_offset:58377*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58377*FLEN/8, x13, x9, x10)

inst_19481:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847c0000; valaddr_reg:x12; val_offset:58380*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58380*FLEN/8, x13, x9, x10)

inst_19482:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x8403ffff; valaddr_reg:x12; val_offset:58383*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58383*FLEN/8, x13, x9, x10)

inst_19483:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847e0000; valaddr_reg:x12; val_offset:58386*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58386*FLEN/8, x13, x9, x10)

inst_19484:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x8401ffff; valaddr_reg:x12; val_offset:58389*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58389*FLEN/8, x13, x9, x10)

inst_19485:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847f0000; valaddr_reg:x12; val_offset:58392*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58392*FLEN/8, x13, x9, x10)

inst_19486:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x8400ffff; valaddr_reg:x12; val_offset:58395*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58395*FLEN/8, x13, x9, x10)

inst_19487:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847f8000; valaddr_reg:x12; val_offset:58398*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58398*FLEN/8, x13, x9, x10)

inst_19488:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x84007fff; valaddr_reg:x12; val_offset:58401*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58401*FLEN/8, x13, x9, x10)

inst_19489:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847fc000; valaddr_reg:x12; val_offset:58404*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58404*FLEN/8, x13, x9, x10)

inst_19490:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x84003fff; valaddr_reg:x12; val_offset:58407*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58407*FLEN/8, x13, x9, x10)

inst_19491:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847fe000; valaddr_reg:x12; val_offset:58410*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58410*FLEN/8, x13, x9, x10)

inst_19492:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x84001fff; valaddr_reg:x12; val_offset:58413*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58413*FLEN/8, x13, x9, x10)

inst_19493:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847ff000; valaddr_reg:x12; val_offset:58416*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58416*FLEN/8, x13, x9, x10)

inst_19494:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x84000fff; valaddr_reg:x12; val_offset:58419*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58419*FLEN/8, x13, x9, x10)

inst_19495:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847ff800; valaddr_reg:x12; val_offset:58422*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58422*FLEN/8, x13, x9, x10)

inst_19496:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x840007ff; valaddr_reg:x12; val_offset:58425*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58425*FLEN/8, x13, x9, x10)

inst_19497:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847ffc00; valaddr_reg:x12; val_offset:58428*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58428*FLEN/8, x13, x9, x10)

inst_19498:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x840003ff; valaddr_reg:x12; val_offset:58431*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58431*FLEN/8, x13, x9, x10)

inst_19499:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847ffe00; valaddr_reg:x12; val_offset:58434*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58434*FLEN/8, x13, x9, x10)

inst_19500:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x840001ff; valaddr_reg:x12; val_offset:58437*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58437*FLEN/8, x13, x9, x10)

inst_19501:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847fff00; valaddr_reg:x12; val_offset:58440*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58440*FLEN/8, x13, x9, x10)

inst_19502:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x840000ff; valaddr_reg:x12; val_offset:58443*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58443*FLEN/8, x13, x9, x10)

inst_19503:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847fff80; valaddr_reg:x12; val_offset:58446*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58446*FLEN/8, x13, x9, x10)

inst_19504:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x8400007f; valaddr_reg:x12; val_offset:58449*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58449*FLEN/8, x13, x9, x10)

inst_19505:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847fffc0; valaddr_reg:x12; val_offset:58452*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58452*FLEN/8, x13, x9, x10)

inst_19506:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x8400003f; valaddr_reg:x12; val_offset:58455*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58455*FLEN/8, x13, x9, x10)

inst_19507:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847fffe0; valaddr_reg:x12; val_offset:58458*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58458*FLEN/8, x13, x9, x10)

inst_19508:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x8400001f; valaddr_reg:x12; val_offset:58461*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58461*FLEN/8, x13, x9, x10)

inst_19509:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847ffff0; valaddr_reg:x12; val_offset:58464*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58464*FLEN/8, x13, x9, x10)

inst_19510:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x8400000f; valaddr_reg:x12; val_offset:58467*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58467*FLEN/8, x13, x9, x10)

inst_19511:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847ffff8; valaddr_reg:x12; val_offset:58470*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58470*FLEN/8, x13, x9, x10)

inst_19512:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x84000007; valaddr_reg:x12; val_offset:58473*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58473*FLEN/8, x13, x9, x10)

inst_19513:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847ffffc; valaddr_reg:x12; val_offset:58476*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58476*FLEN/8, x13, x9, x10)

inst_19514:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x84000003; valaddr_reg:x12; val_offset:58479*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58479*FLEN/8, x13, x9, x10)

inst_19515:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x08 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x847ffffe; valaddr_reg:x12; val_offset:58482*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58482*FLEN/8, x13, x9, x10)

inst_19516:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x12; val_offset:58485*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58485*FLEN/8, x13, x9, x10)

inst_19517:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x12; val_offset:58488*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58488*FLEN/8, x13, x9, x10)

inst_19518:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x12; val_offset:58491*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58491*FLEN/8, x13, x9, x10)

inst_19519:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x12; val_offset:58494*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58494*FLEN/8, x13, x9, x10)

inst_19520:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x12; val_offset:58497*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58497*FLEN/8, x13, x9, x10)

inst_19521:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x12; val_offset:58500*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58500*FLEN/8, x13, x9, x10)

inst_19522:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x12; val_offset:58503*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58503*FLEN/8, x13, x9, x10)

inst_19523:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x12; val_offset:58506*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58506*FLEN/8, x13, x9, x10)

inst_19524:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x12; val_offset:58509*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58509*FLEN/8, x13, x9, x10)

inst_19525:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x12; val_offset:58512*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58512*FLEN/8, x13, x9, x10)

inst_19526:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x12; val_offset:58515*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58515*FLEN/8, x13, x9, x10)

inst_19527:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x12; val_offset:58518*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58518*FLEN/8, x13, x9, x10)

inst_19528:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x12; val_offset:58521*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58521*FLEN/8, x13, x9, x10)

inst_19529:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x12; val_offset:58524*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58524*FLEN/8, x13, x9, x10)

inst_19530:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x12; val_offset:58527*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58527*FLEN/8, x13, x9, x10)

inst_19531:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x0d6124 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d8d6124; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x12; val_offset:58530*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58530*FLEN/8, x13, x9, x10)

inst_19532:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84800001; valaddr_reg:x12; val_offset:58533*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58533*FLEN/8, x13, x9, x10)

inst_19533:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84800000; valaddr_reg:x12; val_offset:58536*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58536*FLEN/8, x13, x9, x10)

inst_19534:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84ffffff; valaddr_reg:x12; val_offset:58539*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58539*FLEN/8, x13, x9, x10)

inst_19535:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84c00000; valaddr_reg:x12; val_offset:58542*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58542*FLEN/8, x13, x9, x10)

inst_19536:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84bfffff; valaddr_reg:x12; val_offset:58545*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58545*FLEN/8, x13, x9, x10)

inst_19537:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84e00000; valaddr_reg:x12; val_offset:58548*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58548*FLEN/8, x13, x9, x10)

inst_19538:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x849fffff; valaddr_reg:x12; val_offset:58551*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58551*FLEN/8, x13, x9, x10)

inst_19539:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84f00000; valaddr_reg:x12; val_offset:58554*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58554*FLEN/8, x13, x9, x10)

inst_19540:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x848fffff; valaddr_reg:x12; val_offset:58557*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58557*FLEN/8, x13, x9, x10)

inst_19541:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84f80000; valaddr_reg:x12; val_offset:58560*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58560*FLEN/8, x13, x9, x10)

inst_19542:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x8487ffff; valaddr_reg:x12; val_offset:58563*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58563*FLEN/8, x13, x9, x10)

inst_19543:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84fc0000; valaddr_reg:x12; val_offset:58566*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58566*FLEN/8, x13, x9, x10)

inst_19544:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x8483ffff; valaddr_reg:x12; val_offset:58569*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58569*FLEN/8, x13, x9, x10)

inst_19545:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84fe0000; valaddr_reg:x12; val_offset:58572*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58572*FLEN/8, x13, x9, x10)

inst_19546:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x8481ffff; valaddr_reg:x12; val_offset:58575*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58575*FLEN/8, x13, x9, x10)

inst_19547:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84ff0000; valaddr_reg:x12; val_offset:58578*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58578*FLEN/8, x13, x9, x10)

inst_19548:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x8480ffff; valaddr_reg:x12; val_offset:58581*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58581*FLEN/8, x13, x9, x10)

inst_19549:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84ff8000; valaddr_reg:x12; val_offset:58584*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58584*FLEN/8, x13, x9, x10)

inst_19550:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84807fff; valaddr_reg:x12; val_offset:58587*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58587*FLEN/8, x13, x9, x10)

inst_19551:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84ffc000; valaddr_reg:x12; val_offset:58590*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58590*FLEN/8, x13, x9, x10)

inst_19552:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84803fff; valaddr_reg:x12; val_offset:58593*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58593*FLEN/8, x13, x9, x10)

inst_19553:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84ffe000; valaddr_reg:x12; val_offset:58596*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58596*FLEN/8, x13, x9, x10)

inst_19554:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84801fff; valaddr_reg:x12; val_offset:58599*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58599*FLEN/8, x13, x9, x10)

inst_19555:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84fff000; valaddr_reg:x12; val_offset:58602*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58602*FLEN/8, x13, x9, x10)

inst_19556:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84800fff; valaddr_reg:x12; val_offset:58605*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58605*FLEN/8, x13, x9, x10)

inst_19557:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84fff800; valaddr_reg:x12; val_offset:58608*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58608*FLEN/8, x13, x9, x10)

inst_19558:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x848007ff; valaddr_reg:x12; val_offset:58611*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58611*FLEN/8, x13, x9, x10)

inst_19559:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84fffc00; valaddr_reg:x12; val_offset:58614*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58614*FLEN/8, x13, x9, x10)

inst_19560:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x848003ff; valaddr_reg:x12; val_offset:58617*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58617*FLEN/8, x13, x9, x10)

inst_19561:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84fffe00; valaddr_reg:x12; val_offset:58620*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58620*FLEN/8, x13, x9, x10)

inst_19562:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x848001ff; valaddr_reg:x12; val_offset:58623*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58623*FLEN/8, x13, x9, x10)

inst_19563:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84ffff00; valaddr_reg:x12; val_offset:58626*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58626*FLEN/8, x13, x9, x10)

inst_19564:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x848000ff; valaddr_reg:x12; val_offset:58629*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58629*FLEN/8, x13, x9, x10)

inst_19565:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84ffff80; valaddr_reg:x12; val_offset:58632*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58632*FLEN/8, x13, x9, x10)

inst_19566:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x8480007f; valaddr_reg:x12; val_offset:58635*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58635*FLEN/8, x13, x9, x10)

inst_19567:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84ffffc0; valaddr_reg:x12; val_offset:58638*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58638*FLEN/8, x13, x9, x10)

inst_19568:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x8480003f; valaddr_reg:x12; val_offset:58641*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58641*FLEN/8, x13, x9, x10)

inst_19569:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84ffffe0; valaddr_reg:x12; val_offset:58644*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58644*FLEN/8, x13, x9, x10)

inst_19570:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x8480001f; valaddr_reg:x12; val_offset:58647*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58647*FLEN/8, x13, x9, x10)

inst_19571:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84fffff0; valaddr_reg:x12; val_offset:58650*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58650*FLEN/8, x13, x9, x10)

inst_19572:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x8480000f; valaddr_reg:x12; val_offset:58653*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58653*FLEN/8, x13, x9, x10)

inst_19573:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84fffff8; valaddr_reg:x12; val_offset:58656*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58656*FLEN/8, x13, x9, x10)

inst_19574:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84800007; valaddr_reg:x12; val_offset:58659*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58659*FLEN/8, x13, x9, x10)

inst_19575:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84fffffc; valaddr_reg:x12; val_offset:58662*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58662*FLEN/8, x13, x9, x10)

inst_19576:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84800003; valaddr_reg:x12; val_offset:58665*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58665*FLEN/8, x13, x9, x10)

inst_19577:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x09 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x84fffffe; valaddr_reg:x12; val_offset:58668*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58668*FLEN/8, x13, x9, x10)

inst_19578:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x12; val_offset:58671*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58671*FLEN/8, x13, x9, x10)

inst_19579:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x12; val_offset:58674*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58674*FLEN/8, x13, x9, x10)

inst_19580:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x12; val_offset:58677*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58677*FLEN/8, x13, x9, x10)

inst_19581:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x12; val_offset:58680*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58680*FLEN/8, x13, x9, x10)

inst_19582:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x12; val_offset:58683*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58683*FLEN/8, x13, x9, x10)

inst_19583:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x12; val_offset:58686*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58686*FLEN/8, x13, x9, x10)

inst_19584:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x12; val_offset:58689*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58689*FLEN/8, x13, x9, x10)

inst_19585:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x12; val_offset:58692*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58692*FLEN/8, x13, x9, x10)

inst_19586:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x12; val_offset:58695*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58695*FLEN/8, x13, x9, x10)

inst_19587:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x12; val_offset:58698*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58698*FLEN/8, x13, x9, x10)

inst_19588:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x12; val_offset:58701*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58701*FLEN/8, x13, x9, x10)

inst_19589:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x12; val_offset:58704*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58704*FLEN/8, x13, x9, x10)

inst_19590:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x12; val_offset:58707*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58707*FLEN/8, x13, x9, x10)

inst_19591:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x12; val_offset:58710*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58710*FLEN/8, x13, x9, x10)

inst_19592:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x12; val_offset:58713*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58713*FLEN/8, x13, x9, x10)

inst_19593:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x291450 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e291450; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x12; val_offset:58716*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58716*FLEN/8, x13, x9, x10)

inst_19594:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x85000001; valaddr_reg:x12; val_offset:58719*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58719*FLEN/8, x13, x9, x10)

inst_19595:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x85000000; valaddr_reg:x12; val_offset:58722*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58722*FLEN/8, x13, x9, x10)

inst_19596:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857fffff; valaddr_reg:x12; val_offset:58725*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58725*FLEN/8, x13, x9, x10)

inst_19597:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x85400000; valaddr_reg:x12; val_offset:58728*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58728*FLEN/8, x13, x9, x10)

inst_19598:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x853fffff; valaddr_reg:x12; val_offset:58731*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58731*FLEN/8, x13, x9, x10)

inst_19599:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x85600000; valaddr_reg:x12; val_offset:58734*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58734*FLEN/8, x13, x9, x10)

inst_19600:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x851fffff; valaddr_reg:x12; val_offset:58737*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58737*FLEN/8, x13, x9, x10)

inst_19601:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x85700000; valaddr_reg:x12; val_offset:58740*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58740*FLEN/8, x13, x9, x10)

inst_19602:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x850fffff; valaddr_reg:x12; val_offset:58743*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58743*FLEN/8, x13, x9, x10)

inst_19603:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x85780000; valaddr_reg:x12; val_offset:58746*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58746*FLEN/8, x13, x9, x10)

inst_19604:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x8507ffff; valaddr_reg:x12; val_offset:58749*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58749*FLEN/8, x13, x9, x10)

inst_19605:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857c0000; valaddr_reg:x12; val_offset:58752*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58752*FLEN/8, x13, x9, x10)

inst_19606:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x8503ffff; valaddr_reg:x12; val_offset:58755*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58755*FLEN/8, x13, x9, x10)

inst_19607:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857e0000; valaddr_reg:x12; val_offset:58758*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58758*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_153)
inst_19608:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x8501ffff; valaddr_reg:x12; val_offset:58761*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58761*FLEN/8, x13, x9, x10)

inst_19609:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857f0000; valaddr_reg:x12; val_offset:58764*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58764*FLEN/8, x13, x9, x10)

inst_19610:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x8500ffff; valaddr_reg:x12; val_offset:58767*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58767*FLEN/8, x13, x9, x10)

inst_19611:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857f8000; valaddr_reg:x12; val_offset:58770*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58770*FLEN/8, x13, x9, x10)

inst_19612:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x85007fff; valaddr_reg:x12; val_offset:58773*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58773*FLEN/8, x13, x9, x10)

inst_19613:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857fc000; valaddr_reg:x12; val_offset:58776*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58776*FLEN/8, x13, x9, x10)

inst_19614:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x85003fff; valaddr_reg:x12; val_offset:58779*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58779*FLEN/8, x13, x9, x10)

inst_19615:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857fe000; valaddr_reg:x12; val_offset:58782*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58782*FLEN/8, x13, x9, x10)

inst_19616:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x85001fff; valaddr_reg:x12; val_offset:58785*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58785*FLEN/8, x13, x9, x10)

inst_19617:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857ff000; valaddr_reg:x12; val_offset:58788*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58788*FLEN/8, x13, x9, x10)

inst_19618:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x85000fff; valaddr_reg:x12; val_offset:58791*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58791*FLEN/8, x13, x9, x10)

inst_19619:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857ff800; valaddr_reg:x12; val_offset:58794*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58794*FLEN/8, x13, x9, x10)

inst_19620:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x850007ff; valaddr_reg:x12; val_offset:58797*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58797*FLEN/8, x13, x9, x10)

inst_19621:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857ffc00; valaddr_reg:x12; val_offset:58800*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58800*FLEN/8, x13, x9, x10)

inst_19622:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x850003ff; valaddr_reg:x12; val_offset:58803*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58803*FLEN/8, x13, x9, x10)

inst_19623:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857ffe00; valaddr_reg:x12; val_offset:58806*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58806*FLEN/8, x13, x9, x10)

inst_19624:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x850001ff; valaddr_reg:x12; val_offset:58809*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58809*FLEN/8, x13, x9, x10)

inst_19625:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857fff00; valaddr_reg:x12; val_offset:58812*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58812*FLEN/8, x13, x9, x10)

inst_19626:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x850000ff; valaddr_reg:x12; val_offset:58815*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58815*FLEN/8, x13, x9, x10)

inst_19627:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857fff80; valaddr_reg:x12; val_offset:58818*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58818*FLEN/8, x13, x9, x10)

inst_19628:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x8500007f; valaddr_reg:x12; val_offset:58821*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58821*FLEN/8, x13, x9, x10)

inst_19629:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857fffc0; valaddr_reg:x12; val_offset:58824*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58824*FLEN/8, x13, x9, x10)

inst_19630:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x8500003f; valaddr_reg:x12; val_offset:58827*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58827*FLEN/8, x13, x9, x10)

inst_19631:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857fffe0; valaddr_reg:x12; val_offset:58830*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58830*FLEN/8, x13, x9, x10)

inst_19632:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x8500001f; valaddr_reg:x12; val_offset:58833*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58833*FLEN/8, x13, x9, x10)

inst_19633:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857ffff0; valaddr_reg:x12; val_offset:58836*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58836*FLEN/8, x13, x9, x10)

inst_19634:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x8500000f; valaddr_reg:x12; val_offset:58839*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58839*FLEN/8, x13, x9, x10)

inst_19635:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857ffff8; valaddr_reg:x12; val_offset:58842*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58842*FLEN/8, x13, x9, x10)

inst_19636:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x85000007; valaddr_reg:x12; val_offset:58845*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58845*FLEN/8, x13, x9, x10)

inst_19637:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857ffffc; valaddr_reg:x12; val_offset:58848*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58848*FLEN/8, x13, x9, x10)

inst_19638:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x85000003; valaddr_reg:x12; val_offset:58851*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58851*FLEN/8, x13, x9, x10)

inst_19639:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0a and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x857ffffe; valaddr_reg:x12; val_offset:58854*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58854*FLEN/8, x13, x9, x10)

inst_19640:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x12; val_offset:58857*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58857*FLEN/8, x13, x9, x10)

inst_19641:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x12; val_offset:58860*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58860*FLEN/8, x13, x9, x10)

inst_19642:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x12; val_offset:58863*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58863*FLEN/8, x13, x9, x10)

inst_19643:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x12; val_offset:58866*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58866*FLEN/8, x13, x9, x10)

inst_19644:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x12; val_offset:58869*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58869*FLEN/8, x13, x9, x10)

inst_19645:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x12; val_offset:58872*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58872*FLEN/8, x13, x9, x10)

inst_19646:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x12; val_offset:58875*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58875*FLEN/8, x13, x9, x10)

inst_19647:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x12; val_offset:58878*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58878*FLEN/8, x13, x9, x10)

inst_19648:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x12; val_offset:58881*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58881*FLEN/8, x13, x9, x10)

inst_19649:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x12; val_offset:58884*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58884*FLEN/8, x13, x9, x10)

inst_19650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x12; val_offset:58887*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58887*FLEN/8, x13, x9, x10)

inst_19651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x12; val_offset:58890*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58890*FLEN/8, x13, x9, x10)

inst_19652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x12; val_offset:58893*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58893*FLEN/8, x13, x9, x10)

inst_19653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x12; val_offset:58896*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58896*FLEN/8, x13, x9, x10)

inst_19654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x12; val_offset:58899*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58899*FLEN/8, x13, x9, x10)

inst_19655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x1b2fc2 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f1b2fc2; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x12; val_offset:58902*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58902*FLEN/8, x13, x9, x10)

inst_19656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85800001; valaddr_reg:x12; val_offset:58905*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58905*FLEN/8, x13, x9, x10)

inst_19657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85800000; valaddr_reg:x12; val_offset:58908*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58908*FLEN/8, x13, x9, x10)

inst_19658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85ffffff; valaddr_reg:x12; val_offset:58911*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58911*FLEN/8, x13, x9, x10)

inst_19659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85c00000; valaddr_reg:x12; val_offset:58914*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58914*FLEN/8, x13, x9, x10)

inst_19660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85bfffff; valaddr_reg:x12; val_offset:58917*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58917*FLEN/8, x13, x9, x10)

inst_19661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85e00000; valaddr_reg:x12; val_offset:58920*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58920*FLEN/8, x13, x9, x10)

inst_19662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x859fffff; valaddr_reg:x12; val_offset:58923*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58923*FLEN/8, x13, x9, x10)

inst_19663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85f00000; valaddr_reg:x12; val_offset:58926*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58926*FLEN/8, x13, x9, x10)

inst_19664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x858fffff; valaddr_reg:x12; val_offset:58929*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58929*FLEN/8, x13, x9, x10)

inst_19665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85f80000; valaddr_reg:x12; val_offset:58932*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58932*FLEN/8, x13, x9, x10)

inst_19666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x8587ffff; valaddr_reg:x12; val_offset:58935*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58935*FLEN/8, x13, x9, x10)

inst_19667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85fc0000; valaddr_reg:x12; val_offset:58938*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58938*FLEN/8, x13, x9, x10)

inst_19668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x8583ffff; valaddr_reg:x12; val_offset:58941*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58941*FLEN/8, x13, x9, x10)

inst_19669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85fe0000; valaddr_reg:x12; val_offset:58944*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58944*FLEN/8, x13, x9, x10)

inst_19670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x8581ffff; valaddr_reg:x12; val_offset:58947*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58947*FLEN/8, x13, x9, x10)

inst_19671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85ff0000; valaddr_reg:x12; val_offset:58950*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58950*FLEN/8, x13, x9, x10)

inst_19672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x8580ffff; valaddr_reg:x12; val_offset:58953*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58953*FLEN/8, x13, x9, x10)

inst_19673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85ff8000; valaddr_reg:x12; val_offset:58956*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58956*FLEN/8, x13, x9, x10)

inst_19674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85807fff; valaddr_reg:x12; val_offset:58959*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58959*FLEN/8, x13, x9, x10)

inst_19675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85ffc000; valaddr_reg:x12; val_offset:58962*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58962*FLEN/8, x13, x9, x10)

inst_19676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85803fff; valaddr_reg:x12; val_offset:58965*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58965*FLEN/8, x13, x9, x10)

inst_19677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85ffe000; valaddr_reg:x12; val_offset:58968*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58968*FLEN/8, x13, x9, x10)

inst_19678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85801fff; valaddr_reg:x12; val_offset:58971*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58971*FLEN/8, x13, x9, x10)

inst_19679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85fff000; valaddr_reg:x12; val_offset:58974*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58974*FLEN/8, x13, x9, x10)

inst_19680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85800fff; valaddr_reg:x12; val_offset:58977*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58977*FLEN/8, x13, x9, x10)

inst_19681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85fff800; valaddr_reg:x12; val_offset:58980*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58980*FLEN/8, x13, x9, x10)

inst_19682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x858007ff; valaddr_reg:x12; val_offset:58983*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58983*FLEN/8, x13, x9, x10)

inst_19683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85fffc00; valaddr_reg:x12; val_offset:58986*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58986*FLEN/8, x13, x9, x10)

inst_19684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x858003ff; valaddr_reg:x12; val_offset:58989*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58989*FLEN/8, x13, x9, x10)

inst_19685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85fffe00; valaddr_reg:x12; val_offset:58992*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58992*FLEN/8, x13, x9, x10)

inst_19686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x858001ff; valaddr_reg:x12; val_offset:58995*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58995*FLEN/8, x13, x9, x10)

inst_19687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85ffff00; valaddr_reg:x12; val_offset:58998*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 58998*FLEN/8, x13, x9, x10)

inst_19688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x858000ff; valaddr_reg:x12; val_offset:59001*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59001*FLEN/8, x13, x9, x10)

inst_19689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85ffff80; valaddr_reg:x12; val_offset:59004*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59004*FLEN/8, x13, x9, x10)

inst_19690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x8580007f; valaddr_reg:x12; val_offset:59007*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59007*FLEN/8, x13, x9, x10)

inst_19691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85ffffc0; valaddr_reg:x12; val_offset:59010*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59010*FLEN/8, x13, x9, x10)

inst_19692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x8580003f; valaddr_reg:x12; val_offset:59013*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59013*FLEN/8, x13, x9, x10)

inst_19693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85ffffe0; valaddr_reg:x12; val_offset:59016*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59016*FLEN/8, x13, x9, x10)

inst_19694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x8580001f; valaddr_reg:x12; val_offset:59019*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59019*FLEN/8, x13, x9, x10)

inst_19695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85fffff0; valaddr_reg:x12; val_offset:59022*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59022*FLEN/8, x13, x9, x10)

inst_19696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x8580000f; valaddr_reg:x12; val_offset:59025*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59025*FLEN/8, x13, x9, x10)

inst_19697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85fffff8; valaddr_reg:x12; val_offset:59028*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59028*FLEN/8, x13, x9, x10)

inst_19698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85800007; valaddr_reg:x12; val_offset:59031*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59031*FLEN/8, x13, x9, x10)

inst_19699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85fffffc; valaddr_reg:x12; val_offset:59034*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59034*FLEN/8, x13, x9, x10)

inst_19700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85800003; valaddr_reg:x12; val_offset:59037*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59037*FLEN/8, x13, x9, x10)

inst_19701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0b and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x85fffffe; valaddr_reg:x12; val_offset:59040*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59040*FLEN/8, x13, x9, x10)

inst_19702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x12; val_offset:59043*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59043*FLEN/8, x13, x9, x10)

inst_19703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x12; val_offset:59046*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59046*FLEN/8, x13, x9, x10)

inst_19704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x12; val_offset:59049*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59049*FLEN/8, x13, x9, x10)

inst_19705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x12; val_offset:59052*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59052*FLEN/8, x13, x9, x10)

inst_19706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x12; val_offset:59055*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59055*FLEN/8, x13, x9, x10)

inst_19707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x12; val_offset:59058*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59058*FLEN/8, x13, x9, x10)

inst_19708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x12; val_offset:59061*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59061*FLEN/8, x13, x9, x10)

inst_19709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x12; val_offset:59064*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59064*FLEN/8, x13, x9, x10)

inst_19710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x12; val_offset:59067*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59067*FLEN/8, x13, x9, x10)

inst_19711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x12; val_offset:59070*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59070*FLEN/8, x13, x9, x10)

inst_19712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x12; val_offset:59073*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59073*FLEN/8, x13, x9, x10)

inst_19713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x12; val_offset:59076*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59076*FLEN/8, x13, x9, x10)

inst_19714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x12; val_offset:59079*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59079*FLEN/8, x13, x9, x10)

inst_19715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x12; val_offset:59082*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59082*FLEN/8, x13, x9, x10)

inst_19716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x12; val_offset:59085*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59085*FLEN/8, x13, x9, x10)

inst_19717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a47f4 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a47f4; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x12; val_offset:59088*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59088*FLEN/8, x13, x9, x10)

inst_19718:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x86000001; valaddr_reg:x12; val_offset:59091*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59091*FLEN/8, x13, x9, x10)

inst_19719:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x86000000; valaddr_reg:x12; val_offset:59094*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59094*FLEN/8, x13, x9, x10)

inst_19720:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867fffff; valaddr_reg:x12; val_offset:59097*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59097*FLEN/8, x13, x9, x10)

inst_19721:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x86400000; valaddr_reg:x12; val_offset:59100*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59100*FLEN/8, x13, x9, x10)

inst_19722:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x863fffff; valaddr_reg:x12; val_offset:59103*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59103*FLEN/8, x13, x9, x10)

inst_19723:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x86600000; valaddr_reg:x12; val_offset:59106*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59106*FLEN/8, x13, x9, x10)

inst_19724:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x861fffff; valaddr_reg:x12; val_offset:59109*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59109*FLEN/8, x13, x9, x10)

inst_19725:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x86700000; valaddr_reg:x12; val_offset:59112*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59112*FLEN/8, x13, x9, x10)

inst_19726:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x860fffff; valaddr_reg:x12; val_offset:59115*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59115*FLEN/8, x13, x9, x10)

inst_19727:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x86780000; valaddr_reg:x12; val_offset:59118*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59118*FLEN/8, x13, x9, x10)

inst_19728:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x8607ffff; valaddr_reg:x12; val_offset:59121*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59121*FLEN/8, x13, x9, x10)

inst_19729:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867c0000; valaddr_reg:x12; val_offset:59124*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59124*FLEN/8, x13, x9, x10)

inst_19730:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x8603ffff; valaddr_reg:x12; val_offset:59127*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59127*FLEN/8, x13, x9, x10)

inst_19731:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867e0000; valaddr_reg:x12; val_offset:59130*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59130*FLEN/8, x13, x9, x10)

inst_19732:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x8601ffff; valaddr_reg:x12; val_offset:59133*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59133*FLEN/8, x13, x9, x10)

inst_19733:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867f0000; valaddr_reg:x12; val_offset:59136*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59136*FLEN/8, x13, x9, x10)

inst_19734:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x8600ffff; valaddr_reg:x12; val_offset:59139*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59139*FLEN/8, x13, x9, x10)

inst_19735:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867f8000; valaddr_reg:x12; val_offset:59142*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59142*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_154)
inst_19736:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x86007fff; valaddr_reg:x12; val_offset:59145*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59145*FLEN/8, x13, x9, x10)

inst_19737:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867fc000; valaddr_reg:x12; val_offset:59148*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59148*FLEN/8, x13, x9, x10)

inst_19738:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x86003fff; valaddr_reg:x12; val_offset:59151*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59151*FLEN/8, x13, x9, x10)

inst_19739:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867fe000; valaddr_reg:x12; val_offset:59154*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59154*FLEN/8, x13, x9, x10)

inst_19740:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x86001fff; valaddr_reg:x12; val_offset:59157*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59157*FLEN/8, x13, x9, x10)

inst_19741:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867ff000; valaddr_reg:x12; val_offset:59160*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59160*FLEN/8, x13, x9, x10)

inst_19742:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x86000fff; valaddr_reg:x12; val_offset:59163*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59163*FLEN/8, x13, x9, x10)

inst_19743:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867ff800; valaddr_reg:x12; val_offset:59166*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59166*FLEN/8, x13, x9, x10)

inst_19744:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x860007ff; valaddr_reg:x12; val_offset:59169*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59169*FLEN/8, x13, x9, x10)

inst_19745:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867ffc00; valaddr_reg:x12; val_offset:59172*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59172*FLEN/8, x13, x9, x10)

inst_19746:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x860003ff; valaddr_reg:x12; val_offset:59175*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59175*FLEN/8, x13, x9, x10)

inst_19747:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867ffe00; valaddr_reg:x12; val_offset:59178*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59178*FLEN/8, x13, x9, x10)

inst_19748:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x860001ff; valaddr_reg:x12; val_offset:59181*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59181*FLEN/8, x13, x9, x10)

inst_19749:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867fff00; valaddr_reg:x12; val_offset:59184*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59184*FLEN/8, x13, x9, x10)

inst_19750:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x860000ff; valaddr_reg:x12; val_offset:59187*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59187*FLEN/8, x13, x9, x10)

inst_19751:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867fff80; valaddr_reg:x12; val_offset:59190*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59190*FLEN/8, x13, x9, x10)

inst_19752:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x8600007f; valaddr_reg:x12; val_offset:59193*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59193*FLEN/8, x13, x9, x10)

inst_19753:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867fffc0; valaddr_reg:x12; val_offset:59196*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59196*FLEN/8, x13, x9, x10)

inst_19754:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x8600003f; valaddr_reg:x12; val_offset:59199*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59199*FLEN/8, x13, x9, x10)

inst_19755:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867fffe0; valaddr_reg:x12; val_offset:59202*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59202*FLEN/8, x13, x9, x10)

inst_19756:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x8600001f; valaddr_reg:x12; val_offset:59205*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59205*FLEN/8, x13, x9, x10)

inst_19757:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867ffff0; valaddr_reg:x12; val_offset:59208*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59208*FLEN/8, x13, x9, x10)

inst_19758:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x8600000f; valaddr_reg:x12; val_offset:59211*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59211*FLEN/8, x13, x9, x10)

inst_19759:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867ffff8; valaddr_reg:x12; val_offset:59214*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59214*FLEN/8, x13, x9, x10)

inst_19760:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x86000007; valaddr_reg:x12; val_offset:59217*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59217*FLEN/8, x13, x9, x10)

inst_19761:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867ffffc; valaddr_reg:x12; val_offset:59220*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59220*FLEN/8, x13, x9, x10)

inst_19762:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x86000003; valaddr_reg:x12; val_offset:59223*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59223*FLEN/8, x13, x9, x10)

inst_19763:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0c and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x867ffffe; valaddr_reg:x12; val_offset:59226*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59226*FLEN/8, x13, x9, x10)

inst_19764:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x12; val_offset:59229*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59229*FLEN/8, x13, x9, x10)

inst_19765:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x12; val_offset:59232*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59232*FLEN/8, x13, x9, x10)

inst_19766:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x12; val_offset:59235*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59235*FLEN/8, x13, x9, x10)

inst_19767:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x12; val_offset:59238*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59238*FLEN/8, x13, x9, x10)

inst_19768:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x12; val_offset:59241*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59241*FLEN/8, x13, x9, x10)

inst_19769:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x12; val_offset:59244*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59244*FLEN/8, x13, x9, x10)

inst_19770:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x12; val_offset:59247*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59247*FLEN/8, x13, x9, x10)

inst_19771:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x12; val_offset:59250*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59250*FLEN/8, x13, x9, x10)

inst_19772:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x12; val_offset:59253*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59253*FLEN/8, x13, x9, x10)

inst_19773:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x12; val_offset:59256*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59256*FLEN/8, x13, x9, x10)

inst_19774:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x12; val_offset:59259*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59259*FLEN/8, x13, x9, x10)

inst_19775:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x12; val_offset:59262*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59262*FLEN/8, x13, x9, x10)

inst_19776:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x12; val_offset:59265*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59265*FLEN/8, x13, x9, x10)

inst_19777:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x12; val_offset:59268*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59268*FLEN/8, x13, x9, x10)

inst_19778:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x12; val_offset:59271*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59271*FLEN/8, x13, x9, x10)

inst_19779:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4ddf7d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4ddf7d; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x12; val_offset:59274*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59274*FLEN/8, x13, x9, x10)

inst_19780:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86800001; valaddr_reg:x12; val_offset:59277*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59277*FLEN/8, x13, x9, x10)

inst_19781:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86800000; valaddr_reg:x12; val_offset:59280*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59280*FLEN/8, x13, x9, x10)

inst_19782:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86ffffff; valaddr_reg:x12; val_offset:59283*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59283*FLEN/8, x13, x9, x10)

inst_19783:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86c00000; valaddr_reg:x12; val_offset:59286*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59286*FLEN/8, x13, x9, x10)

inst_19784:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86bfffff; valaddr_reg:x12; val_offset:59289*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59289*FLEN/8, x13, x9, x10)

inst_19785:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86e00000; valaddr_reg:x12; val_offset:59292*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59292*FLEN/8, x13, x9, x10)

inst_19786:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x869fffff; valaddr_reg:x12; val_offset:59295*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59295*FLEN/8, x13, x9, x10)

inst_19787:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86f00000; valaddr_reg:x12; val_offset:59298*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59298*FLEN/8, x13, x9, x10)

inst_19788:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x868fffff; valaddr_reg:x12; val_offset:59301*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59301*FLEN/8, x13, x9, x10)

inst_19789:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86f80000; valaddr_reg:x12; val_offset:59304*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59304*FLEN/8, x13, x9, x10)

inst_19790:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x8687ffff; valaddr_reg:x12; val_offset:59307*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59307*FLEN/8, x13, x9, x10)

inst_19791:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86fc0000; valaddr_reg:x12; val_offset:59310*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59310*FLEN/8, x13, x9, x10)

inst_19792:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x8683ffff; valaddr_reg:x12; val_offset:59313*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59313*FLEN/8, x13, x9, x10)

inst_19793:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86fe0000; valaddr_reg:x12; val_offset:59316*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59316*FLEN/8, x13, x9, x10)

inst_19794:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x8681ffff; valaddr_reg:x12; val_offset:59319*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59319*FLEN/8, x13, x9, x10)

inst_19795:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86ff0000; valaddr_reg:x12; val_offset:59322*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59322*FLEN/8, x13, x9, x10)

inst_19796:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x8680ffff; valaddr_reg:x12; val_offset:59325*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59325*FLEN/8, x13, x9, x10)

inst_19797:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86ff8000; valaddr_reg:x12; val_offset:59328*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59328*FLEN/8, x13, x9, x10)

inst_19798:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86807fff; valaddr_reg:x12; val_offset:59331*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59331*FLEN/8, x13, x9, x10)

inst_19799:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86ffc000; valaddr_reg:x12; val_offset:59334*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59334*FLEN/8, x13, x9, x10)

inst_19800:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86803fff; valaddr_reg:x12; val_offset:59337*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59337*FLEN/8, x13, x9, x10)

inst_19801:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86ffe000; valaddr_reg:x12; val_offset:59340*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59340*FLEN/8, x13, x9, x10)

inst_19802:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86801fff; valaddr_reg:x12; val_offset:59343*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59343*FLEN/8, x13, x9, x10)

inst_19803:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86fff000; valaddr_reg:x12; val_offset:59346*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59346*FLEN/8, x13, x9, x10)

inst_19804:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86800fff; valaddr_reg:x12; val_offset:59349*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59349*FLEN/8, x13, x9, x10)

inst_19805:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86fff800; valaddr_reg:x12; val_offset:59352*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59352*FLEN/8, x13, x9, x10)

inst_19806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x868007ff; valaddr_reg:x12; val_offset:59355*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59355*FLEN/8, x13, x9, x10)

inst_19807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86fffc00; valaddr_reg:x12; val_offset:59358*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59358*FLEN/8, x13, x9, x10)

inst_19808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x868003ff; valaddr_reg:x12; val_offset:59361*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59361*FLEN/8, x13, x9, x10)

inst_19809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86fffe00; valaddr_reg:x12; val_offset:59364*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59364*FLEN/8, x13, x9, x10)

inst_19810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x868001ff; valaddr_reg:x12; val_offset:59367*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59367*FLEN/8, x13, x9, x10)

inst_19811:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86ffff00; valaddr_reg:x12; val_offset:59370*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59370*FLEN/8, x13, x9, x10)

inst_19812:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x868000ff; valaddr_reg:x12; val_offset:59373*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59373*FLEN/8, x13, x9, x10)

inst_19813:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86ffff80; valaddr_reg:x12; val_offset:59376*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59376*FLEN/8, x13, x9, x10)

inst_19814:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x8680007f; valaddr_reg:x12; val_offset:59379*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59379*FLEN/8, x13, x9, x10)

inst_19815:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86ffffc0; valaddr_reg:x12; val_offset:59382*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59382*FLEN/8, x13, x9, x10)

inst_19816:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x8680003f; valaddr_reg:x12; val_offset:59385*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59385*FLEN/8, x13, x9, x10)

inst_19817:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86ffffe0; valaddr_reg:x12; val_offset:59388*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59388*FLEN/8, x13, x9, x10)

inst_19818:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x8680001f; valaddr_reg:x12; val_offset:59391*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59391*FLEN/8, x13, x9, x10)

inst_19819:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86fffff0; valaddr_reg:x12; val_offset:59394*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59394*FLEN/8, x13, x9, x10)

inst_19820:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x8680000f; valaddr_reg:x12; val_offset:59397*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59397*FLEN/8, x13, x9, x10)

inst_19821:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86fffff8; valaddr_reg:x12; val_offset:59400*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59400*FLEN/8, x13, x9, x10)

inst_19822:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86800007; valaddr_reg:x12; val_offset:59403*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59403*FLEN/8, x13, x9, x10)

inst_19823:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86fffffc; valaddr_reg:x12; val_offset:59406*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59406*FLEN/8, x13, x9, x10)

inst_19824:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86800003; valaddr_reg:x12; val_offset:59409*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59409*FLEN/8, x13, x9, x10)

inst_19825:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0d and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x86fffffe; valaddr_reg:x12; val_offset:59412*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59412*FLEN/8, x13, x9, x10)

inst_19826:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x12; val_offset:59415*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59415*FLEN/8, x13, x9, x10)

inst_19827:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x12; val_offset:59418*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59418*FLEN/8, x13, x9, x10)

inst_19828:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x12; val_offset:59421*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59421*FLEN/8, x13, x9, x10)

inst_19829:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x12; val_offset:59424*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59424*FLEN/8, x13, x9, x10)

inst_19830:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x12; val_offset:59427*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59427*FLEN/8, x13, x9, x10)

inst_19831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x12; val_offset:59430*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59430*FLEN/8, x13, x9, x10)

inst_19832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x12; val_offset:59433*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59433*FLEN/8, x13, x9, x10)

inst_19833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x12; val_offset:59436*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59436*FLEN/8, x13, x9, x10)

inst_19834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x12; val_offset:59439*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59439*FLEN/8, x13, x9, x10)

inst_19835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x12; val_offset:59442*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59442*FLEN/8, x13, x9, x10)

inst_19836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x12; val_offset:59445*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59445*FLEN/8, x13, x9, x10)

inst_19837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x12; val_offset:59448*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59448*FLEN/8, x13, x9, x10)

inst_19838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x12; val_offset:59451*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59451*FLEN/8, x13, x9, x10)

inst_19839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x805b6db6; valaddr_reg:x12; val_offset:59454*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59454*FLEN/8, x13, x9, x10)

inst_19840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x80333333; valaddr_reg:x12; val_offset:59457*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59457*FLEN/8, x13, x9, x10)

inst_19841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26921d and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26921d; op2val:0x80000000;
op3val:0x804ccccc; valaddr_reg:x12; val_offset:59460*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59460*FLEN/8, x13, x9, x10)

inst_19842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x87000001; valaddr_reg:x12; val_offset:59463*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59463*FLEN/8, x13, x9, x10)

inst_19843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x87000000; valaddr_reg:x12; val_offset:59466*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59466*FLEN/8, x13, x9, x10)

inst_19844:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877fffff; valaddr_reg:x12; val_offset:59469*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59469*FLEN/8, x13, x9, x10)

inst_19845:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x87400000; valaddr_reg:x12; val_offset:59472*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59472*FLEN/8, x13, x9, x10)

inst_19846:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x873fffff; valaddr_reg:x12; val_offset:59475*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59475*FLEN/8, x13, x9, x10)

inst_19847:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x87600000; valaddr_reg:x12; val_offset:59478*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59478*FLEN/8, x13, x9, x10)

inst_19848:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x871fffff; valaddr_reg:x12; val_offset:59481*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59481*FLEN/8, x13, x9, x10)

inst_19849:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x87700000; valaddr_reg:x12; val_offset:59484*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59484*FLEN/8, x13, x9, x10)

inst_19850:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x870fffff; valaddr_reg:x12; val_offset:59487*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59487*FLEN/8, x13, x9, x10)

inst_19851:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x87780000; valaddr_reg:x12; val_offset:59490*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59490*FLEN/8, x13, x9, x10)

inst_19852:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x8707ffff; valaddr_reg:x12; val_offset:59493*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59493*FLEN/8, x13, x9, x10)

inst_19853:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877c0000; valaddr_reg:x12; val_offset:59496*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59496*FLEN/8, x13, x9, x10)

inst_19854:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x8703ffff; valaddr_reg:x12; val_offset:59499*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59499*FLEN/8, x13, x9, x10)

inst_19855:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877e0000; valaddr_reg:x12; val_offset:59502*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59502*FLEN/8, x13, x9, x10)

inst_19856:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x8701ffff; valaddr_reg:x12; val_offset:59505*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59505*FLEN/8, x13, x9, x10)

inst_19857:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877f0000; valaddr_reg:x12; val_offset:59508*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59508*FLEN/8, x13, x9, x10)

inst_19858:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x8700ffff; valaddr_reg:x12; val_offset:59511*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59511*FLEN/8, x13, x9, x10)

inst_19859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877f8000; valaddr_reg:x12; val_offset:59514*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59514*FLEN/8, x13, x9, x10)

inst_19860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x87007fff; valaddr_reg:x12; val_offset:59517*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59517*FLEN/8, x13, x9, x10)

inst_19861:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877fc000; valaddr_reg:x12; val_offset:59520*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59520*FLEN/8, x13, x9, x10)

inst_19862:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x87003fff; valaddr_reg:x12; val_offset:59523*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59523*FLEN/8, x13, x9, x10)

inst_19863:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877fe000; valaddr_reg:x12; val_offset:59526*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59526*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_155)
inst_19864:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x87001fff; valaddr_reg:x12; val_offset:59529*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59529*FLEN/8, x13, x9, x10)

inst_19865:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877ff000; valaddr_reg:x12; val_offset:59532*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59532*FLEN/8, x13, x9, x10)

inst_19866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x87000fff; valaddr_reg:x12; val_offset:59535*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59535*FLEN/8, x13, x9, x10)

inst_19867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877ff800; valaddr_reg:x12; val_offset:59538*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59538*FLEN/8, x13, x9, x10)

inst_19868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x870007ff; valaddr_reg:x12; val_offset:59541*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59541*FLEN/8, x13, x9, x10)

inst_19869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877ffc00; valaddr_reg:x12; val_offset:59544*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59544*FLEN/8, x13, x9, x10)

inst_19870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x870003ff; valaddr_reg:x12; val_offset:59547*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59547*FLEN/8, x13, x9, x10)

inst_19871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877ffe00; valaddr_reg:x12; val_offset:59550*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59550*FLEN/8, x13, x9, x10)

inst_19872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x870001ff; valaddr_reg:x12; val_offset:59553*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59553*FLEN/8, x13, x9, x10)

inst_19873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877fff00; valaddr_reg:x12; val_offset:59556*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59556*FLEN/8, x13, x9, x10)

inst_19874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x870000ff; valaddr_reg:x12; val_offset:59559*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59559*FLEN/8, x13, x9, x10)

inst_19875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877fff80; valaddr_reg:x12; val_offset:59562*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59562*FLEN/8, x13, x9, x10)

inst_19876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x8700007f; valaddr_reg:x12; val_offset:59565*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59565*FLEN/8, x13, x9, x10)

inst_19877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877fffc0; valaddr_reg:x12; val_offset:59568*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59568*FLEN/8, x13, x9, x10)

inst_19878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x8700003f; valaddr_reg:x12; val_offset:59571*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59571*FLEN/8, x13, x9, x10)

inst_19879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877fffe0; valaddr_reg:x12; val_offset:59574*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59574*FLEN/8, x13, x9, x10)

inst_19880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x8700001f; valaddr_reg:x12; val_offset:59577*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59577*FLEN/8, x13, x9, x10)

inst_19881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877ffff0; valaddr_reg:x12; val_offset:59580*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59580*FLEN/8, x13, x9, x10)

inst_19882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x8700000f; valaddr_reg:x12; val_offset:59583*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59583*FLEN/8, x13, x9, x10)

inst_19883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877ffff8; valaddr_reg:x12; val_offset:59586*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59586*FLEN/8, x13, x9, x10)

inst_19884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x87000007; valaddr_reg:x12; val_offset:59589*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59589*FLEN/8, x13, x9, x10)

inst_19885:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877ffffc; valaddr_reg:x12; val_offset:59592*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59592*FLEN/8, x13, x9, x10)

inst_19886:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x87000003; valaddr_reg:x12; val_offset:59595*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59595*FLEN/8, x13, x9, x10)

inst_19887:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x0e and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x877ffffe; valaddr_reg:x12; val_offset:59598*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59598*FLEN/8, x13, x9, x10)

inst_19888:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x807ffff8; valaddr_reg:x12; val_offset:59601*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59601*FLEN/8, x13, x9, x10)

inst_19889:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x80000007; valaddr_reg:x12; val_offset:59604*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59604*FLEN/8, x13, x9, x10)

inst_19890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x807ffffc; valaddr_reg:x12; val_offset:59607*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59607*FLEN/8, x13, x9, x10)

inst_19891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x80000003; valaddr_reg:x12; val_offset:59610*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59610*FLEN/8, x13, x9, x10)

inst_19892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x807ffffe; valaddr_reg:x12; val_offset:59613*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59613*FLEN/8, x13, x9, x10)

inst_19893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x80000001; valaddr_reg:x12; val_offset:59616*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59616*FLEN/8, x13, x9, x10)

inst_19894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x8036db6d; valaddr_reg:x12; val_offset:59619*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59619*FLEN/8, x13, x9, x10)

inst_19895:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x806db6db; valaddr_reg:x12; val_offset:59622*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59622*FLEN/8, x13, x9, x10)

inst_19896:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x80199999; valaddr_reg:x12; val_offset:59625*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59625*FLEN/8, x13, x9, x10)

inst_19897:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x80666666; valaddr_reg:x12; val_offset:59628*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59628*FLEN/8, x13, x9, x10)

inst_19898:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x803bbbbb; valaddr_reg:x12; val_offset:59631*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59631*FLEN/8, x13, x9, x10)

inst_19899:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x80444444; valaddr_reg:x12; val_offset:59634*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59634*FLEN/8, x13, x9, x10)

inst_19900:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x0c0020 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x000000 and fs3 == 1 and fe3 == 0x00 and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f0c0020; op2val:0x80000000;
op3val:0x80249249; valaddr_reg:x12; val_offset:59637*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 59637*FLEN/8, x13, x9, x10)

#endif
RVTEST_CODE_END
RVMODEL_HALT
RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(2181037824,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649727,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181037952,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649599,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038016,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649535,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038048,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649503,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038064,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649487,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038072,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649479,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038076,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2172649475,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038078,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2133911107,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038081,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038080,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426687,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2185232384,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2185232383,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2187329536,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2183135231,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2188378112,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2182086655,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2188902400,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181562367,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189164544,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181300223,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189295616,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181169151,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189361152,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181103615,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189393920,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181070847,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189410304,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181054463,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189418496,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181046271,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189422592,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181042175,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189424640,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181040127,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189425664,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181039103,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426176,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038591,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426432,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038335,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426560,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038207,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426624,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038143,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426656,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038111,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426672,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038095,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426680,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038087,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426684,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2181038083,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426686,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2117914549,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426689,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426688,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815295,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2193620992,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2193620991,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2195718144,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2191523839,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2196766720,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2190475263,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197291008,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189950975,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197553152,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189688831,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197684224,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189557759,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197749760,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189492223,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197782528,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189459455,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197798912,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189443071,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197807104,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189434879,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197811200,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189430783,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197813248,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189428735,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197814272,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189427711,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197814784,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189427199,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815040,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426943,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815168,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426815,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815232,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426751,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815264,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426719,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815280,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426703,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815288,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426695,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815292,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2189426691,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815294,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2107313720,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815297,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815296,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203903,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2202009600,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2202009599,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2204106752,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2199912447,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205155328,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198863871,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205679616,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198339583,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2205941760,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2198077439,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206072832,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197946367,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206138368,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197880831,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206171136,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197848063,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206187520,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197831679,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206195712,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197823487,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206199808,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197819391,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206201856,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197817343,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206202880,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197816319,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203392,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815807,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203648,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815551,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203776,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815423,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203840,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815359,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203872,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815327,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203888,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815311,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203896,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815303,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203900,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2197815299,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203902,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2129315392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203905,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203904,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592511,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2210398208,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2210398207,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2212495360,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2208301055,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2213543936,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2207252479,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214068224,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206728191,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214330368,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206466047,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214461440,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206334975,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214526976,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206269439,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214559744,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206236671,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214576128,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206220287,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214584320,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206212095,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214588416,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206207999,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214590464,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206205951,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214591488,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206204927,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592000,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206204415,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592256,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206204159,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592384,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206204031,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592448,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203967,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592480,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203935,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592496,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203919,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592504,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203911,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592508,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2206203907,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592510,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132479376,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592513,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592512,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981119,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2218786816,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2218786815,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2220883968,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2216689663,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2221932544,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2215641087,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222456832,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2215116799,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222718976,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214854655,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222850048,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214723583,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222915584,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214658047,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222948352,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214625279,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222964736,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214608895,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222972928,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214600703,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222977024,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214596607,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222979072,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214594559,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980096,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214593535,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980608,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214593023,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980864,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592767,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222980992,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592639,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981056,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592575,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981088,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592543,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981104,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592527,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981112,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592519,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981116,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2214592515,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981118,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2106417444,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981121,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981120,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369727,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2227175424,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2227175423,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2229272576,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2225078271,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2230321152,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2224029695,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2230845440,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223505407,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231107584,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223243263,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231238656,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223112191,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231304192,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223046655,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231336960,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2223013887,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231353344,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222997503,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231361536,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222989311,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231365632,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222985215,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231367680,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222983167,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231368704,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222982143,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369216,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981631,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369472,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981375,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369600,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981247,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369664,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981183,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369696,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981151,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369712,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981135,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369720,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981127,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369724,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2222981123,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369726,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2116621392,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369729,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369728,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758335,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2235564032,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2235564031,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2237661184,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2233466879,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2238709760,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2232418303,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239234048,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231894015,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239496192,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231631871,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239627264,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231500799,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239692800,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231435263,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239725568,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231402495,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239741952,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231386111,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239750144,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231377919,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239754240,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231373823,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239756288,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231371775,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239757312,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231370751,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239757824,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231370239,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758080,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369983,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758208,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369855,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758272,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369791,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758304,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369759,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758320,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369743,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758328,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369735,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758332,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2231369731,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758334,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2132488130,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758337,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758336,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146943,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2243952640,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2243952639,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2246049792,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2241855487,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2247098368,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2240806911,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2247622656,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2240282623,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2247884800,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2240020479,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248015872,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239889407,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248081408,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239823871,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248114176,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239791103,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248130560,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239774719,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248138752,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239766527,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248142848,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239762431,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248144896,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239760383,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248145920,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239759359,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146432,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758847,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146688,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758591,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146816,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758463,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146880,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758399,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146912,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758367,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146928,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758351,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146936,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758343,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146940,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2239758339,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146942,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2124040180,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146945,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146944,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535551,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2252341248,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2252341247,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2254438400,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2250244095,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2255486976,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2249195519,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256011264,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248671231,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256273408,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248409087,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256404480,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248278015,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256470016,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248212479,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256502784,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248179711,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256519168,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248163327,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256527360,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248155135,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256531456,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248151039,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256533504,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248148991,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256534528,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248147967,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535040,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248147455,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535296,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248147199,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535424,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248147071,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535488,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248147007,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535520,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146975,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535536,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146959,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535544,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146951,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535548,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2248146947,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535550,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2119032701,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535553,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535552,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924159,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2260729856,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2260729855,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2262827008,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2258632703,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2263875584,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2257584127,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264399872,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2257059839,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264662016,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256797695,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264793088,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256666623,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264858624,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256601087,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264891392,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256568319,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264907776,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256551935,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264915968,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256543743,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264920064,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256539647,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264922112,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256537599,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264923136,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256536575,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264923648,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256536063,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264923904,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535807,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924032,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535679,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924096,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535615,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924128,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535583,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924144,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535567,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924152,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535559,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924156,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2256535555,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924158,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2133234205,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924161,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924160,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312767,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2269118464,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2269118463,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2271215616,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2267021311,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2272264192,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2265972735,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2272788480,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2265448447,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273050624,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2265186303,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273181696,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2265055231,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273247232,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264989695,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273280000,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264956927,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273296384,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264940543,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273304576,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264932351,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273308672,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264928255,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273310720,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264926207,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273311744,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264925183,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312256,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924671,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312512,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924415,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312640,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924287,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312704,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924223,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312736,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924191,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312752,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924175,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312760,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924167,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312764,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2264924163,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312766,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154194534,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151398331,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151957572,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149880393,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2153475510,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2150839091,32,FLEN)
NAN_BOXED(2131492896,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2152516812,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312769,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312768,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701375,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2277507072,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2277507071,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2279604224,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2275409919,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2280652800,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2274361343,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281177088,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273837055,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281439232,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273574911,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281570304,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273443839,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281635840,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273378303,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281668608,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273345535,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281684992,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273329151,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281693184,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273320959,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281697280,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273316863,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281699328,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273314815,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281700352,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273313791,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281700864,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273313279,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701120,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273313023,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701248,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312895,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701312,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312831,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701344,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312799,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701360,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312783,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701368,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312775,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701372,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2273312771,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2281701374,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872248,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483655,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872252,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483651,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2155872254,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2147483649,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2151078765,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2154673883,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
NAN_BOXED(2149161369,32,FLEN)
NAN_BOXED(2089037495,32,FLEN)
NAN_BOXED(2147483648,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_12:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_13:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_14:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_15:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_16:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_17:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_18:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_19:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_20:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_21:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_22:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_23:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_24:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_25:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_26:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_27:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_28:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_29:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_30:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_31:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_32:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_33:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_34:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_35:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_36:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_37:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_38:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_39:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_40:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_41:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_42:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_43:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_44:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_45:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_46:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_47:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_48:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_49:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_50:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_51:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_52:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_53:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_54:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_55:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_56:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_57:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_58:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_59:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_60:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_61:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_62:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_63:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_64:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_65:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_66:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_67:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_68:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_69:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_70:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_71:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_72:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_73:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_74:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_75:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_76:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_77:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_78:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_79:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_80:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_81:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_82:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_83:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_84:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_85:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_86:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_87:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_88:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_89:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_90:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_91:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_92:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_93:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_94:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_95:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_96:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_97:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_98:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_99:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_100:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_101:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_102:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_103:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_104:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_105:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_106:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_107:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_108:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_109:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_110:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_111:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_112:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_113:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_114:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_115:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_116:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_117:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_118:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_119:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_120:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_121:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_122:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_123:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_124:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_125:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_126:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_127:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_128:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_129:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_130:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_131:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_132:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_133:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_134:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_135:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_136:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_137:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_138:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_139:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_140:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_141:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_142:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_143:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_144:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_145:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_146:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_147:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_148:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_149:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_150:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_151:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_152:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_153:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_154:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_155:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_156:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_157:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_158:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_159:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_160:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_161:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_162:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_163:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_164:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_165:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_166:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_167:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_168:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_169:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_170:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_171:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_172:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_173:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_174:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_175:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_176:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_177:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_178:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_179:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_180:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_181:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_182:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_183:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_184:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_185:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_186:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_187:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_188:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_189:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_190:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_191:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_192:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_193:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_194:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_195:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_196:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_197:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_198:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_199:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_200:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_201:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_202:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_203:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_204:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_205:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_206:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_207:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_208:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_209:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_210:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_211:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_212:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_213:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_214:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_215:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_216:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_217:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_218:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_219:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_220:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_221:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_222:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_223:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_224:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_225:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_226:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_227:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_228:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_229:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_230:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_231:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_232:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_233:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_234:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_235:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_236:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_237:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_238:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_239:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_240:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_241:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_242:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_243:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_244:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_245:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_246:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_247:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_248:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_249:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_250:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_251:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_252:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_253:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_254:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_255:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_256:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_257:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_258:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_259:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_260:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_261:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_262:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_263:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_264:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_265:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_266:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_267:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_268:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_269:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_270:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_271:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_272:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_273:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_274:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_275:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_276:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_277:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_278:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_279:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_280:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_281:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_282:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_283:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_284:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_285:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_286:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_287:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_288:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_289:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_290:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_291:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_292:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_293:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_294:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_295:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_296:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_297:
    .fill 180*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
