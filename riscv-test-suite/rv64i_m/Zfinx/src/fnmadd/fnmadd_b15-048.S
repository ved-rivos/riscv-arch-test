
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 07:30:48 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fnmadd.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fnmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fnmadd_b15)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_36049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xeeffff80; valaddr_reg:x12; val_offset:108084*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108084*FLEN/8, x13, x9, x10)

inst_36050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xee80003f; valaddr_reg:x12; val_offset:108087*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108087*FLEN/8, x13, x9, x10)

inst_36051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xeeffffc0; valaddr_reg:x12; val_offset:108090*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108090*FLEN/8, x13, x9, x10)

inst_36052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xee80001f; valaddr_reg:x12; val_offset:108093*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108093*FLEN/8, x13, x9, x10)

inst_36053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xeeffffe0; valaddr_reg:x12; val_offset:108096*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108096*FLEN/8, x13, x9, x10)

inst_36054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xee80000f; valaddr_reg:x12; val_offset:108099*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108099*FLEN/8, x13, x9, x10)

inst_36055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xeefffff0; valaddr_reg:x12; val_offset:108102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108102*FLEN/8, x13, x9, x10)

inst_36056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xee800007; valaddr_reg:x12; val_offset:108105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108105*FLEN/8, x13, x9, x10)

inst_36057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xeefffff8; valaddr_reg:x12; val_offset:108108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108108*FLEN/8, x13, x9, x10)

inst_36058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xee800003; valaddr_reg:x12; val_offset:108111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108111*FLEN/8, x13, x9, x10)

inst_36059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xeefffffc; valaddr_reg:x12; val_offset:108114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108114*FLEN/8, x13, x9, x10)

inst_36060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xee800001; valaddr_reg:x12; val_offset:108117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108117*FLEN/8, x13, x9, x10)

inst_36061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xdd and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xeefffffe; valaddr_reg:x12; val_offset:108120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108120*FLEN/8, x13, x9, x10)

inst_36062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff7ffff8; valaddr_reg:x12; val_offset:108123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108123*FLEN/8, x13, x9, x10)

inst_36063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff000007; valaddr_reg:x12; val_offset:108126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108126*FLEN/8, x13, x9, x10)

inst_36064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff7ffffc; valaddr_reg:x12; val_offset:108129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108129*FLEN/8, x13, x9, x10)

inst_36065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff000003; valaddr_reg:x12; val_offset:108132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108132*FLEN/8, x13, x9, x10)

inst_36066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff7ffffe; valaddr_reg:x12; val_offset:108135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108135*FLEN/8, x13, x9, x10)

inst_36067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff000001; valaddr_reg:x12; val_offset:108138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108138*FLEN/8, x13, x9, x10)

inst_36068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff36db6d; valaddr_reg:x12; val_offset:108141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108141*FLEN/8, x13, x9, x10)

inst_36069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff6db6db; valaddr_reg:x12; val_offset:108144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108144*FLEN/8, x13, x9, x10)

inst_36070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff199999; valaddr_reg:x12; val_offset:108147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108147*FLEN/8, x13, x9, x10)

inst_36071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff666666; valaddr_reg:x12; val_offset:108150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108150*FLEN/8, x13, x9, x10)

inst_36072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff3bbbbb; valaddr_reg:x12; val_offset:108153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108153*FLEN/8, x13, x9, x10)

inst_36073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff444444; valaddr_reg:x12; val_offset:108156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108156*FLEN/8, x13, x9, x10)

inst_36074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff249249; valaddr_reg:x12; val_offset:108159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108159*FLEN/8, x13, x9, x10)

inst_36075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff5b6db6; valaddr_reg:x12; val_offset:108162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108162*FLEN/8, x13, x9, x10)

inst_36076:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff333333; valaddr_reg:x12; val_offset:108165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108165*FLEN/8, x13, x9, x10)

inst_36077:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x16be21 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x596084 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e96be21; op2val:0xc0596084;
op3val:0xff4ccccc; valaddr_reg:x12; val_offset:108168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108168*FLEN/8, x13, x9, x10)

inst_36078:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7fffff; valaddr_reg:x12; val_offset:108171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108171*FLEN/8, x13, x9, x10)

inst_36079:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef000000; valaddr_reg:x12; val_offset:108174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108174*FLEN/8, x13, x9, x10)

inst_36080:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef3fffff; valaddr_reg:x12; val_offset:108177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108177*FLEN/8, x13, x9, x10)

inst_36081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef400000; valaddr_reg:x12; val_offset:108180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108180*FLEN/8, x13, x9, x10)

inst_36082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef1fffff; valaddr_reg:x12; val_offset:108183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108183*FLEN/8, x13, x9, x10)

inst_36083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef600000; valaddr_reg:x12; val_offset:108186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108186*FLEN/8, x13, x9, x10)

inst_36084:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef0fffff; valaddr_reg:x12; val_offset:108189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108189*FLEN/8, x13, x9, x10)

inst_36085:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef700000; valaddr_reg:x12; val_offset:108192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108192*FLEN/8, x13, x9, x10)

inst_36086:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef07ffff; valaddr_reg:x12; val_offset:108195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108195*FLEN/8, x13, x9, x10)

inst_36087:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef780000; valaddr_reg:x12; val_offset:108198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108198*FLEN/8, x13, x9, x10)

inst_36088:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef03ffff; valaddr_reg:x12; val_offset:108201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108201*FLEN/8, x13, x9, x10)

inst_36089:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7c0000; valaddr_reg:x12; val_offset:108204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108204*FLEN/8, x13, x9, x10)

inst_36090:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef01ffff; valaddr_reg:x12; val_offset:108207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108207*FLEN/8, x13, x9, x10)

inst_36091:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7e0000; valaddr_reg:x12; val_offset:108210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108210*FLEN/8, x13, x9, x10)

inst_36092:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef00ffff; valaddr_reg:x12; val_offset:108213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108213*FLEN/8, x13, x9, x10)

inst_36093:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7f0000; valaddr_reg:x12; val_offset:108216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108216*FLEN/8, x13, x9, x10)

inst_36094:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef007fff; valaddr_reg:x12; val_offset:108219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108219*FLEN/8, x13, x9, x10)

inst_36095:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7f8000; valaddr_reg:x12; val_offset:108222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108222*FLEN/8, x13, x9, x10)

inst_36096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef003fff; valaddr_reg:x12; val_offset:108225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108225*FLEN/8, x13, x9, x10)

inst_36097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7fc000; valaddr_reg:x12; val_offset:108228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108228*FLEN/8, x13, x9, x10)

inst_36098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef001fff; valaddr_reg:x12; val_offset:108231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108231*FLEN/8, x13, x9, x10)

inst_36099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7fe000; valaddr_reg:x12; val_offset:108234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108234*FLEN/8, x13, x9, x10)

inst_36100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef000fff; valaddr_reg:x12; val_offset:108237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108237*FLEN/8, x13, x9, x10)

inst_36101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7ff000; valaddr_reg:x12; val_offset:108240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108240*FLEN/8, x13, x9, x10)

inst_36102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef0007ff; valaddr_reg:x12; val_offset:108243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108243*FLEN/8, x13, x9, x10)

inst_36103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7ff800; valaddr_reg:x12; val_offset:108246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108246*FLEN/8, x13, x9, x10)

inst_36104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef0003ff; valaddr_reg:x12; val_offset:108249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108249*FLEN/8, x13, x9, x10)

inst_36105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7ffc00; valaddr_reg:x12; val_offset:108252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108252*FLEN/8, x13, x9, x10)

inst_36106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef0001ff; valaddr_reg:x12; val_offset:108255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108255*FLEN/8, x13, x9, x10)

inst_36107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7ffe00; valaddr_reg:x12; val_offset:108258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108258*FLEN/8, x13, x9, x10)

inst_36108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef0000ff; valaddr_reg:x12; val_offset:108261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108261*FLEN/8, x13, x9, x10)

inst_36109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7fff00; valaddr_reg:x12; val_offset:108264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108264*FLEN/8, x13, x9, x10)

inst_36110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef00007f; valaddr_reg:x12; val_offset:108267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108267*FLEN/8, x13, x9, x10)

inst_36111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7fff80; valaddr_reg:x12; val_offset:108270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108270*FLEN/8, x13, x9, x10)

inst_36112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef00003f; valaddr_reg:x12; val_offset:108273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108273*FLEN/8, x13, x9, x10)

inst_36113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7fffc0; valaddr_reg:x12; val_offset:108276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108276*FLEN/8, x13, x9, x10)

inst_36114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef00001f; valaddr_reg:x12; val_offset:108279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108279*FLEN/8, x13, x9, x10)

inst_36115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7fffe0; valaddr_reg:x12; val_offset:108282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108282*FLEN/8, x13, x9, x10)

inst_36116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef00000f; valaddr_reg:x12; val_offset:108285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108285*FLEN/8, x13, x9, x10)

inst_36117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7ffff0; valaddr_reg:x12; val_offset:108288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108288*FLEN/8, x13, x9, x10)

inst_36118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef000007; valaddr_reg:x12; val_offset:108291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108291*FLEN/8, x13, x9, x10)

inst_36119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7ffff8; valaddr_reg:x12; val_offset:108294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108294*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_282)
inst_36120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef000003; valaddr_reg:x12; val_offset:108297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108297*FLEN/8, x13, x9, x10)

inst_36121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7ffffc; valaddr_reg:x12; val_offset:108300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108300*FLEN/8, x13, x9, x10)

inst_36122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef000001; valaddr_reg:x12; val_offset:108303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108303*FLEN/8, x13, x9, x10)

inst_36123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xde and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xef7ffffe; valaddr_reg:x12; val_offset:108306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108306*FLEN/8, x13, x9, x10)

inst_36124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff7ffff8; valaddr_reg:x12; val_offset:108309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108309*FLEN/8, x13, x9, x10)

inst_36125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff000007; valaddr_reg:x12; val_offset:108312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108312*FLEN/8, x13, x9, x10)

inst_36126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff7ffffc; valaddr_reg:x12; val_offset:108315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108315*FLEN/8, x13, x9, x10)

inst_36127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff000003; valaddr_reg:x12; val_offset:108318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108318*FLEN/8, x13, x9, x10)

inst_36128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff7ffffe; valaddr_reg:x12; val_offset:108321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108321*FLEN/8, x13, x9, x10)

inst_36129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff000001; valaddr_reg:x12; val_offset:108324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108324*FLEN/8, x13, x9, x10)

inst_36130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff36db6d; valaddr_reg:x12; val_offset:108327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108327*FLEN/8, x13, x9, x10)

inst_36131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff6db6db; valaddr_reg:x12; val_offset:108330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108330*FLEN/8, x13, x9, x10)

inst_36132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff199999; valaddr_reg:x12; val_offset:108333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108333*FLEN/8, x13, x9, x10)

inst_36133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff666666; valaddr_reg:x12; val_offset:108336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108336*FLEN/8, x13, x9, x10)

inst_36134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff3bbbbb; valaddr_reg:x12; val_offset:108339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108339*FLEN/8, x13, x9, x10)

inst_36135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff444444; valaddr_reg:x12; val_offset:108342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108342*FLEN/8, x13, x9, x10)

inst_36136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff249249; valaddr_reg:x12; val_offset:108345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108345*FLEN/8, x13, x9, x10)

inst_36137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff5b6db6; valaddr_reg:x12; val_offset:108348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108348*FLEN/8, x13, x9, x10)

inst_36138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff333333; valaddr_reg:x12; val_offset:108351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108351*FLEN/8, x13, x9, x10)

inst_36139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x197da5 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x557c2f and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e997da5; op2val:0xc0557c2f;
op3val:0xff4ccccc; valaddr_reg:x12; val_offset:108354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108354*FLEN/8, x13, x9, x10)

inst_36140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xefffffff; valaddr_reg:x12; val_offset:108357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108357*FLEN/8, x13, x9, x10)

inst_36141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef800000; valaddr_reg:x12; val_offset:108360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108360*FLEN/8, x13, x9, x10)

inst_36142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xefbfffff; valaddr_reg:x12; val_offset:108363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108363*FLEN/8, x13, x9, x10)

inst_36143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xefc00000; valaddr_reg:x12; val_offset:108366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108366*FLEN/8, x13, x9, x10)

inst_36144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef9fffff; valaddr_reg:x12; val_offset:108369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108369*FLEN/8, x13, x9, x10)

inst_36145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xefe00000; valaddr_reg:x12; val_offset:108372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108372*FLEN/8, x13, x9, x10)

inst_36146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef8fffff; valaddr_reg:x12; val_offset:108375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108375*FLEN/8, x13, x9, x10)

inst_36147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xeff00000; valaddr_reg:x12; val_offset:108378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108378*FLEN/8, x13, x9, x10)

inst_36148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef87ffff; valaddr_reg:x12; val_offset:108381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108381*FLEN/8, x13, x9, x10)

inst_36149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xeff80000; valaddr_reg:x12; val_offset:108384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108384*FLEN/8, x13, x9, x10)

inst_36150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef83ffff; valaddr_reg:x12; val_offset:108387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108387*FLEN/8, x13, x9, x10)

inst_36151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xeffc0000; valaddr_reg:x12; val_offset:108390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108390*FLEN/8, x13, x9, x10)

inst_36152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef81ffff; valaddr_reg:x12; val_offset:108393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108393*FLEN/8, x13, x9, x10)

inst_36153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xeffe0000; valaddr_reg:x12; val_offset:108396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108396*FLEN/8, x13, x9, x10)

inst_36154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef80ffff; valaddr_reg:x12; val_offset:108399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108399*FLEN/8, x13, x9, x10)

inst_36155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xefff0000; valaddr_reg:x12; val_offset:108402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108402*FLEN/8, x13, x9, x10)

inst_36156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef807fff; valaddr_reg:x12; val_offset:108405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108405*FLEN/8, x13, x9, x10)

inst_36157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xefff8000; valaddr_reg:x12; val_offset:108408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108408*FLEN/8, x13, x9, x10)

inst_36158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef803fff; valaddr_reg:x12; val_offset:108411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108411*FLEN/8, x13, x9, x10)

inst_36159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xefffc000; valaddr_reg:x12; val_offset:108414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108414*FLEN/8, x13, x9, x10)

inst_36160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef801fff; valaddr_reg:x12; val_offset:108417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108417*FLEN/8, x13, x9, x10)

inst_36161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xefffe000; valaddr_reg:x12; val_offset:108420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108420*FLEN/8, x13, x9, x10)

inst_36162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef800fff; valaddr_reg:x12; val_offset:108423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108423*FLEN/8, x13, x9, x10)

inst_36163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xeffff000; valaddr_reg:x12; val_offset:108426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108426*FLEN/8, x13, x9, x10)

inst_36164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef8007ff; valaddr_reg:x12; val_offset:108429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108429*FLEN/8, x13, x9, x10)

inst_36165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xeffff800; valaddr_reg:x12; val_offset:108432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108432*FLEN/8, x13, x9, x10)

inst_36166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef8003ff; valaddr_reg:x12; val_offset:108435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108435*FLEN/8, x13, x9, x10)

inst_36167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xeffffc00; valaddr_reg:x12; val_offset:108438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108438*FLEN/8, x13, x9, x10)

inst_36168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef8001ff; valaddr_reg:x12; val_offset:108441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108441*FLEN/8, x13, x9, x10)

inst_36169:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xeffffe00; valaddr_reg:x12; val_offset:108444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108444*FLEN/8, x13, x9, x10)

inst_36170:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef8000ff; valaddr_reg:x12; val_offset:108447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108447*FLEN/8, x13, x9, x10)

inst_36171:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xefffff00; valaddr_reg:x12; val_offset:108450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108450*FLEN/8, x13, x9, x10)

inst_36172:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef80007f; valaddr_reg:x12; val_offset:108453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108453*FLEN/8, x13, x9, x10)

inst_36173:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xefffff80; valaddr_reg:x12; val_offset:108456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108456*FLEN/8, x13, x9, x10)

inst_36174:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef80003f; valaddr_reg:x12; val_offset:108459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108459*FLEN/8, x13, x9, x10)

inst_36175:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xefffffc0; valaddr_reg:x12; val_offset:108462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108462*FLEN/8, x13, x9, x10)

inst_36176:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef80001f; valaddr_reg:x12; val_offset:108465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108465*FLEN/8, x13, x9, x10)

inst_36177:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xefffffe0; valaddr_reg:x12; val_offset:108468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108468*FLEN/8, x13, x9, x10)

inst_36178:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef80000f; valaddr_reg:x12; val_offset:108471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108471*FLEN/8, x13, x9, x10)

inst_36179:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xeffffff0; valaddr_reg:x12; val_offset:108474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108474*FLEN/8, x13, x9, x10)

inst_36180:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef800007; valaddr_reg:x12; val_offset:108477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108477*FLEN/8, x13, x9, x10)

inst_36181:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xeffffff8; valaddr_reg:x12; val_offset:108480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108480*FLEN/8, x13, x9, x10)

inst_36182:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef800003; valaddr_reg:x12; val_offset:108483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108483*FLEN/8, x13, x9, x10)

inst_36183:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xeffffffc; valaddr_reg:x12; val_offset:108486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108486*FLEN/8, x13, x9, x10)

inst_36184:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xef800001; valaddr_reg:x12; val_offset:108489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108489*FLEN/8, x13, x9, x10)

inst_36185:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xdf and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xeffffffe; valaddr_reg:x12; val_offset:108492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108492*FLEN/8, x13, x9, x10)

inst_36186:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff7ffff8; valaddr_reg:x12; val_offset:108495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108495*FLEN/8, x13, x9, x10)

inst_36187:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff000007; valaddr_reg:x12; val_offset:108498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108498*FLEN/8, x13, x9, x10)

inst_36188:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff7ffffc; valaddr_reg:x12; val_offset:108501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108501*FLEN/8, x13, x9, x10)

inst_36189:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff000003; valaddr_reg:x12; val_offset:108504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108504*FLEN/8, x13, x9, x10)

inst_36190:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff7ffffe; valaddr_reg:x12; val_offset:108507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108507*FLEN/8, x13, x9, x10)

inst_36191:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff000001; valaddr_reg:x12; val_offset:108510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108510*FLEN/8, x13, x9, x10)

inst_36192:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff36db6d; valaddr_reg:x12; val_offset:108513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108513*FLEN/8, x13, x9, x10)

inst_36193:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff6db6db; valaddr_reg:x12; val_offset:108516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108516*FLEN/8, x13, x9, x10)

inst_36194:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff199999; valaddr_reg:x12; val_offset:108519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108519*FLEN/8, x13, x9, x10)

inst_36195:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff666666; valaddr_reg:x12; val_offset:108522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108522*FLEN/8, x13, x9, x10)

inst_36196:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff3bbbbb; valaddr_reg:x12; val_offset:108525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108525*FLEN/8, x13, x9, x10)

inst_36197:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff444444; valaddr_reg:x12; val_offset:108528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108528*FLEN/8, x13, x9, x10)

inst_36198:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff249249; valaddr_reg:x12; val_offset:108531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108531*FLEN/8, x13, x9, x10)

inst_36199:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff5b6db6; valaddr_reg:x12; val_offset:108534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108534*FLEN/8, x13, x9, x10)

inst_36200:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff333333; valaddr_reg:x12; val_offset:108537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108537*FLEN/8, x13, x9, x10)

inst_36201:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x39b62c and fs2 == 1 and fe2 == 0x80 and fm2 == 0x307213 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb9b62c; op2val:0xc0307213;
op3val:0xff4ccccc; valaddr_reg:x12; val_offset:108540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108540*FLEN/8, x13, x9, x10)

inst_36202:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07fffff; valaddr_reg:x12; val_offset:108543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108543*FLEN/8, x13, x9, x10)

inst_36203:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf0000000; valaddr_reg:x12; val_offset:108546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108546*FLEN/8, x13, x9, x10)

inst_36204:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf03fffff; valaddr_reg:x12; val_offset:108549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108549*FLEN/8, x13, x9, x10)

inst_36205:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf0400000; valaddr_reg:x12; val_offset:108552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108552*FLEN/8, x13, x9, x10)

inst_36206:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf01fffff; valaddr_reg:x12; val_offset:108555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108555*FLEN/8, x13, x9, x10)

inst_36207:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf0600000; valaddr_reg:x12; val_offset:108558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108558*FLEN/8, x13, x9, x10)

inst_36208:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf00fffff; valaddr_reg:x12; val_offset:108561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108561*FLEN/8, x13, x9, x10)

inst_36209:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf0700000; valaddr_reg:x12; val_offset:108564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108564*FLEN/8, x13, x9, x10)

inst_36210:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf007ffff; valaddr_reg:x12; val_offset:108567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108567*FLEN/8, x13, x9, x10)

inst_36211:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf0780000; valaddr_reg:x12; val_offset:108570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108570*FLEN/8, x13, x9, x10)

inst_36212:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf003ffff; valaddr_reg:x12; val_offset:108573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108573*FLEN/8, x13, x9, x10)

inst_36213:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07c0000; valaddr_reg:x12; val_offset:108576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108576*FLEN/8, x13, x9, x10)

inst_36214:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf001ffff; valaddr_reg:x12; val_offset:108579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108579*FLEN/8, x13, x9, x10)

inst_36215:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07e0000; valaddr_reg:x12; val_offset:108582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108582*FLEN/8, x13, x9, x10)

inst_36216:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf000ffff; valaddr_reg:x12; val_offset:108585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108585*FLEN/8, x13, x9, x10)

inst_36217:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07f0000; valaddr_reg:x12; val_offset:108588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108588*FLEN/8, x13, x9, x10)

inst_36218:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf0007fff; valaddr_reg:x12; val_offset:108591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108591*FLEN/8, x13, x9, x10)

inst_36219:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07f8000; valaddr_reg:x12; val_offset:108594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108594*FLEN/8, x13, x9, x10)

inst_36220:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf0003fff; valaddr_reg:x12; val_offset:108597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108597*FLEN/8, x13, x9, x10)

inst_36221:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07fc000; valaddr_reg:x12; val_offset:108600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108600*FLEN/8, x13, x9, x10)

inst_36222:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf0001fff; valaddr_reg:x12; val_offset:108603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108603*FLEN/8, x13, x9, x10)

inst_36223:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07fe000; valaddr_reg:x12; val_offset:108606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108606*FLEN/8, x13, x9, x10)

inst_36224:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf0000fff; valaddr_reg:x12; val_offset:108609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108609*FLEN/8, x13, x9, x10)

inst_36225:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07ff000; valaddr_reg:x12; val_offset:108612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108612*FLEN/8, x13, x9, x10)

inst_36226:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf00007ff; valaddr_reg:x12; val_offset:108615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108615*FLEN/8, x13, x9, x10)

inst_36227:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07ff800; valaddr_reg:x12; val_offset:108618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108618*FLEN/8, x13, x9, x10)

inst_36228:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf00003ff; valaddr_reg:x12; val_offset:108621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108621*FLEN/8, x13, x9, x10)

inst_36229:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07ffc00; valaddr_reg:x12; val_offset:108624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108624*FLEN/8, x13, x9, x10)

inst_36230:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf00001ff; valaddr_reg:x12; val_offset:108627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108627*FLEN/8, x13, x9, x10)

inst_36231:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07ffe00; valaddr_reg:x12; val_offset:108630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108630*FLEN/8, x13, x9, x10)

inst_36232:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf00000ff; valaddr_reg:x12; val_offset:108633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108633*FLEN/8, x13, x9, x10)

inst_36233:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07fff00; valaddr_reg:x12; val_offset:108636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108636*FLEN/8, x13, x9, x10)

inst_36234:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf000007f; valaddr_reg:x12; val_offset:108639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108639*FLEN/8, x13, x9, x10)

inst_36235:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07fff80; valaddr_reg:x12; val_offset:108642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108642*FLEN/8, x13, x9, x10)

inst_36236:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf000003f; valaddr_reg:x12; val_offset:108645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108645*FLEN/8, x13, x9, x10)

inst_36237:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07fffc0; valaddr_reg:x12; val_offset:108648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108648*FLEN/8, x13, x9, x10)

inst_36238:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf000001f; valaddr_reg:x12; val_offset:108651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108651*FLEN/8, x13, x9, x10)

inst_36239:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07fffe0; valaddr_reg:x12; val_offset:108654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108654*FLEN/8, x13, x9, x10)

inst_36240:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf000000f; valaddr_reg:x12; val_offset:108657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108657*FLEN/8, x13, x9, x10)

inst_36241:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07ffff0; valaddr_reg:x12; val_offset:108660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108660*FLEN/8, x13, x9, x10)

inst_36242:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf0000007; valaddr_reg:x12; val_offset:108663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108663*FLEN/8, x13, x9, x10)

inst_36243:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07ffff8; valaddr_reg:x12; val_offset:108666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108666*FLEN/8, x13, x9, x10)

inst_36244:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf0000003; valaddr_reg:x12; val_offset:108669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108669*FLEN/8, x13, x9, x10)

inst_36245:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07ffffc; valaddr_reg:x12; val_offset:108672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108672*FLEN/8, x13, x9, x10)

inst_36246:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf0000001; valaddr_reg:x12; val_offset:108675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108675*FLEN/8, x13, x9, x10)

inst_36247:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xe0 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xf07ffffe; valaddr_reg:x12; val_offset:108678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108678*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_283)
inst_36248:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff7ffff8; valaddr_reg:x12; val_offset:108681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108681*FLEN/8, x13, x9, x10)

inst_36249:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff000007; valaddr_reg:x12; val_offset:108684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108684*FLEN/8, x13, x9, x10)

inst_36250:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff7ffffc; valaddr_reg:x12; val_offset:108687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108687*FLEN/8, x13, x9, x10)

inst_36251:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff000003; valaddr_reg:x12; val_offset:108690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108690*FLEN/8, x13, x9, x10)

inst_36252:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff7ffffe; valaddr_reg:x12; val_offset:108693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108693*FLEN/8, x13, x9, x10)

inst_36253:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff000001; valaddr_reg:x12; val_offset:108696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108696*FLEN/8, x13, x9, x10)

inst_36254:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff36db6d; valaddr_reg:x12; val_offset:108699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108699*FLEN/8, x13, x9, x10)

inst_36255:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff6db6db; valaddr_reg:x12; val_offset:108702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108702*FLEN/8, x13, x9, x10)

inst_36256:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff199999; valaddr_reg:x12; val_offset:108705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108705*FLEN/8, x13, x9, x10)

inst_36257:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff666666; valaddr_reg:x12; val_offset:108708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108708*FLEN/8, x13, x9, x10)

inst_36258:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff3bbbbb; valaddr_reg:x12; val_offset:108711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108711*FLEN/8, x13, x9, x10)

inst_36259:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff444444; valaddr_reg:x12; val_offset:108714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108714*FLEN/8, x13, x9, x10)

inst_36260:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff249249; valaddr_reg:x12; val_offset:108717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108717*FLEN/8, x13, x9, x10)

inst_36261:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff5b6db6; valaddr_reg:x12; val_offset:108720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108720*FLEN/8, x13, x9, x10)

inst_36262:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff333333; valaddr_reg:x12; val_offset:108723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108723*FLEN/8, x13, x9, x10)

inst_36263:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x475011 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2467a8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e475011; op2val:0xc0a467a8;
op3val:0xff4ccccc; valaddr_reg:x12; val_offset:108726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108726*FLEN/8, x13, x9, x10)

inst_36264:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0ffffff; valaddr_reg:x12; val_offset:108729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108729*FLEN/8, x13, x9, x10)

inst_36265:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0800000; valaddr_reg:x12; val_offset:108732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108732*FLEN/8, x13, x9, x10)

inst_36266:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0bfffff; valaddr_reg:x12; val_offset:108735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108735*FLEN/8, x13, x9, x10)

inst_36267:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0c00000; valaddr_reg:x12; val_offset:108738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108738*FLEN/8, x13, x9, x10)

inst_36268:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf09fffff; valaddr_reg:x12; val_offset:108741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108741*FLEN/8, x13, x9, x10)

inst_36269:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0e00000; valaddr_reg:x12; val_offset:108744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108744*FLEN/8, x13, x9, x10)

inst_36270:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf08fffff; valaddr_reg:x12; val_offset:108747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108747*FLEN/8, x13, x9, x10)

inst_36271:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0f00000; valaddr_reg:x12; val_offset:108750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108750*FLEN/8, x13, x9, x10)

inst_36272:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf087ffff; valaddr_reg:x12; val_offset:108753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108753*FLEN/8, x13, x9, x10)

inst_36273:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0f80000; valaddr_reg:x12; val_offset:108756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108756*FLEN/8, x13, x9, x10)

inst_36274:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf083ffff; valaddr_reg:x12; val_offset:108759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108759*FLEN/8, x13, x9, x10)

inst_36275:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0fc0000; valaddr_reg:x12; val_offset:108762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108762*FLEN/8, x13, x9, x10)

inst_36276:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf081ffff; valaddr_reg:x12; val_offset:108765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108765*FLEN/8, x13, x9, x10)

inst_36277:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0fe0000; valaddr_reg:x12; val_offset:108768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108768*FLEN/8, x13, x9, x10)

inst_36278:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf080ffff; valaddr_reg:x12; val_offset:108771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108771*FLEN/8, x13, x9, x10)

inst_36279:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0ff0000; valaddr_reg:x12; val_offset:108774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108774*FLEN/8, x13, x9, x10)

inst_36280:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0807fff; valaddr_reg:x12; val_offset:108777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108777*FLEN/8, x13, x9, x10)

inst_36281:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0ff8000; valaddr_reg:x12; val_offset:108780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108780*FLEN/8, x13, x9, x10)

inst_36282:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0803fff; valaddr_reg:x12; val_offset:108783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108783*FLEN/8, x13, x9, x10)

inst_36283:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0ffc000; valaddr_reg:x12; val_offset:108786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108786*FLEN/8, x13, x9, x10)

inst_36284:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0801fff; valaddr_reg:x12; val_offset:108789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108789*FLEN/8, x13, x9, x10)

inst_36285:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0ffe000; valaddr_reg:x12; val_offset:108792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108792*FLEN/8, x13, x9, x10)

inst_36286:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0800fff; valaddr_reg:x12; val_offset:108795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108795*FLEN/8, x13, x9, x10)

inst_36287:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0fff000; valaddr_reg:x12; val_offset:108798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108798*FLEN/8, x13, x9, x10)

inst_36288:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf08007ff; valaddr_reg:x12; val_offset:108801*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108801*FLEN/8, x13, x9, x10)

inst_36289:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0fff800; valaddr_reg:x12; val_offset:108804*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108804*FLEN/8, x13, x9, x10)

inst_36290:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf08003ff; valaddr_reg:x12; val_offset:108807*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108807*FLEN/8, x13, x9, x10)

inst_36291:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0fffc00; valaddr_reg:x12; val_offset:108810*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108810*FLEN/8, x13, x9, x10)

inst_36292:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf08001ff; valaddr_reg:x12; val_offset:108813*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108813*FLEN/8, x13, x9, x10)

inst_36293:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0fffe00; valaddr_reg:x12; val_offset:108816*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108816*FLEN/8, x13, x9, x10)

inst_36294:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf08000ff; valaddr_reg:x12; val_offset:108819*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108819*FLEN/8, x13, x9, x10)

inst_36295:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0ffff00; valaddr_reg:x12; val_offset:108822*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108822*FLEN/8, x13, x9, x10)

inst_36296:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf080007f; valaddr_reg:x12; val_offset:108825*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108825*FLEN/8, x13, x9, x10)

inst_36297:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0ffff80; valaddr_reg:x12; val_offset:108828*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108828*FLEN/8, x13, x9, x10)

inst_36298:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf080003f; valaddr_reg:x12; val_offset:108831*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108831*FLEN/8, x13, x9, x10)

inst_36299:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0ffffc0; valaddr_reg:x12; val_offset:108834*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108834*FLEN/8, x13, x9, x10)

inst_36300:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf080001f; valaddr_reg:x12; val_offset:108837*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108837*FLEN/8, x13, x9, x10)

inst_36301:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0ffffe0; valaddr_reg:x12; val_offset:108840*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108840*FLEN/8, x13, x9, x10)

inst_36302:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf080000f; valaddr_reg:x12; val_offset:108843*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108843*FLEN/8, x13, x9, x10)

inst_36303:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0fffff0; valaddr_reg:x12; val_offset:108846*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108846*FLEN/8, x13, x9, x10)

inst_36304:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0800007; valaddr_reg:x12; val_offset:108849*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108849*FLEN/8, x13, x9, x10)

inst_36305:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0fffff8; valaddr_reg:x12; val_offset:108852*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108852*FLEN/8, x13, x9, x10)

inst_36306:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0800003; valaddr_reg:x12; val_offset:108855*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108855*FLEN/8, x13, x9, x10)

inst_36307:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0fffffc; valaddr_reg:x12; val_offset:108858*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108858*FLEN/8, x13, x9, x10)

inst_36308:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0800001; valaddr_reg:x12; val_offset:108861*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108861*FLEN/8, x13, x9, x10)

inst_36309:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xe1 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xf0fffffe; valaddr_reg:x12; val_offset:108864*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108864*FLEN/8, x13, x9, x10)

inst_36310:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff7ffff8; valaddr_reg:x12; val_offset:108867*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108867*FLEN/8, x13, x9, x10)

inst_36311:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff000007; valaddr_reg:x12; val_offset:108870*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108870*FLEN/8, x13, x9, x10)

inst_36312:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff7ffffc; valaddr_reg:x12; val_offset:108873*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108873*FLEN/8, x13, x9, x10)

inst_36313:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff000003; valaddr_reg:x12; val_offset:108876*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108876*FLEN/8, x13, x9, x10)

inst_36314:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff7ffffe; valaddr_reg:x12; val_offset:108879*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108879*FLEN/8, x13, x9, x10)

inst_36315:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff000001; valaddr_reg:x12; val_offset:108882*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108882*FLEN/8, x13, x9, x10)

inst_36316:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff36db6d; valaddr_reg:x12; val_offset:108885*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108885*FLEN/8, x13, x9, x10)

inst_36317:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff6db6db; valaddr_reg:x12; val_offset:108888*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108888*FLEN/8, x13, x9, x10)

inst_36318:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff199999; valaddr_reg:x12; val_offset:108891*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108891*FLEN/8, x13, x9, x10)

inst_36319:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff666666; valaddr_reg:x12; val_offset:108894*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108894*FLEN/8, x13, x9, x10)

inst_36320:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff3bbbbb; valaddr_reg:x12; val_offset:108897*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108897*FLEN/8, x13, x9, x10)

inst_36321:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff444444; valaddr_reg:x12; val_offset:108900*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108900*FLEN/8, x13, x9, x10)

inst_36322:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff249249; valaddr_reg:x12; val_offset:108903*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108903*FLEN/8, x13, x9, x10)

inst_36323:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff5b6db6; valaddr_reg:x12; val_offset:108906*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108906*FLEN/8, x13, x9, x10)

inst_36324:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff333333; valaddr_reg:x12; val_offset:108909*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108909*FLEN/8, x13, x9, x10)

inst_36325:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a64ea and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0bcc75 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea64ea; op2val:0xc00bcc75;
op3val:0xff4ccccc; valaddr_reg:x12; val_offset:108912*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108912*FLEN/8, x13, x9, x10)

inst_36326:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17fffff; valaddr_reg:x12; val_offset:108915*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108915*FLEN/8, x13, x9, x10)

inst_36327:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf1000000; valaddr_reg:x12; val_offset:108918*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108918*FLEN/8, x13, x9, x10)

inst_36328:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf13fffff; valaddr_reg:x12; val_offset:108921*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108921*FLEN/8, x13, x9, x10)

inst_36329:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf1400000; valaddr_reg:x12; val_offset:108924*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108924*FLEN/8, x13, x9, x10)

inst_36330:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf11fffff; valaddr_reg:x12; val_offset:108927*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108927*FLEN/8, x13, x9, x10)

inst_36331:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf1600000; valaddr_reg:x12; val_offset:108930*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108930*FLEN/8, x13, x9, x10)

inst_36332:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf10fffff; valaddr_reg:x12; val_offset:108933*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108933*FLEN/8, x13, x9, x10)

inst_36333:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf1700000; valaddr_reg:x12; val_offset:108936*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108936*FLEN/8, x13, x9, x10)

inst_36334:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf107ffff; valaddr_reg:x12; val_offset:108939*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108939*FLEN/8, x13, x9, x10)

inst_36335:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf1780000; valaddr_reg:x12; val_offset:108942*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108942*FLEN/8, x13, x9, x10)

inst_36336:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf103ffff; valaddr_reg:x12; val_offset:108945*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108945*FLEN/8, x13, x9, x10)

inst_36337:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17c0000; valaddr_reg:x12; val_offset:108948*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108948*FLEN/8, x13, x9, x10)

inst_36338:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf101ffff; valaddr_reg:x12; val_offset:108951*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108951*FLEN/8, x13, x9, x10)

inst_36339:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17e0000; valaddr_reg:x12; val_offset:108954*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108954*FLEN/8, x13, x9, x10)

inst_36340:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf100ffff; valaddr_reg:x12; val_offset:108957*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108957*FLEN/8, x13, x9, x10)

inst_36341:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17f0000; valaddr_reg:x12; val_offset:108960*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108960*FLEN/8, x13, x9, x10)

inst_36342:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf1007fff; valaddr_reg:x12; val_offset:108963*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108963*FLEN/8, x13, x9, x10)

inst_36343:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17f8000; valaddr_reg:x12; val_offset:108966*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108966*FLEN/8, x13, x9, x10)

inst_36344:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf1003fff; valaddr_reg:x12; val_offset:108969*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108969*FLEN/8, x13, x9, x10)

inst_36345:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17fc000; valaddr_reg:x12; val_offset:108972*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108972*FLEN/8, x13, x9, x10)

inst_36346:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf1001fff; valaddr_reg:x12; val_offset:108975*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108975*FLEN/8, x13, x9, x10)

inst_36347:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17fe000; valaddr_reg:x12; val_offset:108978*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108978*FLEN/8, x13, x9, x10)

inst_36348:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf1000fff; valaddr_reg:x12; val_offset:108981*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108981*FLEN/8, x13, x9, x10)

inst_36349:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17ff000; valaddr_reg:x12; val_offset:108984*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108984*FLEN/8, x13, x9, x10)

inst_36350:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf10007ff; valaddr_reg:x12; val_offset:108987*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108987*FLEN/8, x13, x9, x10)

inst_36351:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17ff800; valaddr_reg:x12; val_offset:108990*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108990*FLEN/8, x13, x9, x10)

inst_36352:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf10003ff; valaddr_reg:x12; val_offset:108993*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108993*FLEN/8, x13, x9, x10)

inst_36353:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17ffc00; valaddr_reg:x12; val_offset:108996*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108996*FLEN/8, x13, x9, x10)

inst_36354:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf10001ff; valaddr_reg:x12; val_offset:108999*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 108999*FLEN/8, x13, x9, x10)

inst_36355:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17ffe00; valaddr_reg:x12; val_offset:109002*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109002*FLEN/8, x13, x9, x10)

inst_36356:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf10000ff; valaddr_reg:x12; val_offset:109005*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109005*FLEN/8, x13, x9, x10)

inst_36357:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17fff00; valaddr_reg:x12; val_offset:109008*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109008*FLEN/8, x13, x9, x10)

inst_36358:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf100007f; valaddr_reg:x12; val_offset:109011*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109011*FLEN/8, x13, x9, x10)

inst_36359:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17fff80; valaddr_reg:x12; val_offset:109014*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109014*FLEN/8, x13, x9, x10)

inst_36360:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf100003f; valaddr_reg:x12; val_offset:109017*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109017*FLEN/8, x13, x9, x10)

inst_36361:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17fffc0; valaddr_reg:x12; val_offset:109020*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109020*FLEN/8, x13, x9, x10)

inst_36362:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf100001f; valaddr_reg:x12; val_offset:109023*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109023*FLEN/8, x13, x9, x10)

inst_36363:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17fffe0; valaddr_reg:x12; val_offset:109026*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109026*FLEN/8, x13, x9, x10)

inst_36364:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf100000f; valaddr_reg:x12; val_offset:109029*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109029*FLEN/8, x13, x9, x10)

inst_36365:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17ffff0; valaddr_reg:x12; val_offset:109032*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109032*FLEN/8, x13, x9, x10)

inst_36366:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf1000007; valaddr_reg:x12; val_offset:109035*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109035*FLEN/8, x13, x9, x10)

inst_36367:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17ffff8; valaddr_reg:x12; val_offset:109038*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109038*FLEN/8, x13, x9, x10)

inst_36368:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf1000003; valaddr_reg:x12; val_offset:109041*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109041*FLEN/8, x13, x9, x10)

inst_36369:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17ffffc; valaddr_reg:x12; val_offset:109044*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109044*FLEN/8, x13, x9, x10)

inst_36370:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf1000001; valaddr_reg:x12; val_offset:109047*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109047*FLEN/8, x13, x9, x10)

inst_36371:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xe2 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xf17ffffe; valaddr_reg:x12; val_offset:109050*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109050*FLEN/8, x13, x9, x10)

inst_36372:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff7ffff8; valaddr_reg:x12; val_offset:109053*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109053*FLEN/8, x13, x9, x10)

inst_36373:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff000007; valaddr_reg:x12; val_offset:109056*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109056*FLEN/8, x13, x9, x10)

inst_36374:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff7ffffc; valaddr_reg:x12; val_offset:109059*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109059*FLEN/8, x13, x9, x10)

inst_36375:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff000003; valaddr_reg:x12; val_offset:109062*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109062*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_284)
inst_36376:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff7ffffe; valaddr_reg:x12; val_offset:109065*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109065*FLEN/8, x13, x9, x10)

inst_36377:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff000001; valaddr_reg:x12; val_offset:109068*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109068*FLEN/8, x13, x9, x10)

inst_36378:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff36db6d; valaddr_reg:x12; val_offset:109071*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109071*FLEN/8, x13, x9, x10)

inst_36379:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff6db6db; valaddr_reg:x12; val_offset:109074*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109074*FLEN/8, x13, x9, x10)

inst_36380:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff199999; valaddr_reg:x12; val_offset:109077*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109077*FLEN/8, x13, x9, x10)

inst_36381:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff666666; valaddr_reg:x12; val_offset:109080*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109080*FLEN/8, x13, x9, x10)

inst_36382:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff3bbbbb; valaddr_reg:x12; val_offset:109083*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109083*FLEN/8, x13, x9, x10)

inst_36383:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff444444; valaddr_reg:x12; val_offset:109086*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109086*FLEN/8, x13, x9, x10)

inst_36384:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff249249; valaddr_reg:x12; val_offset:109089*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109089*FLEN/8, x13, x9, x10)

inst_36385:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff5b6db6; valaddr_reg:x12; val_offset:109092*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109092*FLEN/8, x13, x9, x10)

inst_36386:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff333333; valaddr_reg:x12; val_offset:109095*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109095*FLEN/8, x13, x9, x10)

inst_36387:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x097b66 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x6e5806 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f097b66; op2val:0xbfee5806;
op3val:0xff4ccccc; valaddr_reg:x12; val_offset:109098*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109098*FLEN/8, x13, x9, x10)

inst_36388:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1ffffff; valaddr_reg:x12; val_offset:109101*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109101*FLEN/8, x13, x9, x10)

inst_36389:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1800000; valaddr_reg:x12; val_offset:109104*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109104*FLEN/8, x13, x9, x10)

inst_36390:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1bfffff; valaddr_reg:x12; val_offset:109107*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109107*FLEN/8, x13, x9, x10)

inst_36391:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1c00000; valaddr_reg:x12; val_offset:109110*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109110*FLEN/8, x13, x9, x10)

inst_36392:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf19fffff; valaddr_reg:x12; val_offset:109113*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109113*FLEN/8, x13, x9, x10)

inst_36393:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1e00000; valaddr_reg:x12; val_offset:109116*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109116*FLEN/8, x13, x9, x10)

inst_36394:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf18fffff; valaddr_reg:x12; val_offset:109119*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109119*FLEN/8, x13, x9, x10)

inst_36395:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1f00000; valaddr_reg:x12; val_offset:109122*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109122*FLEN/8, x13, x9, x10)

inst_36396:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf187ffff; valaddr_reg:x12; val_offset:109125*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109125*FLEN/8, x13, x9, x10)

inst_36397:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1f80000; valaddr_reg:x12; val_offset:109128*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109128*FLEN/8, x13, x9, x10)

inst_36398:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf183ffff; valaddr_reg:x12; val_offset:109131*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109131*FLEN/8, x13, x9, x10)

inst_36399:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1fc0000; valaddr_reg:x12; val_offset:109134*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109134*FLEN/8, x13, x9, x10)

inst_36400:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf181ffff; valaddr_reg:x12; val_offset:109137*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109137*FLEN/8, x13, x9, x10)

inst_36401:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1fe0000; valaddr_reg:x12; val_offset:109140*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109140*FLEN/8, x13, x9, x10)

inst_36402:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf180ffff; valaddr_reg:x12; val_offset:109143*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109143*FLEN/8, x13, x9, x10)

inst_36403:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1ff0000; valaddr_reg:x12; val_offset:109146*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109146*FLEN/8, x13, x9, x10)

inst_36404:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1807fff; valaddr_reg:x12; val_offset:109149*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109149*FLEN/8, x13, x9, x10)

inst_36405:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1ff8000; valaddr_reg:x12; val_offset:109152*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109152*FLEN/8, x13, x9, x10)

inst_36406:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1803fff; valaddr_reg:x12; val_offset:109155*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109155*FLEN/8, x13, x9, x10)

inst_36407:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1ffc000; valaddr_reg:x12; val_offset:109158*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109158*FLEN/8, x13, x9, x10)

inst_36408:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1801fff; valaddr_reg:x12; val_offset:109161*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109161*FLEN/8, x13, x9, x10)

inst_36409:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1ffe000; valaddr_reg:x12; val_offset:109164*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109164*FLEN/8, x13, x9, x10)

inst_36410:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1800fff; valaddr_reg:x12; val_offset:109167*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109167*FLEN/8, x13, x9, x10)

inst_36411:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1fff000; valaddr_reg:x12; val_offset:109170*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109170*FLEN/8, x13, x9, x10)

inst_36412:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf18007ff; valaddr_reg:x12; val_offset:109173*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109173*FLEN/8, x13, x9, x10)

inst_36413:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1fff800; valaddr_reg:x12; val_offset:109176*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109176*FLEN/8, x13, x9, x10)

inst_36414:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf18003ff; valaddr_reg:x12; val_offset:109179*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109179*FLEN/8, x13, x9, x10)

inst_36415:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1fffc00; valaddr_reg:x12; val_offset:109182*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109182*FLEN/8, x13, x9, x10)

inst_36416:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf18001ff; valaddr_reg:x12; val_offset:109185*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109185*FLEN/8, x13, x9, x10)

inst_36417:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1fffe00; valaddr_reg:x12; val_offset:109188*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109188*FLEN/8, x13, x9, x10)

inst_36418:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf18000ff; valaddr_reg:x12; val_offset:109191*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109191*FLEN/8, x13, x9, x10)

inst_36419:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1ffff00; valaddr_reg:x12; val_offset:109194*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109194*FLEN/8, x13, x9, x10)

inst_36420:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf180007f; valaddr_reg:x12; val_offset:109197*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109197*FLEN/8, x13, x9, x10)

inst_36421:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1ffff80; valaddr_reg:x12; val_offset:109200*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109200*FLEN/8, x13, x9, x10)

inst_36422:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf180003f; valaddr_reg:x12; val_offset:109203*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109203*FLEN/8, x13, x9, x10)

inst_36423:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1ffffc0; valaddr_reg:x12; val_offset:109206*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109206*FLEN/8, x13, x9, x10)

inst_36424:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf180001f; valaddr_reg:x12; val_offset:109209*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109209*FLEN/8, x13, x9, x10)

inst_36425:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1ffffe0; valaddr_reg:x12; val_offset:109212*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109212*FLEN/8, x13, x9, x10)

inst_36426:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf180000f; valaddr_reg:x12; val_offset:109215*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109215*FLEN/8, x13, x9, x10)

inst_36427:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1fffff0; valaddr_reg:x12; val_offset:109218*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109218*FLEN/8, x13, x9, x10)

inst_36428:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1800007; valaddr_reg:x12; val_offset:109221*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109221*FLEN/8, x13, x9, x10)

inst_36429:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1fffff8; valaddr_reg:x12; val_offset:109224*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109224*FLEN/8, x13, x9, x10)

inst_36430:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1800003; valaddr_reg:x12; val_offset:109227*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109227*FLEN/8, x13, x9, x10)

inst_36431:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1fffffc; valaddr_reg:x12; val_offset:109230*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109230*FLEN/8, x13, x9, x10)

inst_36432:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1800001; valaddr_reg:x12; val_offset:109233*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109233*FLEN/8, x13, x9, x10)

inst_36433:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xe3 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xf1fffffe; valaddr_reg:x12; val_offset:109236*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109236*FLEN/8, x13, x9, x10)

inst_36434:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff7ffff8; valaddr_reg:x12; val_offset:109239*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109239*FLEN/8, x13, x9, x10)

inst_36435:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff000007; valaddr_reg:x12; val_offset:109242*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109242*FLEN/8, x13, x9, x10)

inst_36436:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff7ffffc; valaddr_reg:x12; val_offset:109245*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109245*FLEN/8, x13, x9, x10)

inst_36437:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff000003; valaddr_reg:x12; val_offset:109248*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109248*FLEN/8, x13, x9, x10)

inst_36438:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff7ffffe; valaddr_reg:x12; val_offset:109251*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109251*FLEN/8, x13, x9, x10)

inst_36439:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff000001; valaddr_reg:x12; val_offset:109254*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109254*FLEN/8, x13, x9, x10)

inst_36440:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff36db6d; valaddr_reg:x12; val_offset:109257*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109257*FLEN/8, x13, x9, x10)

inst_36441:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff6db6db; valaddr_reg:x12; val_offset:109260*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109260*FLEN/8, x13, x9, x10)

inst_36442:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff199999; valaddr_reg:x12; val_offset:109263*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109263*FLEN/8, x13, x9, x10)

inst_36443:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff666666; valaddr_reg:x12; val_offset:109266*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109266*FLEN/8, x13, x9, x10)

inst_36444:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff3bbbbb; valaddr_reg:x12; val_offset:109269*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109269*FLEN/8, x13, x9, x10)

inst_36445:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff444444; valaddr_reg:x12; val_offset:109272*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109272*FLEN/8, x13, x9, x10)

inst_36446:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff249249; valaddr_reg:x12; val_offset:109275*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109275*FLEN/8, x13, x9, x10)

inst_36447:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff5b6db6; valaddr_reg:x12; val_offset:109278*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109278*FLEN/8, x13, x9, x10)

inst_36448:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff333333; valaddr_reg:x12; val_offset:109281*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109281*FLEN/8, x13, x9, x10)

inst_36449:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x46bbc4 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x24e257 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e46bbc4; op2val:0xc0a4e257;
op3val:0xff4ccccc; valaddr_reg:x12; val_offset:109284*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109284*FLEN/8, x13, x9, x10)

inst_36450:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27fffff; valaddr_reg:x12; val_offset:109287*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109287*FLEN/8, x13, x9, x10)

inst_36451:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf2000000; valaddr_reg:x12; val_offset:109290*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109290*FLEN/8, x13, x9, x10)

inst_36452:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf23fffff; valaddr_reg:x12; val_offset:109293*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109293*FLEN/8, x13, x9, x10)

inst_36453:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf2400000; valaddr_reg:x12; val_offset:109296*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109296*FLEN/8, x13, x9, x10)

inst_36454:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf21fffff; valaddr_reg:x12; val_offset:109299*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109299*FLEN/8, x13, x9, x10)

inst_36455:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf2600000; valaddr_reg:x12; val_offset:109302*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109302*FLEN/8, x13, x9, x10)

inst_36456:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf20fffff; valaddr_reg:x12; val_offset:109305*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109305*FLEN/8, x13, x9, x10)

inst_36457:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf2700000; valaddr_reg:x12; val_offset:109308*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109308*FLEN/8, x13, x9, x10)

inst_36458:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf207ffff; valaddr_reg:x12; val_offset:109311*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109311*FLEN/8, x13, x9, x10)

inst_36459:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf2780000; valaddr_reg:x12; val_offset:109314*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109314*FLEN/8, x13, x9, x10)

inst_36460:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf203ffff; valaddr_reg:x12; val_offset:109317*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109317*FLEN/8, x13, x9, x10)

inst_36461:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27c0000; valaddr_reg:x12; val_offset:109320*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109320*FLEN/8, x13, x9, x10)

inst_36462:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf201ffff; valaddr_reg:x12; val_offset:109323*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109323*FLEN/8, x13, x9, x10)

inst_36463:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27e0000; valaddr_reg:x12; val_offset:109326*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109326*FLEN/8, x13, x9, x10)

inst_36464:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf200ffff; valaddr_reg:x12; val_offset:109329*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109329*FLEN/8, x13, x9, x10)

inst_36465:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27f0000; valaddr_reg:x12; val_offset:109332*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109332*FLEN/8, x13, x9, x10)

inst_36466:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf2007fff; valaddr_reg:x12; val_offset:109335*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109335*FLEN/8, x13, x9, x10)

inst_36467:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27f8000; valaddr_reg:x12; val_offset:109338*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109338*FLEN/8, x13, x9, x10)

inst_36468:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf2003fff; valaddr_reg:x12; val_offset:109341*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109341*FLEN/8, x13, x9, x10)

inst_36469:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27fc000; valaddr_reg:x12; val_offset:109344*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109344*FLEN/8, x13, x9, x10)

inst_36470:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf2001fff; valaddr_reg:x12; val_offset:109347*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109347*FLEN/8, x13, x9, x10)

inst_36471:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27fe000; valaddr_reg:x12; val_offset:109350*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109350*FLEN/8, x13, x9, x10)

inst_36472:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf2000fff; valaddr_reg:x12; val_offset:109353*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109353*FLEN/8, x13, x9, x10)

inst_36473:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27ff000; valaddr_reg:x12; val_offset:109356*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109356*FLEN/8, x13, x9, x10)

inst_36474:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf20007ff; valaddr_reg:x12; val_offset:109359*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109359*FLEN/8, x13, x9, x10)

inst_36475:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27ff800; valaddr_reg:x12; val_offset:109362*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109362*FLEN/8, x13, x9, x10)

inst_36476:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf20003ff; valaddr_reg:x12; val_offset:109365*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109365*FLEN/8, x13, x9, x10)

inst_36477:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27ffc00; valaddr_reg:x12; val_offset:109368*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109368*FLEN/8, x13, x9, x10)

inst_36478:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf20001ff; valaddr_reg:x12; val_offset:109371*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109371*FLEN/8, x13, x9, x10)

inst_36479:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27ffe00; valaddr_reg:x12; val_offset:109374*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109374*FLEN/8, x13, x9, x10)

inst_36480:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf20000ff; valaddr_reg:x12; val_offset:109377*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109377*FLEN/8, x13, x9, x10)

inst_36481:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27fff00; valaddr_reg:x12; val_offset:109380*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109380*FLEN/8, x13, x9, x10)

inst_36482:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf200007f; valaddr_reg:x12; val_offset:109383*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109383*FLEN/8, x13, x9, x10)

inst_36483:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27fff80; valaddr_reg:x12; val_offset:109386*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109386*FLEN/8, x13, x9, x10)

inst_36484:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf200003f; valaddr_reg:x12; val_offset:109389*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109389*FLEN/8, x13, x9, x10)

inst_36485:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27fffc0; valaddr_reg:x12; val_offset:109392*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109392*FLEN/8, x13, x9, x10)

inst_36486:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf200001f; valaddr_reg:x12; val_offset:109395*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109395*FLEN/8, x13, x9, x10)

inst_36487:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27fffe0; valaddr_reg:x12; val_offset:109398*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109398*FLEN/8, x13, x9, x10)

inst_36488:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf200000f; valaddr_reg:x12; val_offset:109401*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109401*FLEN/8, x13, x9, x10)

inst_36489:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27ffff0; valaddr_reg:x12; val_offset:109404*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109404*FLEN/8, x13, x9, x10)

inst_36490:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf2000007; valaddr_reg:x12; val_offset:109407*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109407*FLEN/8, x13, x9, x10)

inst_36491:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27ffff8; valaddr_reg:x12; val_offset:109410*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109410*FLEN/8, x13, x9, x10)

inst_36492:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf2000003; valaddr_reg:x12; val_offset:109413*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109413*FLEN/8, x13, x9, x10)

inst_36493:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27ffffc; valaddr_reg:x12; val_offset:109416*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109416*FLEN/8, x13, x9, x10)

inst_36494:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf2000001; valaddr_reg:x12; val_offset:109419*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109419*FLEN/8, x13, x9, x10)

inst_36495:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xe4 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xf27ffffe; valaddr_reg:x12; val_offset:109422*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109422*FLEN/8, x13, x9, x10)

inst_36496:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff7ffff8; valaddr_reg:x12; val_offset:109425*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109425*FLEN/8, x13, x9, x10)

inst_36497:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff000007; valaddr_reg:x12; val_offset:109428*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109428*FLEN/8, x13, x9, x10)

inst_36498:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff7ffffc; valaddr_reg:x12; val_offset:109431*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109431*FLEN/8, x13, x9, x10)

inst_36499:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff000003; valaddr_reg:x12; val_offset:109434*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109434*FLEN/8, x13, x9, x10)

inst_36500:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff7ffffe; valaddr_reg:x12; val_offset:109437*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109437*FLEN/8, x13, x9, x10)

inst_36501:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff000001; valaddr_reg:x12; val_offset:109440*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109440*FLEN/8, x13, x9, x10)

inst_36502:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff36db6d; valaddr_reg:x12; val_offset:109443*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109443*FLEN/8, x13, x9, x10)

inst_36503:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff6db6db; valaddr_reg:x12; val_offset:109446*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109446*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_285)
inst_36504:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff199999; valaddr_reg:x12; val_offset:109449*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109449*FLEN/8, x13, x9, x10)

inst_36505:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff666666; valaddr_reg:x12; val_offset:109452*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109452*FLEN/8, x13, x9, x10)

inst_36506:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff3bbbbb; valaddr_reg:x12; val_offset:109455*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109455*FLEN/8, x13, x9, x10)

inst_36507:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff444444; valaddr_reg:x12; val_offset:109458*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109458*FLEN/8, x13, x9, x10)

inst_36508:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff249249; valaddr_reg:x12; val_offset:109461*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109461*FLEN/8, x13, x9, x10)

inst_36509:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff5b6db6; valaddr_reg:x12; val_offset:109464*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109464*FLEN/8, x13, x9, x10)

inst_36510:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff333333; valaddr_reg:x12; val_offset:109467*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109467*FLEN/8, x13, x9, x10)

inst_36511:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x6a388b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0be6f1 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eea388b; op2val:0xc00be6f1;
op3val:0xff4ccccc; valaddr_reg:x12; val_offset:109470*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109470*FLEN/8, x13, x9, x10)

inst_36512:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2ffffff; valaddr_reg:x12; val_offset:109473*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109473*FLEN/8, x13, x9, x10)

inst_36513:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2800000; valaddr_reg:x12; val_offset:109476*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109476*FLEN/8, x13, x9, x10)

inst_36514:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2bfffff; valaddr_reg:x12; val_offset:109479*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109479*FLEN/8, x13, x9, x10)

inst_36515:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2c00000; valaddr_reg:x12; val_offset:109482*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109482*FLEN/8, x13, x9, x10)

inst_36516:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf29fffff; valaddr_reg:x12; val_offset:109485*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109485*FLEN/8, x13, x9, x10)

inst_36517:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2e00000; valaddr_reg:x12; val_offset:109488*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109488*FLEN/8, x13, x9, x10)

inst_36518:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf28fffff; valaddr_reg:x12; val_offset:109491*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109491*FLEN/8, x13, x9, x10)

inst_36519:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2f00000; valaddr_reg:x12; val_offset:109494*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109494*FLEN/8, x13, x9, x10)

inst_36520:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf287ffff; valaddr_reg:x12; val_offset:109497*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109497*FLEN/8, x13, x9, x10)

inst_36521:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2f80000; valaddr_reg:x12; val_offset:109500*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109500*FLEN/8, x13, x9, x10)

inst_36522:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf283ffff; valaddr_reg:x12; val_offset:109503*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109503*FLEN/8, x13, x9, x10)

inst_36523:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2fc0000; valaddr_reg:x12; val_offset:109506*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109506*FLEN/8, x13, x9, x10)

inst_36524:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf281ffff; valaddr_reg:x12; val_offset:109509*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109509*FLEN/8, x13, x9, x10)

inst_36525:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2fe0000; valaddr_reg:x12; val_offset:109512*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109512*FLEN/8, x13, x9, x10)

inst_36526:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf280ffff; valaddr_reg:x12; val_offset:109515*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109515*FLEN/8, x13, x9, x10)

inst_36527:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2ff0000; valaddr_reg:x12; val_offset:109518*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109518*FLEN/8, x13, x9, x10)

inst_36528:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2807fff; valaddr_reg:x12; val_offset:109521*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109521*FLEN/8, x13, x9, x10)

inst_36529:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2ff8000; valaddr_reg:x12; val_offset:109524*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109524*FLEN/8, x13, x9, x10)

inst_36530:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2803fff; valaddr_reg:x12; val_offset:109527*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109527*FLEN/8, x13, x9, x10)

inst_36531:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2ffc000; valaddr_reg:x12; val_offset:109530*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109530*FLEN/8, x13, x9, x10)

inst_36532:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2801fff; valaddr_reg:x12; val_offset:109533*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109533*FLEN/8, x13, x9, x10)

inst_36533:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2ffe000; valaddr_reg:x12; val_offset:109536*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109536*FLEN/8, x13, x9, x10)

inst_36534:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2800fff; valaddr_reg:x12; val_offset:109539*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109539*FLEN/8, x13, x9, x10)

inst_36535:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2fff000; valaddr_reg:x12; val_offset:109542*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109542*FLEN/8, x13, x9, x10)

inst_36536:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf28007ff; valaddr_reg:x12; val_offset:109545*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109545*FLEN/8, x13, x9, x10)

inst_36537:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2fff800; valaddr_reg:x12; val_offset:109548*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109548*FLEN/8, x13, x9, x10)

inst_36538:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf28003ff; valaddr_reg:x12; val_offset:109551*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109551*FLEN/8, x13, x9, x10)

inst_36539:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2fffc00; valaddr_reg:x12; val_offset:109554*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109554*FLEN/8, x13, x9, x10)

inst_36540:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf28001ff; valaddr_reg:x12; val_offset:109557*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109557*FLEN/8, x13, x9, x10)

inst_36541:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2fffe00; valaddr_reg:x12; val_offset:109560*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109560*FLEN/8, x13, x9, x10)

inst_36542:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf28000ff; valaddr_reg:x12; val_offset:109563*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109563*FLEN/8, x13, x9, x10)

inst_36543:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2ffff00; valaddr_reg:x12; val_offset:109566*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109566*FLEN/8, x13, x9, x10)

inst_36544:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf280007f; valaddr_reg:x12; val_offset:109569*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109569*FLEN/8, x13, x9, x10)

inst_36545:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2ffff80; valaddr_reg:x12; val_offset:109572*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109572*FLEN/8, x13, x9, x10)

inst_36546:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf280003f; valaddr_reg:x12; val_offset:109575*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109575*FLEN/8, x13, x9, x10)

inst_36547:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2ffffc0; valaddr_reg:x12; val_offset:109578*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109578*FLEN/8, x13, x9, x10)

inst_36548:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf280001f; valaddr_reg:x12; val_offset:109581*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109581*FLEN/8, x13, x9, x10)

inst_36549:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2ffffe0; valaddr_reg:x12; val_offset:109584*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109584*FLEN/8, x13, x9, x10)

inst_36550:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf280000f; valaddr_reg:x12; val_offset:109587*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109587*FLEN/8, x13, x9, x10)

inst_36551:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2fffff0; valaddr_reg:x12; val_offset:109590*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109590*FLEN/8, x13, x9, x10)

inst_36552:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2800007; valaddr_reg:x12; val_offset:109593*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109593*FLEN/8, x13, x9, x10)

inst_36553:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2fffff8; valaddr_reg:x12; val_offset:109596*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109596*FLEN/8, x13, x9, x10)

inst_36554:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2800003; valaddr_reg:x12; val_offset:109599*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109599*FLEN/8, x13, x9, x10)

inst_36555:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2fffffc; valaddr_reg:x12; val_offset:109602*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109602*FLEN/8, x13, x9, x10)

inst_36556:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2800001; valaddr_reg:x12; val_offset:109605*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109605*FLEN/8, x13, x9, x10)

inst_36557:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xe5 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xf2fffffe; valaddr_reg:x12; val_offset:109608*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109608*FLEN/8, x13, x9, x10)

inst_36558:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff7ffff8; valaddr_reg:x12; val_offset:109611*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109611*FLEN/8, x13, x9, x10)

inst_36559:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff000007; valaddr_reg:x12; val_offset:109614*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109614*FLEN/8, x13, x9, x10)

inst_36560:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff7ffffc; valaddr_reg:x12; val_offset:109617*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109617*FLEN/8, x13, x9, x10)

inst_36561:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff000003; valaddr_reg:x12; val_offset:109620*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109620*FLEN/8, x13, x9, x10)

inst_36562:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff7ffffe; valaddr_reg:x12; val_offset:109623*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109623*FLEN/8, x13, x9, x10)

inst_36563:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff000001; valaddr_reg:x12; val_offset:109626*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109626*FLEN/8, x13, x9, x10)

inst_36564:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff36db6d; valaddr_reg:x12; val_offset:109629*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109629*FLEN/8, x13, x9, x10)

inst_36565:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff6db6db; valaddr_reg:x12; val_offset:109632*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109632*FLEN/8, x13, x9, x10)

inst_36566:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff199999; valaddr_reg:x12; val_offset:109635*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109635*FLEN/8, x13, x9, x10)

inst_36567:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff666666; valaddr_reg:x12; val_offset:109638*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109638*FLEN/8, x13, x9, x10)

inst_36568:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff3bbbbb; valaddr_reg:x12; val_offset:109641*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109641*FLEN/8, x13, x9, x10)

inst_36569:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff444444; valaddr_reg:x12; val_offset:109644*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109644*FLEN/8, x13, x9, x10)

inst_36570:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff249249; valaddr_reg:x12; val_offset:109647*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109647*FLEN/8, x13, x9, x10)

inst_36571:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff5b6db6; valaddr_reg:x12; val_offset:109650*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109650*FLEN/8, x13, x9, x10)

inst_36572:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff333333; valaddr_reg:x12; val_offset:109653*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109653*FLEN/8, x13, x9, x10)

inst_36573:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x3b9111 and fs2 == 1 and fe2 == 0x81 and fm2 == 0x2eb356 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e3b9111; op2val:0xc0aeb356;
op3val:0xff4ccccc; valaddr_reg:x12; val_offset:109656*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109656*FLEN/8, x13, x9, x10)

inst_36574:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37fffff; valaddr_reg:x12; val_offset:109659*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109659*FLEN/8, x13, x9, x10)

inst_36575:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf3000000; valaddr_reg:x12; val_offset:109662*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109662*FLEN/8, x13, x9, x10)

inst_36576:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf33fffff; valaddr_reg:x12; val_offset:109665*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109665*FLEN/8, x13, x9, x10)

inst_36577:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf3400000; valaddr_reg:x12; val_offset:109668*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109668*FLEN/8, x13, x9, x10)

inst_36578:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf31fffff; valaddr_reg:x12; val_offset:109671*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109671*FLEN/8, x13, x9, x10)

inst_36579:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf3600000; valaddr_reg:x12; val_offset:109674*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109674*FLEN/8, x13, x9, x10)

inst_36580:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf30fffff; valaddr_reg:x12; val_offset:109677*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109677*FLEN/8, x13, x9, x10)

inst_36581:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf3700000; valaddr_reg:x12; val_offset:109680*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109680*FLEN/8, x13, x9, x10)

inst_36582:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf307ffff; valaddr_reg:x12; val_offset:109683*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109683*FLEN/8, x13, x9, x10)

inst_36583:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf3780000; valaddr_reg:x12; val_offset:109686*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109686*FLEN/8, x13, x9, x10)

inst_36584:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf303ffff; valaddr_reg:x12; val_offset:109689*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109689*FLEN/8, x13, x9, x10)

inst_36585:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37c0000; valaddr_reg:x12; val_offset:109692*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109692*FLEN/8, x13, x9, x10)

inst_36586:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf301ffff; valaddr_reg:x12; val_offset:109695*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109695*FLEN/8, x13, x9, x10)

inst_36587:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37e0000; valaddr_reg:x12; val_offset:109698*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109698*FLEN/8, x13, x9, x10)

inst_36588:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf300ffff; valaddr_reg:x12; val_offset:109701*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109701*FLEN/8, x13, x9, x10)

inst_36589:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37f0000; valaddr_reg:x12; val_offset:109704*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109704*FLEN/8, x13, x9, x10)

inst_36590:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf3007fff; valaddr_reg:x12; val_offset:109707*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109707*FLEN/8, x13, x9, x10)

inst_36591:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37f8000; valaddr_reg:x12; val_offset:109710*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109710*FLEN/8, x13, x9, x10)

inst_36592:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf3003fff; valaddr_reg:x12; val_offset:109713*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109713*FLEN/8, x13, x9, x10)

inst_36593:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37fc000; valaddr_reg:x12; val_offset:109716*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109716*FLEN/8, x13, x9, x10)

inst_36594:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf3001fff; valaddr_reg:x12; val_offset:109719*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109719*FLEN/8, x13, x9, x10)

inst_36595:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37fe000; valaddr_reg:x12; val_offset:109722*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109722*FLEN/8, x13, x9, x10)

inst_36596:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf3000fff; valaddr_reg:x12; val_offset:109725*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109725*FLEN/8, x13, x9, x10)

inst_36597:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37ff000; valaddr_reg:x12; val_offset:109728*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109728*FLEN/8, x13, x9, x10)

inst_36598:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf30007ff; valaddr_reg:x12; val_offset:109731*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109731*FLEN/8, x13, x9, x10)

inst_36599:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37ff800; valaddr_reg:x12; val_offset:109734*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109734*FLEN/8, x13, x9, x10)

inst_36600:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf30003ff; valaddr_reg:x12; val_offset:109737*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109737*FLEN/8, x13, x9, x10)

inst_36601:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37ffc00; valaddr_reg:x12; val_offset:109740*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109740*FLEN/8, x13, x9, x10)

inst_36602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf30001ff; valaddr_reg:x12; val_offset:109743*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109743*FLEN/8, x13, x9, x10)

inst_36603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37ffe00; valaddr_reg:x12; val_offset:109746*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109746*FLEN/8, x13, x9, x10)

inst_36604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf30000ff; valaddr_reg:x12; val_offset:109749*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109749*FLEN/8, x13, x9, x10)

inst_36605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37fff00; valaddr_reg:x12; val_offset:109752*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109752*FLEN/8, x13, x9, x10)

inst_36606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf300007f; valaddr_reg:x12; val_offset:109755*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109755*FLEN/8, x13, x9, x10)

inst_36607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37fff80; valaddr_reg:x12; val_offset:109758*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109758*FLEN/8, x13, x9, x10)

inst_36608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf300003f; valaddr_reg:x12; val_offset:109761*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109761*FLEN/8, x13, x9, x10)

inst_36609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37fffc0; valaddr_reg:x12; val_offset:109764*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109764*FLEN/8, x13, x9, x10)

inst_36610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf300001f; valaddr_reg:x12; val_offset:109767*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109767*FLEN/8, x13, x9, x10)

inst_36611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37fffe0; valaddr_reg:x12; val_offset:109770*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109770*FLEN/8, x13, x9, x10)

inst_36612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf300000f; valaddr_reg:x12; val_offset:109773*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109773*FLEN/8, x13, x9, x10)

inst_36613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37ffff0; valaddr_reg:x12; val_offset:109776*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109776*FLEN/8, x13, x9, x10)

inst_36614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf3000007; valaddr_reg:x12; val_offset:109779*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109779*FLEN/8, x13, x9, x10)

inst_36615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37ffff8; valaddr_reg:x12; val_offset:109782*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109782*FLEN/8, x13, x9, x10)

inst_36616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf3000003; valaddr_reg:x12; val_offset:109785*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109785*FLEN/8, x13, x9, x10)

inst_36617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37ffffc; valaddr_reg:x12; val_offset:109788*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109788*FLEN/8, x13, x9, x10)

inst_36618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf3000001; valaddr_reg:x12; val_offset:109791*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109791*FLEN/8, x13, x9, x10)

inst_36619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xe6 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xf37ffffe; valaddr_reg:x12; val_offset:109794*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109794*FLEN/8, x13, x9, x10)

inst_36620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff7ffff8; valaddr_reg:x12; val_offset:109797*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109797*FLEN/8, x13, x9, x10)

inst_36621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff000007; valaddr_reg:x12; val_offset:109800*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109800*FLEN/8, x13, x9, x10)

inst_36622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff7ffffc; valaddr_reg:x12; val_offset:109803*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109803*FLEN/8, x13, x9, x10)

inst_36623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff000003; valaddr_reg:x12; val_offset:109806*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109806*FLEN/8, x13, x9, x10)

inst_36624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff7ffffe; valaddr_reg:x12; val_offset:109809*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109809*FLEN/8, x13, x9, x10)

inst_36625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff000001; valaddr_reg:x12; val_offset:109812*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109812*FLEN/8, x13, x9, x10)

inst_36626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff36db6d; valaddr_reg:x12; val_offset:109815*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109815*FLEN/8, x13, x9, x10)

inst_36627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff6db6db; valaddr_reg:x12; val_offset:109818*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109818*FLEN/8, x13, x9, x10)

inst_36628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff199999; valaddr_reg:x12; val_offset:109821*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109821*FLEN/8, x13, x9, x10)

inst_36629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff666666; valaddr_reg:x12; val_offset:109824*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109824*FLEN/8, x13, x9, x10)

inst_36630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff3bbbbb; valaddr_reg:x12; val_offset:109827*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109827*FLEN/8, x13, x9, x10)

inst_36631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff444444; valaddr_reg:x12; val_offset:109830*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109830*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_286)
inst_36632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff249249; valaddr_reg:x12; val_offset:109833*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109833*FLEN/8, x13, x9, x10)

inst_36633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff5b6db6; valaddr_reg:x12; val_offset:109836*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109836*FLEN/8, x13, x9, x10)

inst_36634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff333333; valaddr_reg:x12; val_offset:109839*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109839*FLEN/8, x13, x9, x10)

inst_36635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x7dc33b and fs2 == 1 and fe2 == 0x80 and fm2 == 0x0120e8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7efdc33b; op2val:0xc00120e8;
op3val:0xff4ccccc; valaddr_reg:x12; val_offset:109842*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109842*FLEN/8, x13, x9, x10)

inst_36636:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3ffffff; valaddr_reg:x12; val_offset:109845*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109845*FLEN/8, x13, x9, x10)

inst_36637:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3800000; valaddr_reg:x12; val_offset:109848*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109848*FLEN/8, x13, x9, x10)

inst_36638:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3bfffff; valaddr_reg:x12; val_offset:109851*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109851*FLEN/8, x13, x9, x10)

inst_36639:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3c00000; valaddr_reg:x12; val_offset:109854*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109854*FLEN/8, x13, x9, x10)

inst_36640:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf39fffff; valaddr_reg:x12; val_offset:109857*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109857*FLEN/8, x13, x9, x10)

inst_36641:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3e00000; valaddr_reg:x12; val_offset:109860*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109860*FLEN/8, x13, x9, x10)

inst_36642:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf38fffff; valaddr_reg:x12; val_offset:109863*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109863*FLEN/8, x13, x9, x10)

inst_36643:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3f00000; valaddr_reg:x12; val_offset:109866*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109866*FLEN/8, x13, x9, x10)

inst_36644:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf387ffff; valaddr_reg:x12; val_offset:109869*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109869*FLEN/8, x13, x9, x10)

inst_36645:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3f80000; valaddr_reg:x12; val_offset:109872*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109872*FLEN/8, x13, x9, x10)

inst_36646:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf383ffff; valaddr_reg:x12; val_offset:109875*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109875*FLEN/8, x13, x9, x10)

inst_36647:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3fc0000; valaddr_reg:x12; val_offset:109878*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109878*FLEN/8, x13, x9, x10)

inst_36648:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf381ffff; valaddr_reg:x12; val_offset:109881*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109881*FLEN/8, x13, x9, x10)

inst_36649:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3fe0000; valaddr_reg:x12; val_offset:109884*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109884*FLEN/8, x13, x9, x10)

inst_36650:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf380ffff; valaddr_reg:x12; val_offset:109887*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109887*FLEN/8, x13, x9, x10)

inst_36651:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3ff0000; valaddr_reg:x12; val_offset:109890*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109890*FLEN/8, x13, x9, x10)

inst_36652:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3807fff; valaddr_reg:x12; val_offset:109893*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109893*FLEN/8, x13, x9, x10)

inst_36653:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3ff8000; valaddr_reg:x12; val_offset:109896*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109896*FLEN/8, x13, x9, x10)

inst_36654:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3803fff; valaddr_reg:x12; val_offset:109899*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109899*FLEN/8, x13, x9, x10)

inst_36655:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3ffc000; valaddr_reg:x12; val_offset:109902*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109902*FLEN/8, x13, x9, x10)

inst_36656:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3801fff; valaddr_reg:x12; val_offset:109905*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109905*FLEN/8, x13, x9, x10)

inst_36657:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3ffe000; valaddr_reg:x12; val_offset:109908*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109908*FLEN/8, x13, x9, x10)

inst_36658:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3800fff; valaddr_reg:x12; val_offset:109911*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109911*FLEN/8, x13, x9, x10)

inst_36659:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3fff000; valaddr_reg:x12; val_offset:109914*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109914*FLEN/8, x13, x9, x10)

inst_36660:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf38007ff; valaddr_reg:x12; val_offset:109917*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109917*FLEN/8, x13, x9, x10)

inst_36661:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3fff800; valaddr_reg:x12; val_offset:109920*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109920*FLEN/8, x13, x9, x10)

inst_36662:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf38003ff; valaddr_reg:x12; val_offset:109923*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109923*FLEN/8, x13, x9, x10)

inst_36663:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3fffc00; valaddr_reg:x12; val_offset:109926*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109926*FLEN/8, x13, x9, x10)

inst_36664:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf38001ff; valaddr_reg:x12; val_offset:109929*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109929*FLEN/8, x13, x9, x10)

inst_36665:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3fffe00; valaddr_reg:x12; val_offset:109932*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109932*FLEN/8, x13, x9, x10)

inst_36666:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf38000ff; valaddr_reg:x12; val_offset:109935*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109935*FLEN/8, x13, x9, x10)

inst_36667:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3ffff00; valaddr_reg:x12; val_offset:109938*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109938*FLEN/8, x13, x9, x10)

inst_36668:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf380007f; valaddr_reg:x12; val_offset:109941*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109941*FLEN/8, x13, x9, x10)

inst_36669:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3ffff80; valaddr_reg:x12; val_offset:109944*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109944*FLEN/8, x13, x9, x10)

inst_36670:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf380003f; valaddr_reg:x12; val_offset:109947*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109947*FLEN/8, x13, x9, x10)

inst_36671:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3ffffc0; valaddr_reg:x12; val_offset:109950*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109950*FLEN/8, x13, x9, x10)

inst_36672:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf380001f; valaddr_reg:x12; val_offset:109953*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109953*FLEN/8, x13, x9, x10)

inst_36673:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3ffffe0; valaddr_reg:x12; val_offset:109956*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109956*FLEN/8, x13, x9, x10)

inst_36674:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf380000f; valaddr_reg:x12; val_offset:109959*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109959*FLEN/8, x13, x9, x10)

inst_36675:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3fffff0; valaddr_reg:x12; val_offset:109962*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109962*FLEN/8, x13, x9, x10)

inst_36676:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3800007; valaddr_reg:x12; val_offset:109965*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109965*FLEN/8, x13, x9, x10)

inst_36677:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3fffff8; valaddr_reg:x12; val_offset:109968*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109968*FLEN/8, x13, x9, x10)

inst_36678:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3800003; valaddr_reg:x12; val_offset:109971*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109971*FLEN/8, x13, x9, x10)

inst_36679:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3fffffc; valaddr_reg:x12; val_offset:109974*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109974*FLEN/8, x13, x9, x10)

inst_36680:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3800001; valaddr_reg:x12; val_offset:109977*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109977*FLEN/8, x13, x9, x10)

inst_36681:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xe7 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xf3fffffe; valaddr_reg:x12; val_offset:109980*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109980*FLEN/8, x13, x9, x10)

inst_36682:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff7ffff8; valaddr_reg:x12; val_offset:109983*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109983*FLEN/8, x13, x9, x10)

inst_36683:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff000007; valaddr_reg:x12; val_offset:109986*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109986*FLEN/8, x13, x9, x10)

inst_36684:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff7ffffc; valaddr_reg:x12; val_offset:109989*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109989*FLEN/8, x13, x9, x10)

inst_36685:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff000003; valaddr_reg:x12; val_offset:109992*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109992*FLEN/8, x13, x9, x10)

inst_36686:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff7ffffe; valaddr_reg:x12; val_offset:109995*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109995*FLEN/8, x13, x9, x10)

inst_36687:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff000001; valaddr_reg:x12; val_offset:109998*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 109998*FLEN/8, x13, x9, x10)

inst_36688:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff36db6d; valaddr_reg:x12; val_offset:110001*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110001*FLEN/8, x13, x9, x10)

inst_36689:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff6db6db; valaddr_reg:x12; val_offset:110004*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110004*FLEN/8, x13, x9, x10)

inst_36690:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff199999; valaddr_reg:x12; val_offset:110007*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110007*FLEN/8, x13, x9, x10)

inst_36691:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff666666; valaddr_reg:x12; val_offset:110010*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110010*FLEN/8, x13, x9, x10)

inst_36692:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff3bbbbb; valaddr_reg:x12; val_offset:110013*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110013*FLEN/8, x13, x9, x10)

inst_36693:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff444444; valaddr_reg:x12; val_offset:110016*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110016*FLEN/8, x13, x9, x10)

inst_36694:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff249249; valaddr_reg:x12; val_offset:110019*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110019*FLEN/8, x13, x9, x10)

inst_36695:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff5b6db6; valaddr_reg:x12; val_offset:110022*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110022*FLEN/8, x13, x9, x10)

inst_36696:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff333333; valaddr_reg:x12; val_offset:110025*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110025*FLEN/8, x13, x9, x10)

inst_36697:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x238a4c and fs2 == 1 and fe2 == 0x7f and fm2 == 0x485dd8 and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f238a4c; op2val:0xbfc85dd8;
op3val:0xff4ccccc; valaddr_reg:x12; val_offset:110028*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110028*FLEN/8, x13, x9, x10)

inst_36698:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47fffff; valaddr_reg:x12; val_offset:110031*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110031*FLEN/8, x13, x9, x10)

inst_36699:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf4000000; valaddr_reg:x12; val_offset:110034*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110034*FLEN/8, x13, x9, x10)

inst_36700:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf43fffff; valaddr_reg:x12; val_offset:110037*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110037*FLEN/8, x13, x9, x10)

inst_36701:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf4400000; valaddr_reg:x12; val_offset:110040*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110040*FLEN/8, x13, x9, x10)

inst_36702:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf41fffff; valaddr_reg:x12; val_offset:110043*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110043*FLEN/8, x13, x9, x10)

inst_36703:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf4600000; valaddr_reg:x12; val_offset:110046*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110046*FLEN/8, x13, x9, x10)

inst_36704:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf40fffff; valaddr_reg:x12; val_offset:110049*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110049*FLEN/8, x13, x9, x10)

inst_36705:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf4700000; valaddr_reg:x12; val_offset:110052*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110052*FLEN/8, x13, x9, x10)

inst_36706:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf407ffff; valaddr_reg:x12; val_offset:110055*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110055*FLEN/8, x13, x9, x10)

inst_36707:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf4780000; valaddr_reg:x12; val_offset:110058*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110058*FLEN/8, x13, x9, x10)

inst_36708:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf403ffff; valaddr_reg:x12; val_offset:110061*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110061*FLEN/8, x13, x9, x10)

inst_36709:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47c0000; valaddr_reg:x12; val_offset:110064*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110064*FLEN/8, x13, x9, x10)

inst_36710:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf401ffff; valaddr_reg:x12; val_offset:110067*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110067*FLEN/8, x13, x9, x10)

inst_36711:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47e0000; valaddr_reg:x12; val_offset:110070*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110070*FLEN/8, x13, x9, x10)

inst_36712:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf400ffff; valaddr_reg:x12; val_offset:110073*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110073*FLEN/8, x13, x9, x10)

inst_36713:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47f0000; valaddr_reg:x12; val_offset:110076*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110076*FLEN/8, x13, x9, x10)

inst_36714:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf4007fff; valaddr_reg:x12; val_offset:110079*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110079*FLEN/8, x13, x9, x10)

inst_36715:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47f8000; valaddr_reg:x12; val_offset:110082*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110082*FLEN/8, x13, x9, x10)

inst_36716:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf4003fff; valaddr_reg:x12; val_offset:110085*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110085*FLEN/8, x13, x9, x10)

inst_36717:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47fc000; valaddr_reg:x12; val_offset:110088*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110088*FLEN/8, x13, x9, x10)

inst_36718:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf4001fff; valaddr_reg:x12; val_offset:110091*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110091*FLEN/8, x13, x9, x10)

inst_36719:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47fe000; valaddr_reg:x12; val_offset:110094*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110094*FLEN/8, x13, x9, x10)

inst_36720:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf4000fff; valaddr_reg:x12; val_offset:110097*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110097*FLEN/8, x13, x9, x10)

inst_36721:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47ff000; valaddr_reg:x12; val_offset:110100*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110100*FLEN/8, x13, x9, x10)

inst_36722:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf40007ff; valaddr_reg:x12; val_offset:110103*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110103*FLEN/8, x13, x9, x10)

inst_36723:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47ff800; valaddr_reg:x12; val_offset:110106*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110106*FLEN/8, x13, x9, x10)

inst_36724:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf40003ff; valaddr_reg:x12; val_offset:110109*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110109*FLEN/8, x13, x9, x10)

inst_36725:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47ffc00; valaddr_reg:x12; val_offset:110112*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110112*FLEN/8, x13, x9, x10)

inst_36726:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf40001ff; valaddr_reg:x12; val_offset:110115*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110115*FLEN/8, x13, x9, x10)

inst_36727:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47ffe00; valaddr_reg:x12; val_offset:110118*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110118*FLEN/8, x13, x9, x10)

inst_36728:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf40000ff; valaddr_reg:x12; val_offset:110121*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110121*FLEN/8, x13, x9, x10)

inst_36729:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47fff00; valaddr_reg:x12; val_offset:110124*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110124*FLEN/8, x13, x9, x10)

inst_36730:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf400007f; valaddr_reg:x12; val_offset:110127*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110127*FLEN/8, x13, x9, x10)

inst_36731:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47fff80; valaddr_reg:x12; val_offset:110130*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110130*FLEN/8, x13, x9, x10)

inst_36732:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf400003f; valaddr_reg:x12; val_offset:110133*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110133*FLEN/8, x13, x9, x10)

inst_36733:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47fffc0; valaddr_reg:x12; val_offset:110136*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110136*FLEN/8, x13, x9, x10)

inst_36734:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf400001f; valaddr_reg:x12; val_offset:110139*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110139*FLEN/8, x13, x9, x10)

inst_36735:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47fffe0; valaddr_reg:x12; val_offset:110142*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110142*FLEN/8, x13, x9, x10)

inst_36736:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf400000f; valaddr_reg:x12; val_offset:110145*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110145*FLEN/8, x13, x9, x10)

inst_36737:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47ffff0; valaddr_reg:x12; val_offset:110148*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110148*FLEN/8, x13, x9, x10)

inst_36738:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf4000007; valaddr_reg:x12; val_offset:110151*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110151*FLEN/8, x13, x9, x10)

inst_36739:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47ffff8; valaddr_reg:x12; val_offset:110154*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110154*FLEN/8, x13, x9, x10)

inst_36740:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf4000003; valaddr_reg:x12; val_offset:110157*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110157*FLEN/8, x13, x9, x10)

inst_36741:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47ffffc; valaddr_reg:x12; val_offset:110160*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110160*FLEN/8, x13, x9, x10)

inst_36742:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf4000001; valaddr_reg:x12; val_offset:110163*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110163*FLEN/8, x13, x9, x10)

inst_36743:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xe8 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xf47ffffe; valaddr_reg:x12; val_offset:110166*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110166*FLEN/8, x13, x9, x10)

inst_36744:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff7ffff8; valaddr_reg:x12; val_offset:110169*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110169*FLEN/8, x13, x9, x10)

inst_36745:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff000007; valaddr_reg:x12; val_offset:110172*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110172*FLEN/8, x13, x9, x10)

inst_36746:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff7ffffc; valaddr_reg:x12; val_offset:110175*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110175*FLEN/8, x13, x9, x10)

inst_36747:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff000003; valaddr_reg:x12; val_offset:110178*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110178*FLEN/8, x13, x9, x10)

inst_36748:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff7ffffe; valaddr_reg:x12; val_offset:110181*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110181*FLEN/8, x13, x9, x10)

inst_36749:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff000001; valaddr_reg:x12; val_offset:110184*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110184*FLEN/8, x13, x9, x10)

inst_36750:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff36db6d; valaddr_reg:x12; val_offset:110187*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110187*FLEN/8, x13, x9, x10)

inst_36751:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff6db6db; valaddr_reg:x12; val_offset:110190*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110190*FLEN/8, x13, x9, x10)

inst_36752:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff199999; valaddr_reg:x12; val_offset:110193*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110193*FLEN/8, x13, x9, x10)

inst_36753:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff666666; valaddr_reg:x12; val_offset:110196*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110196*FLEN/8, x13, x9, x10)

inst_36754:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff3bbbbb; valaddr_reg:x12; val_offset:110199*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110199*FLEN/8, x13, x9, x10)

inst_36755:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff444444; valaddr_reg:x12; val_offset:110202*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110202*FLEN/8, x13, x9, x10)

inst_36756:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff249249; valaddr_reg:x12; val_offset:110205*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110205*FLEN/8, x13, x9, x10)

inst_36757:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff5b6db6; valaddr_reg:x12; val_offset:110208*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110208*FLEN/8, x13, x9, x10)

inst_36758:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff333333; valaddr_reg:x12; val_offset:110211*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110211*FLEN/8, x13, x9, x10)

inst_36759:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x26bd22 and fs2 == 1 and fe2 == 0x7f and fm2 == 0x4485de and fs3 == 1 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f26bd22; op2val:0xbfc485de;
op3val:0xff4ccccc; valaddr_reg:x12; val_offset:110214*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110214*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_287)
inst_36760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf4ffffff; valaddr_reg:x12; val_offset:110217*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110217*FLEN/8, x13, x9, x10)

inst_36761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf4800000; valaddr_reg:x12; val_offset:110220*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110220*FLEN/8, x13, x9, x10)

inst_36762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf4bfffff; valaddr_reg:x12; val_offset:110223*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110223*FLEN/8, x13, x9, x10)

inst_36763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf4c00000; valaddr_reg:x12; val_offset:110226*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110226*FLEN/8, x13, x9, x10)

inst_36764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf49fffff; valaddr_reg:x12; val_offset:110229*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110229*FLEN/8, x13, x9, x10)

inst_36765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf4e00000; valaddr_reg:x12; val_offset:110232*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110232*FLEN/8, x13, x9, x10)

inst_36766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf48fffff; valaddr_reg:x12; val_offset:110235*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110235*FLEN/8, x13, x9, x10)

inst_36767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf4f00000; valaddr_reg:x12; val_offset:110238*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110238*FLEN/8, x13, x9, x10)

inst_36768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf487ffff; valaddr_reg:x12; val_offset:110241*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110241*FLEN/8, x13, x9, x10)

inst_36769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf4f80000; valaddr_reg:x12; val_offset:110244*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110244*FLEN/8, x13, x9, x10)

inst_36770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf483ffff; valaddr_reg:x12; val_offset:110247*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110247*FLEN/8, x13, x9, x10)

inst_36771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf4fc0000; valaddr_reg:x12; val_offset:110250*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110250*FLEN/8, x13, x9, x10)

inst_36772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf481ffff; valaddr_reg:x12; val_offset:110253*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110253*FLEN/8, x13, x9, x10)

inst_36773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf4fe0000; valaddr_reg:x12; val_offset:110256*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110256*FLEN/8, x13, x9, x10)

inst_36774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x1a9908 and fs2 == 1 and fe2 == 0x80 and fm2 == 0x53f4d9 and fs3 == 1 and fe3 == 0xe9 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e9a9908; op2val:0xc053f4d9;
op3val:0xf480ffff; valaddr_reg:x12; val_offset:110259*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 110259*FLEN/8, x13, x9, x10)

#endif
RVTEST_CODE_END
RVMODEL_HALT
RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4013948927,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4013948928,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4011851775,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4016046080,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4010803199,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4017094656,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4010278911,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4017618944,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4010016767,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4017881088,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009885695,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018012160,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009820159,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018077696,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009787391,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018110464,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009771007,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018126848,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009762815,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018135040,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009758719,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018139136,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009756671,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018141184,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009755647,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018142208,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009755135,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018142720,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009754879,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018142976,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009754751,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018143104,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009754687,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018143168,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009754655,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018143200,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009754639,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018143216,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009754631,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018143224,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009754627,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018143228,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4009754625,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4018143230,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2123988389,32,FLEN)
NAN_BOXED(3226827823,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026531839,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018143232,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4022337535,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4022337536,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4020240383,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4024434688,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4019191807,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4025483264,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018667519,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026007552,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018405375,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026269696,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018274303,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026400768,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018208767,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026466304,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018175999,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026499072,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018159615,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026515456,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018151423,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026523648,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018147327,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026527744,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018145279,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026529792,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018144255,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026530816,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018143743,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026531328,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018143487,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026531584,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018143359,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026531712,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018143295,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026531776,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018143263,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026531808,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018143247,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026531824,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018143239,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026531832,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018143235,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026531836,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4018143233,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4026531838,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2126100012,32,FLEN)
NAN_BOXED(3224400403,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034920447,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026531840,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4030726143,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4030726144,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4028628991,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4032823296,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4027580415,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4033871872,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4027056127,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034396160,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026793983,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034658304,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026662911,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034789376,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026597375,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034854912,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026564607,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034887680,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026548223,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034904064,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026540031,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034912256,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026535935,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034916352,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026533887,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034918400,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026532863,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034919424,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026532351,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034919936,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026532095,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034920192,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026531967,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034920320,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026531903,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034920384,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026531871,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034920416,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026531855,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034920432,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026531847,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034920440,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026531843,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034920444,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4026531841,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4034920446,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2118602769,32,FLEN)
NAN_BOXED(3231999912,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043309055,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034920448,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4039114751,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4039114752,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4037017599,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4041211904,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4035969023,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4042260480,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4035444735,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4042784768,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4035182591,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043046912,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4035051519,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043177984,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034985983,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043243520,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034953215,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043276288,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034936831,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043292672,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034928639,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043300864,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034924543,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043304960,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034922495,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043307008,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034921471,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043308032,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034920959,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043308544,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034920703,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043308800,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034920575,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043308928,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034920511,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043308992,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034920479,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043309024,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034920463,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043309040,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034920455,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043309048,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034920451,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043309052,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4034920449,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4043309054,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2129290474,32,FLEN)
NAN_BOXED(3221998709,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051697663,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043309056,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4047503359,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4047503360,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4045406207,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4049600512,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4044357631,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4050649088,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043833343,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051173376,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043571199,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051435520,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043440127,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051566592,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043374591,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051632128,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043341823,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051664896,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043325439,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051681280,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043317247,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051689472,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043313151,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051693568,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043311103,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051695616,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043310079,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051696640,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043309567,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051697152,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043309311,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051697408,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043309183,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051697536,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043309119,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051697600,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043309087,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051697632,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043309071,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051697648,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043309063,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051697656,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043309059,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051697660,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4043309057,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4051697662,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2131327846,32,FLEN)
NAN_BOXED(3220068358,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060086271,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051697664,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4055891967,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4055891968,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4053794815,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4057989120,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4052746239,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4059037696,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4052221951,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4059561984,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051959807,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4059824128,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051828735,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4059955200,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051763199,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060020736,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051730431,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060053504,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051714047,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060069888,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051705855,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060078080,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051701759,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060082176,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051699711,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060084224,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051698687,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060085248,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051698175,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060085760,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051697919,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060086016,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051697791,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060086144,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051697727,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060086208,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051697695,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060086240,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051697679,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060086256,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051697671,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060086264,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051697667,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060086268,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4051697665,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4060086270,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2118564804,32,FLEN)
NAN_BOXED(3232031319,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068474879,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060086272,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4064280575,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4064280576,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4062183423,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4066377728,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4061134847,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4067426304,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060610559,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4067950592,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060348415,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068212736,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060217343,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068343808,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060151807,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068409344,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060119039,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068442112,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060102655,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068458496,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060094463,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068466688,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060090367,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068470784,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060088319,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068472832,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060087295,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068473856,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060086783,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068474368,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060086527,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068474624,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060086399,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068474752,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060086335,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068474816,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060086303,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068474848,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060086287,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068474864,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060086279,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068474872,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060086275,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068474876,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4060086273,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4068474878,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2129279115,32,FLEN)
NAN_BOXED(3222005489,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076863487,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068474880,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4072669183,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4072669184,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4070572031,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4074766336,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4069523455,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4075814912,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068999167,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076339200,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068737023,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076601344,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068605951,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076732416,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068540415,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076797952,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068507647,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076830720,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068491263,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076847104,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068483071,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076855296,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068478975,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076859392,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068476927,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076861440,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068475903,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076862464,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068475391,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076862976,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068475135,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076863232,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068475007,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076863360,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068474943,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076863424,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068474911,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076863456,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068474895,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076863472,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068474887,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076863480,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068474883,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076863484,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4068474881,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4076863486,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2117832977,32,FLEN)
NAN_BOXED(3232674646,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085252095,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076863488,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4081057791,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4081057792,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4078960639,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4083154944,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4077912063,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4084203520,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4077387775,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4084727808,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4077125631,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4084989952,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076994559,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085121024,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076929023,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085186560,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076896255,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085219328,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076879871,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085235712,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076871679,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085243904,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076867583,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085248000,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076865535,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085250048,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076864511,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085251072,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076863999,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085251584,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076863743,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085251840,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076863615,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085251968,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076863551,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085252032,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076863519,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085252064,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076863503,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085252080,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076863495,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085252088,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076863491,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085252092,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4076863489,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4085252094,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2130559803,32,FLEN)
NAN_BOXED(3221299432,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093640703,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085252096,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4089446399,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4089446400,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4087349247,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4091543552,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4086300671,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4092592128,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085776383,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093116416,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085514239,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093378560,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085383167,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093509632,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085317631,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093575168,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085284863,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093607936,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085268479,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093624320,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085260287,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093632512,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085256191,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093636608,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085254143,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093638656,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085253119,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093639680,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085252607,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093640192,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085252351,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093640448,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085252223,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093640576,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085252159,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093640640,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085252127,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093640672,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085252111,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093640688,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085252103,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093640696,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085252099,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093640700,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4085252097,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4093640702,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2133035596,32,FLEN)
NAN_BOXED(3217579480,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102029311,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093640704,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4097835007,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4097835008,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4095737855,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4099932160,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4094689279,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4100980736,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4094164991,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4101505024,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093902847,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4101767168,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093771775,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4101898240,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093706239,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4101963776,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093673471,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4101996544,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093657087,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102012928,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093648895,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102021120,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093644799,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102025216,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093642751,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102027264,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093641727,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102028288,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093641215,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102028800,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093640959,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102029056,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093640831,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102029184,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093640767,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102029248,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093640735,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102029280,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093640719,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102029296,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093640711,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102029304,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093640707,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102029308,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4093640705,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4102029310,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2133245218,32,FLEN)
NAN_BOXED(3217327582,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110417919,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102029312,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4106223615,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4106223616,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4104126463,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4108320768,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4103077887,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4109369344,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102553599,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4109893632,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102291455,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110155776,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102160383,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110286848,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102094847,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110352384,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102062079,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110385152,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102045695,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110401536,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102037503,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110409728,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102033407,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110413824,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102031359,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110415872,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102030335,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110416896,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102029823,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110417408,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102029567,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110417664,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102029439,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110417792,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102029375,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110417856,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102029343,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110417888,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102029327,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110417904,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102029319,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110417912,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102029315,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110417916,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4102029313,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4110417918,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4286578680,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4278190087,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4286578684,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4278190083,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4286578686,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4278190081,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4281785197,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4285380315,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4279867801,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4284900966,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4282104763,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4282664004,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4280586825,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4284181942,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4281545523,32,FLEN)
NAN_BOXED(2124060936,32,FLEN)
NAN_BOXED(3226727641,32,FLEN)
NAN_BOXED(4283223244,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4118806527,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4110417920,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4114612223,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4114612224,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4112515071,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4116709376,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4111466495,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4117757952,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4110942207,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4118282240,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4110680063,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4118544384,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4110548991,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4118675456,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4110483455,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4118740992,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4110450687,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4118773760,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4110434303,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4118790144,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4110426111,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4118798336,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4110422015,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4118802432,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4110419967,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
NAN_BOXED(3216500884,32,FLEN)
NAN_BOXED(4118804480,32,FLEN)
NAN_BOXED(2133994736,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_12:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_13:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_14:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_15:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_16:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_17:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_18:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_19:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_20:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_21:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_22:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_23:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_24:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_25:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_26:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_27:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_28:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_29:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_30:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_31:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_32:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_33:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_34:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_35:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_36:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_37:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_38:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_39:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_40:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_41:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_42:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_43:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_44:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_45:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_46:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_47:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_48:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_49:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_50:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_51:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_52:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_53:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_54:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_55:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_56:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_57:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_58:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_59:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_60:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_61:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_62:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_63:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_64:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_65:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_66:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_67:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_68:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_69:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_70:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_71:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_72:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_73:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_74:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_75:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_76:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_77:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_78:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_79:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_80:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_81:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_82:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_83:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_84:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_85:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_86:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_87:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_88:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_89:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_90:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_91:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_92:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_93:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_94:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_95:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_96:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_97:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_98:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_99:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_100:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_101:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_102:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_103:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_104:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_105:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_106:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_107:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_108:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_109:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_110:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_111:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_112:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_113:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_114:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_115:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_116:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_117:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_118:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_119:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_120:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_121:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_122:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_123:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_124:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_125:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_126:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_127:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_128:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_129:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_130:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_131:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_132:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_133:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_134:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_135:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_136:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_137:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_138:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_139:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_140:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_141:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_142:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_143:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_144:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_145:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_146:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_147:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_148:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_149:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_150:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_151:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_152:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_153:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_154:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_155:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_156:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_157:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_158:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_159:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_160:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_161:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_162:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_163:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_164:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_165:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_166:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_167:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_168:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_169:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_170:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_171:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_172:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_173:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_174:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_175:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_176:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_177:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_178:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_179:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_180:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_181:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_182:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_183:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_184:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_185:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_186:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_187:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_188:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_189:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_190:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_191:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_192:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_193:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_194:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_195:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_196:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_197:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_198:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_199:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_200:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_201:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_202:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_203:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_204:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_205:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_206:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_207:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_208:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_209:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_210:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_211:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_212:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_213:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_214:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_215:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_216:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_217:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_218:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_219:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_220:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_221:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_222:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_223:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_224:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_225:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_226:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_227:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_228:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_229:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_230:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_231:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_232:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_233:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_234:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_235:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_236:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_237:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_238:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_239:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_240:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_241:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_242:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_243:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_244:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_245:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_246:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_247:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_248:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_249:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_250:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_251:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_252:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_253:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_254:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_255:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_256:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_257:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_258:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_259:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_260:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_261:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_262:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_263:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_264:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_265:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_266:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_267:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_268:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_269:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_270:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_271:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_272:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_273:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_274:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_275:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_276:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_277:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_278:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_279:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_280:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_281:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_282:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_283:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_284:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_285:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_286:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_287:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_288:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_289:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_290:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_291:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_292:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_293:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_294:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_295:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_296:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_297:
    .fill 180*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
