
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 07:30:48 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fnmadd.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmadd.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fnmadd_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fnmadd_b15)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_30680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x65700000; valaddr_reg:x12; val_offset:91977*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 91977*FLEN/8, x13, x9, x10)

inst_30681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x6507ffff; valaddr_reg:x12; val_offset:91980*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 91980*FLEN/8, x13, x9, x10)

inst_30682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x65780000; valaddr_reg:x12; val_offset:91983*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 91983*FLEN/8, x13, x9, x10)

inst_30683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x6503ffff; valaddr_reg:x12; val_offset:91986*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 91986*FLEN/8, x13, x9, x10)

inst_30684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657c0000; valaddr_reg:x12; val_offset:91989*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 91989*FLEN/8, x13, x9, x10)

inst_30685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x6501ffff; valaddr_reg:x12; val_offset:91992*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 91992*FLEN/8, x13, x9, x10)

inst_30686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657e0000; valaddr_reg:x12; val_offset:91995*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 91995*FLEN/8, x13, x9, x10)

inst_30687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x6500ffff; valaddr_reg:x12; val_offset:91998*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 91998*FLEN/8, x13, x9, x10)

inst_30688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657f0000; valaddr_reg:x12; val_offset:92001*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92001*FLEN/8, x13, x9, x10)

inst_30689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x65007fff; valaddr_reg:x12; val_offset:92004*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92004*FLEN/8, x13, x9, x10)

inst_30690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657f8000; valaddr_reg:x12; val_offset:92007*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92007*FLEN/8, x13, x9, x10)

inst_30691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x65003fff; valaddr_reg:x12; val_offset:92010*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92010*FLEN/8, x13, x9, x10)

inst_30692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657fc000; valaddr_reg:x12; val_offset:92013*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92013*FLEN/8, x13, x9, x10)

inst_30693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x65001fff; valaddr_reg:x12; val_offset:92016*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92016*FLEN/8, x13, x9, x10)

inst_30694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657fe000; valaddr_reg:x12; val_offset:92019*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92019*FLEN/8, x13, x9, x10)

inst_30695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x65000fff; valaddr_reg:x12; val_offset:92022*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92022*FLEN/8, x13, x9, x10)

inst_30696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657ff000; valaddr_reg:x12; val_offset:92025*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92025*FLEN/8, x13, x9, x10)

inst_30697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x650007ff; valaddr_reg:x12; val_offset:92028*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92028*FLEN/8, x13, x9, x10)

inst_30698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657ff800; valaddr_reg:x12; val_offset:92031*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92031*FLEN/8, x13, x9, x10)

inst_30699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x650003ff; valaddr_reg:x12; val_offset:92034*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92034*FLEN/8, x13, x9, x10)

inst_30700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657ffc00; valaddr_reg:x12; val_offset:92037*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92037*FLEN/8, x13, x9, x10)

inst_30701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x650001ff; valaddr_reg:x12; val_offset:92040*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92040*FLEN/8, x13, x9, x10)

inst_30702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657ffe00; valaddr_reg:x12; val_offset:92043*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92043*FLEN/8, x13, x9, x10)

inst_30703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x650000ff; valaddr_reg:x12; val_offset:92046*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92046*FLEN/8, x13, x9, x10)

inst_30704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657fff00; valaddr_reg:x12; val_offset:92049*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92049*FLEN/8, x13, x9, x10)

inst_30705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x6500007f; valaddr_reg:x12; val_offset:92052*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92052*FLEN/8, x13, x9, x10)

inst_30706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657fff80; valaddr_reg:x12; val_offset:92055*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92055*FLEN/8, x13, x9, x10)

inst_30707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x6500003f; valaddr_reg:x12; val_offset:92058*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92058*FLEN/8, x13, x9, x10)

inst_30708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657fffc0; valaddr_reg:x12; val_offset:92061*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92061*FLEN/8, x13, x9, x10)

inst_30709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x6500001f; valaddr_reg:x12; val_offset:92064*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92064*FLEN/8, x13, x9, x10)

inst_30710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657fffe0; valaddr_reg:x12; val_offset:92067*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92067*FLEN/8, x13, x9, x10)

inst_30711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x6500000f; valaddr_reg:x12; val_offset:92070*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92070*FLEN/8, x13, x9, x10)

inst_30712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657ffff0; valaddr_reg:x12; val_offset:92073*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92073*FLEN/8, x13, x9, x10)

inst_30713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x65000007; valaddr_reg:x12; val_offset:92076*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92076*FLEN/8, x13, x9, x10)

inst_30714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657ffff8; valaddr_reg:x12; val_offset:92079*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92079*FLEN/8, x13, x9, x10)

inst_30715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x65000003; valaddr_reg:x12; val_offset:92082*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92082*FLEN/8, x13, x9, x10)

inst_30716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657ffffc; valaddr_reg:x12; val_offset:92085*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92085*FLEN/8, x13, x9, x10)

inst_30717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x65000001; valaddr_reg:x12; val_offset:92088*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92088*FLEN/8, x13, x9, x10)

inst_30718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xca and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x657ffffe; valaddr_reg:x12; val_offset:92091*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92091*FLEN/8, x13, x9, x10)

inst_30719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f7ffff8; valaddr_reg:x12; val_offset:92094*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92094*FLEN/8, x13, x9, x10)

inst_30720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f000007; valaddr_reg:x12; val_offset:92097*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92097*FLEN/8, x13, x9, x10)

inst_30721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f7ffffc; valaddr_reg:x12; val_offset:92100*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92100*FLEN/8, x13, x9, x10)

inst_30722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f000003; valaddr_reg:x12; val_offset:92103*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92103*FLEN/8, x13, x9, x10)

inst_30723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f7ffffe; valaddr_reg:x12; val_offset:92106*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92106*FLEN/8, x13, x9, x10)

inst_30724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f000001; valaddr_reg:x12; val_offset:92109*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92109*FLEN/8, x13, x9, x10)

inst_30725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f36db6d; valaddr_reg:x12; val_offset:92112*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92112*FLEN/8, x13, x9, x10)

inst_30726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f6db6db; valaddr_reg:x12; val_offset:92115*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92115*FLEN/8, x13, x9, x10)

inst_30727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f199999; valaddr_reg:x12; val_offset:92118*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92118*FLEN/8, x13, x9, x10)

inst_30728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f666666; valaddr_reg:x12; val_offset:92121*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92121*FLEN/8, x13, x9, x10)

inst_30729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f3bbbbb; valaddr_reg:x12; val_offset:92124*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92124*FLEN/8, x13, x9, x10)

inst_30730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f444444; valaddr_reg:x12; val_offset:92127*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92127*FLEN/8, x13, x9, x10)

inst_30731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f249249; valaddr_reg:x12; val_offset:92130*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92130*FLEN/8, x13, x9, x10)

inst_30732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f5b6db6; valaddr_reg:x12; val_offset:92133*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92133*FLEN/8, x13, x9, x10)

inst_30733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f333333; valaddr_reg:x12; val_offset:92136*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92136*FLEN/8, x13, x9, x10)

inst_30734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x2ca0c5 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x3dd18b and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eaca0c5; op2val:0x403dd18b;
op3val:0x7f4ccccc; valaddr_reg:x12; val_offset:92139*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92139*FLEN/8, x13, x9, x10)

inst_30735:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65ffffff; valaddr_reg:x12; val_offset:92142*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92142*FLEN/8, x13, x9, x10)

inst_30736:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65800000; valaddr_reg:x12; val_offset:92145*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92145*FLEN/8, x13, x9, x10)

inst_30737:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65bfffff; valaddr_reg:x12; val_offset:92148*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92148*FLEN/8, x13, x9, x10)

inst_30738:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65c00000; valaddr_reg:x12; val_offset:92151*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92151*FLEN/8, x13, x9, x10)

inst_30739:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x659fffff; valaddr_reg:x12; val_offset:92154*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92154*FLEN/8, x13, x9, x10)

inst_30740:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65e00000; valaddr_reg:x12; val_offset:92157*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92157*FLEN/8, x13, x9, x10)

inst_30741:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x658fffff; valaddr_reg:x12; val_offset:92160*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92160*FLEN/8, x13, x9, x10)

inst_30742:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65f00000; valaddr_reg:x12; val_offset:92163*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92163*FLEN/8, x13, x9, x10)

inst_30743:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x6587ffff; valaddr_reg:x12; val_offset:92166*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92166*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_240)
inst_30744:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65f80000; valaddr_reg:x12; val_offset:92169*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92169*FLEN/8, x13, x9, x10)

inst_30745:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x6583ffff; valaddr_reg:x12; val_offset:92172*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92172*FLEN/8, x13, x9, x10)

inst_30746:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65fc0000; valaddr_reg:x12; val_offset:92175*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92175*FLEN/8, x13, x9, x10)

inst_30747:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x6581ffff; valaddr_reg:x12; val_offset:92178*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92178*FLEN/8, x13, x9, x10)

inst_30748:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65fe0000; valaddr_reg:x12; val_offset:92181*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92181*FLEN/8, x13, x9, x10)

inst_30749:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x6580ffff; valaddr_reg:x12; val_offset:92184*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92184*FLEN/8, x13, x9, x10)

inst_30750:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65ff0000; valaddr_reg:x12; val_offset:92187*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92187*FLEN/8, x13, x9, x10)

inst_30751:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65807fff; valaddr_reg:x12; val_offset:92190*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92190*FLEN/8, x13, x9, x10)

inst_30752:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65ff8000; valaddr_reg:x12; val_offset:92193*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92193*FLEN/8, x13, x9, x10)

inst_30753:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65803fff; valaddr_reg:x12; val_offset:92196*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92196*FLEN/8, x13, x9, x10)

inst_30754:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65ffc000; valaddr_reg:x12; val_offset:92199*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92199*FLEN/8, x13, x9, x10)

inst_30755:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65801fff; valaddr_reg:x12; val_offset:92202*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92202*FLEN/8, x13, x9, x10)

inst_30756:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65ffe000; valaddr_reg:x12; val_offset:92205*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92205*FLEN/8, x13, x9, x10)

inst_30757:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65800fff; valaddr_reg:x12; val_offset:92208*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92208*FLEN/8, x13, x9, x10)

inst_30758:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65fff000; valaddr_reg:x12; val_offset:92211*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92211*FLEN/8, x13, x9, x10)

inst_30759:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x658007ff; valaddr_reg:x12; val_offset:92214*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92214*FLEN/8, x13, x9, x10)

inst_30760:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65fff800; valaddr_reg:x12; val_offset:92217*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92217*FLEN/8, x13, x9, x10)

inst_30761:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x658003ff; valaddr_reg:x12; val_offset:92220*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92220*FLEN/8, x13, x9, x10)

inst_30762:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65fffc00; valaddr_reg:x12; val_offset:92223*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92223*FLEN/8, x13, x9, x10)

inst_30763:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x658001ff; valaddr_reg:x12; val_offset:92226*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92226*FLEN/8, x13, x9, x10)

inst_30764:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65fffe00; valaddr_reg:x12; val_offset:92229*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92229*FLEN/8, x13, x9, x10)

inst_30765:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x658000ff; valaddr_reg:x12; val_offset:92232*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92232*FLEN/8, x13, x9, x10)

inst_30766:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65ffff00; valaddr_reg:x12; val_offset:92235*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92235*FLEN/8, x13, x9, x10)

inst_30767:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x6580007f; valaddr_reg:x12; val_offset:92238*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92238*FLEN/8, x13, x9, x10)

inst_30768:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65ffff80; valaddr_reg:x12; val_offset:92241*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92241*FLEN/8, x13, x9, x10)

inst_30769:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x6580003f; valaddr_reg:x12; val_offset:92244*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92244*FLEN/8, x13, x9, x10)

inst_30770:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65ffffc0; valaddr_reg:x12; val_offset:92247*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92247*FLEN/8, x13, x9, x10)

inst_30771:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x6580001f; valaddr_reg:x12; val_offset:92250*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92250*FLEN/8, x13, x9, x10)

inst_30772:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65ffffe0; valaddr_reg:x12; val_offset:92253*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92253*FLEN/8, x13, x9, x10)

inst_30773:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x6580000f; valaddr_reg:x12; val_offset:92256*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92256*FLEN/8, x13, x9, x10)

inst_30774:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65fffff0; valaddr_reg:x12; val_offset:92259*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92259*FLEN/8, x13, x9, x10)

inst_30775:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65800007; valaddr_reg:x12; val_offset:92262*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92262*FLEN/8, x13, x9, x10)

inst_30776:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65fffff8; valaddr_reg:x12; val_offset:92265*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92265*FLEN/8, x13, x9, x10)

inst_30777:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65800003; valaddr_reg:x12; val_offset:92268*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92268*FLEN/8, x13, x9, x10)

inst_30778:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65fffffc; valaddr_reg:x12; val_offset:92271*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92271*FLEN/8, x13, x9, x10)

inst_30779:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65800001; valaddr_reg:x12; val_offset:92274*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92274*FLEN/8, x13, x9, x10)

inst_30780:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xcb and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x65fffffe; valaddr_reg:x12; val_offset:92277*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92277*FLEN/8, x13, x9, x10)

inst_30781:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f7ffff8; valaddr_reg:x12; val_offset:92280*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92280*FLEN/8, x13, x9, x10)

inst_30782:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f000007; valaddr_reg:x12; val_offset:92283*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92283*FLEN/8, x13, x9, x10)

inst_30783:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f7ffffc; valaddr_reg:x12; val_offset:92286*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92286*FLEN/8, x13, x9, x10)

inst_30784:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f000003; valaddr_reg:x12; val_offset:92289*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92289*FLEN/8, x13, x9, x10)

inst_30785:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f7ffffe; valaddr_reg:x12; val_offset:92292*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92292*FLEN/8, x13, x9, x10)

inst_30786:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f000001; valaddr_reg:x12; val_offset:92295*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92295*FLEN/8, x13, x9, x10)

inst_30787:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f36db6d; valaddr_reg:x12; val_offset:92298*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92298*FLEN/8, x13, x9, x10)

inst_30788:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f6db6db; valaddr_reg:x12; val_offset:92301*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92301*FLEN/8, x13, x9, x10)

inst_30789:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f199999; valaddr_reg:x12; val_offset:92304*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92304*FLEN/8, x13, x9, x10)

inst_30790:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f666666; valaddr_reg:x12; val_offset:92307*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92307*FLEN/8, x13, x9, x10)

inst_30791:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f3bbbbb; valaddr_reg:x12; val_offset:92310*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92310*FLEN/8, x13, x9, x10)

inst_30792:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f444444; valaddr_reg:x12; val_offset:92313*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92313*FLEN/8, x13, x9, x10)

inst_30793:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f249249; valaddr_reg:x12; val_offset:92316*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92316*FLEN/8, x13, x9, x10)

inst_30794:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f5b6db6; valaddr_reg:x12; val_offset:92319*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92319*FLEN/8, x13, x9, x10)

inst_30795:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f333333; valaddr_reg:x12; val_offset:92322*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92322*FLEN/8, x13, x9, x10)

inst_30796:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x6a15f4 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x0bfb9d and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e6a15f4; op2val:0x408bfb9d;
op3val:0x7f4ccccc; valaddr_reg:x12; val_offset:92325*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92325*FLEN/8, x13, x9, x10)

inst_30797:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667fffff; valaddr_reg:x12; val_offset:92328*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92328*FLEN/8, x13, x9, x10)

inst_30798:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x66000000; valaddr_reg:x12; val_offset:92331*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92331*FLEN/8, x13, x9, x10)

inst_30799:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x663fffff; valaddr_reg:x12; val_offset:92334*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92334*FLEN/8, x13, x9, x10)

inst_30800:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x66400000; valaddr_reg:x12; val_offset:92337*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92337*FLEN/8, x13, x9, x10)

inst_30801:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x661fffff; valaddr_reg:x12; val_offset:92340*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92340*FLEN/8, x13, x9, x10)

inst_30802:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x66600000; valaddr_reg:x12; val_offset:92343*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92343*FLEN/8, x13, x9, x10)

inst_30803:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x660fffff; valaddr_reg:x12; val_offset:92346*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92346*FLEN/8, x13, x9, x10)

inst_30804:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x66700000; valaddr_reg:x12; val_offset:92349*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92349*FLEN/8, x13, x9, x10)

inst_30805:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x6607ffff; valaddr_reg:x12; val_offset:92352*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92352*FLEN/8, x13, x9, x10)

inst_30806:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x66780000; valaddr_reg:x12; val_offset:92355*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92355*FLEN/8, x13, x9, x10)

inst_30807:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x6603ffff; valaddr_reg:x12; val_offset:92358*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92358*FLEN/8, x13, x9, x10)

inst_30808:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667c0000; valaddr_reg:x12; val_offset:92361*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92361*FLEN/8, x13, x9, x10)

inst_30809:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x6601ffff; valaddr_reg:x12; val_offset:92364*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92364*FLEN/8, x13, x9, x10)

inst_30810:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667e0000; valaddr_reg:x12; val_offset:92367*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92367*FLEN/8, x13, x9, x10)

inst_30811:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x6600ffff; valaddr_reg:x12; val_offset:92370*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92370*FLEN/8, x13, x9, x10)

inst_30812:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667f0000; valaddr_reg:x12; val_offset:92373*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92373*FLEN/8, x13, x9, x10)

inst_30813:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x66007fff; valaddr_reg:x12; val_offset:92376*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92376*FLEN/8, x13, x9, x10)

inst_30814:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667f8000; valaddr_reg:x12; val_offset:92379*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92379*FLEN/8, x13, x9, x10)

inst_30815:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x66003fff; valaddr_reg:x12; val_offset:92382*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92382*FLEN/8, x13, x9, x10)

inst_30816:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667fc000; valaddr_reg:x12; val_offset:92385*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92385*FLEN/8, x13, x9, x10)

inst_30817:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x66001fff; valaddr_reg:x12; val_offset:92388*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92388*FLEN/8, x13, x9, x10)

inst_30818:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667fe000; valaddr_reg:x12; val_offset:92391*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92391*FLEN/8, x13, x9, x10)

inst_30819:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x66000fff; valaddr_reg:x12; val_offset:92394*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92394*FLEN/8, x13, x9, x10)

inst_30820:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667ff000; valaddr_reg:x12; val_offset:92397*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92397*FLEN/8, x13, x9, x10)

inst_30821:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x660007ff; valaddr_reg:x12; val_offset:92400*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92400*FLEN/8, x13, x9, x10)

inst_30822:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667ff800; valaddr_reg:x12; val_offset:92403*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92403*FLEN/8, x13, x9, x10)

inst_30823:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x660003ff; valaddr_reg:x12; val_offset:92406*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92406*FLEN/8, x13, x9, x10)

inst_30824:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667ffc00; valaddr_reg:x12; val_offset:92409*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92409*FLEN/8, x13, x9, x10)

inst_30825:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x660001ff; valaddr_reg:x12; val_offset:92412*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92412*FLEN/8, x13, x9, x10)

inst_30826:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667ffe00; valaddr_reg:x12; val_offset:92415*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92415*FLEN/8, x13, x9, x10)

inst_30827:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x660000ff; valaddr_reg:x12; val_offset:92418*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92418*FLEN/8, x13, x9, x10)

inst_30828:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667fff00; valaddr_reg:x12; val_offset:92421*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92421*FLEN/8, x13, x9, x10)

inst_30829:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x6600007f; valaddr_reg:x12; val_offset:92424*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92424*FLEN/8, x13, x9, x10)

inst_30830:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667fff80; valaddr_reg:x12; val_offset:92427*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92427*FLEN/8, x13, x9, x10)

inst_30831:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x6600003f; valaddr_reg:x12; val_offset:92430*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92430*FLEN/8, x13, x9, x10)

inst_30832:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667fffc0; valaddr_reg:x12; val_offset:92433*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92433*FLEN/8, x13, x9, x10)

inst_30833:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x6600001f; valaddr_reg:x12; val_offset:92436*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92436*FLEN/8, x13, x9, x10)

inst_30834:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667fffe0; valaddr_reg:x12; val_offset:92439*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92439*FLEN/8, x13, x9, x10)

inst_30835:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x6600000f; valaddr_reg:x12; val_offset:92442*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92442*FLEN/8, x13, x9, x10)

inst_30836:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667ffff0; valaddr_reg:x12; val_offset:92445*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92445*FLEN/8, x13, x9, x10)

inst_30837:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x66000007; valaddr_reg:x12; val_offset:92448*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92448*FLEN/8, x13, x9, x10)

inst_30838:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667ffff8; valaddr_reg:x12; val_offset:92451*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92451*FLEN/8, x13, x9, x10)

inst_30839:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x66000003; valaddr_reg:x12; val_offset:92454*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92454*FLEN/8, x13, x9, x10)

inst_30840:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667ffffc; valaddr_reg:x12; val_offset:92457*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92457*FLEN/8, x13, x9, x10)

inst_30841:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x66000001; valaddr_reg:x12; val_offset:92460*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92460*FLEN/8, x13, x9, x10)

inst_30842:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xcc and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x667ffffe; valaddr_reg:x12; val_offset:92463*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92463*FLEN/8, x13, x9, x10)

inst_30843:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f7ffff8; valaddr_reg:x12; val_offset:92466*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92466*FLEN/8, x13, x9, x10)

inst_30844:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f000007; valaddr_reg:x12; val_offset:92469*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92469*FLEN/8, x13, x9, x10)

inst_30845:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f7ffffc; valaddr_reg:x12; val_offset:92472*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92472*FLEN/8, x13, x9, x10)

inst_30846:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f000003; valaddr_reg:x12; val_offset:92475*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92475*FLEN/8, x13, x9, x10)

inst_30847:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f7ffffe; valaddr_reg:x12; val_offset:92478*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92478*FLEN/8, x13, x9, x10)

inst_30848:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f000001; valaddr_reg:x12; val_offset:92481*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92481*FLEN/8, x13, x9, x10)

inst_30849:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f36db6d; valaddr_reg:x12; val_offset:92484*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92484*FLEN/8, x13, x9, x10)

inst_30850:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f6db6db; valaddr_reg:x12; val_offset:92487*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92487*FLEN/8, x13, x9, x10)

inst_30851:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f199999; valaddr_reg:x12; val_offset:92490*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92490*FLEN/8, x13, x9, x10)

inst_30852:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f666666; valaddr_reg:x12; val_offset:92493*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92493*FLEN/8, x13, x9, x10)

inst_30853:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f3bbbbb; valaddr_reg:x12; val_offset:92496*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92496*FLEN/8, x13, x9, x10)

inst_30854:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f444444; valaddr_reg:x12; val_offset:92499*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92499*FLEN/8, x13, x9, x10)

inst_30855:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f249249; valaddr_reg:x12; val_offset:92502*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92502*FLEN/8, x13, x9, x10)

inst_30856:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f5b6db6; valaddr_reg:x12; val_offset:92505*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92505*FLEN/8, x13, x9, x10)

inst_30857:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f333333; valaddr_reg:x12; val_offset:92508*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92508*FLEN/8, x13, x9, x10)

inst_30858:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x195ee2 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x55a6ff and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e995ee2; op2val:0x4055a6ff;
op3val:0x7f4ccccc; valaddr_reg:x12; val_offset:92511*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92511*FLEN/8, x13, x9, x10)

inst_30859:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66ffffff; valaddr_reg:x12; val_offset:92514*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92514*FLEN/8, x13, x9, x10)

inst_30860:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66800000; valaddr_reg:x12; val_offset:92517*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92517*FLEN/8, x13, x9, x10)

inst_30861:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66bfffff; valaddr_reg:x12; val_offset:92520*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92520*FLEN/8, x13, x9, x10)

inst_30862:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66c00000; valaddr_reg:x12; val_offset:92523*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92523*FLEN/8, x13, x9, x10)

inst_30863:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x669fffff; valaddr_reg:x12; val_offset:92526*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92526*FLEN/8, x13, x9, x10)

inst_30864:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66e00000; valaddr_reg:x12; val_offset:92529*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92529*FLEN/8, x13, x9, x10)

inst_30865:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x668fffff; valaddr_reg:x12; val_offset:92532*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92532*FLEN/8, x13, x9, x10)

inst_30866:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66f00000; valaddr_reg:x12; val_offset:92535*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92535*FLEN/8, x13, x9, x10)

inst_30867:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x6687ffff; valaddr_reg:x12; val_offset:92538*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92538*FLEN/8, x13, x9, x10)

inst_30868:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66f80000; valaddr_reg:x12; val_offset:92541*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92541*FLEN/8, x13, x9, x10)

inst_30869:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x6683ffff; valaddr_reg:x12; val_offset:92544*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92544*FLEN/8, x13, x9, x10)

inst_30870:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66fc0000; valaddr_reg:x12; val_offset:92547*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92547*FLEN/8, x13, x9, x10)

inst_30871:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x6681ffff; valaddr_reg:x12; val_offset:92550*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92550*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_241)
inst_30872:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66fe0000; valaddr_reg:x12; val_offset:92553*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92553*FLEN/8, x13, x9, x10)

inst_30873:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x6680ffff; valaddr_reg:x12; val_offset:92556*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92556*FLEN/8, x13, x9, x10)

inst_30874:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66ff0000; valaddr_reg:x12; val_offset:92559*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92559*FLEN/8, x13, x9, x10)

inst_30875:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66807fff; valaddr_reg:x12; val_offset:92562*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92562*FLEN/8, x13, x9, x10)

inst_30876:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66ff8000; valaddr_reg:x12; val_offset:92565*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92565*FLEN/8, x13, x9, x10)

inst_30877:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66803fff; valaddr_reg:x12; val_offset:92568*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92568*FLEN/8, x13, x9, x10)

inst_30878:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66ffc000; valaddr_reg:x12; val_offset:92571*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92571*FLEN/8, x13, x9, x10)

inst_30879:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66801fff; valaddr_reg:x12; val_offset:92574*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92574*FLEN/8, x13, x9, x10)

inst_30880:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66ffe000; valaddr_reg:x12; val_offset:92577*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92577*FLEN/8, x13, x9, x10)

inst_30881:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66800fff; valaddr_reg:x12; val_offset:92580*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92580*FLEN/8, x13, x9, x10)

inst_30882:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66fff000; valaddr_reg:x12; val_offset:92583*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92583*FLEN/8, x13, x9, x10)

inst_30883:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x668007ff; valaddr_reg:x12; val_offset:92586*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92586*FLEN/8, x13, x9, x10)

inst_30884:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66fff800; valaddr_reg:x12; val_offset:92589*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92589*FLEN/8, x13, x9, x10)

inst_30885:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x668003ff; valaddr_reg:x12; val_offset:92592*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92592*FLEN/8, x13, x9, x10)

inst_30886:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66fffc00; valaddr_reg:x12; val_offset:92595*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92595*FLEN/8, x13, x9, x10)

inst_30887:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x668001ff; valaddr_reg:x12; val_offset:92598*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92598*FLEN/8, x13, x9, x10)

inst_30888:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66fffe00; valaddr_reg:x12; val_offset:92601*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92601*FLEN/8, x13, x9, x10)

inst_30889:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x668000ff; valaddr_reg:x12; val_offset:92604*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92604*FLEN/8, x13, x9, x10)

inst_30890:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66ffff00; valaddr_reg:x12; val_offset:92607*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92607*FLEN/8, x13, x9, x10)

inst_30891:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x6680007f; valaddr_reg:x12; val_offset:92610*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92610*FLEN/8, x13, x9, x10)

inst_30892:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66ffff80; valaddr_reg:x12; val_offset:92613*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92613*FLEN/8, x13, x9, x10)

inst_30893:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x6680003f; valaddr_reg:x12; val_offset:92616*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92616*FLEN/8, x13, x9, x10)

inst_30894:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66ffffc0; valaddr_reg:x12; val_offset:92619*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92619*FLEN/8, x13, x9, x10)

inst_30895:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x6680001f; valaddr_reg:x12; val_offset:92622*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92622*FLEN/8, x13, x9, x10)

inst_30896:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66ffffe0; valaddr_reg:x12; val_offset:92625*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92625*FLEN/8, x13, x9, x10)

inst_30897:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x6680000f; valaddr_reg:x12; val_offset:92628*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92628*FLEN/8, x13, x9, x10)

inst_30898:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66fffff0; valaddr_reg:x12; val_offset:92631*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92631*FLEN/8, x13, x9, x10)

inst_30899:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66800007; valaddr_reg:x12; val_offset:92634*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92634*FLEN/8, x13, x9, x10)

inst_30900:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66fffff8; valaddr_reg:x12; val_offset:92637*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92637*FLEN/8, x13, x9, x10)

inst_30901:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66800003; valaddr_reg:x12; val_offset:92640*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92640*FLEN/8, x13, x9, x10)

inst_30902:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66fffffc; valaddr_reg:x12; val_offset:92643*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92643*FLEN/8, x13, x9, x10)

inst_30903:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66800001; valaddr_reg:x12; val_offset:92646*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92646*FLEN/8, x13, x9, x10)

inst_30904:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xcd and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x66fffffe; valaddr_reg:x12; val_offset:92649*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92649*FLEN/8, x13, x9, x10)

inst_30905:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f7ffff8; valaddr_reg:x12; val_offset:92652*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92652*FLEN/8, x13, x9, x10)

inst_30906:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f000007; valaddr_reg:x12; val_offset:92655*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92655*FLEN/8, x13, x9, x10)

inst_30907:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f7ffffc; valaddr_reg:x12; val_offset:92658*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92658*FLEN/8, x13, x9, x10)

inst_30908:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f000003; valaddr_reg:x12; val_offset:92661*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92661*FLEN/8, x13, x9, x10)

inst_30909:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f7ffffe; valaddr_reg:x12; val_offset:92664*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92664*FLEN/8, x13, x9, x10)

inst_30910:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f000001; valaddr_reg:x12; val_offset:92667*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92667*FLEN/8, x13, x9, x10)

inst_30911:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f36db6d; valaddr_reg:x12; val_offset:92670*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92670*FLEN/8, x13, x9, x10)

inst_30912:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f6db6db; valaddr_reg:x12; val_offset:92673*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92673*FLEN/8, x13, x9, x10)

inst_30913:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f199999; valaddr_reg:x12; val_offset:92676*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92676*FLEN/8, x13, x9, x10)

inst_30914:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f666666; valaddr_reg:x12; val_offset:92679*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92679*FLEN/8, x13, x9, x10)

inst_30915:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f3bbbbb; valaddr_reg:x12; val_offset:92682*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92682*FLEN/8, x13, x9, x10)

inst_30916:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f444444; valaddr_reg:x12; val_offset:92685*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92685*FLEN/8, x13, x9, x10)

inst_30917:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f249249; valaddr_reg:x12; val_offset:92688*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92688*FLEN/8, x13, x9, x10)

inst_30918:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f5b6db6; valaddr_reg:x12; val_offset:92691*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92691*FLEN/8, x13, x9, x10)

inst_30919:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f333333; valaddr_reg:x12; val_offset:92694*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92694*FLEN/8, x13, x9, x10)

inst_30920:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x165a4e and fs2 == 0 and fe2 == 0x7f and fm2 == 0x59f0d7 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f165a4e; op2val:0x3fd9f0d7;
op3val:0x7f4ccccc; valaddr_reg:x12; val_offset:92697*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92697*FLEN/8, x13, x9, x10)

inst_30921:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677fffff; valaddr_reg:x12; val_offset:92700*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92700*FLEN/8, x13, x9, x10)

inst_30922:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x67000000; valaddr_reg:x12; val_offset:92703*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92703*FLEN/8, x13, x9, x10)

inst_30923:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x673fffff; valaddr_reg:x12; val_offset:92706*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92706*FLEN/8, x13, x9, x10)

inst_30924:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x67400000; valaddr_reg:x12; val_offset:92709*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92709*FLEN/8, x13, x9, x10)

inst_30925:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x671fffff; valaddr_reg:x12; val_offset:92712*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92712*FLEN/8, x13, x9, x10)

inst_30926:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x67600000; valaddr_reg:x12; val_offset:92715*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92715*FLEN/8, x13, x9, x10)

inst_30927:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x670fffff; valaddr_reg:x12; val_offset:92718*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92718*FLEN/8, x13, x9, x10)

inst_30928:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x67700000; valaddr_reg:x12; val_offset:92721*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92721*FLEN/8, x13, x9, x10)

inst_30929:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x6707ffff; valaddr_reg:x12; val_offset:92724*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92724*FLEN/8, x13, x9, x10)

inst_30930:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x67780000; valaddr_reg:x12; val_offset:92727*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92727*FLEN/8, x13, x9, x10)

inst_30931:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x6703ffff; valaddr_reg:x12; val_offset:92730*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92730*FLEN/8, x13, x9, x10)

inst_30932:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677c0000; valaddr_reg:x12; val_offset:92733*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92733*FLEN/8, x13, x9, x10)

inst_30933:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x6701ffff; valaddr_reg:x12; val_offset:92736*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92736*FLEN/8, x13, x9, x10)

inst_30934:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677e0000; valaddr_reg:x12; val_offset:92739*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92739*FLEN/8, x13, x9, x10)

inst_30935:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x6700ffff; valaddr_reg:x12; val_offset:92742*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92742*FLEN/8, x13, x9, x10)

inst_30936:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677f0000; valaddr_reg:x12; val_offset:92745*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92745*FLEN/8, x13, x9, x10)

inst_30937:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x67007fff; valaddr_reg:x12; val_offset:92748*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92748*FLEN/8, x13, x9, x10)

inst_30938:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677f8000; valaddr_reg:x12; val_offset:92751*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92751*FLEN/8, x13, x9, x10)

inst_30939:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x67003fff; valaddr_reg:x12; val_offset:92754*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92754*FLEN/8, x13, x9, x10)

inst_30940:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677fc000; valaddr_reg:x12; val_offset:92757*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92757*FLEN/8, x13, x9, x10)

inst_30941:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x67001fff; valaddr_reg:x12; val_offset:92760*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92760*FLEN/8, x13, x9, x10)

inst_30942:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677fe000; valaddr_reg:x12; val_offset:92763*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92763*FLEN/8, x13, x9, x10)

inst_30943:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x67000fff; valaddr_reg:x12; val_offset:92766*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92766*FLEN/8, x13, x9, x10)

inst_30944:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677ff000; valaddr_reg:x12; val_offset:92769*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92769*FLEN/8, x13, x9, x10)

inst_30945:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x670007ff; valaddr_reg:x12; val_offset:92772*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92772*FLEN/8, x13, x9, x10)

inst_30946:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677ff800; valaddr_reg:x12; val_offset:92775*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92775*FLEN/8, x13, x9, x10)

inst_30947:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x670003ff; valaddr_reg:x12; val_offset:92778*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92778*FLEN/8, x13, x9, x10)

inst_30948:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677ffc00; valaddr_reg:x12; val_offset:92781*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92781*FLEN/8, x13, x9, x10)

inst_30949:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x670001ff; valaddr_reg:x12; val_offset:92784*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92784*FLEN/8, x13, x9, x10)

inst_30950:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677ffe00; valaddr_reg:x12; val_offset:92787*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92787*FLEN/8, x13, x9, x10)

inst_30951:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x670000ff; valaddr_reg:x12; val_offset:92790*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92790*FLEN/8, x13, x9, x10)

inst_30952:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677fff00; valaddr_reg:x12; val_offset:92793*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92793*FLEN/8, x13, x9, x10)

inst_30953:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x6700007f; valaddr_reg:x12; val_offset:92796*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92796*FLEN/8, x13, x9, x10)

inst_30954:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677fff80; valaddr_reg:x12; val_offset:92799*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92799*FLEN/8, x13, x9, x10)

inst_30955:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x6700003f; valaddr_reg:x12; val_offset:92802*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92802*FLEN/8, x13, x9, x10)

inst_30956:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677fffc0; valaddr_reg:x12; val_offset:92805*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92805*FLEN/8, x13, x9, x10)

inst_30957:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x6700001f; valaddr_reg:x12; val_offset:92808*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92808*FLEN/8, x13, x9, x10)

inst_30958:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677fffe0; valaddr_reg:x12; val_offset:92811*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92811*FLEN/8, x13, x9, x10)

inst_30959:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x6700000f; valaddr_reg:x12; val_offset:92814*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92814*FLEN/8, x13, x9, x10)

inst_30960:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677ffff0; valaddr_reg:x12; val_offset:92817*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92817*FLEN/8, x13, x9, x10)

inst_30961:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x67000007; valaddr_reg:x12; val_offset:92820*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92820*FLEN/8, x13, x9, x10)

inst_30962:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677ffff8; valaddr_reg:x12; val_offset:92823*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92823*FLEN/8, x13, x9, x10)

inst_30963:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x67000003; valaddr_reg:x12; val_offset:92826*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92826*FLEN/8, x13, x9, x10)

inst_30964:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677ffffc; valaddr_reg:x12; val_offset:92829*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92829*FLEN/8, x13, x9, x10)

inst_30965:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x67000001; valaddr_reg:x12; val_offset:92832*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92832*FLEN/8, x13, x9, x10)

inst_30966:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xce and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x677ffffe; valaddr_reg:x12; val_offset:92835*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92835*FLEN/8, x13, x9, x10)

inst_30967:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f7ffff8; valaddr_reg:x12; val_offset:92838*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92838*FLEN/8, x13, x9, x10)

inst_30968:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f000007; valaddr_reg:x12; val_offset:92841*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92841*FLEN/8, x13, x9, x10)

inst_30969:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f7ffffc; valaddr_reg:x12; val_offset:92844*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92844*FLEN/8, x13, x9, x10)

inst_30970:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f000003; valaddr_reg:x12; val_offset:92847*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92847*FLEN/8, x13, x9, x10)

inst_30971:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f7ffffe; valaddr_reg:x12; val_offset:92850*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92850*FLEN/8, x13, x9, x10)

inst_30972:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f000001; valaddr_reg:x12; val_offset:92853*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92853*FLEN/8, x13, x9, x10)

inst_30973:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f36db6d; valaddr_reg:x12; val_offset:92856*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92856*FLEN/8, x13, x9, x10)

inst_30974:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f6db6db; valaddr_reg:x12; val_offset:92859*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92859*FLEN/8, x13, x9, x10)

inst_30975:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f199999; valaddr_reg:x12; val_offset:92862*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92862*FLEN/8, x13, x9, x10)

inst_30976:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f666666; valaddr_reg:x12; val_offset:92865*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92865*FLEN/8, x13, x9, x10)

inst_30977:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f3bbbbb; valaddr_reg:x12; val_offset:92868*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92868*FLEN/8, x13, x9, x10)

inst_30978:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f444444; valaddr_reg:x12; val_offset:92871*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92871*FLEN/8, x13, x9, x10)

inst_30979:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f249249; valaddr_reg:x12; val_offset:92874*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92874*FLEN/8, x13, x9, x10)

inst_30980:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f5b6db6; valaddr_reg:x12; val_offset:92877*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92877*FLEN/8, x13, x9, x10)

inst_30981:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f333333; valaddr_reg:x12; val_offset:92880*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92880*FLEN/8, x13, x9, x10)

inst_30982:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x03371b and fs2 == 0 and fe2 == 0x7f and fm2 == 0x79ba1e and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f03371b; op2val:0x3ff9ba1e;
op3val:0x7f4ccccc; valaddr_reg:x12; val_offset:92883*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92883*FLEN/8, x13, x9, x10)

inst_30983:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67ffffff; valaddr_reg:x12; val_offset:92886*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92886*FLEN/8, x13, x9, x10)

inst_30984:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67800000; valaddr_reg:x12; val_offset:92889*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92889*FLEN/8, x13, x9, x10)

inst_30985:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67bfffff; valaddr_reg:x12; val_offset:92892*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92892*FLEN/8, x13, x9, x10)

inst_30986:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67c00000; valaddr_reg:x12; val_offset:92895*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92895*FLEN/8, x13, x9, x10)

inst_30987:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x679fffff; valaddr_reg:x12; val_offset:92898*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92898*FLEN/8, x13, x9, x10)

inst_30988:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67e00000; valaddr_reg:x12; val_offset:92901*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92901*FLEN/8, x13, x9, x10)

inst_30989:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x678fffff; valaddr_reg:x12; val_offset:92904*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92904*FLEN/8, x13, x9, x10)

inst_30990:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67f00000; valaddr_reg:x12; val_offset:92907*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92907*FLEN/8, x13, x9, x10)

inst_30991:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x6787ffff; valaddr_reg:x12; val_offset:92910*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92910*FLEN/8, x13, x9, x10)

inst_30992:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67f80000; valaddr_reg:x12; val_offset:92913*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92913*FLEN/8, x13, x9, x10)

inst_30993:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x6783ffff; valaddr_reg:x12; val_offset:92916*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92916*FLEN/8, x13, x9, x10)

inst_30994:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67fc0000; valaddr_reg:x12; val_offset:92919*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92919*FLEN/8, x13, x9, x10)

inst_30995:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x6781ffff; valaddr_reg:x12; val_offset:92922*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92922*FLEN/8, x13, x9, x10)

inst_30996:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67fe0000; valaddr_reg:x12; val_offset:92925*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92925*FLEN/8, x13, x9, x10)

inst_30997:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x6780ffff; valaddr_reg:x12; val_offset:92928*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92928*FLEN/8, x13, x9, x10)

inst_30998:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67ff0000; valaddr_reg:x12; val_offset:92931*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92931*FLEN/8, x13, x9, x10)

inst_30999:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67807fff; valaddr_reg:x12; val_offset:92934*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92934*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_242)
inst_31000:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67ff8000; valaddr_reg:x12; val_offset:92937*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92937*FLEN/8, x13, x9, x10)

inst_31001:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67803fff; valaddr_reg:x12; val_offset:92940*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92940*FLEN/8, x13, x9, x10)

inst_31002:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67ffc000; valaddr_reg:x12; val_offset:92943*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92943*FLEN/8, x13, x9, x10)

inst_31003:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67801fff; valaddr_reg:x12; val_offset:92946*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92946*FLEN/8, x13, x9, x10)

inst_31004:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67ffe000; valaddr_reg:x12; val_offset:92949*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92949*FLEN/8, x13, x9, x10)

inst_31005:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67800fff; valaddr_reg:x12; val_offset:92952*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92952*FLEN/8, x13, x9, x10)

inst_31006:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67fff000; valaddr_reg:x12; val_offset:92955*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92955*FLEN/8, x13, x9, x10)

inst_31007:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x678007ff; valaddr_reg:x12; val_offset:92958*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92958*FLEN/8, x13, x9, x10)

inst_31008:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67fff800; valaddr_reg:x12; val_offset:92961*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92961*FLEN/8, x13, x9, x10)

inst_31009:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x678003ff; valaddr_reg:x12; val_offset:92964*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92964*FLEN/8, x13, x9, x10)

inst_31010:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67fffc00; valaddr_reg:x12; val_offset:92967*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92967*FLEN/8, x13, x9, x10)

inst_31011:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x678001ff; valaddr_reg:x12; val_offset:92970*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92970*FLEN/8, x13, x9, x10)

inst_31012:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67fffe00; valaddr_reg:x12; val_offset:92973*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92973*FLEN/8, x13, x9, x10)

inst_31013:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x678000ff; valaddr_reg:x12; val_offset:92976*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92976*FLEN/8, x13, x9, x10)

inst_31014:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67ffff00; valaddr_reg:x12; val_offset:92979*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92979*FLEN/8, x13, x9, x10)

inst_31015:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x6780007f; valaddr_reg:x12; val_offset:92982*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92982*FLEN/8, x13, x9, x10)

inst_31016:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67ffff80; valaddr_reg:x12; val_offset:92985*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92985*FLEN/8, x13, x9, x10)

inst_31017:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x6780003f; valaddr_reg:x12; val_offset:92988*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92988*FLEN/8, x13, x9, x10)

inst_31018:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67ffffc0; valaddr_reg:x12; val_offset:92991*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92991*FLEN/8, x13, x9, x10)

inst_31019:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x6780001f; valaddr_reg:x12; val_offset:92994*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92994*FLEN/8, x13, x9, x10)

inst_31020:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67ffffe0; valaddr_reg:x12; val_offset:92997*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 92997*FLEN/8, x13, x9, x10)

inst_31021:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x6780000f; valaddr_reg:x12; val_offset:93000*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93000*FLEN/8, x13, x9, x10)

inst_31022:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67fffff0; valaddr_reg:x12; val_offset:93003*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93003*FLEN/8, x13, x9, x10)

inst_31023:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67800007; valaddr_reg:x12; val_offset:93006*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93006*FLEN/8, x13, x9, x10)

inst_31024:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67fffff8; valaddr_reg:x12; val_offset:93009*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93009*FLEN/8, x13, x9, x10)

inst_31025:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67800003; valaddr_reg:x12; val_offset:93012*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93012*FLEN/8, x13, x9, x10)

inst_31026:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67fffffc; valaddr_reg:x12; val_offset:93015*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93015*FLEN/8, x13, x9, x10)

inst_31027:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67800001; valaddr_reg:x12; val_offset:93018*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93018*FLEN/8, x13, x9, x10)

inst_31028:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xcf and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x67fffffe; valaddr_reg:x12; val_offset:93021*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93021*FLEN/8, x13, x9, x10)

inst_31029:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f7ffff8; valaddr_reg:x12; val_offset:93024*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93024*FLEN/8, x13, x9, x10)

inst_31030:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f000007; valaddr_reg:x12; val_offset:93027*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93027*FLEN/8, x13, x9, x10)

inst_31031:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f7ffffc; valaddr_reg:x12; val_offset:93030*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93030*FLEN/8, x13, x9, x10)

inst_31032:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f000003; valaddr_reg:x12; val_offset:93033*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93033*FLEN/8, x13, x9, x10)

inst_31033:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f7ffffe; valaddr_reg:x12; val_offset:93036*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93036*FLEN/8, x13, x9, x10)

inst_31034:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f000001; valaddr_reg:x12; val_offset:93039*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93039*FLEN/8, x13, x9, x10)

inst_31035:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f36db6d; valaddr_reg:x12; val_offset:93042*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93042*FLEN/8, x13, x9, x10)

inst_31036:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f6db6db; valaddr_reg:x12; val_offset:93045*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93045*FLEN/8, x13, x9, x10)

inst_31037:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f199999; valaddr_reg:x12; val_offset:93048*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93048*FLEN/8, x13, x9, x10)

inst_31038:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f666666; valaddr_reg:x12; val_offset:93051*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93051*FLEN/8, x13, x9, x10)

inst_31039:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f3bbbbb; valaddr_reg:x12; val_offset:93054*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93054*FLEN/8, x13, x9, x10)

inst_31040:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f444444; valaddr_reg:x12; val_offset:93057*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93057*FLEN/8, x13, x9, x10)

inst_31041:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f249249; valaddr_reg:x12; val_offset:93060*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93060*FLEN/8, x13, x9, x10)

inst_31042:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f5b6db6; valaddr_reg:x12; val_offset:93063*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93063*FLEN/8, x13, x9, x10)

inst_31043:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f333333; valaddr_reg:x12; val_offset:93066*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93066*FLEN/8, x13, x9, x10)

inst_31044:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3d0af8 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x2d561a and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ebd0af8; op2val:0x402d561a;
op3val:0x7f4ccccc; valaddr_reg:x12; val_offset:93069*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93069*FLEN/8, x13, x9, x10)

inst_31045:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687fffff; valaddr_reg:x12; val_offset:93072*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93072*FLEN/8, x13, x9, x10)

inst_31046:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x68000000; valaddr_reg:x12; val_offset:93075*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93075*FLEN/8, x13, x9, x10)

inst_31047:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x683fffff; valaddr_reg:x12; val_offset:93078*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93078*FLEN/8, x13, x9, x10)

inst_31048:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x68400000; valaddr_reg:x12; val_offset:93081*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93081*FLEN/8, x13, x9, x10)

inst_31049:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x681fffff; valaddr_reg:x12; val_offset:93084*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93084*FLEN/8, x13, x9, x10)

inst_31050:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x68600000; valaddr_reg:x12; val_offset:93087*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93087*FLEN/8, x13, x9, x10)

inst_31051:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x680fffff; valaddr_reg:x12; val_offset:93090*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93090*FLEN/8, x13, x9, x10)

inst_31052:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x68700000; valaddr_reg:x12; val_offset:93093*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93093*FLEN/8, x13, x9, x10)

inst_31053:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x6807ffff; valaddr_reg:x12; val_offset:93096*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93096*FLEN/8, x13, x9, x10)

inst_31054:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x68780000; valaddr_reg:x12; val_offset:93099*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93099*FLEN/8, x13, x9, x10)

inst_31055:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x6803ffff; valaddr_reg:x12; val_offset:93102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93102*FLEN/8, x13, x9, x10)

inst_31056:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687c0000; valaddr_reg:x12; val_offset:93105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93105*FLEN/8, x13, x9, x10)

inst_31057:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x6801ffff; valaddr_reg:x12; val_offset:93108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93108*FLEN/8, x13, x9, x10)

inst_31058:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687e0000; valaddr_reg:x12; val_offset:93111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93111*FLEN/8, x13, x9, x10)

inst_31059:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x6800ffff; valaddr_reg:x12; val_offset:93114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93114*FLEN/8, x13, x9, x10)

inst_31060:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687f0000; valaddr_reg:x12; val_offset:93117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93117*FLEN/8, x13, x9, x10)

inst_31061:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x68007fff; valaddr_reg:x12; val_offset:93120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93120*FLEN/8, x13, x9, x10)

inst_31062:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687f8000; valaddr_reg:x12; val_offset:93123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93123*FLEN/8, x13, x9, x10)

inst_31063:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x68003fff; valaddr_reg:x12; val_offset:93126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93126*FLEN/8, x13, x9, x10)

inst_31064:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687fc000; valaddr_reg:x12; val_offset:93129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93129*FLEN/8, x13, x9, x10)

inst_31065:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x68001fff; valaddr_reg:x12; val_offset:93132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93132*FLEN/8, x13, x9, x10)

inst_31066:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687fe000; valaddr_reg:x12; val_offset:93135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93135*FLEN/8, x13, x9, x10)

inst_31067:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x68000fff; valaddr_reg:x12; val_offset:93138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93138*FLEN/8, x13, x9, x10)

inst_31068:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687ff000; valaddr_reg:x12; val_offset:93141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93141*FLEN/8, x13, x9, x10)

inst_31069:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x680007ff; valaddr_reg:x12; val_offset:93144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93144*FLEN/8, x13, x9, x10)

inst_31070:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687ff800; valaddr_reg:x12; val_offset:93147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93147*FLEN/8, x13, x9, x10)

inst_31071:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x680003ff; valaddr_reg:x12; val_offset:93150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93150*FLEN/8, x13, x9, x10)

inst_31072:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687ffc00; valaddr_reg:x12; val_offset:93153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93153*FLEN/8, x13, x9, x10)

inst_31073:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x680001ff; valaddr_reg:x12; val_offset:93156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93156*FLEN/8, x13, x9, x10)

inst_31074:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687ffe00; valaddr_reg:x12; val_offset:93159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93159*FLEN/8, x13, x9, x10)

inst_31075:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x680000ff; valaddr_reg:x12; val_offset:93162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93162*FLEN/8, x13, x9, x10)

inst_31076:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687fff00; valaddr_reg:x12; val_offset:93165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93165*FLEN/8, x13, x9, x10)

inst_31077:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x6800007f; valaddr_reg:x12; val_offset:93168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93168*FLEN/8, x13, x9, x10)

inst_31078:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687fff80; valaddr_reg:x12; val_offset:93171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93171*FLEN/8, x13, x9, x10)

inst_31079:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x6800003f; valaddr_reg:x12; val_offset:93174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93174*FLEN/8, x13, x9, x10)

inst_31080:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687fffc0; valaddr_reg:x12; val_offset:93177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93177*FLEN/8, x13, x9, x10)

inst_31081:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x6800001f; valaddr_reg:x12; val_offset:93180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93180*FLEN/8, x13, x9, x10)

inst_31082:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687fffe0; valaddr_reg:x12; val_offset:93183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93183*FLEN/8, x13, x9, x10)

inst_31083:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x6800000f; valaddr_reg:x12; val_offset:93186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93186*FLEN/8, x13, x9, x10)

inst_31084:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687ffff0; valaddr_reg:x12; val_offset:93189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93189*FLEN/8, x13, x9, x10)

inst_31085:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x68000007; valaddr_reg:x12; val_offset:93192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93192*FLEN/8, x13, x9, x10)

inst_31086:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687ffff8; valaddr_reg:x12; val_offset:93195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93195*FLEN/8, x13, x9, x10)

inst_31087:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x68000003; valaddr_reg:x12; val_offset:93198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93198*FLEN/8, x13, x9, x10)

inst_31088:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687ffffc; valaddr_reg:x12; val_offset:93201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93201*FLEN/8, x13, x9, x10)

inst_31089:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x68000001; valaddr_reg:x12; val_offset:93204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93204*FLEN/8, x13, x9, x10)

inst_31090:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xd0 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x687ffffe; valaddr_reg:x12; val_offset:93207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93207*FLEN/8, x13, x9, x10)

inst_31091:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f7ffff8; valaddr_reg:x12; val_offset:93210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93210*FLEN/8, x13, x9, x10)

inst_31092:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f000007; valaddr_reg:x12; val_offset:93213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93213*FLEN/8, x13, x9, x10)

inst_31093:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f7ffffc; valaddr_reg:x12; val_offset:93216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93216*FLEN/8, x13, x9, x10)

inst_31094:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f000003; valaddr_reg:x12; val_offset:93219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93219*FLEN/8, x13, x9, x10)

inst_31095:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f7ffffe; valaddr_reg:x12; val_offset:93222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93222*FLEN/8, x13, x9, x10)

inst_31096:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f000001; valaddr_reg:x12; val_offset:93225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93225*FLEN/8, x13, x9, x10)

inst_31097:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f36db6d; valaddr_reg:x12; val_offset:93228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93228*FLEN/8, x13, x9, x10)

inst_31098:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f6db6db; valaddr_reg:x12; val_offset:93231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93231*FLEN/8, x13, x9, x10)

inst_31099:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f199999; valaddr_reg:x12; val_offset:93234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93234*FLEN/8, x13, x9, x10)

inst_31100:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f666666; valaddr_reg:x12; val_offset:93237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93237*FLEN/8, x13, x9, x10)

inst_31101:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f3bbbbb; valaddr_reg:x12; val_offset:93240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93240*FLEN/8, x13, x9, x10)

inst_31102:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f444444; valaddr_reg:x12; val_offset:93243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93243*FLEN/8, x13, x9, x10)

inst_31103:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f249249; valaddr_reg:x12; val_offset:93246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93246*FLEN/8, x13, x9, x10)

inst_31104:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f5b6db6; valaddr_reg:x12; val_offset:93249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93249*FLEN/8, x13, x9, x10)

inst_31105:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f333333; valaddr_reg:x12; val_offset:93252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93252*FLEN/8, x13, x9, x10)

inst_31106:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x78b460 and fs2 == 0 and fe2 == 0x80 and fm2 == 0x03c133 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ef8b460; op2val:0x4003c133;
op3val:0x7f4ccccc; valaddr_reg:x12; val_offset:93255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93255*FLEN/8, x13, x9, x10)

inst_31107:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68ffffff; valaddr_reg:x12; val_offset:93258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93258*FLEN/8, x13, x9, x10)

inst_31108:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68800000; valaddr_reg:x12; val_offset:93261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93261*FLEN/8, x13, x9, x10)

inst_31109:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68bfffff; valaddr_reg:x12; val_offset:93264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93264*FLEN/8, x13, x9, x10)

inst_31110:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68c00000; valaddr_reg:x12; val_offset:93267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93267*FLEN/8, x13, x9, x10)

inst_31111:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x689fffff; valaddr_reg:x12; val_offset:93270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93270*FLEN/8, x13, x9, x10)

inst_31112:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68e00000; valaddr_reg:x12; val_offset:93273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93273*FLEN/8, x13, x9, x10)

inst_31113:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x688fffff; valaddr_reg:x12; val_offset:93276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93276*FLEN/8, x13, x9, x10)

inst_31114:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68f00000; valaddr_reg:x12; val_offset:93279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93279*FLEN/8, x13, x9, x10)

inst_31115:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x6887ffff; valaddr_reg:x12; val_offset:93282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93282*FLEN/8, x13, x9, x10)

inst_31116:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68f80000; valaddr_reg:x12; val_offset:93285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93285*FLEN/8, x13, x9, x10)

inst_31117:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x6883ffff; valaddr_reg:x12; val_offset:93288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93288*FLEN/8, x13, x9, x10)

inst_31118:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68fc0000; valaddr_reg:x12; val_offset:93291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93291*FLEN/8, x13, x9, x10)

inst_31119:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x6881ffff; valaddr_reg:x12; val_offset:93294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93294*FLEN/8, x13, x9, x10)

inst_31120:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68fe0000; valaddr_reg:x12; val_offset:93297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93297*FLEN/8, x13, x9, x10)

inst_31121:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x6880ffff; valaddr_reg:x12; val_offset:93300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93300*FLEN/8, x13, x9, x10)

inst_31122:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68ff0000; valaddr_reg:x12; val_offset:93303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93303*FLEN/8, x13, x9, x10)

inst_31123:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68807fff; valaddr_reg:x12; val_offset:93306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93306*FLEN/8, x13, x9, x10)

inst_31124:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68ff8000; valaddr_reg:x12; val_offset:93309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93309*FLEN/8, x13, x9, x10)

inst_31125:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68803fff; valaddr_reg:x12; val_offset:93312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93312*FLEN/8, x13, x9, x10)

inst_31126:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68ffc000; valaddr_reg:x12; val_offset:93315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93315*FLEN/8, x13, x9, x10)

inst_31127:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68801fff; valaddr_reg:x12; val_offset:93318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93318*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_243)
inst_31128:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68ffe000; valaddr_reg:x12; val_offset:93321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93321*FLEN/8, x13, x9, x10)

inst_31129:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68800fff; valaddr_reg:x12; val_offset:93324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93324*FLEN/8, x13, x9, x10)

inst_31130:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68fff000; valaddr_reg:x12; val_offset:93327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93327*FLEN/8, x13, x9, x10)

inst_31131:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x688007ff; valaddr_reg:x12; val_offset:93330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93330*FLEN/8, x13, x9, x10)

inst_31132:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68fff800; valaddr_reg:x12; val_offset:93333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93333*FLEN/8, x13, x9, x10)

inst_31133:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x688003ff; valaddr_reg:x12; val_offset:93336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93336*FLEN/8, x13, x9, x10)

inst_31134:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68fffc00; valaddr_reg:x12; val_offset:93339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93339*FLEN/8, x13, x9, x10)

inst_31135:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x688001ff; valaddr_reg:x12; val_offset:93342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93342*FLEN/8, x13, x9, x10)

inst_31136:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68fffe00; valaddr_reg:x12; val_offset:93345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93345*FLEN/8, x13, x9, x10)

inst_31137:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x688000ff; valaddr_reg:x12; val_offset:93348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93348*FLEN/8, x13, x9, x10)

inst_31138:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68ffff00; valaddr_reg:x12; val_offset:93351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93351*FLEN/8, x13, x9, x10)

inst_31139:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x6880007f; valaddr_reg:x12; val_offset:93354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93354*FLEN/8, x13, x9, x10)

inst_31140:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68ffff80; valaddr_reg:x12; val_offset:93357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93357*FLEN/8, x13, x9, x10)

inst_31141:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x6880003f; valaddr_reg:x12; val_offset:93360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93360*FLEN/8, x13, x9, x10)

inst_31142:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68ffffc0; valaddr_reg:x12; val_offset:93363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93363*FLEN/8, x13, x9, x10)

inst_31143:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x6880001f; valaddr_reg:x12; val_offset:93366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93366*FLEN/8, x13, x9, x10)

inst_31144:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68ffffe0; valaddr_reg:x12; val_offset:93369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93369*FLEN/8, x13, x9, x10)

inst_31145:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x6880000f; valaddr_reg:x12; val_offset:93372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93372*FLEN/8, x13, x9, x10)

inst_31146:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68fffff0; valaddr_reg:x12; val_offset:93375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93375*FLEN/8, x13, x9, x10)

inst_31147:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68800007; valaddr_reg:x12; val_offset:93378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93378*FLEN/8, x13, x9, x10)

inst_31148:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68fffff8; valaddr_reg:x12; val_offset:93381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93381*FLEN/8, x13, x9, x10)

inst_31149:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68800003; valaddr_reg:x12; val_offset:93384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93384*FLEN/8, x13, x9, x10)

inst_31150:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68fffffc; valaddr_reg:x12; val_offset:93387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93387*FLEN/8, x13, x9, x10)

inst_31151:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68800001; valaddr_reg:x12; val_offset:93390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93390*FLEN/8, x13, x9, x10)

inst_31152:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xd1 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x68fffffe; valaddr_reg:x12; val_offset:93393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93393*FLEN/8, x13, x9, x10)

inst_31153:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f7ffff8; valaddr_reg:x12; val_offset:93396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93396*FLEN/8, x13, x9, x10)

inst_31154:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f000007; valaddr_reg:x12; val_offset:93399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93399*FLEN/8, x13, x9, x10)

inst_31155:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f7ffffc; valaddr_reg:x12; val_offset:93402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93402*FLEN/8, x13, x9, x10)

inst_31156:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f000003; valaddr_reg:x12; val_offset:93405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93405*FLEN/8, x13, x9, x10)

inst_31157:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f7ffffe; valaddr_reg:x12; val_offset:93408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93408*FLEN/8, x13, x9, x10)

inst_31158:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f000001; valaddr_reg:x12; val_offset:93411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93411*FLEN/8, x13, x9, x10)

inst_31159:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f36db6d; valaddr_reg:x12; val_offset:93414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93414*FLEN/8, x13, x9, x10)

inst_31160:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f6db6db; valaddr_reg:x12; val_offset:93417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93417*FLEN/8, x13, x9, x10)

inst_31161:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f199999; valaddr_reg:x12; val_offset:93420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93420*FLEN/8, x13, x9, x10)

inst_31162:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f666666; valaddr_reg:x12; val_offset:93423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93423*FLEN/8, x13, x9, x10)

inst_31163:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f3bbbbb; valaddr_reg:x12; val_offset:93426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93426*FLEN/8, x13, x9, x10)

inst_31164:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f444444; valaddr_reg:x12; val_offset:93429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93429*FLEN/8, x13, x9, x10)

inst_31165:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f249249; valaddr_reg:x12; val_offset:93432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93432*FLEN/8, x13, x9, x10)

inst_31166:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f5b6db6; valaddr_reg:x12; val_offset:93435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93435*FLEN/8, x13, x9, x10)

inst_31167:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f333333; valaddr_reg:x12; val_offset:93438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93438*FLEN/8, x13, x9, x10)

inst_31168:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x10fb7b and fs2 == 0 and fe2 == 0x80 and fm2 == 0x620382 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e90fb7b; op2val:0x40620382;
op3val:0x7f4ccccc; valaddr_reg:x12; val_offset:93441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93441*FLEN/8, x13, x9, x10)

inst_31169:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fffff; valaddr_reg:x12; val_offset:93444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93444*FLEN/8, x13, x9, x10)

inst_31170:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69000000; valaddr_reg:x12; val_offset:93447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93447*FLEN/8, x13, x9, x10)

inst_31171:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x693fffff; valaddr_reg:x12; val_offset:93450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93450*FLEN/8, x13, x9, x10)

inst_31172:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69400000; valaddr_reg:x12; val_offset:93453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93453*FLEN/8, x13, x9, x10)

inst_31173:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x691fffff; valaddr_reg:x12; val_offset:93456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93456*FLEN/8, x13, x9, x10)

inst_31174:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69600000; valaddr_reg:x12; val_offset:93459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93459*FLEN/8, x13, x9, x10)

inst_31175:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x690fffff; valaddr_reg:x12; val_offset:93462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93462*FLEN/8, x13, x9, x10)

inst_31176:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69700000; valaddr_reg:x12; val_offset:93465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93465*FLEN/8, x13, x9, x10)

inst_31177:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6907ffff; valaddr_reg:x12; val_offset:93468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93468*FLEN/8, x13, x9, x10)

inst_31178:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69780000; valaddr_reg:x12; val_offset:93471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93471*FLEN/8, x13, x9, x10)

inst_31179:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6903ffff; valaddr_reg:x12; val_offset:93474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93474*FLEN/8, x13, x9, x10)

inst_31180:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697c0000; valaddr_reg:x12; val_offset:93477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93477*FLEN/8, x13, x9, x10)

inst_31181:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6901ffff; valaddr_reg:x12; val_offset:93480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93480*FLEN/8, x13, x9, x10)

inst_31182:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697e0000; valaddr_reg:x12; val_offset:93483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93483*FLEN/8, x13, x9, x10)

inst_31183:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6900ffff; valaddr_reg:x12; val_offset:93486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93486*FLEN/8, x13, x9, x10)

inst_31184:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697f0000; valaddr_reg:x12; val_offset:93489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93489*FLEN/8, x13, x9, x10)

inst_31185:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69007fff; valaddr_reg:x12; val_offset:93492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93492*FLEN/8, x13, x9, x10)

inst_31186:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697f8000; valaddr_reg:x12; val_offset:93495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93495*FLEN/8, x13, x9, x10)

inst_31187:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69003fff; valaddr_reg:x12; val_offset:93498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93498*FLEN/8, x13, x9, x10)

inst_31188:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fc000; valaddr_reg:x12; val_offset:93501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93501*FLEN/8, x13, x9, x10)

inst_31189:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69001fff; valaddr_reg:x12; val_offset:93504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93504*FLEN/8, x13, x9, x10)

inst_31190:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fe000; valaddr_reg:x12; val_offset:93507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93507*FLEN/8, x13, x9, x10)

inst_31191:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69000fff; valaddr_reg:x12; val_offset:93510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93510*FLEN/8, x13, x9, x10)

inst_31192:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ff000; valaddr_reg:x12; val_offset:93513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93513*FLEN/8, x13, x9, x10)

inst_31193:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x690007ff; valaddr_reg:x12; val_offset:93516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93516*FLEN/8, x13, x9, x10)

inst_31194:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ff800; valaddr_reg:x12; val_offset:93519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93519*FLEN/8, x13, x9, x10)

inst_31195:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x690003ff; valaddr_reg:x12; val_offset:93522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93522*FLEN/8, x13, x9, x10)

inst_31196:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ffc00; valaddr_reg:x12; val_offset:93525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93525*FLEN/8, x13, x9, x10)

inst_31197:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x690001ff; valaddr_reg:x12; val_offset:93528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93528*FLEN/8, x13, x9, x10)

inst_31198:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ffe00; valaddr_reg:x12; val_offset:93531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93531*FLEN/8, x13, x9, x10)

inst_31199:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x690000ff; valaddr_reg:x12; val_offset:93534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93534*FLEN/8, x13, x9, x10)

inst_31200:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fff00; valaddr_reg:x12; val_offset:93537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93537*FLEN/8, x13, x9, x10)

inst_31201:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6900007f; valaddr_reg:x12; val_offset:93540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93540*FLEN/8, x13, x9, x10)

inst_31202:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fff80; valaddr_reg:x12; val_offset:93543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93543*FLEN/8, x13, x9, x10)

inst_31203:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6900003f; valaddr_reg:x12; val_offset:93546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93546*FLEN/8, x13, x9, x10)

inst_31204:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fffc0; valaddr_reg:x12; val_offset:93549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93549*FLEN/8, x13, x9, x10)

inst_31205:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6900001f; valaddr_reg:x12; val_offset:93552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93552*FLEN/8, x13, x9, x10)

inst_31206:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697fffe0; valaddr_reg:x12; val_offset:93555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93555*FLEN/8, x13, x9, x10)

inst_31207:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x6900000f; valaddr_reg:x12; val_offset:93558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93558*FLEN/8, x13, x9, x10)

inst_31208:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ffff0; valaddr_reg:x12; val_offset:93561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93561*FLEN/8, x13, x9, x10)

inst_31209:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69000007; valaddr_reg:x12; val_offset:93564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93564*FLEN/8, x13, x9, x10)

inst_31210:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ffff8; valaddr_reg:x12; val_offset:93567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93567*FLEN/8, x13, x9, x10)

inst_31211:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69000003; valaddr_reg:x12; val_offset:93570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93570*FLEN/8, x13, x9, x10)

inst_31212:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ffffc; valaddr_reg:x12; val_offset:93573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93573*FLEN/8, x13, x9, x10)

inst_31213:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x69000001; valaddr_reg:x12; val_offset:93576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93576*FLEN/8, x13, x9, x10)

inst_31214:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xd2 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x697ffffe; valaddr_reg:x12; val_offset:93579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93579*FLEN/8, x13, x9, x10)

inst_31215:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f7ffff8; valaddr_reg:x12; val_offset:93582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93582*FLEN/8, x13, x9, x10)

inst_31216:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f000007; valaddr_reg:x12; val_offset:93585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93585*FLEN/8, x13, x9, x10)

inst_31217:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f7ffffc; valaddr_reg:x12; val_offset:93588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93588*FLEN/8, x13, x9, x10)

inst_31218:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f000003; valaddr_reg:x12; val_offset:93591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93591*FLEN/8, x13, x9, x10)

inst_31219:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f7ffffe; valaddr_reg:x12; val_offset:93594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93594*FLEN/8, x13, x9, x10)

inst_31220:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f000001; valaddr_reg:x12; val_offset:93597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93597*FLEN/8, x13, x9, x10)

inst_31221:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f36db6d; valaddr_reg:x12; val_offset:93600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93600*FLEN/8, x13, x9, x10)

inst_31222:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f6db6db; valaddr_reg:x12; val_offset:93603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93603*FLEN/8, x13, x9, x10)

inst_31223:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f199999; valaddr_reg:x12; val_offset:93606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93606*FLEN/8, x13, x9, x10)

inst_31224:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f666666; valaddr_reg:x12; val_offset:93609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93609*FLEN/8, x13, x9, x10)

inst_31225:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f3bbbbb; valaddr_reg:x12; val_offset:93612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93612*FLEN/8, x13, x9, x10)

inst_31226:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f444444; valaddr_reg:x12; val_offset:93615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93615*FLEN/8, x13, x9, x10)

inst_31227:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f249249; valaddr_reg:x12; val_offset:93618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93618*FLEN/8, x13, x9, x10)

inst_31228:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f5b6db6; valaddr_reg:x12; val_offset:93621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93621*FLEN/8, x13, x9, x10)

inst_31229:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f333333; valaddr_reg:x12; val_offset:93624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93624*FLEN/8, x13, x9, x10)

inst_31230:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x1c9b21 and fs2 == 0 and fe2 == 0x81 and fm2 == 0x513d0c and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e1c9b21; op2val:0x40d13d0c;
op3val:0x7f4ccccc; valaddr_reg:x12; val_offset:93627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93627*FLEN/8, x13, x9, x10)

inst_31231:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69ffffff; valaddr_reg:x12; val_offset:93630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93630*FLEN/8, x13, x9, x10)

inst_31232:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69800000; valaddr_reg:x12; val_offset:93633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93633*FLEN/8, x13, x9, x10)

inst_31233:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69bfffff; valaddr_reg:x12; val_offset:93636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93636*FLEN/8, x13, x9, x10)

inst_31234:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69c00000; valaddr_reg:x12; val_offset:93639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93639*FLEN/8, x13, x9, x10)

inst_31235:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x699fffff; valaddr_reg:x12; val_offset:93642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93642*FLEN/8, x13, x9, x10)

inst_31236:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69e00000; valaddr_reg:x12; val_offset:93645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93645*FLEN/8, x13, x9, x10)

inst_31237:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x698fffff; valaddr_reg:x12; val_offset:93648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93648*FLEN/8, x13, x9, x10)

inst_31238:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69f00000; valaddr_reg:x12; val_offset:93651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93651*FLEN/8, x13, x9, x10)

inst_31239:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x6987ffff; valaddr_reg:x12; val_offset:93654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93654*FLEN/8, x13, x9, x10)

inst_31240:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69f80000; valaddr_reg:x12; val_offset:93657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93657*FLEN/8, x13, x9, x10)

inst_31241:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x6983ffff; valaddr_reg:x12; val_offset:93660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93660*FLEN/8, x13, x9, x10)

inst_31242:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69fc0000; valaddr_reg:x12; val_offset:93663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93663*FLEN/8, x13, x9, x10)

inst_31243:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x6981ffff; valaddr_reg:x12; val_offset:93666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93666*FLEN/8, x13, x9, x10)

inst_31244:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69fe0000; valaddr_reg:x12; val_offset:93669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93669*FLEN/8, x13, x9, x10)

inst_31245:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x6980ffff; valaddr_reg:x12; val_offset:93672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93672*FLEN/8, x13, x9, x10)

inst_31246:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69ff0000; valaddr_reg:x12; val_offset:93675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93675*FLEN/8, x13, x9, x10)

inst_31247:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69807fff; valaddr_reg:x12; val_offset:93678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93678*FLEN/8, x13, x9, x10)

inst_31248:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69ff8000; valaddr_reg:x12; val_offset:93681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93681*FLEN/8, x13, x9, x10)

inst_31249:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69803fff; valaddr_reg:x12; val_offset:93684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93684*FLEN/8, x13, x9, x10)

inst_31250:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69ffc000; valaddr_reg:x12; val_offset:93687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93687*FLEN/8, x13, x9, x10)

inst_31251:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69801fff; valaddr_reg:x12; val_offset:93690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93690*FLEN/8, x13, x9, x10)

inst_31252:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69ffe000; valaddr_reg:x12; val_offset:93693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93693*FLEN/8, x13, x9, x10)

inst_31253:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69800fff; valaddr_reg:x12; val_offset:93696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93696*FLEN/8, x13, x9, x10)

inst_31254:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69fff000; valaddr_reg:x12; val_offset:93699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93699*FLEN/8, x13, x9, x10)

inst_31255:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x698007ff; valaddr_reg:x12; val_offset:93702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93702*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_244)
inst_31256:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69fff800; valaddr_reg:x12; val_offset:93705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93705*FLEN/8, x13, x9, x10)

inst_31257:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x698003ff; valaddr_reg:x12; val_offset:93708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93708*FLEN/8, x13, x9, x10)

inst_31258:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69fffc00; valaddr_reg:x12; val_offset:93711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93711*FLEN/8, x13, x9, x10)

inst_31259:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x698001ff; valaddr_reg:x12; val_offset:93714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93714*FLEN/8, x13, x9, x10)

inst_31260:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69fffe00; valaddr_reg:x12; val_offset:93717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93717*FLEN/8, x13, x9, x10)

inst_31261:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x698000ff; valaddr_reg:x12; val_offset:93720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93720*FLEN/8, x13, x9, x10)

inst_31262:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69ffff00; valaddr_reg:x12; val_offset:93723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93723*FLEN/8, x13, x9, x10)

inst_31263:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x6980007f; valaddr_reg:x12; val_offset:93726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93726*FLEN/8, x13, x9, x10)

inst_31264:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69ffff80; valaddr_reg:x12; val_offset:93729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93729*FLEN/8, x13, x9, x10)

inst_31265:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x6980003f; valaddr_reg:x12; val_offset:93732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93732*FLEN/8, x13, x9, x10)

inst_31266:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69ffffc0; valaddr_reg:x12; val_offset:93735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93735*FLEN/8, x13, x9, x10)

inst_31267:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x6980001f; valaddr_reg:x12; val_offset:93738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93738*FLEN/8, x13, x9, x10)

inst_31268:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69ffffe0; valaddr_reg:x12; val_offset:93741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93741*FLEN/8, x13, x9, x10)

inst_31269:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x6980000f; valaddr_reg:x12; val_offset:93744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93744*FLEN/8, x13, x9, x10)

inst_31270:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69fffff0; valaddr_reg:x12; val_offset:93747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93747*FLEN/8, x13, x9, x10)

inst_31271:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69800007; valaddr_reg:x12; val_offset:93750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93750*FLEN/8, x13, x9, x10)

inst_31272:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69fffff8; valaddr_reg:x12; val_offset:93753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93753*FLEN/8, x13, x9, x10)

inst_31273:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69800003; valaddr_reg:x12; val_offset:93756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93756*FLEN/8, x13, x9, x10)

inst_31274:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69fffffc; valaddr_reg:x12; val_offset:93759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93759*FLEN/8, x13, x9, x10)

inst_31275:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69800001; valaddr_reg:x12; val_offset:93762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93762*FLEN/8, x13, x9, x10)

inst_31276:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xd3 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x69fffffe; valaddr_reg:x12; val_offset:93765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93765*FLEN/8, x13, x9, x10)

inst_31277:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f7ffff8; valaddr_reg:x12; val_offset:93768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93768*FLEN/8, x13, x9, x10)

inst_31278:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f000007; valaddr_reg:x12; val_offset:93771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93771*FLEN/8, x13, x9, x10)

inst_31279:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f7ffffc; valaddr_reg:x12; val_offset:93774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93774*FLEN/8, x13, x9, x10)

inst_31280:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f000003; valaddr_reg:x12; val_offset:93777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93777*FLEN/8, x13, x9, x10)

inst_31281:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f7ffffe; valaddr_reg:x12; val_offset:93780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93780*FLEN/8, x13, x9, x10)

inst_31282:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f000001; valaddr_reg:x12; val_offset:93783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93783*FLEN/8, x13, x9, x10)

inst_31283:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f36db6d; valaddr_reg:x12; val_offset:93786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93786*FLEN/8, x13, x9, x10)

inst_31284:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f6db6db; valaddr_reg:x12; val_offset:93789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93789*FLEN/8, x13, x9, x10)

inst_31285:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f199999; valaddr_reg:x12; val_offset:93792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93792*FLEN/8, x13, x9, x10)

inst_31286:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f666666; valaddr_reg:x12; val_offset:93795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93795*FLEN/8, x13, x9, x10)

inst_31287:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f3bbbbb; valaddr_reg:x12; val_offset:93798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93798*FLEN/8, x13, x9, x10)

inst_31288:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f444444; valaddr_reg:x12; val_offset:93801*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93801*FLEN/8, x13, x9, x10)

inst_31289:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f249249; valaddr_reg:x12; val_offset:93804*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93804*FLEN/8, x13, x9, x10)

inst_31290:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f5b6db6; valaddr_reg:x12; val_offset:93807*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93807*FLEN/8, x13, x9, x10)

inst_31291:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f333333; valaddr_reg:x12; val_offset:93810*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93810*FLEN/8, x13, x9, x10)

inst_31292:
// fs1 == 0 and fe1 == 0xf6 and fm1 == 0x3e7f0f and fs2 == 0 and fe2 == 0x87 and fm2 == 0x2c0388 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7b3e7f0f; op2val:0x43ac0388;
op3val:0x7f4ccccc; valaddr_reg:x12; val_offset:93813*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93813*FLEN/8, x13, x9, x10)

inst_31293:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7fffff; valaddr_reg:x12; val_offset:93816*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93816*FLEN/8, x13, x9, x10)

inst_31294:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a000000; valaddr_reg:x12; val_offset:93819*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93819*FLEN/8, x13, x9, x10)

inst_31295:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a3fffff; valaddr_reg:x12; val_offset:93822*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93822*FLEN/8, x13, x9, x10)

inst_31296:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a400000; valaddr_reg:x12; val_offset:93825*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93825*FLEN/8, x13, x9, x10)

inst_31297:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a1fffff; valaddr_reg:x12; val_offset:93828*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93828*FLEN/8, x13, x9, x10)

inst_31298:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a600000; valaddr_reg:x12; val_offset:93831*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93831*FLEN/8, x13, x9, x10)

inst_31299:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a0fffff; valaddr_reg:x12; val_offset:93834*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93834*FLEN/8, x13, x9, x10)

inst_31300:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a700000; valaddr_reg:x12; val_offset:93837*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93837*FLEN/8, x13, x9, x10)

inst_31301:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a07ffff; valaddr_reg:x12; val_offset:93840*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93840*FLEN/8, x13, x9, x10)

inst_31302:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a780000; valaddr_reg:x12; val_offset:93843*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93843*FLEN/8, x13, x9, x10)

inst_31303:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a03ffff; valaddr_reg:x12; val_offset:93846*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93846*FLEN/8, x13, x9, x10)

inst_31304:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7c0000; valaddr_reg:x12; val_offset:93849*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93849*FLEN/8, x13, x9, x10)

inst_31305:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a01ffff; valaddr_reg:x12; val_offset:93852*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93852*FLEN/8, x13, x9, x10)

inst_31306:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7e0000; valaddr_reg:x12; val_offset:93855*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93855*FLEN/8, x13, x9, x10)

inst_31307:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a00ffff; valaddr_reg:x12; val_offset:93858*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93858*FLEN/8, x13, x9, x10)

inst_31308:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7f0000; valaddr_reg:x12; val_offset:93861*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93861*FLEN/8, x13, x9, x10)

inst_31309:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a007fff; valaddr_reg:x12; val_offset:93864*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93864*FLEN/8, x13, x9, x10)

inst_31310:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7f8000; valaddr_reg:x12; val_offset:93867*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93867*FLEN/8, x13, x9, x10)

inst_31311:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a003fff; valaddr_reg:x12; val_offset:93870*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93870*FLEN/8, x13, x9, x10)

inst_31312:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7fc000; valaddr_reg:x12; val_offset:93873*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93873*FLEN/8, x13, x9, x10)

inst_31313:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a001fff; valaddr_reg:x12; val_offset:93876*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93876*FLEN/8, x13, x9, x10)

inst_31314:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7fe000; valaddr_reg:x12; val_offset:93879*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93879*FLEN/8, x13, x9, x10)

inst_31315:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a000fff; valaddr_reg:x12; val_offset:93882*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93882*FLEN/8, x13, x9, x10)

inst_31316:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7ff000; valaddr_reg:x12; val_offset:93885*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93885*FLEN/8, x13, x9, x10)

inst_31317:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a0007ff; valaddr_reg:x12; val_offset:93888*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93888*FLEN/8, x13, x9, x10)

inst_31318:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7ff800; valaddr_reg:x12; val_offset:93891*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93891*FLEN/8, x13, x9, x10)

inst_31319:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a0003ff; valaddr_reg:x12; val_offset:93894*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93894*FLEN/8, x13, x9, x10)

inst_31320:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7ffc00; valaddr_reg:x12; val_offset:93897*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93897*FLEN/8, x13, x9, x10)

inst_31321:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a0001ff; valaddr_reg:x12; val_offset:93900*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93900*FLEN/8, x13, x9, x10)

inst_31322:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7ffe00; valaddr_reg:x12; val_offset:93903*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93903*FLEN/8, x13, x9, x10)

inst_31323:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a0000ff; valaddr_reg:x12; val_offset:93906*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93906*FLEN/8, x13, x9, x10)

inst_31324:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7fff00; valaddr_reg:x12; val_offset:93909*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93909*FLEN/8, x13, x9, x10)

inst_31325:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a00007f; valaddr_reg:x12; val_offset:93912*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93912*FLEN/8, x13, x9, x10)

inst_31326:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7fff80; valaddr_reg:x12; val_offset:93915*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93915*FLEN/8, x13, x9, x10)

inst_31327:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a00003f; valaddr_reg:x12; val_offset:93918*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93918*FLEN/8, x13, x9, x10)

inst_31328:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7fffc0; valaddr_reg:x12; val_offset:93921*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93921*FLEN/8, x13, x9, x10)

inst_31329:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a00001f; valaddr_reg:x12; val_offset:93924*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93924*FLEN/8, x13, x9, x10)

inst_31330:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7fffe0; valaddr_reg:x12; val_offset:93927*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93927*FLEN/8, x13, x9, x10)

inst_31331:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a00000f; valaddr_reg:x12; val_offset:93930*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93930*FLEN/8, x13, x9, x10)

inst_31332:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7ffff0; valaddr_reg:x12; val_offset:93933*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93933*FLEN/8, x13, x9, x10)

inst_31333:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a000007; valaddr_reg:x12; val_offset:93936*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93936*FLEN/8, x13, x9, x10)

inst_31334:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7ffff8; valaddr_reg:x12; val_offset:93939*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93939*FLEN/8, x13, x9, x10)

inst_31335:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a000003; valaddr_reg:x12; val_offset:93942*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93942*FLEN/8, x13, x9, x10)

inst_31336:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7ffffc; valaddr_reg:x12; val_offset:93945*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93945*FLEN/8, x13, x9, x10)

inst_31337:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a000001; valaddr_reg:x12; val_offset:93948*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93948*FLEN/8, x13, x9, x10)

inst_31338:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xd4 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x6a7ffffe; valaddr_reg:x12; val_offset:93951*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93951*FLEN/8, x13, x9, x10)

inst_31339:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f7ffff8; valaddr_reg:x12; val_offset:93954*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93954*FLEN/8, x13, x9, x10)

inst_31340:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f000007; valaddr_reg:x12; val_offset:93957*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93957*FLEN/8, x13, x9, x10)

inst_31341:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f7ffffc; valaddr_reg:x12; val_offset:93960*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93960*FLEN/8, x13, x9, x10)

inst_31342:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f000003; valaddr_reg:x12; val_offset:93963*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93963*FLEN/8, x13, x9, x10)

inst_31343:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f7ffffe; valaddr_reg:x12; val_offset:93966*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93966*FLEN/8, x13, x9, x10)

inst_31344:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f000001; valaddr_reg:x12; val_offset:93969*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93969*FLEN/8, x13, x9, x10)

inst_31345:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f36db6d; valaddr_reg:x12; val_offset:93972*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93972*FLEN/8, x13, x9, x10)

inst_31346:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f6db6db; valaddr_reg:x12; val_offset:93975*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93975*FLEN/8, x13, x9, x10)

inst_31347:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f199999; valaddr_reg:x12; val_offset:93978*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93978*FLEN/8, x13, x9, x10)

inst_31348:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f666666; valaddr_reg:x12; val_offset:93981*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93981*FLEN/8, x13, x9, x10)

inst_31349:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f3bbbbb; valaddr_reg:x12; val_offset:93984*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93984*FLEN/8, x13, x9, x10)

inst_31350:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f444444; valaddr_reg:x12; val_offset:93987*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93987*FLEN/8, x13, x9, x10)

inst_31351:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f249249; valaddr_reg:x12; val_offset:93990*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93990*FLEN/8, x13, x9, x10)

inst_31352:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f5b6db6; valaddr_reg:x12; val_offset:93993*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93993*FLEN/8, x13, x9, x10)

inst_31353:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f333333; valaddr_reg:x12; val_offset:93996*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93996*FLEN/8, x13, x9, x10)

inst_31354:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x55368e and fs2 == 0 and fe2 == 0x81 and fm2 == 0x19afc4 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e55368e; op2val:0x4099afc4;
op3val:0x7f4ccccc; valaddr_reg:x12; val_offset:93999*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 93999*FLEN/8, x13, x9, x10)

inst_31355:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6affffff; valaddr_reg:x12; val_offset:94002*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94002*FLEN/8, x13, x9, x10)

inst_31356:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a800000; valaddr_reg:x12; val_offset:94005*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94005*FLEN/8, x13, x9, x10)

inst_31357:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6abfffff; valaddr_reg:x12; val_offset:94008*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94008*FLEN/8, x13, x9, x10)

inst_31358:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6ac00000; valaddr_reg:x12; val_offset:94011*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94011*FLEN/8, x13, x9, x10)

inst_31359:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a9fffff; valaddr_reg:x12; val_offset:94014*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94014*FLEN/8, x13, x9, x10)

inst_31360:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6ae00000; valaddr_reg:x12; val_offset:94017*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94017*FLEN/8, x13, x9, x10)

inst_31361:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a8fffff; valaddr_reg:x12; val_offset:94020*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94020*FLEN/8, x13, x9, x10)

inst_31362:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6af00000; valaddr_reg:x12; val_offset:94023*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94023*FLEN/8, x13, x9, x10)

inst_31363:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a87ffff; valaddr_reg:x12; val_offset:94026*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94026*FLEN/8, x13, x9, x10)

inst_31364:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6af80000; valaddr_reg:x12; val_offset:94029*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94029*FLEN/8, x13, x9, x10)

inst_31365:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a83ffff; valaddr_reg:x12; val_offset:94032*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94032*FLEN/8, x13, x9, x10)

inst_31366:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6afc0000; valaddr_reg:x12; val_offset:94035*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94035*FLEN/8, x13, x9, x10)

inst_31367:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a81ffff; valaddr_reg:x12; val_offset:94038*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94038*FLEN/8, x13, x9, x10)

inst_31368:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6afe0000; valaddr_reg:x12; val_offset:94041*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94041*FLEN/8, x13, x9, x10)

inst_31369:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a80ffff; valaddr_reg:x12; val_offset:94044*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94044*FLEN/8, x13, x9, x10)

inst_31370:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6aff0000; valaddr_reg:x12; val_offset:94047*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94047*FLEN/8, x13, x9, x10)

inst_31371:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a807fff; valaddr_reg:x12; val_offset:94050*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94050*FLEN/8, x13, x9, x10)

inst_31372:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6aff8000; valaddr_reg:x12; val_offset:94053*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94053*FLEN/8, x13, x9, x10)

inst_31373:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a803fff; valaddr_reg:x12; val_offset:94056*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94056*FLEN/8, x13, x9, x10)

inst_31374:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6affc000; valaddr_reg:x12; val_offset:94059*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94059*FLEN/8, x13, x9, x10)

inst_31375:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a801fff; valaddr_reg:x12; val_offset:94062*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94062*FLEN/8, x13, x9, x10)

inst_31376:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6affe000; valaddr_reg:x12; val_offset:94065*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94065*FLEN/8, x13, x9, x10)

inst_31377:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a800fff; valaddr_reg:x12; val_offset:94068*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94068*FLEN/8, x13, x9, x10)

inst_31378:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6afff000; valaddr_reg:x12; val_offset:94071*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94071*FLEN/8, x13, x9, x10)

inst_31379:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a8007ff; valaddr_reg:x12; val_offset:94074*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94074*FLEN/8, x13, x9, x10)

inst_31380:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6afff800; valaddr_reg:x12; val_offset:94077*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94077*FLEN/8, x13, x9, x10)

inst_31381:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a8003ff; valaddr_reg:x12; val_offset:94080*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94080*FLEN/8, x13, x9, x10)

inst_31382:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6afffc00; valaddr_reg:x12; val_offset:94083*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94083*FLEN/8, x13, x9, x10)

inst_31383:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a8001ff; valaddr_reg:x12; val_offset:94086*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94086*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_245)
inst_31384:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6afffe00; valaddr_reg:x12; val_offset:94089*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94089*FLEN/8, x13, x9, x10)

inst_31385:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a8000ff; valaddr_reg:x12; val_offset:94092*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94092*FLEN/8, x13, x9, x10)

inst_31386:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6affff00; valaddr_reg:x12; val_offset:94095*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94095*FLEN/8, x13, x9, x10)

inst_31387:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a80007f; valaddr_reg:x12; val_offset:94098*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94098*FLEN/8, x13, x9, x10)

inst_31388:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6affff80; valaddr_reg:x12; val_offset:94101*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94101*FLEN/8, x13, x9, x10)

inst_31389:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a80003f; valaddr_reg:x12; val_offset:94104*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94104*FLEN/8, x13, x9, x10)

inst_31390:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6affffc0; valaddr_reg:x12; val_offset:94107*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94107*FLEN/8, x13, x9, x10)

inst_31391:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a80001f; valaddr_reg:x12; val_offset:94110*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94110*FLEN/8, x13, x9, x10)

inst_31392:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6affffe0; valaddr_reg:x12; val_offset:94113*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94113*FLEN/8, x13, x9, x10)

inst_31393:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a80000f; valaddr_reg:x12; val_offset:94116*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94116*FLEN/8, x13, x9, x10)

inst_31394:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6afffff0; valaddr_reg:x12; val_offset:94119*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94119*FLEN/8, x13, x9, x10)

inst_31395:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a800007; valaddr_reg:x12; val_offset:94122*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94122*FLEN/8, x13, x9, x10)

inst_31396:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6afffff8; valaddr_reg:x12; val_offset:94125*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94125*FLEN/8, x13, x9, x10)

inst_31397:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a800003; valaddr_reg:x12; val_offset:94128*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94128*FLEN/8, x13, x9, x10)

inst_31398:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6afffffc; valaddr_reg:x12; val_offset:94131*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94131*FLEN/8, x13, x9, x10)

inst_31399:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6a800001; valaddr_reg:x12; val_offset:94134*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94134*FLEN/8, x13, x9, x10)

inst_31400:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xd5 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x6afffffe; valaddr_reg:x12; val_offset:94137*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94137*FLEN/8, x13, x9, x10)

inst_31401:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x7f7ffff8; valaddr_reg:x12; val_offset:94140*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94140*FLEN/8, x13, x9, x10)

inst_31402:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x7f000007; valaddr_reg:x12; val_offset:94143*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94143*FLEN/8, x13, x9, x10)

inst_31403:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x7f7ffffc; valaddr_reg:x12; val_offset:94146*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94146*FLEN/8, x13, x9, x10)

inst_31404:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x7f000003; valaddr_reg:x12; val_offset:94149*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94149*FLEN/8, x13, x9, x10)

inst_31405:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x65b1ee and fs2 == 0 and fe2 == 0x80 and fm2 == 0x0ea8a1 and fs3 == 0 and fe3 == 0xfe and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0x00000000 and rs3_sgn_prefix == 0x00000000  
/* opcode: fnmadd.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ee5b1ee; op2val:0x400ea8a1;
op3val:0x7f7ffffe; valaddr_reg:x12; val_offset:94152*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmadd.s, x31, x30, x29, x28, dyn, 0, 0, x12, 94152*FLEN/8, x13, x9, x10)

#endif
RVTEST_CODE_END
RVMODEL_HALT
RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(1702887296,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(1694498879,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(1702887360,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(1694498847,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(1702887392,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(1694498831,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(1702887408,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(1694498823,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(1702887416,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(1694498819,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(1702887420,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(1694498817,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(1702887422,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2125242565,32,FLEN)
NAN_BOXED(1077793163,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711276031,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702887424,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1707081727,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1707081728,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1704984575,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1709178880,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1703935999,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1710227456,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1703411711,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1710751744,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1703149567,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711013888,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1703018495,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711144960,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702952959,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711210496,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702920191,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711243264,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702903807,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711259648,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702895615,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711267840,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702891519,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711271936,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702889471,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711273984,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702888447,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711275008,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702887935,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711275520,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702887679,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711275776,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702887551,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711275904,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702887487,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711275968,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702887455,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711276000,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702887439,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711276016,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702887431,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711276024,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702887427,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711276028,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1702887425,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(1711276030,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2120881652,32,FLEN)
NAN_BOXED(1082915741,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719664639,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711276032,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1715470335,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1715470336,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1713373183,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1717567488,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1712324607,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1718616064,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711800319,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719140352,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711538175,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719402496,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711407103,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719533568,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711341567,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719599104,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711308799,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719631872,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711292415,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719648256,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711284223,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719656448,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711280127,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719660544,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711278079,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719662592,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711277055,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719663616,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711276543,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719664128,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711276287,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719664384,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711276159,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719664512,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711276095,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719664576,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711276063,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719664608,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711276047,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719664624,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711276039,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719664632,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711276035,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719664636,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1711276033,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(1719664638,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2123980514,32,FLEN)
NAN_BOXED(1079355135,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728053247,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719664640,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1723858943,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1723858944,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1721761791,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1725956096,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1720713215,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1727004672,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1720188927,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1727528960,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719926783,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1727791104,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719795711,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1727922176,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719730175,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1727987712,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719697407,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728020480,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719681023,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728036864,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719672831,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728045056,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719668735,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728049152,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719666687,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728051200,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719665663,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728052224,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719665151,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728052736,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719664895,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728052992,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719664767,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728053120,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719664703,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728053184,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719664671,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728053216,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719664655,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728053232,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719664647,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728053240,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719664643,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728053244,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1719664641,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(1728053246,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2132171342,32,FLEN)
NAN_BOXED(1071247575,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736441855,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728053248,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1732247551,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1732247552,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1730150399,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1734344704,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1729101823,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1735393280,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728577535,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1735917568,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728315391,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736179712,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728184319,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736310784,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728118783,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736376320,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728086015,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736409088,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728069631,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736425472,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728061439,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736433664,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728057343,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736437760,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728055295,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736439808,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728054271,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736440832,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728053759,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736441344,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728053503,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736441600,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728053375,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736441728,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728053311,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736441792,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728053279,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736441824,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728053263,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736441840,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728053255,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736441848,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728053251,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736441852,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1728053249,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(1736441854,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2130917147,32,FLEN)
NAN_BOXED(1073330718,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744830463,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736441856,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1740636159,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1740636160,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1738539007,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1742733312,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1737490431,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1743781888,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736966143,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744306176,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736703999,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744568320,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736572927,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744699392,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736507391,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744764928,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736474623,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744797696,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736458239,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744814080,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736450047,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744822272,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736445951,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744826368,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736443903,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744828416,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736442879,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744829440,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736442367,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744829952,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736442111,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744830208,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736441983,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744830336,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736441919,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744830400,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736441887,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744830432,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736441871,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744830448,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736441863,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744830456,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736441859,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744830460,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1736441857,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(1744830462,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2126318328,32,FLEN)
NAN_BOXED(1076712986,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753219071,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744830464,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1749024767,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1749024768,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1746927615,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1751121920,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1745879039,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1752170496,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1745354751,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1752694784,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1745092607,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1752956928,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744961535,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753088000,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744895999,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753153536,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744863231,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753186304,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744846847,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753202688,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744838655,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753210880,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744834559,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753214976,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744832511,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753217024,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744831487,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753218048,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744830975,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753218560,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744830719,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753218816,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744830591,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753218944,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744830527,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753219008,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744830495,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753219040,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744830479,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753219056,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744830471,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753219064,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744830467,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753219068,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1744830465,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(1753219070,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2130228320,32,FLEN)
NAN_BOXED(1073987891,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761607679,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753219072,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1757413375,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1757413376,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1755316223,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1759510528,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1754267647,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1760559104,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753743359,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761083392,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753481215,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761345536,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753350143,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761476608,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753284607,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761542144,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753251839,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761574912,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753235455,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761591296,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753227263,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761599488,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753223167,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761603584,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753221119,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761605632,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753220095,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761606656,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753219583,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761607168,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753219327,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761607424,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753219199,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761607552,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753219135,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761607616,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753219103,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761607648,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753219087,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761607664,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753219079,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761607672,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753219075,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761607676,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1753219073,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(1761607678,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2123430779,32,FLEN)
NAN_BOXED(1080165250,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996287,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607680,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1765801983,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1765801984,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1763704831,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1767899136,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1762656255,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1768947712,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1762131967,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769472000,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761869823,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769734144,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761738751,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769865216,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761673215,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769930752,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761640447,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769963520,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761624063,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769979904,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761615871,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769988096,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761611775,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769992192,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761609727,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769994240,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761608703,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769995264,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761608191,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769995776,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607935,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996032,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607807,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996160,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607743,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996224,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607711,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996256,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607695,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996272,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607687,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996280,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607683,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996284,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1761607681,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(1769996286,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2115803937,32,FLEN)
NAN_BOXED(1087454476,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778384895,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1769996288,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1774190591,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1774190592,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1772093439,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1776287744,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1771044863,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1777336320,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1770520575,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1777860608,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1770258431,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778122752,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1770127359,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778253824,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1770061823,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778319360,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1770029055,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778352128,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1770012671,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778368512,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1770004479,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778376704,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1770000383,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778380800,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1769998335,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778382848,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1769997311,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778383872,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1769996799,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778384384,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1769996543,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778384640,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1769996415,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778384768,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1769996351,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778384832,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1769996319,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778384864,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1769996303,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778384880,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1769996295,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778384888,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1769996291,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778384892,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1769996289,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(1778384894,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2067693327,32,FLEN)
NAN_BOXED(1135346568,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786773503,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778384896,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1782579199,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1782579200,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1780482047,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1784676352,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1779433471,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1785724928,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778909183,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786249216,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778647039,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786511360,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778515967,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786642432,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778450431,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786707968,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778417663,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786740736,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778401279,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786757120,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778393087,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786765312,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778388991,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786769408,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778386943,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786771456,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778385919,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786772480,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778385407,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786772992,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778385151,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786773248,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778385023,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786773376,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778384959,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786773440,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778384927,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786773472,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778384911,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786773488,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778384903,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786773496,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778384899,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786773500,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1778384897,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(1786773502,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2119513742,32,FLEN)
NAN_BOXED(1083813828,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795162111,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786773504,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1790967807,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1790967808,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1788870655,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1793064960,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1787822079,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1794113536,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1787297791,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1794637824,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1787035647,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1794899968,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786904575,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795031040,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786839039,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795096576,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786806271,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795129344,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786789887,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795145728,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786781695,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795153920,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786777599,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795158016,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786775551,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795160064,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786774527,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795161088,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786774015,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795161600,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786773759,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795161856,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786773631,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795161984,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786773567,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795162048,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786773535,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795162080,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786773519,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795162096,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786773511,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795162104,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786773507,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795162108,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1786773505,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(1795162110,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2135180356,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2133103177,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2136698294,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2134061875,32,FLEN)
NAN_BOXED(2128982510,32,FLEN)
NAN_BOXED(1074702497,32,FLEN)
NAN_BOXED(2135739596,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803550719,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795162112,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1799356415,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1799356416,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1797259263,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1801453568,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1796210687,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1802502144,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795686399,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803026432,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795424255,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803288576,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795293183,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803419648,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795227647,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803485184,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795194879,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803517952,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795178495,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803534336,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795170303,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803542528,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795166207,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803546624,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795164159,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803548672,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795163135,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803549696,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795162623,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803550208,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795162367,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803550464,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795162239,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803550592,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795162175,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803550656,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795162143,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803550688,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795162127,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803550704,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795162119,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803550712,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795162115,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803550716,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1795162113,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(1803550718,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(2139095032,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(2130706439,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(2139095036,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(2130706435,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(2139095038,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(2130706433,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(2134301549,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(2137896667,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(2132384153,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(2137417318,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
NAN_BOXED(2134621115,32,FLEN)
NAN_BOXED(2133411710,32,FLEN)
NAN_BOXED(1069650647,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_12:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_13:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_14:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_15:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_16:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_17:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_18:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_19:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_20:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_21:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_22:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_23:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_24:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_25:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_26:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_27:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_28:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_29:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_30:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_31:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_32:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_33:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_34:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_35:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_36:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_37:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_38:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_39:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_40:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_41:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_42:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_43:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_44:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_45:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_46:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_47:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_48:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_49:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_50:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_51:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_52:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_53:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_54:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_55:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_56:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_57:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_58:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_59:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_60:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_61:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_62:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_63:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_64:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_65:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_66:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_67:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_68:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_69:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_70:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_71:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_72:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_73:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_74:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_75:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_76:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_77:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_78:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_79:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_80:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_81:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_82:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_83:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_84:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_85:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_86:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_87:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_88:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_89:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_90:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_91:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_92:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_93:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_94:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_95:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_96:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_97:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_98:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_99:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_100:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_101:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_102:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_103:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_104:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_105:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_106:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_107:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_108:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_109:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_110:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_111:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_112:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_113:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_114:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_115:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_116:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_117:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_118:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_119:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_120:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_121:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_122:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_123:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_124:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_125:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_126:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_127:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_128:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_129:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_130:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_131:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_132:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_133:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_134:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_135:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_136:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_137:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_138:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_139:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_140:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_141:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_142:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_143:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_144:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_145:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_146:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_147:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_148:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_149:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_150:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_151:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_152:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_153:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_154:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_155:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_156:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_157:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_158:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_159:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_160:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_161:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_162:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_163:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_164:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_165:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_166:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_167:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_168:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_169:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_170:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_171:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_172:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_173:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_174:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_175:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_176:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_177:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_178:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_179:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_180:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_181:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_182:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_183:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_184:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_185:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_186:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_187:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_188:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_189:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_190:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_191:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_192:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_193:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_194:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_195:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_196:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_197:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_198:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_199:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_200:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_201:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_202:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_203:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_204:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_205:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_206:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_207:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_208:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_209:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_210:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_211:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_212:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_213:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_214:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_215:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_216:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_217:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_218:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_219:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_220:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_221:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_222:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_223:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_224:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_225:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_226:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_227:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_228:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_229:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_230:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_231:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_232:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_233:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_234:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_235:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_236:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_237:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_238:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_239:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_240:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_241:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_242:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_243:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_244:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_245:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_246:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_247:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_248:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_249:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_250:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_251:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_252:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_253:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_254:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_255:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_256:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_257:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_258:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_259:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_260:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_261:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_262:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_263:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_264:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_265:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_266:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_267:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_268:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_269:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_270:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_271:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_272:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_273:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_274:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_275:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_276:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_277:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_278:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_279:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_280:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_281:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_282:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_283:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_284:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_285:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_286:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_287:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_288:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_289:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_290:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_291:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_292:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_293:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_294:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_295:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_296:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_297:
    .fill 180*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
