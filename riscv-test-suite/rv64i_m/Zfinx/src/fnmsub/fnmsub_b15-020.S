
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.11.0
// timestamp : Mon Feb  5 07:40:16 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/riscv/riscv-ctg/sample_cgfs/dataset.cgf \
//                  --cgf /home/riscv/riscv-ctg/sample_cgfs/sample_cgfs_fext/RV64Zfinx/fnmsub.s.cgf \
 \
//                  -- xlen 64  \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.s instruction of the RISC-V RV64_Zfinx,RV64_Zdinx extension for the fnmsub_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV64I_Zfinx,RV64I_Zdinx")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zfinx.*);def TEST_CASE_1=True;",fnmsub_b15)

RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_14573:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe80007f; valaddr_reg:x12; val_offset:43656*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43656*FLEN/8, x13, x9, x10)

inst_14574:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbeffffc0; valaddr_reg:x12; val_offset:43659*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43659*FLEN/8, x13, x9, x10)

inst_14575:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe80003f; valaddr_reg:x12; val_offset:43662*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43662*FLEN/8, x13, x9, x10)

inst_14576:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbeffffe0; valaddr_reg:x12; val_offset:43665*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43665*FLEN/8, x13, x9, x10)

inst_14577:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe80001f; valaddr_reg:x12; val_offset:43668*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43668*FLEN/8, x13, x9, x10)

inst_14578:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefffff0; valaddr_reg:x12; val_offset:43671*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43671*FLEN/8, x13, x9, x10)

inst_14579:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe80000f; valaddr_reg:x12; val_offset:43674*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43674*FLEN/8, x13, x9, x10)

inst_14580:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefffff8; valaddr_reg:x12; val_offset:43677*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43677*FLEN/8, x13, x9, x10)

inst_14581:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe800007; valaddr_reg:x12; val_offset:43680*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43680*FLEN/8, x13, x9, x10)

inst_14582:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefffffc; valaddr_reg:x12; val_offset:43683*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43683*FLEN/8, x13, x9, x10)

inst_14583:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe800003; valaddr_reg:x12; val_offset:43686*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43686*FLEN/8, x13, x9, x10)

inst_14584:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbefffffe; valaddr_reg:x12; val_offset:43689*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43689*FLEN/8, x13, x9, x10)

inst_14585:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7d and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbe800001; valaddr_reg:x12; val_offset:43692*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43692*FLEN/8, x13, x9, x10)

inst_14586:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:43695*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43695*FLEN/8, x13, x9, x10)

inst_14587:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbf800007; valaddr_reg:x12; val_offset:43698*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43698*FLEN/8, x13, x9, x10)

inst_14588:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:43701*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43701*FLEN/8, x13, x9, x10)

inst_14589:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbf800003; valaddr_reg:x12; val_offset:43704*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43704*FLEN/8, x13, x9, x10)

inst_14590:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:43707*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43707*FLEN/8, x13, x9, x10)

inst_14591:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbf800001; valaddr_reg:x12; val_offset:43710*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43710*FLEN/8, x13, x9, x10)

inst_14592:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:43713*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43713*FLEN/8, x13, x9, x10)

inst_14593:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:43716*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43716*FLEN/8, x13, x9, x10)

inst_14594:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbf999999; valaddr_reg:x12; val_offset:43719*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43719*FLEN/8, x13, x9, x10)

inst_14595:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:43722*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43722*FLEN/8, x13, x9, x10)

inst_14596:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:43725*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43725*FLEN/8, x13, x9, x10)

inst_14597:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:43728*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43728*FLEN/8, x13, x9, x10)

inst_14598:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:43731*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43731*FLEN/8, x13, x9, x10)

inst_14599:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:43734*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43734*FLEN/8, x13, x9, x10)

inst_14600:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:43737*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43737*FLEN/8, x13, x9, x10)

inst_14601:
// fs1 == 0 and fe1 == 0xfc and fm1 == 0x4e462d and fs2 == 1 and fe2 == 0x01 and fm2 == 0x1edb48 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7e4e462d; op2val:0x809edb48;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:43740*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43740*FLEN/8, x13, x9, x10)

inst_14602:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf000000; valaddr_reg:x12; val_offset:43743*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43743*FLEN/8, x13, x9, x10)

inst_14603:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7fffff; valaddr_reg:x12; val_offset:43746*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43746*FLEN/8, x13, x9, x10)

inst_14604:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf400000; valaddr_reg:x12; val_offset:43749*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43749*FLEN/8, x13, x9, x10)

inst_14605:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf3fffff; valaddr_reg:x12; val_offset:43752*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43752*FLEN/8, x13, x9, x10)

inst_14606:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf600000; valaddr_reg:x12; val_offset:43755*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43755*FLEN/8, x13, x9, x10)

inst_14607:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf1fffff; valaddr_reg:x12; val_offset:43758*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43758*FLEN/8, x13, x9, x10)

inst_14608:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf700000; valaddr_reg:x12; val_offset:43761*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43761*FLEN/8, x13, x9, x10)

inst_14609:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf0fffff; valaddr_reg:x12; val_offset:43764*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43764*FLEN/8, x13, x9, x10)

inst_14610:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf780000; valaddr_reg:x12; val_offset:43767*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43767*FLEN/8, x13, x9, x10)

inst_14611:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf07ffff; valaddr_reg:x12; val_offset:43770*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43770*FLEN/8, x13, x9, x10)

inst_14612:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7c0000; valaddr_reg:x12; val_offset:43773*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43773*FLEN/8, x13, x9, x10)

inst_14613:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf03ffff; valaddr_reg:x12; val_offset:43776*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43776*FLEN/8, x13, x9, x10)

inst_14614:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7e0000; valaddr_reg:x12; val_offset:43779*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43779*FLEN/8, x13, x9, x10)

inst_14615:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf01ffff; valaddr_reg:x12; val_offset:43782*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43782*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_114)
inst_14616:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7f0000; valaddr_reg:x12; val_offset:43785*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43785*FLEN/8, x13, x9, x10)

inst_14617:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf00ffff; valaddr_reg:x12; val_offset:43788*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43788*FLEN/8, x13, x9, x10)

inst_14618:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7f8000; valaddr_reg:x12; val_offset:43791*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43791*FLEN/8, x13, x9, x10)

inst_14619:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf007fff; valaddr_reg:x12; val_offset:43794*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43794*FLEN/8, x13, x9, x10)

inst_14620:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7fc000; valaddr_reg:x12; val_offset:43797*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43797*FLEN/8, x13, x9, x10)

inst_14621:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf003fff; valaddr_reg:x12; val_offset:43800*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43800*FLEN/8, x13, x9, x10)

inst_14622:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7fe000; valaddr_reg:x12; val_offset:43803*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43803*FLEN/8, x13, x9, x10)

inst_14623:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf001fff; valaddr_reg:x12; val_offset:43806*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43806*FLEN/8, x13, x9, x10)

inst_14624:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7ff000; valaddr_reg:x12; val_offset:43809*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43809*FLEN/8, x13, x9, x10)

inst_14625:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf000fff; valaddr_reg:x12; val_offset:43812*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43812*FLEN/8, x13, x9, x10)

inst_14626:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7ff800; valaddr_reg:x12; val_offset:43815*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43815*FLEN/8, x13, x9, x10)

inst_14627:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf0007ff; valaddr_reg:x12; val_offset:43818*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43818*FLEN/8, x13, x9, x10)

inst_14628:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7ffc00; valaddr_reg:x12; val_offset:43821*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43821*FLEN/8, x13, x9, x10)

inst_14629:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf0003ff; valaddr_reg:x12; val_offset:43824*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43824*FLEN/8, x13, x9, x10)

inst_14630:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7ffe00; valaddr_reg:x12; val_offset:43827*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43827*FLEN/8, x13, x9, x10)

inst_14631:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf0001ff; valaddr_reg:x12; val_offset:43830*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43830*FLEN/8, x13, x9, x10)

inst_14632:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7fff00; valaddr_reg:x12; val_offset:43833*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43833*FLEN/8, x13, x9, x10)

inst_14633:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf0000ff; valaddr_reg:x12; val_offset:43836*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43836*FLEN/8, x13, x9, x10)

inst_14634:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7fff80; valaddr_reg:x12; val_offset:43839*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43839*FLEN/8, x13, x9, x10)

inst_14635:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf00007f; valaddr_reg:x12; val_offset:43842*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43842*FLEN/8, x13, x9, x10)

inst_14636:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7fffc0; valaddr_reg:x12; val_offset:43845*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43845*FLEN/8, x13, x9, x10)

inst_14637:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf00003f; valaddr_reg:x12; val_offset:43848*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43848*FLEN/8, x13, x9, x10)

inst_14638:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7fffe0; valaddr_reg:x12; val_offset:43851*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43851*FLEN/8, x13, x9, x10)

inst_14639:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf00001f; valaddr_reg:x12; val_offset:43854*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43854*FLEN/8, x13, x9, x10)

inst_14640:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7ffff0; valaddr_reg:x12; val_offset:43857*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43857*FLEN/8, x13, x9, x10)

inst_14641:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf00000f; valaddr_reg:x12; val_offset:43860*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43860*FLEN/8, x13, x9, x10)

inst_14642:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7ffff8; valaddr_reg:x12; val_offset:43863*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43863*FLEN/8, x13, x9, x10)

inst_14643:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf000007; valaddr_reg:x12; val_offset:43866*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43866*FLEN/8, x13, x9, x10)

inst_14644:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7ffffc; valaddr_reg:x12; val_offset:43869*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43869*FLEN/8, x13, x9, x10)

inst_14645:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf000003; valaddr_reg:x12; val_offset:43872*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43872*FLEN/8, x13, x9, x10)

inst_14646:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf7ffffe; valaddr_reg:x12; val_offset:43875*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43875*FLEN/8, x13, x9, x10)

inst_14647:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7e and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf000001; valaddr_reg:x12; val_offset:43878*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43878*FLEN/8, x13, x9, x10)

inst_14648:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:43881*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43881*FLEN/8, x13, x9, x10)

inst_14649:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf800007; valaddr_reg:x12; val_offset:43884*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43884*FLEN/8, x13, x9, x10)

inst_14650:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:43887*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43887*FLEN/8, x13, x9, x10)

inst_14651:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf800003; valaddr_reg:x12; val_offset:43890*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43890*FLEN/8, x13, x9, x10)

inst_14652:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:43893*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43893*FLEN/8, x13, x9, x10)

inst_14653:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf800001; valaddr_reg:x12; val_offset:43896*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43896*FLEN/8, x13, x9, x10)

inst_14654:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:43899*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43899*FLEN/8, x13, x9, x10)

inst_14655:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:43902*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43902*FLEN/8, x13, x9, x10)

inst_14656:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbf999999; valaddr_reg:x12; val_offset:43905*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43905*FLEN/8, x13, x9, x10)

inst_14657:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:43908*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43908*FLEN/8, x13, x9, x10)

inst_14658:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:43911*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43911*FLEN/8, x13, x9, x10)

inst_14659:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:43914*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43914*FLEN/8, x13, x9, x10)

inst_14660:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:43917*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43917*FLEN/8, x13, x9, x10)

inst_14661:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:43920*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43920*FLEN/8, x13, x9, x10)

inst_14662:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:43923*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43923*FLEN/8, x13, x9, x10)

inst_14663:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x4a785f and fs2 == 1 and fe2 == 0x00 and fm2 == 0x50eba9 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eca785f; op2val:0x8050eba9;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:43926*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43926*FLEN/8, x13, x9, x10)

inst_14664:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf800000; valaddr_reg:x12; val_offset:43929*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43929*FLEN/8, x13, x9, x10)

inst_14665:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfffffff; valaddr_reg:x12; val_offset:43932*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43932*FLEN/8, x13, x9, x10)

inst_14666:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfc00000; valaddr_reg:x12; val_offset:43935*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43935*FLEN/8, x13, x9, x10)

inst_14667:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfbfffff; valaddr_reg:x12; val_offset:43938*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43938*FLEN/8, x13, x9, x10)

inst_14668:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfe00000; valaddr_reg:x12; val_offset:43941*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43941*FLEN/8, x13, x9, x10)

inst_14669:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf9fffff; valaddr_reg:x12; val_offset:43944*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43944*FLEN/8, x13, x9, x10)

inst_14670:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbff00000; valaddr_reg:x12; val_offset:43947*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43947*FLEN/8, x13, x9, x10)

inst_14671:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf8fffff; valaddr_reg:x12; val_offset:43950*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43950*FLEN/8, x13, x9, x10)

inst_14672:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbff80000; valaddr_reg:x12; val_offset:43953*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43953*FLEN/8, x13, x9, x10)

inst_14673:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf87ffff; valaddr_reg:x12; val_offset:43956*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43956*FLEN/8, x13, x9, x10)

inst_14674:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbffc0000; valaddr_reg:x12; val_offset:43959*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43959*FLEN/8, x13, x9, x10)

inst_14675:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf83ffff; valaddr_reg:x12; val_offset:43962*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43962*FLEN/8, x13, x9, x10)

inst_14676:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbffe0000; valaddr_reg:x12; val_offset:43965*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43965*FLEN/8, x13, x9, x10)

inst_14677:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf81ffff; valaddr_reg:x12; val_offset:43968*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43968*FLEN/8, x13, x9, x10)

inst_14678:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfff0000; valaddr_reg:x12; val_offset:43971*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43971*FLEN/8, x13, x9, x10)

inst_14679:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf80ffff; valaddr_reg:x12; val_offset:43974*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43974*FLEN/8, x13, x9, x10)

inst_14680:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfff8000; valaddr_reg:x12; val_offset:43977*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43977*FLEN/8, x13, x9, x10)

inst_14681:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf807fff; valaddr_reg:x12; val_offset:43980*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43980*FLEN/8, x13, x9, x10)

inst_14682:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfffc000; valaddr_reg:x12; val_offset:43983*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43983*FLEN/8, x13, x9, x10)

inst_14683:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf803fff; valaddr_reg:x12; val_offset:43986*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43986*FLEN/8, x13, x9, x10)

inst_14684:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfffe000; valaddr_reg:x12; val_offset:43989*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43989*FLEN/8, x13, x9, x10)

inst_14685:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf801fff; valaddr_reg:x12; val_offset:43992*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43992*FLEN/8, x13, x9, x10)

inst_14686:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbffff000; valaddr_reg:x12; val_offset:43995*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43995*FLEN/8, x13, x9, x10)

inst_14687:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf800fff; valaddr_reg:x12; val_offset:43998*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 43998*FLEN/8, x13, x9, x10)

inst_14688:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbffff800; valaddr_reg:x12; val_offset:44001*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44001*FLEN/8, x13, x9, x10)

inst_14689:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf8007ff; valaddr_reg:x12; val_offset:44004*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44004*FLEN/8, x13, x9, x10)

inst_14690:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbffffc00; valaddr_reg:x12; val_offset:44007*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44007*FLEN/8, x13, x9, x10)

inst_14691:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf8003ff; valaddr_reg:x12; val_offset:44010*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44010*FLEN/8, x13, x9, x10)

inst_14692:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbffffe00; valaddr_reg:x12; val_offset:44013*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44013*FLEN/8, x13, x9, x10)

inst_14693:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf8001ff; valaddr_reg:x12; val_offset:44016*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44016*FLEN/8, x13, x9, x10)

inst_14694:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfffff00; valaddr_reg:x12; val_offset:44019*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44019*FLEN/8, x13, x9, x10)

inst_14695:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf8000ff; valaddr_reg:x12; val_offset:44022*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44022*FLEN/8, x13, x9, x10)

inst_14696:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfffff80; valaddr_reg:x12; val_offset:44025*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44025*FLEN/8, x13, x9, x10)

inst_14697:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf80007f; valaddr_reg:x12; val_offset:44028*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44028*FLEN/8, x13, x9, x10)

inst_14698:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfffffc0; valaddr_reg:x12; val_offset:44031*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44031*FLEN/8, x13, x9, x10)

inst_14699:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf80003f; valaddr_reg:x12; val_offset:44034*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44034*FLEN/8, x13, x9, x10)

inst_14700:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfffffe0; valaddr_reg:x12; val_offset:44037*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44037*FLEN/8, x13, x9, x10)

inst_14701:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf80001f; valaddr_reg:x12; val_offset:44040*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44040*FLEN/8, x13, x9, x10)

inst_14702:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbffffff0; valaddr_reg:x12; val_offset:44043*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44043*FLEN/8, x13, x9, x10)

inst_14703:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf80000f; valaddr_reg:x12; val_offset:44046*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44046*FLEN/8, x13, x9, x10)

inst_14704:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:44049*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44049*FLEN/8, x13, x9, x10)

inst_14705:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf800007; valaddr_reg:x12; val_offset:44052*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44052*FLEN/8, x13, x9, x10)

inst_14706:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:44055*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44055*FLEN/8, x13, x9, x10)

inst_14707:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf800003; valaddr_reg:x12; val_offset:44058*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44058*FLEN/8, x13, x9, x10)

inst_14708:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:44061*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44061*FLEN/8, x13, x9, x10)

inst_14709:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf800001; valaddr_reg:x12; val_offset:44064*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44064*FLEN/8, x13, x9, x10)

inst_14710:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:44067*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44067*FLEN/8, x13, x9, x10)

inst_14711:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:44070*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44070*FLEN/8, x13, x9, x10)

inst_14712:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbf999999; valaddr_reg:x12; val_offset:44073*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44073*FLEN/8, x13, x9, x10)

inst_14713:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:44076*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44076*FLEN/8, x13, x9, x10)

inst_14714:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:44079*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44079*FLEN/8, x13, x9, x10)

inst_14715:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:44082*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44082*FLEN/8, x13, x9, x10)

inst_14716:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:44085*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44085*FLEN/8, x13, x9, x10)

inst_14717:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:44088*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44088*FLEN/8, x13, x9, x10)

inst_14718:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:44091*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44091*FLEN/8, x13, x9, x10)

inst_14719:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x226d04 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x64dee2 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ea26d04; op2val:0x8064dee2;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:44094*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44094*FLEN/8, x13, x9, x10)

inst_14720:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc0000000; valaddr_reg:x12; val_offset:44097*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44097*FLEN/8, x13, x9, x10)

inst_14721:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07fffff; valaddr_reg:x12; val_offset:44100*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44100*FLEN/8, x13, x9, x10)

inst_14722:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc0400000; valaddr_reg:x12; val_offset:44103*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44103*FLEN/8, x13, x9, x10)

inst_14723:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc03fffff; valaddr_reg:x12; val_offset:44106*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44106*FLEN/8, x13, x9, x10)

inst_14724:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc0600000; valaddr_reg:x12; val_offset:44109*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44109*FLEN/8, x13, x9, x10)

inst_14725:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc01fffff; valaddr_reg:x12; val_offset:44112*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44112*FLEN/8, x13, x9, x10)

inst_14726:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc0700000; valaddr_reg:x12; val_offset:44115*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44115*FLEN/8, x13, x9, x10)

inst_14727:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc00fffff; valaddr_reg:x12; val_offset:44118*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44118*FLEN/8, x13, x9, x10)

inst_14728:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc0780000; valaddr_reg:x12; val_offset:44121*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44121*FLEN/8, x13, x9, x10)

inst_14729:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc007ffff; valaddr_reg:x12; val_offset:44124*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44124*FLEN/8, x13, x9, x10)

inst_14730:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07c0000; valaddr_reg:x12; val_offset:44127*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44127*FLEN/8, x13, x9, x10)

inst_14731:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc003ffff; valaddr_reg:x12; val_offset:44130*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44130*FLEN/8, x13, x9, x10)

inst_14732:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07e0000; valaddr_reg:x12; val_offset:44133*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44133*FLEN/8, x13, x9, x10)

inst_14733:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc001ffff; valaddr_reg:x12; val_offset:44136*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44136*FLEN/8, x13, x9, x10)

inst_14734:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07f0000; valaddr_reg:x12; val_offset:44139*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44139*FLEN/8, x13, x9, x10)

inst_14735:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc000ffff; valaddr_reg:x12; val_offset:44142*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44142*FLEN/8, x13, x9, x10)

inst_14736:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07f8000; valaddr_reg:x12; val_offset:44145*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44145*FLEN/8, x13, x9, x10)

inst_14737:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc0007fff; valaddr_reg:x12; val_offset:44148*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44148*FLEN/8, x13, x9, x10)

inst_14738:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07fc000; valaddr_reg:x12; val_offset:44151*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44151*FLEN/8, x13, x9, x10)

inst_14739:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc0003fff; valaddr_reg:x12; val_offset:44154*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44154*FLEN/8, x13, x9, x10)

inst_14740:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07fe000; valaddr_reg:x12; val_offset:44157*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44157*FLEN/8, x13, x9, x10)

inst_14741:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc0001fff; valaddr_reg:x12; val_offset:44160*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44160*FLEN/8, x13, x9, x10)

inst_14742:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07ff000; valaddr_reg:x12; val_offset:44163*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44163*FLEN/8, x13, x9, x10)

inst_14743:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc0000fff; valaddr_reg:x12; val_offset:44166*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44166*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_115)
inst_14744:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07ff800; valaddr_reg:x12; val_offset:44169*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44169*FLEN/8, x13, x9, x10)

inst_14745:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc00007ff; valaddr_reg:x12; val_offset:44172*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44172*FLEN/8, x13, x9, x10)

inst_14746:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07ffc00; valaddr_reg:x12; val_offset:44175*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44175*FLEN/8, x13, x9, x10)

inst_14747:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc00003ff; valaddr_reg:x12; val_offset:44178*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44178*FLEN/8, x13, x9, x10)

inst_14748:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07ffe00; valaddr_reg:x12; val_offset:44181*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44181*FLEN/8, x13, x9, x10)

inst_14749:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc00001ff; valaddr_reg:x12; val_offset:44184*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44184*FLEN/8, x13, x9, x10)

inst_14750:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07fff00; valaddr_reg:x12; val_offset:44187*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44187*FLEN/8, x13, x9, x10)

inst_14751:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc00000ff; valaddr_reg:x12; val_offset:44190*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44190*FLEN/8, x13, x9, x10)

inst_14752:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07fff80; valaddr_reg:x12; val_offset:44193*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44193*FLEN/8, x13, x9, x10)

inst_14753:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc000007f; valaddr_reg:x12; val_offset:44196*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44196*FLEN/8, x13, x9, x10)

inst_14754:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07fffc0; valaddr_reg:x12; val_offset:44199*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44199*FLEN/8, x13, x9, x10)

inst_14755:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc000003f; valaddr_reg:x12; val_offset:44202*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44202*FLEN/8, x13, x9, x10)

inst_14756:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07fffe0; valaddr_reg:x12; val_offset:44205*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44205*FLEN/8, x13, x9, x10)

inst_14757:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc000001f; valaddr_reg:x12; val_offset:44208*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44208*FLEN/8, x13, x9, x10)

inst_14758:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07ffff0; valaddr_reg:x12; val_offset:44211*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44211*FLEN/8, x13, x9, x10)

inst_14759:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc000000f; valaddr_reg:x12; val_offset:44214*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44214*FLEN/8, x13, x9, x10)

inst_14760:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07ffff8; valaddr_reg:x12; val_offset:44217*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44217*FLEN/8, x13, x9, x10)

inst_14761:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc0000007; valaddr_reg:x12; val_offset:44220*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44220*FLEN/8, x13, x9, x10)

inst_14762:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07ffffc; valaddr_reg:x12; val_offset:44223*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44223*FLEN/8, x13, x9, x10)

inst_14763:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc0000003; valaddr_reg:x12; val_offset:44226*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44226*FLEN/8, x13, x9, x10)

inst_14764:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc07ffffe; valaddr_reg:x12; val_offset:44229*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44229*FLEN/8, x13, x9, x10)

inst_14765:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x80 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xc0000001; valaddr_reg:x12; val_offset:44232*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44232*FLEN/8, x13, x9, x10)

inst_14766:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:44235*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44235*FLEN/8, x13, x9, x10)

inst_14767:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbf800007; valaddr_reg:x12; val_offset:44238*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44238*FLEN/8, x13, x9, x10)

inst_14768:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:44241*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44241*FLEN/8, x13, x9, x10)

inst_14769:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbf800003; valaddr_reg:x12; val_offset:44244*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44244*FLEN/8, x13, x9, x10)

inst_14770:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:44247*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44247*FLEN/8, x13, x9, x10)

inst_14771:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbf800001; valaddr_reg:x12; val_offset:44250*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44250*FLEN/8, x13, x9, x10)

inst_14772:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:44253*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44253*FLEN/8, x13, x9, x10)

inst_14773:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:44256*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44256*FLEN/8, x13, x9, x10)

inst_14774:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbf999999; valaddr_reg:x12; val_offset:44259*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44259*FLEN/8, x13, x9, x10)

inst_14775:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:44262*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44262*FLEN/8, x13, x9, x10)

inst_14776:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:44265*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44265*FLEN/8, x13, x9, x10)

inst_14777:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:44268*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44268*FLEN/8, x13, x9, x10)

inst_14778:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:44271*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44271*FLEN/8, x13, x9, x10)

inst_14779:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:44274*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44274*FLEN/8, x13, x9, x10)

inst_14780:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:44277*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44277*FLEN/8, x13, x9, x10)

inst_14781:
// fs1 == 0 and fe1 == 0xfd and fm1 == 0x3597f6 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x5a3933 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7eb597f6; op2val:0x805a3933;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:44280*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44280*FLEN/8, x13, x9, x10)

inst_14782:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0800000; valaddr_reg:x12; val_offset:44283*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44283*FLEN/8, x13, x9, x10)

inst_14783:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0ffffff; valaddr_reg:x12; val_offset:44286*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44286*FLEN/8, x13, x9, x10)

inst_14784:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0c00000; valaddr_reg:x12; val_offset:44289*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44289*FLEN/8, x13, x9, x10)

inst_14785:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0bfffff; valaddr_reg:x12; val_offset:44292*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44292*FLEN/8, x13, x9, x10)

inst_14786:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0e00000; valaddr_reg:x12; val_offset:44295*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44295*FLEN/8, x13, x9, x10)

inst_14787:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc09fffff; valaddr_reg:x12; val_offset:44298*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44298*FLEN/8, x13, x9, x10)

inst_14788:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0f00000; valaddr_reg:x12; val_offset:44301*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44301*FLEN/8, x13, x9, x10)

inst_14789:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc08fffff; valaddr_reg:x12; val_offset:44304*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44304*FLEN/8, x13, x9, x10)

inst_14790:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0f80000; valaddr_reg:x12; val_offset:44307*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44307*FLEN/8, x13, x9, x10)

inst_14791:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc087ffff; valaddr_reg:x12; val_offset:44310*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44310*FLEN/8, x13, x9, x10)

inst_14792:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0fc0000; valaddr_reg:x12; val_offset:44313*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44313*FLEN/8, x13, x9, x10)

inst_14793:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc083ffff; valaddr_reg:x12; val_offset:44316*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44316*FLEN/8, x13, x9, x10)

inst_14794:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0fe0000; valaddr_reg:x12; val_offset:44319*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44319*FLEN/8, x13, x9, x10)

inst_14795:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc081ffff; valaddr_reg:x12; val_offset:44322*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44322*FLEN/8, x13, x9, x10)

inst_14796:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0ff0000; valaddr_reg:x12; val_offset:44325*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44325*FLEN/8, x13, x9, x10)

inst_14797:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc080ffff; valaddr_reg:x12; val_offset:44328*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44328*FLEN/8, x13, x9, x10)

inst_14798:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0ff8000; valaddr_reg:x12; val_offset:44331*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44331*FLEN/8, x13, x9, x10)

inst_14799:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0807fff; valaddr_reg:x12; val_offset:44334*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44334*FLEN/8, x13, x9, x10)

inst_14800:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0ffc000; valaddr_reg:x12; val_offset:44337*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44337*FLEN/8, x13, x9, x10)

inst_14801:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0803fff; valaddr_reg:x12; val_offset:44340*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44340*FLEN/8, x13, x9, x10)

inst_14802:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0ffe000; valaddr_reg:x12; val_offset:44343*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44343*FLEN/8, x13, x9, x10)

inst_14803:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0801fff; valaddr_reg:x12; val_offset:44346*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44346*FLEN/8, x13, x9, x10)

inst_14804:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0fff000; valaddr_reg:x12; val_offset:44349*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44349*FLEN/8, x13, x9, x10)

inst_14805:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0800fff; valaddr_reg:x12; val_offset:44352*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44352*FLEN/8, x13, x9, x10)

inst_14806:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0fff800; valaddr_reg:x12; val_offset:44355*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44355*FLEN/8, x13, x9, x10)

inst_14807:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc08007ff; valaddr_reg:x12; val_offset:44358*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44358*FLEN/8, x13, x9, x10)

inst_14808:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0fffc00; valaddr_reg:x12; val_offset:44361*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44361*FLEN/8, x13, x9, x10)

inst_14809:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc08003ff; valaddr_reg:x12; val_offset:44364*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44364*FLEN/8, x13, x9, x10)

inst_14810:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0fffe00; valaddr_reg:x12; val_offset:44367*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44367*FLEN/8, x13, x9, x10)

inst_14811:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc08001ff; valaddr_reg:x12; val_offset:44370*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44370*FLEN/8, x13, x9, x10)

inst_14812:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0ffff00; valaddr_reg:x12; val_offset:44373*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44373*FLEN/8, x13, x9, x10)

inst_14813:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc08000ff; valaddr_reg:x12; val_offset:44376*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44376*FLEN/8, x13, x9, x10)

inst_14814:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0ffff80; valaddr_reg:x12; val_offset:44379*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44379*FLEN/8, x13, x9, x10)

inst_14815:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc080007f; valaddr_reg:x12; val_offset:44382*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44382*FLEN/8, x13, x9, x10)

inst_14816:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0ffffc0; valaddr_reg:x12; val_offset:44385*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44385*FLEN/8, x13, x9, x10)

inst_14817:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc080003f; valaddr_reg:x12; val_offset:44388*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44388*FLEN/8, x13, x9, x10)

inst_14818:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0ffffe0; valaddr_reg:x12; val_offset:44391*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44391*FLEN/8, x13, x9, x10)

inst_14819:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc080001f; valaddr_reg:x12; val_offset:44394*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44394*FLEN/8, x13, x9, x10)

inst_14820:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0fffff0; valaddr_reg:x12; val_offset:44397*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44397*FLEN/8, x13, x9, x10)

inst_14821:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc080000f; valaddr_reg:x12; val_offset:44400*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44400*FLEN/8, x13, x9, x10)

inst_14822:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0fffff8; valaddr_reg:x12; val_offset:44403*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44403*FLEN/8, x13, x9, x10)

inst_14823:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0800007; valaddr_reg:x12; val_offset:44406*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44406*FLEN/8, x13, x9, x10)

inst_14824:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0fffffc; valaddr_reg:x12; val_offset:44409*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44409*FLEN/8, x13, x9, x10)

inst_14825:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0800003; valaddr_reg:x12; val_offset:44412*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44412*FLEN/8, x13, x9, x10)

inst_14826:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0fffffe; valaddr_reg:x12; val_offset:44415*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44415*FLEN/8, x13, x9, x10)

inst_14827:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x81 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xc0800001; valaddr_reg:x12; val_offset:44418*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44418*FLEN/8, x13, x9, x10)

inst_14828:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:44421*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44421*FLEN/8, x13, x9, x10)

inst_14829:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbf800007; valaddr_reg:x12; val_offset:44424*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44424*FLEN/8, x13, x9, x10)

inst_14830:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:44427*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44427*FLEN/8, x13, x9, x10)

inst_14831:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbf800003; valaddr_reg:x12; val_offset:44430*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44430*FLEN/8, x13, x9, x10)

inst_14832:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:44433*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44433*FLEN/8, x13, x9, x10)

inst_14833:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbf800001; valaddr_reg:x12; val_offset:44436*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44436*FLEN/8, x13, x9, x10)

inst_14834:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:44439*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44439*FLEN/8, x13, x9, x10)

inst_14835:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:44442*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44442*FLEN/8, x13, x9, x10)

inst_14836:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbf999999; valaddr_reg:x12; val_offset:44445*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44445*FLEN/8, x13, x9, x10)

inst_14837:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:44448*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44448*FLEN/8, x13, x9, x10)

inst_14838:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:44451*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44451*FLEN/8, x13, x9, x10)

inst_14839:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:44454*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44454*FLEN/8, x13, x9, x10)

inst_14840:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:44457*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44457*FLEN/8, x13, x9, x10)

inst_14841:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:44460*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44460*FLEN/8, x13, x9, x10)

inst_14842:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:44463*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44463*FLEN/8, x13, x9, x10)

inst_14843:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x151669 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x36f294 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f151669; op2val:0x8036f294;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:44466*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44466*FLEN/8, x13, x9, x10)

inst_14844:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc1000000; valaddr_reg:x12; val_offset:44469*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44469*FLEN/8, x13, x9, x10)

inst_14845:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17fffff; valaddr_reg:x12; val_offset:44472*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44472*FLEN/8, x13, x9, x10)

inst_14846:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc1400000; valaddr_reg:x12; val_offset:44475*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44475*FLEN/8, x13, x9, x10)

inst_14847:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc13fffff; valaddr_reg:x12; val_offset:44478*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44478*FLEN/8, x13, x9, x10)

inst_14848:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc1600000; valaddr_reg:x12; val_offset:44481*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44481*FLEN/8, x13, x9, x10)

inst_14849:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc11fffff; valaddr_reg:x12; val_offset:44484*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44484*FLEN/8, x13, x9, x10)

inst_14850:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc1700000; valaddr_reg:x12; val_offset:44487*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44487*FLEN/8, x13, x9, x10)

inst_14851:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc10fffff; valaddr_reg:x12; val_offset:44490*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44490*FLEN/8, x13, x9, x10)

inst_14852:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc1780000; valaddr_reg:x12; val_offset:44493*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44493*FLEN/8, x13, x9, x10)

inst_14853:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc107ffff; valaddr_reg:x12; val_offset:44496*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44496*FLEN/8, x13, x9, x10)

inst_14854:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17c0000; valaddr_reg:x12; val_offset:44499*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44499*FLEN/8, x13, x9, x10)

inst_14855:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc103ffff; valaddr_reg:x12; val_offset:44502*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44502*FLEN/8, x13, x9, x10)

inst_14856:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17e0000; valaddr_reg:x12; val_offset:44505*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44505*FLEN/8, x13, x9, x10)

inst_14857:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc101ffff; valaddr_reg:x12; val_offset:44508*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44508*FLEN/8, x13, x9, x10)

inst_14858:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17f0000; valaddr_reg:x12; val_offset:44511*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44511*FLEN/8, x13, x9, x10)

inst_14859:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc100ffff; valaddr_reg:x12; val_offset:44514*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44514*FLEN/8, x13, x9, x10)

inst_14860:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17f8000; valaddr_reg:x12; val_offset:44517*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44517*FLEN/8, x13, x9, x10)

inst_14861:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc1007fff; valaddr_reg:x12; val_offset:44520*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44520*FLEN/8, x13, x9, x10)

inst_14862:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17fc000; valaddr_reg:x12; val_offset:44523*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44523*FLEN/8, x13, x9, x10)

inst_14863:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc1003fff; valaddr_reg:x12; val_offset:44526*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44526*FLEN/8, x13, x9, x10)

inst_14864:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17fe000; valaddr_reg:x12; val_offset:44529*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44529*FLEN/8, x13, x9, x10)

inst_14865:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc1001fff; valaddr_reg:x12; val_offset:44532*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44532*FLEN/8, x13, x9, x10)

inst_14866:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17ff000; valaddr_reg:x12; val_offset:44535*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44535*FLEN/8, x13, x9, x10)

inst_14867:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc1000fff; valaddr_reg:x12; val_offset:44538*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44538*FLEN/8, x13, x9, x10)

inst_14868:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17ff800; valaddr_reg:x12; val_offset:44541*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44541*FLEN/8, x13, x9, x10)

inst_14869:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc10007ff; valaddr_reg:x12; val_offset:44544*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44544*FLEN/8, x13, x9, x10)

inst_14870:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17ffc00; valaddr_reg:x12; val_offset:44547*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44547*FLEN/8, x13, x9, x10)

inst_14871:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc10003ff; valaddr_reg:x12; val_offset:44550*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44550*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_116)
inst_14872:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17ffe00; valaddr_reg:x12; val_offset:44553*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44553*FLEN/8, x13, x9, x10)

inst_14873:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc10001ff; valaddr_reg:x12; val_offset:44556*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44556*FLEN/8, x13, x9, x10)

inst_14874:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17fff00; valaddr_reg:x12; val_offset:44559*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44559*FLEN/8, x13, x9, x10)

inst_14875:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc10000ff; valaddr_reg:x12; val_offset:44562*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44562*FLEN/8, x13, x9, x10)

inst_14876:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17fff80; valaddr_reg:x12; val_offset:44565*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44565*FLEN/8, x13, x9, x10)

inst_14877:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc100007f; valaddr_reg:x12; val_offset:44568*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44568*FLEN/8, x13, x9, x10)

inst_14878:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17fffc0; valaddr_reg:x12; val_offset:44571*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44571*FLEN/8, x13, x9, x10)

inst_14879:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc100003f; valaddr_reg:x12; val_offset:44574*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44574*FLEN/8, x13, x9, x10)

inst_14880:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17fffe0; valaddr_reg:x12; val_offset:44577*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44577*FLEN/8, x13, x9, x10)

inst_14881:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc100001f; valaddr_reg:x12; val_offset:44580*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44580*FLEN/8, x13, x9, x10)

inst_14882:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17ffff0; valaddr_reg:x12; val_offset:44583*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44583*FLEN/8, x13, x9, x10)

inst_14883:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc100000f; valaddr_reg:x12; val_offset:44586*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44586*FLEN/8, x13, x9, x10)

inst_14884:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17ffff8; valaddr_reg:x12; val_offset:44589*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44589*FLEN/8, x13, x9, x10)

inst_14885:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc1000007; valaddr_reg:x12; val_offset:44592*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44592*FLEN/8, x13, x9, x10)

inst_14886:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17ffffc; valaddr_reg:x12; val_offset:44595*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44595*FLEN/8, x13, x9, x10)

inst_14887:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc1000003; valaddr_reg:x12; val_offset:44598*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44598*FLEN/8, x13, x9, x10)

inst_14888:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc17ffffe; valaddr_reg:x12; val_offset:44601*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44601*FLEN/8, x13, x9, x10)

inst_14889:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x82 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xc1000001; valaddr_reg:x12; val_offset:44604*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44604*FLEN/8, x13, x9, x10)

inst_14890:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:44607*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44607*FLEN/8, x13, x9, x10)

inst_14891:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbf800007; valaddr_reg:x12; val_offset:44610*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44610*FLEN/8, x13, x9, x10)

inst_14892:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:44613*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44613*FLEN/8, x13, x9, x10)

inst_14893:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbf800003; valaddr_reg:x12; val_offset:44616*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44616*FLEN/8, x13, x9, x10)

inst_14894:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:44619*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44619*FLEN/8, x13, x9, x10)

inst_14895:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbf800001; valaddr_reg:x12; val_offset:44622*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44622*FLEN/8, x13, x9, x10)

inst_14896:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:44625*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44625*FLEN/8, x13, x9, x10)

inst_14897:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:44628*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44628*FLEN/8, x13, x9, x10)

inst_14898:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbf999999; valaddr_reg:x12; val_offset:44631*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44631*FLEN/8, x13, x9, x10)

inst_14899:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:44634*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44634*FLEN/8, x13, x9, x10)

inst_14900:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:44637*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44637*FLEN/8, x13, x9, x10)

inst_14901:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:44640*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44640*FLEN/8, x13, x9, x10)

inst_14902:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:44643*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44643*FLEN/8, x13, x9, x10)

inst_14903:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:44646*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44646*FLEN/8, x13, x9, x10)

inst_14904:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:44649*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44649*FLEN/8, x13, x9, x10)

inst_14905:
// fs1 == 0 and fe1 == 0xf5 and fm1 == 0x31cc28 and fs2 == 1 and fe2 == 0x08 and fm2 == 0x384caf and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7ab1cc28; op2val:0x84384caf;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:44652*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44652*FLEN/8, x13, x9, x10)

inst_14906:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1800000; valaddr_reg:x12; val_offset:44655*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44655*FLEN/8, x13, x9, x10)

inst_14907:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1ffffff; valaddr_reg:x12; val_offset:44658*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44658*FLEN/8, x13, x9, x10)

inst_14908:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1c00000; valaddr_reg:x12; val_offset:44661*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44661*FLEN/8, x13, x9, x10)

inst_14909:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1bfffff; valaddr_reg:x12; val_offset:44664*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44664*FLEN/8, x13, x9, x10)

inst_14910:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1e00000; valaddr_reg:x12; val_offset:44667*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44667*FLEN/8, x13, x9, x10)

inst_14911:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc19fffff; valaddr_reg:x12; val_offset:44670*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44670*FLEN/8, x13, x9, x10)

inst_14912:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1f00000; valaddr_reg:x12; val_offset:44673*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44673*FLEN/8, x13, x9, x10)

inst_14913:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc18fffff; valaddr_reg:x12; val_offset:44676*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44676*FLEN/8, x13, x9, x10)

inst_14914:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1f80000; valaddr_reg:x12; val_offset:44679*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44679*FLEN/8, x13, x9, x10)

inst_14915:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc187ffff; valaddr_reg:x12; val_offset:44682*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44682*FLEN/8, x13, x9, x10)

inst_14916:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1fc0000; valaddr_reg:x12; val_offset:44685*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44685*FLEN/8, x13, x9, x10)

inst_14917:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc183ffff; valaddr_reg:x12; val_offset:44688*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44688*FLEN/8, x13, x9, x10)

inst_14918:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1fe0000; valaddr_reg:x12; val_offset:44691*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44691*FLEN/8, x13, x9, x10)

inst_14919:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc181ffff; valaddr_reg:x12; val_offset:44694*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44694*FLEN/8, x13, x9, x10)

inst_14920:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1ff0000; valaddr_reg:x12; val_offset:44697*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44697*FLEN/8, x13, x9, x10)

inst_14921:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc180ffff; valaddr_reg:x12; val_offset:44700*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44700*FLEN/8, x13, x9, x10)

inst_14922:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1ff8000; valaddr_reg:x12; val_offset:44703*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44703*FLEN/8, x13, x9, x10)

inst_14923:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1807fff; valaddr_reg:x12; val_offset:44706*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44706*FLEN/8, x13, x9, x10)

inst_14924:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1ffc000; valaddr_reg:x12; val_offset:44709*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44709*FLEN/8, x13, x9, x10)

inst_14925:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1803fff; valaddr_reg:x12; val_offset:44712*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44712*FLEN/8, x13, x9, x10)

inst_14926:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1ffe000; valaddr_reg:x12; val_offset:44715*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44715*FLEN/8, x13, x9, x10)

inst_14927:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1801fff; valaddr_reg:x12; val_offset:44718*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44718*FLEN/8, x13, x9, x10)

inst_14928:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1fff000; valaddr_reg:x12; val_offset:44721*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44721*FLEN/8, x13, x9, x10)

inst_14929:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1800fff; valaddr_reg:x12; val_offset:44724*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44724*FLEN/8, x13, x9, x10)

inst_14930:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1fff800; valaddr_reg:x12; val_offset:44727*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44727*FLEN/8, x13, x9, x10)

inst_14931:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc18007ff; valaddr_reg:x12; val_offset:44730*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44730*FLEN/8, x13, x9, x10)

inst_14932:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1fffc00; valaddr_reg:x12; val_offset:44733*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44733*FLEN/8, x13, x9, x10)

inst_14933:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc18003ff; valaddr_reg:x12; val_offset:44736*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44736*FLEN/8, x13, x9, x10)

inst_14934:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1fffe00; valaddr_reg:x12; val_offset:44739*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44739*FLEN/8, x13, x9, x10)

inst_14935:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc18001ff; valaddr_reg:x12; val_offset:44742*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44742*FLEN/8, x13, x9, x10)

inst_14936:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1ffff00; valaddr_reg:x12; val_offset:44745*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44745*FLEN/8, x13, x9, x10)

inst_14937:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc18000ff; valaddr_reg:x12; val_offset:44748*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44748*FLEN/8, x13, x9, x10)

inst_14938:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1ffff80; valaddr_reg:x12; val_offset:44751*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44751*FLEN/8, x13, x9, x10)

inst_14939:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc180007f; valaddr_reg:x12; val_offset:44754*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44754*FLEN/8, x13, x9, x10)

inst_14940:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1ffffc0; valaddr_reg:x12; val_offset:44757*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44757*FLEN/8, x13, x9, x10)

inst_14941:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc180003f; valaddr_reg:x12; val_offset:44760*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44760*FLEN/8, x13, x9, x10)

inst_14942:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1ffffe0; valaddr_reg:x12; val_offset:44763*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44763*FLEN/8, x13, x9, x10)

inst_14943:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc180001f; valaddr_reg:x12; val_offset:44766*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44766*FLEN/8, x13, x9, x10)

inst_14944:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1fffff0; valaddr_reg:x12; val_offset:44769*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44769*FLEN/8, x13, x9, x10)

inst_14945:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc180000f; valaddr_reg:x12; val_offset:44772*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44772*FLEN/8, x13, x9, x10)

inst_14946:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1fffff8; valaddr_reg:x12; val_offset:44775*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44775*FLEN/8, x13, x9, x10)

inst_14947:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1800007; valaddr_reg:x12; val_offset:44778*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44778*FLEN/8, x13, x9, x10)

inst_14948:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1fffffc; valaddr_reg:x12; val_offset:44781*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44781*FLEN/8, x13, x9, x10)

inst_14949:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1800003; valaddr_reg:x12; val_offset:44784*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44784*FLEN/8, x13, x9, x10)

inst_14950:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1fffffe; valaddr_reg:x12; val_offset:44787*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44787*FLEN/8, x13, x9, x10)

inst_14951:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x83 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xc1800001; valaddr_reg:x12; val_offset:44790*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44790*FLEN/8, x13, x9, x10)

inst_14952:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:44793*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44793*FLEN/8, x13, x9, x10)

inst_14953:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbf800007; valaddr_reg:x12; val_offset:44796*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44796*FLEN/8, x13, x9, x10)

inst_14954:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:44799*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44799*FLEN/8, x13, x9, x10)

inst_14955:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbf800003; valaddr_reg:x12; val_offset:44802*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44802*FLEN/8, x13, x9, x10)

inst_14956:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:44805*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44805*FLEN/8, x13, x9, x10)

inst_14957:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbf800001; valaddr_reg:x12; val_offset:44808*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44808*FLEN/8, x13, x9, x10)

inst_14958:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:44811*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44811*FLEN/8, x13, x9, x10)

inst_14959:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:44814*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44814*FLEN/8, x13, x9, x10)

inst_14960:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbf999999; valaddr_reg:x12; val_offset:44817*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44817*FLEN/8, x13, x9, x10)

inst_14961:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:44820*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44820*FLEN/8, x13, x9, x10)

inst_14962:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:44823*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44823*FLEN/8, x13, x9, x10)

inst_14963:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:44826*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44826*FLEN/8, x13, x9, x10)

inst_14964:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:44829*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44829*FLEN/8, x13, x9, x10)

inst_14965:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:44832*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44832*FLEN/8, x13, x9, x10)

inst_14966:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:44835*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44835*FLEN/8, x13, x9, x10)

inst_14967:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x2872e3 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x428729 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d2872e3; op2val:0x81c28729;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:44838*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44838*FLEN/8, x13, x9, x10)

inst_14968:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2000000; valaddr_reg:x12; val_offset:44841*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44841*FLEN/8, x13, x9, x10)

inst_14969:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fffff; valaddr_reg:x12; val_offset:44844*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44844*FLEN/8, x13, x9, x10)

inst_14970:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2400000; valaddr_reg:x12; val_offset:44847*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44847*FLEN/8, x13, x9, x10)

inst_14971:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc23fffff; valaddr_reg:x12; val_offset:44850*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44850*FLEN/8, x13, x9, x10)

inst_14972:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2600000; valaddr_reg:x12; val_offset:44853*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44853*FLEN/8, x13, x9, x10)

inst_14973:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc21fffff; valaddr_reg:x12; val_offset:44856*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44856*FLEN/8, x13, x9, x10)

inst_14974:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2700000; valaddr_reg:x12; val_offset:44859*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44859*FLEN/8, x13, x9, x10)

inst_14975:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc20fffff; valaddr_reg:x12; val_offset:44862*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44862*FLEN/8, x13, x9, x10)

inst_14976:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2780000; valaddr_reg:x12; val_offset:44865*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44865*FLEN/8, x13, x9, x10)

inst_14977:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc207ffff; valaddr_reg:x12; val_offset:44868*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44868*FLEN/8, x13, x9, x10)

inst_14978:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27c0000; valaddr_reg:x12; val_offset:44871*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44871*FLEN/8, x13, x9, x10)

inst_14979:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc203ffff; valaddr_reg:x12; val_offset:44874*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44874*FLEN/8, x13, x9, x10)

inst_14980:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27e0000; valaddr_reg:x12; val_offset:44877*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44877*FLEN/8, x13, x9, x10)

inst_14981:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc201ffff; valaddr_reg:x12; val_offset:44880*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44880*FLEN/8, x13, x9, x10)

inst_14982:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27f0000; valaddr_reg:x12; val_offset:44883*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44883*FLEN/8, x13, x9, x10)

inst_14983:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc200ffff; valaddr_reg:x12; val_offset:44886*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44886*FLEN/8, x13, x9, x10)

inst_14984:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27f8000; valaddr_reg:x12; val_offset:44889*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44889*FLEN/8, x13, x9, x10)

inst_14985:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2007fff; valaddr_reg:x12; val_offset:44892*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44892*FLEN/8, x13, x9, x10)

inst_14986:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fc000; valaddr_reg:x12; val_offset:44895*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44895*FLEN/8, x13, x9, x10)

inst_14987:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2003fff; valaddr_reg:x12; val_offset:44898*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44898*FLEN/8, x13, x9, x10)

inst_14988:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fe000; valaddr_reg:x12; val_offset:44901*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44901*FLEN/8, x13, x9, x10)

inst_14989:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2001fff; valaddr_reg:x12; val_offset:44904*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44904*FLEN/8, x13, x9, x10)

inst_14990:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ff000; valaddr_reg:x12; val_offset:44907*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44907*FLEN/8, x13, x9, x10)

inst_14991:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2000fff; valaddr_reg:x12; val_offset:44910*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44910*FLEN/8, x13, x9, x10)

inst_14992:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ff800; valaddr_reg:x12; val_offset:44913*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44913*FLEN/8, x13, x9, x10)

inst_14993:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc20007ff; valaddr_reg:x12; val_offset:44916*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44916*FLEN/8, x13, x9, x10)

inst_14994:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ffc00; valaddr_reg:x12; val_offset:44919*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44919*FLEN/8, x13, x9, x10)

inst_14995:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc20003ff; valaddr_reg:x12; val_offset:44922*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44922*FLEN/8, x13, x9, x10)

inst_14996:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ffe00; valaddr_reg:x12; val_offset:44925*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44925*FLEN/8, x13, x9, x10)

inst_14997:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc20001ff; valaddr_reg:x12; val_offset:44928*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44928*FLEN/8, x13, x9, x10)

inst_14998:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fff00; valaddr_reg:x12; val_offset:44931*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44931*FLEN/8, x13, x9, x10)

inst_14999:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc20000ff; valaddr_reg:x12; val_offset:44934*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44934*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_117)
inst_15000:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fff80; valaddr_reg:x12; val_offset:44937*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44937*FLEN/8, x13, x9, x10)

inst_15001:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc200007f; valaddr_reg:x12; val_offset:44940*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44940*FLEN/8, x13, x9, x10)

inst_15002:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fffc0; valaddr_reg:x12; val_offset:44943*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44943*FLEN/8, x13, x9, x10)

inst_15003:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc200003f; valaddr_reg:x12; val_offset:44946*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44946*FLEN/8, x13, x9, x10)

inst_15004:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27fffe0; valaddr_reg:x12; val_offset:44949*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44949*FLEN/8, x13, x9, x10)

inst_15005:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc200001f; valaddr_reg:x12; val_offset:44952*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44952*FLEN/8, x13, x9, x10)

inst_15006:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ffff0; valaddr_reg:x12; val_offset:44955*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44955*FLEN/8, x13, x9, x10)

inst_15007:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc200000f; valaddr_reg:x12; val_offset:44958*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44958*FLEN/8, x13, x9, x10)

inst_15008:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ffff8; valaddr_reg:x12; val_offset:44961*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44961*FLEN/8, x13, x9, x10)

inst_15009:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2000007; valaddr_reg:x12; val_offset:44964*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44964*FLEN/8, x13, x9, x10)

inst_15010:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ffffc; valaddr_reg:x12; val_offset:44967*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44967*FLEN/8, x13, x9, x10)

inst_15011:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2000003; valaddr_reg:x12; val_offset:44970*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44970*FLEN/8, x13, x9, x10)

inst_15012:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc27ffffe; valaddr_reg:x12; val_offset:44973*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44973*FLEN/8, x13, x9, x10)

inst_15013:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x84 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xc2000001; valaddr_reg:x12; val_offset:44976*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44976*FLEN/8, x13, x9, x10)

inst_15014:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:44979*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44979*FLEN/8, x13, x9, x10)

inst_15015:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbf800007; valaddr_reg:x12; val_offset:44982*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44982*FLEN/8, x13, x9, x10)

inst_15016:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:44985*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44985*FLEN/8, x13, x9, x10)

inst_15017:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbf800003; valaddr_reg:x12; val_offset:44988*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44988*FLEN/8, x13, x9, x10)

inst_15018:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:44991*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44991*FLEN/8, x13, x9, x10)

inst_15019:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbf800001; valaddr_reg:x12; val_offset:44994*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44994*FLEN/8, x13, x9, x10)

inst_15020:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:44997*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 44997*FLEN/8, x13, x9, x10)

inst_15021:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:45000*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45000*FLEN/8, x13, x9, x10)

inst_15022:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbf999999; valaddr_reg:x12; val_offset:45003*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45003*FLEN/8, x13, x9, x10)

inst_15023:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:45006*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45006*FLEN/8, x13, x9, x10)

inst_15024:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:45009*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45009*FLEN/8, x13, x9, x10)

inst_15025:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:45012*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45012*FLEN/8, x13, x9, x10)

inst_15026:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:45015*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45015*FLEN/8, x13, x9, x10)

inst_15027:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:45018*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45018*FLEN/8, x13, x9, x10)

inst_15028:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:45021*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45021*FLEN/8, x13, x9, x10)

inst_15029:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x42dcac and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2828f7 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dc2dcac; op2val:0x812828f7;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:45024*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45024*FLEN/8, x13, x9, x10)

inst_15030:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2800000; valaddr_reg:x12; val_offset:45027*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45027*FLEN/8, x13, x9, x10)

inst_15031:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffffff; valaddr_reg:x12; val_offset:45030*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45030*FLEN/8, x13, x9, x10)

inst_15032:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2c00000; valaddr_reg:x12; val_offset:45033*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45033*FLEN/8, x13, x9, x10)

inst_15033:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2bfffff; valaddr_reg:x12; val_offset:45036*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45036*FLEN/8, x13, x9, x10)

inst_15034:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2e00000; valaddr_reg:x12; val_offset:45039*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45039*FLEN/8, x13, x9, x10)

inst_15035:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc29fffff; valaddr_reg:x12; val_offset:45042*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45042*FLEN/8, x13, x9, x10)

inst_15036:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2f00000; valaddr_reg:x12; val_offset:45045*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45045*FLEN/8, x13, x9, x10)

inst_15037:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc28fffff; valaddr_reg:x12; val_offset:45048*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45048*FLEN/8, x13, x9, x10)

inst_15038:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2f80000; valaddr_reg:x12; val_offset:45051*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45051*FLEN/8, x13, x9, x10)

inst_15039:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc287ffff; valaddr_reg:x12; val_offset:45054*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45054*FLEN/8, x13, x9, x10)

inst_15040:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fc0000; valaddr_reg:x12; val_offset:45057*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45057*FLEN/8, x13, x9, x10)

inst_15041:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc283ffff; valaddr_reg:x12; val_offset:45060*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45060*FLEN/8, x13, x9, x10)

inst_15042:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fe0000; valaddr_reg:x12; val_offset:45063*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45063*FLEN/8, x13, x9, x10)

inst_15043:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc281ffff; valaddr_reg:x12; val_offset:45066*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45066*FLEN/8, x13, x9, x10)

inst_15044:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ff0000; valaddr_reg:x12; val_offset:45069*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45069*FLEN/8, x13, x9, x10)

inst_15045:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc280ffff; valaddr_reg:x12; val_offset:45072*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45072*FLEN/8, x13, x9, x10)

inst_15046:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ff8000; valaddr_reg:x12; val_offset:45075*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45075*FLEN/8, x13, x9, x10)

inst_15047:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2807fff; valaddr_reg:x12; val_offset:45078*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45078*FLEN/8, x13, x9, x10)

inst_15048:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffc000; valaddr_reg:x12; val_offset:45081*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45081*FLEN/8, x13, x9, x10)

inst_15049:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2803fff; valaddr_reg:x12; val_offset:45084*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45084*FLEN/8, x13, x9, x10)

inst_15050:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffe000; valaddr_reg:x12; val_offset:45087*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45087*FLEN/8, x13, x9, x10)

inst_15051:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2801fff; valaddr_reg:x12; val_offset:45090*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45090*FLEN/8, x13, x9, x10)

inst_15052:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fff000; valaddr_reg:x12; val_offset:45093*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45093*FLEN/8, x13, x9, x10)

inst_15053:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2800fff; valaddr_reg:x12; val_offset:45096*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45096*FLEN/8, x13, x9, x10)

inst_15054:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fff800; valaddr_reg:x12; val_offset:45099*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45099*FLEN/8, x13, x9, x10)

inst_15055:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc28007ff; valaddr_reg:x12; val_offset:45102*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45102*FLEN/8, x13, x9, x10)

inst_15056:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fffc00; valaddr_reg:x12; val_offset:45105*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45105*FLEN/8, x13, x9, x10)

inst_15057:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc28003ff; valaddr_reg:x12; val_offset:45108*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45108*FLEN/8, x13, x9, x10)

inst_15058:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fffe00; valaddr_reg:x12; val_offset:45111*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45111*FLEN/8, x13, x9, x10)

inst_15059:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc28001ff; valaddr_reg:x12; val_offset:45114*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45114*FLEN/8, x13, x9, x10)

inst_15060:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffff00; valaddr_reg:x12; val_offset:45117*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45117*FLEN/8, x13, x9, x10)

inst_15061:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc28000ff; valaddr_reg:x12; val_offset:45120*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45120*FLEN/8, x13, x9, x10)

inst_15062:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffff80; valaddr_reg:x12; val_offset:45123*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45123*FLEN/8, x13, x9, x10)

inst_15063:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc280007f; valaddr_reg:x12; val_offset:45126*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45126*FLEN/8, x13, x9, x10)

inst_15064:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffffc0; valaddr_reg:x12; val_offset:45129*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45129*FLEN/8, x13, x9, x10)

inst_15065:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc280003f; valaddr_reg:x12; val_offset:45132*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45132*FLEN/8, x13, x9, x10)

inst_15066:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2ffffe0; valaddr_reg:x12; val_offset:45135*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45135*FLEN/8, x13, x9, x10)

inst_15067:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc280001f; valaddr_reg:x12; val_offset:45138*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45138*FLEN/8, x13, x9, x10)

inst_15068:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fffff0; valaddr_reg:x12; val_offset:45141*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45141*FLEN/8, x13, x9, x10)

inst_15069:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc280000f; valaddr_reg:x12; val_offset:45144*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45144*FLEN/8, x13, x9, x10)

inst_15070:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fffff8; valaddr_reg:x12; val_offset:45147*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45147*FLEN/8, x13, x9, x10)

inst_15071:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2800007; valaddr_reg:x12; val_offset:45150*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45150*FLEN/8, x13, x9, x10)

inst_15072:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fffffc; valaddr_reg:x12; val_offset:45153*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45153*FLEN/8, x13, x9, x10)

inst_15073:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2800003; valaddr_reg:x12; val_offset:45156*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45156*FLEN/8, x13, x9, x10)

inst_15074:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2fffffe; valaddr_reg:x12; val_offset:45159*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45159*FLEN/8, x13, x9, x10)

inst_15075:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x85 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xc2800001; valaddr_reg:x12; val_offset:45162*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45162*FLEN/8, x13, x9, x10)

inst_15076:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:45165*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45165*FLEN/8, x13, x9, x10)

inst_15077:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbf800007; valaddr_reg:x12; val_offset:45168*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45168*FLEN/8, x13, x9, x10)

inst_15078:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:45171*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45171*FLEN/8, x13, x9, x10)

inst_15079:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbf800003; valaddr_reg:x12; val_offset:45174*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45174*FLEN/8, x13, x9, x10)

inst_15080:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:45177*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45177*FLEN/8, x13, x9, x10)

inst_15081:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbf800001; valaddr_reg:x12; val_offset:45180*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45180*FLEN/8, x13, x9, x10)

inst_15082:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:45183*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45183*FLEN/8, x13, x9, x10)

inst_15083:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:45186*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45186*FLEN/8, x13, x9, x10)

inst_15084:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbf999999; valaddr_reg:x12; val_offset:45189*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45189*FLEN/8, x13, x9, x10)

inst_15085:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:45192*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45192*FLEN/8, x13, x9, x10)

inst_15086:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:45195*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45195*FLEN/8, x13, x9, x10)

inst_15087:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:45198*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45198*FLEN/8, x13, x9, x10)

inst_15088:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:45201*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45201*FLEN/8, x13, x9, x10)

inst_15089:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:45204*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45204*FLEN/8, x13, x9, x10)

inst_15090:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:45207*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45207*FLEN/8, x13, x9, x10)

inst_15091:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x3f6d07 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x2b2db3 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7dbf6d07; op2val:0x812b2db3;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:45210*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45210*FLEN/8, x13, x9, x10)

inst_15092:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc3000000; valaddr_reg:x12; val_offset:45213*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45213*FLEN/8, x13, x9, x10)

inst_15093:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37fffff; valaddr_reg:x12; val_offset:45216*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45216*FLEN/8, x13, x9, x10)

inst_15094:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc3400000; valaddr_reg:x12; val_offset:45219*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45219*FLEN/8, x13, x9, x10)

inst_15095:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc33fffff; valaddr_reg:x12; val_offset:45222*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45222*FLEN/8, x13, x9, x10)

inst_15096:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc3600000; valaddr_reg:x12; val_offset:45225*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45225*FLEN/8, x13, x9, x10)

inst_15097:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc31fffff; valaddr_reg:x12; val_offset:45228*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45228*FLEN/8, x13, x9, x10)

inst_15098:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc3700000; valaddr_reg:x12; val_offset:45231*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45231*FLEN/8, x13, x9, x10)

inst_15099:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc30fffff; valaddr_reg:x12; val_offset:45234*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45234*FLEN/8, x13, x9, x10)

inst_15100:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc3780000; valaddr_reg:x12; val_offset:45237*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45237*FLEN/8, x13, x9, x10)

inst_15101:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc307ffff; valaddr_reg:x12; val_offset:45240*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45240*FLEN/8, x13, x9, x10)

inst_15102:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37c0000; valaddr_reg:x12; val_offset:45243*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45243*FLEN/8, x13, x9, x10)

inst_15103:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc303ffff; valaddr_reg:x12; val_offset:45246*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45246*FLEN/8, x13, x9, x10)

inst_15104:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37e0000; valaddr_reg:x12; val_offset:45249*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45249*FLEN/8, x13, x9, x10)

inst_15105:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc301ffff; valaddr_reg:x12; val_offset:45252*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45252*FLEN/8, x13, x9, x10)

inst_15106:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37f0000; valaddr_reg:x12; val_offset:45255*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45255*FLEN/8, x13, x9, x10)

inst_15107:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc300ffff; valaddr_reg:x12; val_offset:45258*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45258*FLEN/8, x13, x9, x10)

inst_15108:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37f8000; valaddr_reg:x12; val_offset:45261*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45261*FLEN/8, x13, x9, x10)

inst_15109:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc3007fff; valaddr_reg:x12; val_offset:45264*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45264*FLEN/8, x13, x9, x10)

inst_15110:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37fc000; valaddr_reg:x12; val_offset:45267*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45267*FLEN/8, x13, x9, x10)

inst_15111:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc3003fff; valaddr_reg:x12; val_offset:45270*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45270*FLEN/8, x13, x9, x10)

inst_15112:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37fe000; valaddr_reg:x12; val_offset:45273*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45273*FLEN/8, x13, x9, x10)

inst_15113:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc3001fff; valaddr_reg:x12; val_offset:45276*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45276*FLEN/8, x13, x9, x10)

inst_15114:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37ff000; valaddr_reg:x12; val_offset:45279*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45279*FLEN/8, x13, x9, x10)

inst_15115:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc3000fff; valaddr_reg:x12; val_offset:45282*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45282*FLEN/8, x13, x9, x10)

inst_15116:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37ff800; valaddr_reg:x12; val_offset:45285*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45285*FLEN/8, x13, x9, x10)

inst_15117:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc30007ff; valaddr_reg:x12; val_offset:45288*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45288*FLEN/8, x13, x9, x10)

inst_15118:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37ffc00; valaddr_reg:x12; val_offset:45291*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45291*FLEN/8, x13, x9, x10)

inst_15119:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc30003ff; valaddr_reg:x12; val_offset:45294*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45294*FLEN/8, x13, x9, x10)

inst_15120:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37ffe00; valaddr_reg:x12; val_offset:45297*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45297*FLEN/8, x13, x9, x10)

inst_15121:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc30001ff; valaddr_reg:x12; val_offset:45300*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45300*FLEN/8, x13, x9, x10)

inst_15122:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37fff00; valaddr_reg:x12; val_offset:45303*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45303*FLEN/8, x13, x9, x10)

inst_15123:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc30000ff; valaddr_reg:x12; val_offset:45306*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45306*FLEN/8, x13, x9, x10)

inst_15124:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37fff80; valaddr_reg:x12; val_offset:45309*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45309*FLEN/8, x13, x9, x10)

inst_15125:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc300007f; valaddr_reg:x12; val_offset:45312*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45312*FLEN/8, x13, x9, x10)

inst_15126:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37fffc0; valaddr_reg:x12; val_offset:45315*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45315*FLEN/8, x13, x9, x10)

inst_15127:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc300003f; valaddr_reg:x12; val_offset:45318*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45318*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_118)
inst_15128:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37fffe0; valaddr_reg:x12; val_offset:45321*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45321*FLEN/8, x13, x9, x10)

inst_15129:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc300001f; valaddr_reg:x12; val_offset:45324*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45324*FLEN/8, x13, x9, x10)

inst_15130:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37ffff0; valaddr_reg:x12; val_offset:45327*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45327*FLEN/8, x13, x9, x10)

inst_15131:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc300000f; valaddr_reg:x12; val_offset:45330*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45330*FLEN/8, x13, x9, x10)

inst_15132:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37ffff8; valaddr_reg:x12; val_offset:45333*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45333*FLEN/8, x13, x9, x10)

inst_15133:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc3000007; valaddr_reg:x12; val_offset:45336*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45336*FLEN/8, x13, x9, x10)

inst_15134:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37ffffc; valaddr_reg:x12; val_offset:45339*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45339*FLEN/8, x13, x9, x10)

inst_15135:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc3000003; valaddr_reg:x12; val_offset:45342*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45342*FLEN/8, x13, x9, x10)

inst_15136:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc37ffffe; valaddr_reg:x12; val_offset:45345*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45345*FLEN/8, x13, x9, x10)

inst_15137:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x86 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xc3000001; valaddr_reg:x12; val_offset:45348*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45348*FLEN/8, x13, x9, x10)

inst_15138:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:45351*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45351*FLEN/8, x13, x9, x10)

inst_15139:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbf800007; valaddr_reg:x12; val_offset:45354*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45354*FLEN/8, x13, x9, x10)

inst_15140:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:45357*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45357*FLEN/8, x13, x9, x10)

inst_15141:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbf800003; valaddr_reg:x12; val_offset:45360*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45360*FLEN/8, x13, x9, x10)

inst_15142:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:45363*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45363*FLEN/8, x13, x9, x10)

inst_15143:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbf800001; valaddr_reg:x12; val_offset:45366*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45366*FLEN/8, x13, x9, x10)

inst_15144:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:45369*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45369*FLEN/8, x13, x9, x10)

inst_15145:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:45372*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45372*FLEN/8, x13, x9, x10)

inst_15146:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbf999999; valaddr_reg:x12; val_offset:45375*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45375*FLEN/8, x13, x9, x10)

inst_15147:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:45378*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45378*FLEN/8, x13, x9, x10)

inst_15148:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:45381*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45381*FLEN/8, x13, x9, x10)

inst_15149:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:45384*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45384*FLEN/8, x13, x9, x10)

inst_15150:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:45387*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45387*FLEN/8, x13, x9, x10)

inst_15151:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:45390*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45390*FLEN/8, x13, x9, x10)

inst_15152:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:45393*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45393*FLEN/8, x13, x9, x10)

inst_15153:
// fs1 == 0 and fe1 == 0xfa and fm1 == 0x522d12 and fs2 == 1 and fe2 == 0x03 and fm2 == 0x1be84a and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d522d12; op2val:0x819be84a;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:45396*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45396*FLEN/8, x13, x9, x10)

inst_15154:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3800000; valaddr_reg:x12; val_offset:45399*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45399*FLEN/8, x13, x9, x10)

inst_15155:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3ffffff; valaddr_reg:x12; val_offset:45402*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45402*FLEN/8, x13, x9, x10)

inst_15156:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3c00000; valaddr_reg:x12; val_offset:45405*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45405*FLEN/8, x13, x9, x10)

inst_15157:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3bfffff; valaddr_reg:x12; val_offset:45408*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45408*FLEN/8, x13, x9, x10)

inst_15158:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3e00000; valaddr_reg:x12; val_offset:45411*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45411*FLEN/8, x13, x9, x10)

inst_15159:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc39fffff; valaddr_reg:x12; val_offset:45414*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45414*FLEN/8, x13, x9, x10)

inst_15160:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3f00000; valaddr_reg:x12; val_offset:45417*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45417*FLEN/8, x13, x9, x10)

inst_15161:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc38fffff; valaddr_reg:x12; val_offset:45420*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45420*FLEN/8, x13, x9, x10)

inst_15162:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3f80000; valaddr_reg:x12; val_offset:45423*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45423*FLEN/8, x13, x9, x10)

inst_15163:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc387ffff; valaddr_reg:x12; val_offset:45426*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45426*FLEN/8, x13, x9, x10)

inst_15164:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3fc0000; valaddr_reg:x12; val_offset:45429*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45429*FLEN/8, x13, x9, x10)

inst_15165:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc383ffff; valaddr_reg:x12; val_offset:45432*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45432*FLEN/8, x13, x9, x10)

inst_15166:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3fe0000; valaddr_reg:x12; val_offset:45435*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45435*FLEN/8, x13, x9, x10)

inst_15167:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc381ffff; valaddr_reg:x12; val_offset:45438*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45438*FLEN/8, x13, x9, x10)

inst_15168:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3ff0000; valaddr_reg:x12; val_offset:45441*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45441*FLEN/8, x13, x9, x10)

inst_15169:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc380ffff; valaddr_reg:x12; val_offset:45444*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45444*FLEN/8, x13, x9, x10)

inst_15170:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3ff8000; valaddr_reg:x12; val_offset:45447*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45447*FLEN/8, x13, x9, x10)

inst_15171:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3807fff; valaddr_reg:x12; val_offset:45450*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45450*FLEN/8, x13, x9, x10)

inst_15172:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3ffc000; valaddr_reg:x12; val_offset:45453*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45453*FLEN/8, x13, x9, x10)

inst_15173:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3803fff; valaddr_reg:x12; val_offset:45456*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45456*FLEN/8, x13, x9, x10)

inst_15174:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3ffe000; valaddr_reg:x12; val_offset:45459*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45459*FLEN/8, x13, x9, x10)

inst_15175:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3801fff; valaddr_reg:x12; val_offset:45462*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45462*FLEN/8, x13, x9, x10)

inst_15176:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3fff000; valaddr_reg:x12; val_offset:45465*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45465*FLEN/8, x13, x9, x10)

inst_15177:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3800fff; valaddr_reg:x12; val_offset:45468*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45468*FLEN/8, x13, x9, x10)

inst_15178:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3fff800; valaddr_reg:x12; val_offset:45471*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45471*FLEN/8, x13, x9, x10)

inst_15179:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc38007ff; valaddr_reg:x12; val_offset:45474*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45474*FLEN/8, x13, x9, x10)

inst_15180:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3fffc00; valaddr_reg:x12; val_offset:45477*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45477*FLEN/8, x13, x9, x10)

inst_15181:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc38003ff; valaddr_reg:x12; val_offset:45480*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45480*FLEN/8, x13, x9, x10)

inst_15182:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3fffe00; valaddr_reg:x12; val_offset:45483*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45483*FLEN/8, x13, x9, x10)

inst_15183:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc38001ff; valaddr_reg:x12; val_offset:45486*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45486*FLEN/8, x13, x9, x10)

inst_15184:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3ffff00; valaddr_reg:x12; val_offset:45489*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45489*FLEN/8, x13, x9, x10)

inst_15185:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc38000ff; valaddr_reg:x12; val_offset:45492*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45492*FLEN/8, x13, x9, x10)

inst_15186:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3ffff80; valaddr_reg:x12; val_offset:45495*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45495*FLEN/8, x13, x9, x10)

inst_15187:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc380007f; valaddr_reg:x12; val_offset:45498*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45498*FLEN/8, x13, x9, x10)

inst_15188:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3ffffc0; valaddr_reg:x12; val_offset:45501*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45501*FLEN/8, x13, x9, x10)

inst_15189:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc380003f; valaddr_reg:x12; val_offset:45504*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45504*FLEN/8, x13, x9, x10)

inst_15190:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3ffffe0; valaddr_reg:x12; val_offset:45507*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45507*FLEN/8, x13, x9, x10)

inst_15191:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc380001f; valaddr_reg:x12; val_offset:45510*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45510*FLEN/8, x13, x9, x10)

inst_15192:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3fffff0; valaddr_reg:x12; val_offset:45513*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45513*FLEN/8, x13, x9, x10)

inst_15193:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc380000f; valaddr_reg:x12; val_offset:45516*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45516*FLEN/8, x13, x9, x10)

inst_15194:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3fffff8; valaddr_reg:x12; val_offset:45519*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45519*FLEN/8, x13, x9, x10)

inst_15195:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3800007; valaddr_reg:x12; val_offset:45522*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45522*FLEN/8, x13, x9, x10)

inst_15196:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3fffffc; valaddr_reg:x12; val_offset:45525*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45525*FLEN/8, x13, x9, x10)

inst_15197:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3800003; valaddr_reg:x12; val_offset:45528*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45528*FLEN/8, x13, x9, x10)

inst_15198:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3fffffe; valaddr_reg:x12; val_offset:45531*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45531*FLEN/8, x13, x9, x10)

inst_15199:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x87 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xc3800001; valaddr_reg:x12; val_offset:45534*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45534*FLEN/8, x13, x9, x10)

inst_15200:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:45537*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45537*FLEN/8, x13, x9, x10)

inst_15201:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbf800007; valaddr_reg:x12; val_offset:45540*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45540*FLEN/8, x13, x9, x10)

inst_15202:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:45543*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45543*FLEN/8, x13, x9, x10)

inst_15203:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbf800003; valaddr_reg:x12; val_offset:45546*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45546*FLEN/8, x13, x9, x10)

inst_15204:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:45549*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45549*FLEN/8, x13, x9, x10)

inst_15205:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbf800001; valaddr_reg:x12; val_offset:45552*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45552*FLEN/8, x13, x9, x10)

inst_15206:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:45555*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45555*FLEN/8, x13, x9, x10)

inst_15207:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:45558*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45558*FLEN/8, x13, x9, x10)

inst_15208:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbf999999; valaddr_reg:x12; val_offset:45561*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45561*FLEN/8, x13, x9, x10)

inst_15209:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:45564*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45564*FLEN/8, x13, x9, x10)

inst_15210:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:45567*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45567*FLEN/8, x13, x9, x10)

inst_15211:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:45570*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45570*FLEN/8, x13, x9, x10)

inst_15212:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:45573*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45573*FLEN/8, x13, x9, x10)

inst_15213:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:45576*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45576*FLEN/8, x13, x9, x10)

inst_15214:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:45579*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45579*FLEN/8, x13, x9, x10)

inst_15215:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x3b2415 and fs2 == 1 and fe2 == 0x00 and fm2 == 0x2bc644 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f3b2415; op2val:0x802bc644;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:45582*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45582*FLEN/8, x13, x9, x10)

inst_15216:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc4000000; valaddr_reg:x12; val_offset:45585*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45585*FLEN/8, x13, x9, x10)

inst_15217:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47fffff; valaddr_reg:x12; val_offset:45588*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45588*FLEN/8, x13, x9, x10)

inst_15218:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc4400000; valaddr_reg:x12; val_offset:45591*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45591*FLEN/8, x13, x9, x10)

inst_15219:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc43fffff; valaddr_reg:x12; val_offset:45594*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45594*FLEN/8, x13, x9, x10)

inst_15220:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc4600000; valaddr_reg:x12; val_offset:45597*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45597*FLEN/8, x13, x9, x10)

inst_15221:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc41fffff; valaddr_reg:x12; val_offset:45600*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45600*FLEN/8, x13, x9, x10)

inst_15222:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc4700000; valaddr_reg:x12; val_offset:45603*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45603*FLEN/8, x13, x9, x10)

inst_15223:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc40fffff; valaddr_reg:x12; val_offset:45606*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45606*FLEN/8, x13, x9, x10)

inst_15224:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc4780000; valaddr_reg:x12; val_offset:45609*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45609*FLEN/8, x13, x9, x10)

inst_15225:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc407ffff; valaddr_reg:x12; val_offset:45612*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45612*FLEN/8, x13, x9, x10)

inst_15226:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47c0000; valaddr_reg:x12; val_offset:45615*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45615*FLEN/8, x13, x9, x10)

inst_15227:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc403ffff; valaddr_reg:x12; val_offset:45618*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45618*FLEN/8, x13, x9, x10)

inst_15228:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47e0000; valaddr_reg:x12; val_offset:45621*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45621*FLEN/8, x13, x9, x10)

inst_15229:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc401ffff; valaddr_reg:x12; val_offset:45624*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45624*FLEN/8, x13, x9, x10)

inst_15230:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47f0000; valaddr_reg:x12; val_offset:45627*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45627*FLEN/8, x13, x9, x10)

inst_15231:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc400ffff; valaddr_reg:x12; val_offset:45630*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45630*FLEN/8, x13, x9, x10)

inst_15232:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47f8000; valaddr_reg:x12; val_offset:45633*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45633*FLEN/8, x13, x9, x10)

inst_15233:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc4007fff; valaddr_reg:x12; val_offset:45636*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45636*FLEN/8, x13, x9, x10)

inst_15234:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47fc000; valaddr_reg:x12; val_offset:45639*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45639*FLEN/8, x13, x9, x10)

inst_15235:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc4003fff; valaddr_reg:x12; val_offset:45642*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45642*FLEN/8, x13, x9, x10)

inst_15236:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47fe000; valaddr_reg:x12; val_offset:45645*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45645*FLEN/8, x13, x9, x10)

inst_15237:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x001fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc4001fff; valaddr_reg:x12; val_offset:45648*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45648*FLEN/8, x13, x9, x10)

inst_15238:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ff000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47ff000; valaddr_reg:x12; val_offset:45651*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45651*FLEN/8, x13, x9, x10)

inst_15239:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x000fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc4000fff; valaddr_reg:x12; val_offset:45654*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45654*FLEN/8, x13, x9, x10)

inst_15240:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ff800 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47ff800; valaddr_reg:x12; val_offset:45657*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45657*FLEN/8, x13, x9, x10)

inst_15241:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x0007ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc40007ff; valaddr_reg:x12; val_offset:45660*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45660*FLEN/8, x13, x9, x10)

inst_15242:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ffc00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47ffc00; valaddr_reg:x12; val_offset:45663*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45663*FLEN/8, x13, x9, x10)

inst_15243:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x0003ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc40003ff; valaddr_reg:x12; val_offset:45666*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45666*FLEN/8, x13, x9, x10)

inst_15244:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ffe00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47ffe00; valaddr_reg:x12; val_offset:45669*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45669*FLEN/8, x13, x9, x10)

inst_15245:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x0001ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc40001ff; valaddr_reg:x12; val_offset:45672*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45672*FLEN/8, x13, x9, x10)

inst_15246:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fff00 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47fff00; valaddr_reg:x12; val_offset:45675*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45675*FLEN/8, x13, x9, x10)

inst_15247:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x0000ff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc40000ff; valaddr_reg:x12; val_offset:45678*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45678*FLEN/8, x13, x9, x10)

inst_15248:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fff80 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47fff80; valaddr_reg:x12; val_offset:45681*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45681*FLEN/8, x13, x9, x10)

inst_15249:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x00007f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc400007f; valaddr_reg:x12; val_offset:45684*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45684*FLEN/8, x13, x9, x10)

inst_15250:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fffc0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47fffc0; valaddr_reg:x12; val_offset:45687*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45687*FLEN/8, x13, x9, x10)

inst_15251:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x00003f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc400003f; valaddr_reg:x12; val_offset:45690*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45690*FLEN/8, x13, x9, x10)

inst_15252:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7fffe0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47fffe0; valaddr_reg:x12; val_offset:45693*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45693*FLEN/8, x13, x9, x10)

inst_15253:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x00001f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc400001f; valaddr_reg:x12; val_offset:45696*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45696*FLEN/8, x13, x9, x10)

inst_15254:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ffff0 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47ffff0; valaddr_reg:x12; val_offset:45699*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45699*FLEN/8, x13, x9, x10)

inst_15255:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x00000f and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc400000f; valaddr_reg:x12; val_offset:45702*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45702*FLEN/8, x13, x9, x10)

RVTEST_SIGBASE(x9,signature_x9_119)
inst_15256:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47ffff8; valaddr_reg:x12; val_offset:45705*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45705*FLEN/8, x13, x9, x10)

inst_15257:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc4000007; valaddr_reg:x12; val_offset:45708*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45708*FLEN/8, x13, x9, x10)

inst_15258:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47ffffc; valaddr_reg:x12; val_offset:45711*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45711*FLEN/8, x13, x9, x10)

inst_15259:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc4000003; valaddr_reg:x12; val_offset:45714*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45714*FLEN/8, x13, x9, x10)

inst_15260:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc47ffffe; valaddr_reg:x12; val_offset:45717*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45717*FLEN/8, x13, x9, x10)

inst_15261:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x88 and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xc4000001; valaddr_reg:x12; val_offset:45720*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45720*FLEN/8, x13, x9, x10)

inst_15262:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffff8 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbffffff8; valaddr_reg:x12; val_offset:45723*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45723*FLEN/8, x13, x9, x10)

inst_15263:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000007 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbf800007; valaddr_reg:x12; val_offset:45726*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45726*FLEN/8, x13, x9, x10)

inst_15264:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbffffffc; valaddr_reg:x12; val_offset:45729*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45729*FLEN/8, x13, x9, x10)

inst_15265:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000003 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbf800003; valaddr_reg:x12; val_offset:45732*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45732*FLEN/8, x13, x9, x10)

inst_15266:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x7ffffe and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbffffffe; valaddr_reg:x12; val_offset:45735*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45735*FLEN/8, x13, x9, x10)

inst_15267:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x000001 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbf800001; valaddr_reg:x12; val_offset:45738*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45738*FLEN/8, x13, x9, x10)

inst_15268:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x36db6d and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbfb6db6d; valaddr_reg:x12; val_offset:45741*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45741*FLEN/8, x13, x9, x10)

inst_15269:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x6db6db and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbfedb6db; valaddr_reg:x12; val_offset:45744*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45744*FLEN/8, x13, x9, x10)

inst_15270:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x199999 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbf999999; valaddr_reg:x12; val_offset:45747*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45747*FLEN/8, x13, x9, x10)

inst_15271:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x666666 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbfe66666; valaddr_reg:x12; val_offset:45750*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45750*FLEN/8, x13, x9, x10)

inst_15272:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x3bbbbb and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbfbbbbbb; valaddr_reg:x12; val_offset:45753*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45753*FLEN/8, x13, x9, x10)

inst_15273:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x444444 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbfc44444; valaddr_reg:x12; val_offset:45756*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45756*FLEN/8, x13, x9, x10)

inst_15274:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x249249 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbfa49249; valaddr_reg:x12; val_offset:45759*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45759*FLEN/8, x13, x9, x10)

inst_15275:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x5b6db6 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbfdb6db6; valaddr_reg:x12; val_offset:45762*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45762*FLEN/8, x13, x9, x10)

inst_15276:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x333333 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbfb33333; valaddr_reg:x12; val_offset:45765*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45765*FLEN/8, x13, x9, x10)

inst_15277:
// fs1 == 0 and fe1 == 0xfe and fm1 == 0x240ddf and fs2 == 1 and fe2 == 0x00 and fm2 == 0x31ef49 and fs3 == 1 and fe3 == 0x7f and fm3 == 0x4ccccc and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7f240ddf; op2val:0x8031ef49;
op3val:0xbfcccccc; valaddr_reg:x12; val_offset:45768*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45768*FLEN/8, x13, x9, x10)

inst_15278:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x000000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4800000; valaddr_reg:x12; val_offset:45771*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45771*FLEN/8, x13, x9, x10)

inst_15279:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x7fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4ffffff; valaddr_reg:x12; val_offset:45774*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45774*FLEN/8, x13, x9, x10)

inst_15280:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x400000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4c00000; valaddr_reg:x12; val_offset:45777*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45777*FLEN/8, x13, x9, x10)

inst_15281:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x3fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4bfffff; valaddr_reg:x12; val_offset:45780*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45780*FLEN/8, x13, x9, x10)

inst_15282:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x600000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4e00000; valaddr_reg:x12; val_offset:45783*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45783*FLEN/8, x13, x9, x10)

inst_15283:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x1fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc49fffff; valaddr_reg:x12; val_offset:45786*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45786*FLEN/8, x13, x9, x10)

inst_15284:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x700000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4f00000; valaddr_reg:x12; val_offset:45789*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45789*FLEN/8, x13, x9, x10)

inst_15285:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x0fffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc48fffff; valaddr_reg:x12; val_offset:45792*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45792*FLEN/8, x13, x9, x10)

inst_15286:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x780000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4f80000; valaddr_reg:x12; val_offset:45795*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45795*FLEN/8, x13, x9, x10)

inst_15287:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x07ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc487ffff; valaddr_reg:x12; val_offset:45798*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45798*FLEN/8, x13, x9, x10)

inst_15288:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x7c0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4fc0000; valaddr_reg:x12; val_offset:45801*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45801*FLEN/8, x13, x9, x10)

inst_15289:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x03ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc483ffff; valaddr_reg:x12; val_offset:45804*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45804*FLEN/8, x13, x9, x10)

inst_15290:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x7e0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4fe0000; valaddr_reg:x12; val_offset:45807*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45807*FLEN/8, x13, x9, x10)

inst_15291:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x01ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc481ffff; valaddr_reg:x12; val_offset:45810*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45810*FLEN/8, x13, x9, x10)

inst_15292:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x7f0000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4ff0000; valaddr_reg:x12; val_offset:45813*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45813*FLEN/8, x13, x9, x10)

inst_15293:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x00ffff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc480ffff; valaddr_reg:x12; val_offset:45816*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45816*FLEN/8, x13, x9, x10)

inst_15294:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x7f8000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4ff8000; valaddr_reg:x12; val_offset:45819*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45819*FLEN/8, x13, x9, x10)

inst_15295:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x007fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4807fff; valaddr_reg:x12; val_offset:45822*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45822*FLEN/8, x13, x9, x10)

inst_15296:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x7fc000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4ffc000; valaddr_reg:x12; val_offset:45825*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45825*FLEN/8, x13, x9, x10)

inst_15297:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x003fff and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4803fff; valaddr_reg:x12; val_offset:45828*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45828*FLEN/8, x13, x9, x10)

inst_15298:
// fs1 == 0 and fe1 == 0xfb and fm1 == 0x044ae8 and fs2 == 1 and fe2 == 0x02 and fm2 == 0x77b17e and fs3 == 1 and fe3 == 0x89 and fm3 == 0x7fe000 and fcsr == 0x0 and rm_val == 7  and rs1_sgn_prefix == 0x00000000 and rs2_sgn_prefix == 0xffffffff and rs3_sgn_prefix == 0xffffffff  
/* opcode: fnmsub.s ; op1:x30; op2:x29; op3:x28; dest:x31; op1val:0x7d844ae8; op2val:0x8177b17e;
op3val:0xc4ffe000; valaddr_reg:x12; val_offset:45831*FLEN/8; rmval:dyn;
testreg:x10; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.s, x31, x30, x29, x28, dyn, 0, 0, x12, 45831*FLEN/8, x13, x9, x10)

#endif
RVTEST_CODE_END
RVMODEL_HALT
RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(3196059649,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2119058989,32,FLEN)
NAN_BOXED(2157894472,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204448256,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836863,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3208642560,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3208642559,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3210739712,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3206545407,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3211788288,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3205496831,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212312576,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204972543,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212574720,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204710399,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212705792,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204579327,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212771328,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204513791,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212804096,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204481023,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212820480,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204464639,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212828672,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204456447,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212832768,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204452351,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212834816,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204450303,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212835840,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204449279,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836352,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204448767,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836608,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204448511,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836736,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204448383,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836800,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204448319,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836832,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204448287,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836848,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204448271,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836856,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204448263,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836860,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204448259,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836862,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3204448257,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2127198303,32,FLEN)
NAN_BOXED(2152786857,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212836864,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221225471,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3217031168,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3217031167,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3219128320,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3214934015,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3220176896,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3213885439,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3220701184,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3213361151,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3220963328,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3213099007,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221094400,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212967935,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221159936,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212902399,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221192704,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212869631,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221209088,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212853247,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221217280,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212845055,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221221376,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212840959,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221223424,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212838911,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221224448,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212837887,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221224960,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212837375,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221225216,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212837119,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221225344,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212836991,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221225408,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212836927,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221225440,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212836895,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221225456,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212836879,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2124573956,32,FLEN)
NAN_BOXED(2154094306,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225472,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229614079,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3225419776,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3225419775,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3227516928,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3223322623,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3228565504,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3222274047,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229089792,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221749759,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229351936,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221487615,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229483008,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221356543,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229548544,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221291007,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229581312,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221258239,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229597696,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221241855,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229605888,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221233663,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229609984,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221229567,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229612032,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221227519,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229613056,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221226495,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229613568,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225983,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229613824,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225727,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229613952,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225599,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229614016,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225535,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229614048,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225503,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229614064,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225487,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229614072,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225479,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229614076,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225475,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3229614078,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225473,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2125830134,32,FLEN)
NAN_BOXED(2153396531,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229614080,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3238002687,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3233808384,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3233808383,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3235905536,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3231711231,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3236954112,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3230662655,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3237478400,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3230138367,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3237740544,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229876223,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3237871616,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229745151,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3237937152,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229679615,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3237969920,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229646847,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3237986304,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229630463,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3237994496,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229622271,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3237998592,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229618175,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3238000640,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229616127,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3238001664,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229615103,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3238002176,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229614591,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3238002432,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229614335,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3238002560,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229614207,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3238002624,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229614143,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3238002656,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229614111,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3238002672,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229614095,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3238002680,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229614087,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3238002684,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229614083,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3238002686,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3229614081,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2132088425,32,FLEN)
NAN_BOXED(2151084692,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238002688,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246391295,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3242196992,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3242196991,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3244294144,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3240099839,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3245342720,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3239051263,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3245867008,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238526975,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246129152,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238264831,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246260224,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238133759,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246325760,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238068223,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246358528,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238035455,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246374912,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238019071,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246383104,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238010879,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246387200,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238006783,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246389248,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238004735,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246390272,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238003711,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246390784,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238003199,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246391040,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238002943,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246391168,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238002815,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246391232,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238002751,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246391264,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238002719,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246391280,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238002703,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246391288,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238002695,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246391292,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238002691,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3246391294,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3238002689,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2058472488,32,FLEN)
NAN_BOXED(2218282159,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246391296,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254779903,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3250585600,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3250585599,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3252682752,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3248488447,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3253731328,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3247439871,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254255616,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246915583,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254517760,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246653439,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254648832,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246522367,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254714368,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246456831,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254747136,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246424063,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254763520,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246407679,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254771712,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246399487,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254775808,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246395391,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254777856,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246393343,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254778880,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246392319,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254779392,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246391807,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254779648,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246391551,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254779776,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246391423,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254779840,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246391359,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254779872,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246391327,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254779888,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246391311,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254779896,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246391303,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254779900,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246391299,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3254779902,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3246391297,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2099802851,32,FLEN)
NAN_BOXED(2177009449,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779904,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168511,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3258974208,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3258974207,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3261071360,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3256877055,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3262119936,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3255828479,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3262644224,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3255304191,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3262906368,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3255042047,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263037440,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254910975,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263102976,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254845439,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263135744,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254812671,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263152128,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254796287,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263160320,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254788095,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263164416,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254783999,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263166464,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254781951,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263167488,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254780927,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168000,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254780415,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168256,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254780159,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168384,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254780031,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168448,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779967,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168480,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779935,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168496,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779919,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168504,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779911,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168508,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779907,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3263168510,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3254779905,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2109922476,32,FLEN)
NAN_BOXED(2166892791,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168512,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557119,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3267362816,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3267362815,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3269459968,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3265265663,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3270508544,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3264217087,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271032832,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263692799,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271294976,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263430655,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271426048,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263299583,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271491584,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263234047,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271524352,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263201279,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271540736,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263184895,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271548928,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263176703,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271553024,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263172607,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271555072,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263170559,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271556096,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263169535,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271556608,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263169023,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271556864,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168767,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271556992,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168639,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557056,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168575,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557088,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168543,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557104,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168527,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557112,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168519,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557116,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168515,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3271557118,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3263168513,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2109697287,32,FLEN)
NAN_BOXED(2167090611,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271557120,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279945727,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3275751424,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3275751423,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3277848576,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3273654271,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3278897152,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3272605695,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279421440,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3272081407,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279683584,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271819263,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279814656,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271688191,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279880192,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271622655,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279912960,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271589887,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279929344,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271573503,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279937536,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271565311,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279941632,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271561215,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279943680,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271559167,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279944704,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271558143,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279945216,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271557631,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279945472,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271557375,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279945600,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271557247,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279945664,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271557183,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279945696,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271557151,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279945712,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271557135,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279945720,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271557127,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279945724,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271557123,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3279945726,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3271557121,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2102537490,32,FLEN)
NAN_BOXED(2174478410,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279945728,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288334335,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3284140032,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3284140031,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3286237184,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3282042879,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3287285760,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3280994303,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3287810048,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3280470015,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288072192,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3280207871,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288203264,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3280076799,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288268800,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3280011263,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288301568,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279978495,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288317952,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279962111,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288326144,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279953919,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288330240,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279949823,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288332288,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279947775,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288333312,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279946751,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288333824,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279946239,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288334080,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279945983,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288334208,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279945855,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288334272,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279945791,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288334304,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279945759,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288334320,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279945743,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288334328,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279945735,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288334332,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279945731,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3288334334,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3279945729,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2134582293,32,FLEN)
NAN_BOXED(2150352452,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288334336,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296722943,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3292528640,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3292528639,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3294625792,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3290431487,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3295674368,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3289382911,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296198656,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288858623,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296460800,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288596479,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296591872,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288465407,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296657408,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288399871,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296690176,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288367103,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296706560,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288350719,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296714752,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288342527,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296718848,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288338431,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296720896,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288336383,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296721920,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288335359,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296722432,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288334847,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296722688,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288334591,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296722816,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288334463,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296722880,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288334399,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296722912,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288334367,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296722928,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288334351,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296722936,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288334343,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296722940,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288334339,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3296722942,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3288334337,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2133069279,32,FLEN)
NAN_BOXED(2150756169,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296722944,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305111551,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3300917248,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3300917247,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3303014400,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3298820095,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3304062976,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3297771519,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3304587264,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3297247231,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3304849408,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296985087,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3304980480,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296854015,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305046016,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296788479,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305078784,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296755711,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305095168,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296739327,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305103360,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296731135,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305107456,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296727039,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305109504,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296724991,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305110528,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296723967,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305111040,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296723455,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305111296,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296723199,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305111424,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296723071,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305111488,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296723007,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305111520,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296722975,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305111536,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296722959,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305111544,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296722951,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305111548,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296722947,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3305111550,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3296722945,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3221225464,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3212836871,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3221225468,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3212836867,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3221225470,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3212836865,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3216431981,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3220027099,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3214514585,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3219547750,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3216751547,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3217310788,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3215233609,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3218828726,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3216192307,32,FLEN)
NAN_BOXED(2105821928,32,FLEN)
NAN_BOXED(2172105086,32,FLEN)
NAN_BOXED(3217870028,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3305111552,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3313500159,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3309305856,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3309305855,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3311403008,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3307208703,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3312451584,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3306160127,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3312975872,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3305635839,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3313238016,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3305373695,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
NAN_BOXED(3313369088,32,FLEN)
NAN_BOXED(2126565479,32,FLEN)
NAN_BOXED(2153052441,32,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 48*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_0:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_7:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_8:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_9:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_10:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_11:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_12:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_13:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_14:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_15:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_16:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_17:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_18:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_19:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_20:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_21:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_22:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_23:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_24:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_25:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_26:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_27:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_28:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_29:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_30:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_31:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_32:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_33:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_34:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_35:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_36:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_37:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_38:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_39:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_40:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_41:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_42:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_43:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_44:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_45:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_46:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_47:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_48:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_49:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_50:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_51:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_52:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_53:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_54:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_55:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_56:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_57:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_58:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_59:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_60:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_61:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_62:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_63:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_64:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_65:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_66:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_67:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_68:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_69:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_70:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_71:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_72:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_73:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_74:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_75:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_76:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_77:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_78:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_79:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_80:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_81:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_82:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_83:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_84:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_85:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_86:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_87:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_88:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_89:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_90:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_91:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_92:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_93:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_94:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_95:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_96:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_97:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_98:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_99:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_100:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_101:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_102:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_103:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_104:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_105:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_106:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_107:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_108:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_109:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_110:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_111:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_112:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_113:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_114:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_115:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_116:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_117:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_118:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_119:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_120:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_121:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_122:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_123:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_124:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_125:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_126:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_127:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_128:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_129:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_130:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_131:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_132:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_133:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_134:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_135:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_136:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_137:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_138:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_139:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_140:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_141:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_142:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_143:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_144:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_145:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_146:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_147:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_148:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_149:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_150:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_151:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_152:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_153:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_154:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_155:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_156:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_157:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_158:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_159:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_160:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_161:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_162:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_163:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_164:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_165:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_166:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_167:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_168:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_169:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_170:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_171:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_172:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_173:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_174:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_175:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_176:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_177:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_178:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_179:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_180:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_181:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_182:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_183:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_184:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_185:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_186:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_187:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_188:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_189:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_190:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_191:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_192:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_193:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_194:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_195:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_196:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_197:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_198:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_199:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_200:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_201:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_202:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_203:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_204:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_205:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_206:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_207:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_208:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_209:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_210:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_211:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_212:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_213:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_214:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_215:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_216:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_217:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_218:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_219:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_220:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_221:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_222:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_223:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_224:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_225:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_226:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_227:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_228:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_229:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_230:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_231:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_232:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_233:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_234:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_235:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_236:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_237:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_238:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_239:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_240:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_241:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_242:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_243:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_244:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_245:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_246:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_247:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_248:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_249:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_250:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_251:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_252:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_253:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_254:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_255:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_256:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_257:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_258:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_259:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_260:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_261:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_262:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_263:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_264:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_265:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_266:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_267:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_268:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_269:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_270:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_271:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_272:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_273:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_274:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_275:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_276:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_277:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_278:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_279:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_280:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_281:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_282:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_283:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_284:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_285:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_286:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_287:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_288:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_289:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_290:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_291:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_292:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_293:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_294:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_295:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_296:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x9_297:
    .fill 180*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
